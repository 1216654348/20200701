using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace WebApplication1.Model
{
    public partial class kls_monitorContext : DbContext
    {
        public kls_monitorContext()
        {
        }

        public kls_monitorContext(DbContextOptions<kls_monitorContext> options)
            : base(options)
        {
        }

        public virtual DbSet<DtzyDtJbxx> DtzyDtJbxx { get; set; }
        public virtual DbSet<DtzyDtTcxx> DtzyDtTcxx { get; set; }
        public virtual DbSet<DtzyTcTdt> DtzyTcTdt { get; set; }
        public virtual DbSet<DtzyTcWfs> DtzyTcWfs { get; set; }
        public virtual DbSet<DtzyTcWms> DtzyTcWms { get; set; }
        public virtual DbSet<DtzyTcWmts> DtzyTcWmts { get; set; }
        public virtual DbSet<Editrecords> Editrecords { get; set; }
        public virtual DbSet<Fdsfs> Fdsfs { get; set; }
        public virtual DbSet<GlyjcAqsgjl> GlyjcAqsgjl { get; set; }
        public virtual DbSet<GlyjcBbhjl> GlyjcBbhjl { get; set; }
        public virtual DbSet<GlyjcBbhjlCopy> GlyjcBbhjlCopy { get; set; }
        public virtual DbSet<GlyjcBcjcdx> GlyjcBcjcdx { get; set; }
        public virtual DbSet<GlyjcBcjcdx1> GlyjcBcjcdx1 { get; set; }
        public virtual DbSet<GlyjcBhdcjcgzqkjl> GlyjcBhdcjcgzqkjl { get; set; }
        public virtual DbSet<GlyjcBhdcjcgzqkjl1> GlyjcBhdcjcgzqkjl1 { get; set; }
        public virtual DbSet<GlyjcBhdcjcgzqkjl1128> GlyjcBhdcjcgzqkjl1128 { get; set; }
        public virtual DbSet<GlyjcBhdcjcgzqkjl2> GlyjcBhdcjcgzqkjl2 { get; set; }
        public virtual DbSet<GlyjcBhdcjcgzqkjlTmp> GlyjcBhdcjcgzqkjlTmp { get; set; }
        public virtual DbSet<GlyjcBhdcjcgzqkjl修改病害状态之前> GlyjcBhdcjcgzqkjl修改病害状态之前 { get; set; }
        public virtual DbSet<GlyjcBhdcjcgzqkjl换区域前1214> GlyjcBhdcjcgzqkjl换区域前1214 { get; set; }
        public virtual DbSet<GlyjcBhfwjskzdd> GlyjcBhfwjskzdd { get; set; }
        public virtual DbSet<GlyjcBhgcxfdbhxx> GlyjcBhgcxfdbhxx { get; set; }
        public virtual DbSet<GlyjcBhgcxfdbhxxCopy> GlyjcBhgcxfdbhxxCopy { get; set; }
        public virtual DbSet<GlyjcBhgcxfdbhxx修改病害状态之前1226> GlyjcBhgcxfdbhxx修改病害状态之前1226 { get; set; }
        public virtual DbSet<GlyjcBhgcxfxggzjc> GlyjcBhgcxfxggzjc { get; set; }
        public virtual DbSet<GlyjcBhglghbzjl> GlyjcBhglghbzjl { get; set; }
        public virtual DbSet<GlyjcBhgljf> GlyjcBhgljf { get; set; }
        public virtual DbSet<GlyjcBhgljg> GlyjcBhgljg { get; set; }
        public virtual DbSet<GlyjcBhglxgpxjl> GlyjcBhglxgpxjl { get; set; }
        public virtual DbSet<GlyjcBhjct> GlyjcBhjct { get; set; }
        public virtual DbSet<GlyjcBhkzztpg> GlyjcBhkzztpg { get; set; }
        public virtual DbSet<GlyjcBhqht> GlyjcBhqht { get; set; }
        public virtual DbSet<GlyjcBhxjzzpjbhxjzjl> GlyjcBhxjzzpjbhxjzjl { get; set; }
        public virtual DbSet<GlyjcBhzsyhjzzgcjl> GlyjcBhzsyhjzzgcjl { get; set; }
        public virtual DbSet<GlyjcBhzsyhjzzgcjl1> GlyjcBhzsyhjzzgcjl1 { get; set; }
        public virtual DbSet<GlyjcBhzsyhjzzgcjl20190821> GlyjcBhzsyhjzzgcjl20190821 { get; set; }
        public virtual DbSet<GlyjcBhzsyhjzzgcxczp> GlyjcBhzsyhjzzgcxczp { get; set; }
        public virtual DbSet<GlyjcBhzsyhjzzgcxczpCopy> GlyjcBhzsyhjzzgcxczpCopy { get; set; }
        public virtual DbSet<GlyjcBxWdl> GlyjcBxWdl { get; set; }
        public virtual DbSet<GlyjcBxWdlBhdcjcgzqkjl> GlyjcBxWdlBhdcjcgzqkjl { get; set; }
        public virtual DbSet<GlyjcBy> GlyjcBy { get; set; }
        public virtual DbSet<GlyjcByWdl> GlyjcByWdl { get; set; }
        public virtual DbSet<GlyjcByWdlBhdcjcgzqkjl> GlyjcByWdlBhdcjcgzqkjl { get; set; }
        public virtual DbSet<GlyjcByywhgcjl> GlyjcByywhgcjl { get; set; }
        public virtual DbSet<GlyjcByywhgcjlYcysqd> GlyjcByywhgcjlYcysqd { get; set; }
        public virtual DbSet<GlyjcCamera> GlyjcCamera { get; set; }
        public virtual DbSet<GlyjcCj> GlyjcCj { get; set; }
        public virtual DbSet<GlyjcCllzlsglz> GlyjcCllzlsglz { get; set; }
        public virtual DbSet<GlyjcCnsxjz> GlyjcCnsxjz { get; set; }
        public virtual DbSet<GlyjcCnsxjzCopy> GlyjcCnsxjzCopy { get; set; }
        public virtual DbSet<GlyjcCqqkjl> GlyjcCqqkjl { get; set; }
        public virtual DbSet<GlyjcDhjy> GlyjcDhjy { get; set; }
        public virtual DbSet<GlyjcDqbg> GlyjcDqbg { get; set; }
        public virtual DbSet<GlyjcDqzl> GlyjcDqzl { get; set; }
        public virtual DbSet<GlyjcDwlmbdxx> GlyjcDwlmbdxx { get; set; }
        public virtual DbSet<GlyjcDwlmzp> GlyjcDwlmzp { get; set; }
        public virtual DbSet<GlyjcDz> GlyjcDz { get; set; }
        public virtual DbSet<GlyjcFjb> GlyjcFjb { get; set; }
        public virtual DbSet<GlyjcFjb1> GlyjcFjb1 { get; set; }
        public virtual DbSet<GlyjcFjb2016年09月01日> GlyjcFjb2016年09月01日 { get; set; }
        public virtual DbSet<GlyjcFjb2016年8月30日173444> GlyjcFjb2016年8月30日173444 { get; set; }
        public virtual DbSet<GlyjcFjb2016年9月19日084453> GlyjcFjb2016年9月19日084453 { get; set; }
        public virtual DbSet<GlyjcFjbCopy> GlyjcFjbCopy { get; set; }
        public virtual DbSet<GlyjcFjbCopy1> GlyjcFjbCopy1 { get; set; }
        public virtual DbSet<GlyjcFsWdl> GlyjcFsWdl { get; set; }
        public virtual DbSet<GlyjcFsWdlBhdcjcgzqkjl> GlyjcFsWdlBhdcjcgzqkjl { get; set; }
        public virtual DbSet<GlyjcGlzdhyjyajl> GlyjcGlzdhyjyajl { get; set; }
        public virtual DbSet<GlyjcGwhwj> GlyjcGwhwj { get; set; }
        public virtual DbSet<GlyjcHjyxpg> GlyjcHjyxpg { get; set; }
        public virtual DbSet<GlyjcJcbg> GlyjcJcbg { get; set; }
        public virtual DbSet<GlyjcJcbgyd> GlyjcJcbgyd { get; set; }
        public virtual DbSet<GlyjcJcbgydCopy> GlyjcJcbgydCopy { get; set; }
        public virtual DbSet<GlyjcJcfa> GlyjcJcfa { get; set; }
        public virtual DbSet<GlyjcJcjg> GlyjcJcjg { get; set; }
        public virtual DbSet<GlyjcJcpz> GlyjcJcpz { get; set; }
        public virtual DbSet<GlyjcJcpz1> GlyjcJcpz1 { get; set; }
        public virtual DbSet<GlyjcJcpz2> GlyjcJcpz2 { get; set; }
        public virtual DbSet<GlyjcJcpz20190621区域人员改变> GlyjcJcpz20190621区域人员改变 { get; set; }
        public virtual DbSet<GlyjcJcpzCopy> GlyjcJcpzCopy { get; set; }
        public virtual DbSet<GlyjcJcpzCopy1> GlyjcJcpzCopy1 { get; set; }
        public virtual DbSet<GlyjcJcpzCopy1223> GlyjcJcpzCopy1223 { get; set; }
        public virtual DbSet<GlyjcJcpzCopy1230更新jcdxid> GlyjcJcpzCopy1230更新jcdxid { get; set; }
        public virtual DbSet<GlyjcJcpzCopy2> GlyjcJcpzCopy2 { get; set; }
        public virtual DbSet<GlyjcJcpzCopy20320> GlyjcJcpzCopy20320 { get; set; }
        public virtual DbSet<GlyjcJcpzCopy3> GlyjcJcpzCopy3 { get; set; }
        public virtual DbSet<GlyjcJcpzCopy4> GlyjcJcpzCopy4 { get; set; }
        public virtual DbSet<GlyjcJcpzCopy5> GlyjcJcpzCopy5 { get; set; }
        public virtual DbSet<GlyjcJcpzcopy6> GlyjcJcpzcopy6 { get; set; }
        public virtual DbSet<GlyjcJcpz换区域前1214> GlyjcJcpz换区域前1214 { get; set; }
        public virtual DbSet<GlyjcJrjcjl> GlyjcJrjcjl { get; set; }
        public virtual DbSet<GlyjcJrjcjlCopy> GlyjcJrjcjlCopy { get; set; }
        public virtual DbSet<GlyjcJrycjl> GlyjcJrycjl { get; set; }
        public virtual DbSet<GlyjcJzjcesj> GlyjcJzjcesj { get; set; }
        public virtual DbSet<GlyjcJzjcsj> GlyjcJzjcsj { get; set; }
        public virtual DbSet<GlyjcKgbgxx> GlyjcKgbgxx { get; set; }
        public virtual DbSet<GlyjcKgfjjl> GlyjcKgfjjl { get; set; }
        public virtual DbSet<GlyjcKgfjxczp> GlyjcKgfjxczp { get; set; }
        public virtual DbSet<GlyjcKgfjxczpKgfjjl> GlyjcKgfjxczpKgfjjl { get; set; }
        public virtual DbSet<GlyjcKlgfsdxczp> GlyjcKlgfsdxczp { get; set; }
        public virtual DbSet<GlyjcKqzl> GlyjcKqzl { get; set; }
        public virtual DbSet<GlyjcLdt> GlyjcLdt { get; set; }
        public virtual DbSet<GlyjcLfSzl> GlyjcLfSzl { get; set; }
        public virtual DbSet<GlyjcLfSzlBhdcjcgzqkjl> GlyjcLfSzlBhdcjcgzqkjl { get; set; }
        public virtual DbSet<GlyjcLfWdl> GlyjcLfWdl { get; set; }
        public virtual DbSet<GlyjcLfWdlBhdcjcgzqkjl> GlyjcLfWdlBhdcjcgzqkjl { get; set; }
        public virtual DbSet<GlyjcLsdljcjl> GlyjcLsdljcjl { get; set; }
        public virtual DbSet<GlyjcMjlyjyzsz> GlyjcMjlyjyzsz { get; set; }
        public virtual DbSet<GlyjcMjzb> GlyjcMjzb { get; set; }
        public virtual DbSet<GlyjcQt> GlyjcQt { get; set; }
        public virtual DbSet<GlyjcQtxggh> GlyjcQtxggh { get; set; }
        public virtual DbSet<GlyjcQtzp> GlyjcQtzp { get; set; }
        public virtual DbSet<GlyjcQx> GlyjcQx { get; set; }
        public virtual DbSet<GlyjcRcxcjl> GlyjcRcxcjl { get; set; }
        public virtual DbSet<GlyjcRcxcjl1> GlyjcRcxcjl1 { get; set; }
        public virtual DbSet<GlyjcRcxcyccl> GlyjcRcxcyccl { get; set; }
        public virtual DbSet<GlyjcRcxcycjl> GlyjcRcxcycjl { get; set; }
        public virtual DbSet<GlyjcRcxcycjl0318> GlyjcRcxcycjl0318 { get; set; }
        public virtual DbSet<GlyjcRcxcycjl0725> GlyjcRcxcycjl0725 { get; set; }
        public virtual DbSet<GlyjcRcxcycjl1009> GlyjcRcxcycjl1009 { get; set; }
        public virtual DbSet<GlyjcRcxcycjl1014> GlyjcRcxcycjl1014 { get; set; }
        public virtual DbSet<GlyjcRcxcycjl1016> GlyjcRcxcycjl1016 { get; set; }
        public virtual DbSet<GlyjcRwb> GlyjcRwb { get; set; }
        public virtual DbSet<GlyjcRwbCopy20200320> GlyjcRwbCopy20200320 { get; set; }
        public virtual DbSet<GlyjcRykrlxzz> GlyjcRykrlxzz { get; set; }
        public virtual DbSet<GlyjcSblx> GlyjcSblx { get; set; }
        public virtual DbSet<GlyjcSbqd> GlyjcSbqd { get; set; }
        public virtual DbSet<GlyjcShrzb> GlyjcShrzb { get; set; }
        public virtual DbSet<GlyjcSlWdl> GlyjcSlWdl { get; set; }
        public virtual DbSet<GlyjcSlWdlBhdcjcgzqkjl> GlyjcSlWdlBhdcjcgzqkjl { get; set; }
        public virtual DbSet<GlyjcSlxx> GlyjcSlxx { get; set; }
        public virtual DbSet<GlyjcSpwySzl> GlyjcSpwySzl { get; set; }
        public virtual DbSet<GlyjcSsykcd> GlyjcSsykcd { get; set; }
        public virtual DbSet<GlyjcSsykrlxzz> GlyjcSsykrlxzz { get; set; }
        public virtual DbSet<GlyjcStbczk> GlyjcStbczk { get; set; }
        public virtual DbSet<GlyjcStyycystjxzpjjl> GlyjcStyycystjxzpjjl { get; set; }
        public virtual DbSet<GlyjcSwWdl> GlyjcSwWdl { get; set; }
        public virtual DbSet<GlyjcSyda> GlyjcSyda { get; set; }
        public virtual DbSet<GlyjcSygnbhjltjbhjl> GlyjcSygnbhjltjbhjl { get; set; }
        public virtual DbSet<GlyjcSygnjzt> GlyjcSygnjzt { get; set; }
        public virtual DbSet<GlyjcSywb> GlyjcSywb { get; set; }
        public virtual DbSet<GlyjcSz> GlyjcSz { get; set; }
        public virtual DbSet<GlyjcSzjl> GlyjcSzjl { get; set; }
        public virtual DbSet<GlyjcSzlyjyzsz> GlyjcSzlyjyzsz { get; set; }
        public virtual DbSet<GlyjcTcpbjzSouvSmcl> GlyjcTcpbjzSouvSmcl { get; set; }
        public virtual DbSet<GlyjcTdlyght> GlyjcTdlyght { get; set; }
        public virtual DbSet<GlyjcTdlyxzt> GlyjcTdlyxzt { get; set; }
        public virtual DbSet<GlyjcTdlyxztbhjl> GlyjcTdlyxztbhjl { get; set; }
        public virtual DbSet<GlyjcTdlyxztndjl> GlyjcTdlyxztndjl { get; set; }
        public virtual DbSet<GlyjcTf> GlyjcTf { get; set; }
        public virtual DbSet<GlyjcTlWdl> GlyjcTlWdl { get; set; }
        public virtual DbSet<GlyjcTlWdlBhdcjcgzqkjl> GlyjcTlWdlBhdcjcgzqkjl { get; set; }
        public virtual DbSet<GlyjcTmpCjJcpz> GlyjcTmpCjJcpz { get; set; }
        public virtual DbSet<GlyjcTsWdl> GlyjcTsWdl { get; set; }
        public virtual DbSet<GlyjcWhj> GlyjcWhj { get; set; }
        public virtual DbSet<GlyjcWhj1027> GlyjcWhj1027 { get; set; }
        public virtual DbSet<GlyjcWwbhgcfa> GlyjcWwbhgcfa { get; set; }
        public virtual DbSet<GlyjcWwbhgcfaBhzsyhjzzgcjl> GlyjcWwbhgcfaBhzsyhjzzgcjl { get; set; }
        public virtual DbSet<GlyjcWwbhgcfaCopy> GlyjcWwbhgcfaCopy { get; set; }
        public virtual DbSet<GlyjcWwbhwxda> GlyjcWwbhwxda { get; set; }
        public virtual DbSet<GlyjcWwbhwxdaCopy> GlyjcWwbhwxdaCopy { get; set; }
        public virtual DbSet<GlyjcWxyt> GlyjcWxyt { get; set; }
        public virtual DbSet<GlyjcWxyxhhp> GlyjcWxyxhhp { get; set; }
        public virtual DbSet<GlyjcXjxmgzjl> GlyjcXjxmgzjl { get; set; }
        public virtual DbSet<GlyjcXjxmjl> GlyjcXjxmjl { get; set; }
        public virtual DbSet<GlyjcXxghzxqkjl> GlyjcXxghzxqkjl { get; set; }
        public virtual DbSet<GlyjcXxghzxqkjlBhglghbzjl> GlyjcXxghzxqkjlBhglghbzjl { get; set; }
        public virtual DbSet<GlyjcXxjlb> GlyjcXxjlb { get; set; }
        public virtual DbSet<GlyjcXyaxfxtyjxx> GlyjcXyaxfxtyjxx { get; set; }
        public virtual DbSet<GlyjcYcdhgjwbdwddygx> GlyjcYcdhgjwbdwddygx { get; set; }
        public virtual DbSet<GlyjcYcqhcq> GlyjcYcqhcq { get; set; }
        public virtual DbSet<GlyjcYcqhhcqshhjndjcjl> GlyjcYcqhhcqshhjndjcjl { get; set; }
        public virtual DbSet<GlyjcYcszdshhjndjcjl> GlyjcYcszdshhjndjcjl { get; set; }
        public virtual DbSet<GlyjcYcysdtxztyxtjycysxzjl> GlyjcYcysdtxztyxtjycysxzjl { get; set; }
        public virtual DbSet<GlyjcYcysdtxztyxtjycysxzjlCopy> GlyjcYcysdtxztyxtjycysxzjlCopy { get; set; }
        public virtual DbSet<GlyjcYcysdtyxtjcesj> GlyjcYcysdtyxtjcesj { get; set; }
        public virtual DbSet<GlyjcYcysdtyxtjcesj1018> GlyjcYcysdtyxtjcesj1018 { get; set; }
        public virtual DbSet<GlyjcYcysdtyxtjcesj2016年9月19日084330> GlyjcYcysdtyxtjcesj2016年9月19日084330 { get; set; }
        public virtual DbSet<GlyjcYcysdtyxtjcsj> GlyjcYcysdtyxtjcsj { get; set; }
        public virtual DbSet<GlyjcYcysdtyxtjcsj2016年8月30日173313> GlyjcYcysdtyxtjcsj2016年8月30日173313 { get; set; }
        public virtual DbSet<GlyjcYcysdtyxtjcsjCopy> GlyjcYcysdtyxtjcsjCopy { get; set; }
        public virtual DbSet<GlyjcYcysdtyxtjcsjCopy1> GlyjcYcysdtyxtjcsjCopy1 { get; set; }
        public virtual DbSet<GlyjcYcysdtyxtjcsj更新区域前1214> GlyjcYcysdtyxtjcsj更新区域前1214 { get; set; }
        public virtual DbSet<GlyjcYcysfbt> GlyjcYcysfbt { get; set; }
        public virtual DbSet<GlyjcYcysqd> GlyjcYcysqd { get; set; }
        public virtual DbSet<GlyjcYcysqd1> GlyjcYcysqd1 { get; set; }
        public virtual DbSet<GlyjcYcysqd919> GlyjcYcysqd919 { get; set; }
        public virtual DbSet<GlyjcYcysqdCopy> GlyjcYcysqdCopy { get; set; }
        public virtual DbSet<GlyjcYcysqdNew> GlyjcYcysqdNew { get; set; }
        public virtual DbSet<GlyjcYcysqdNew1> GlyjcYcysqdNew1 { get; set; }
        public virtual DbSet<GlyjcYczt> GlyjcYczt { get; set; }
        public virtual DbSet<GlyjcYhlmzpjyhlmjcjl> GlyjcYhlmzpjyhlmjcjl { get; set; }
        public virtual DbSet<GlyjcYjczgz> GlyjcYjczgz { get; set; }
        public virtual DbSet<GlyjcYjczxx> GlyjcYjczxx { get; set; }
        public virtual DbSet<GlyjcYjczxxcopy> GlyjcYjczxxcopy { get; set; }
        public virtual DbSet<GlyjcYjjsxx> GlyjcYjjsxx { get; set; }
        public virtual DbSet<GlyjcYjpzysxxb> GlyjcYjpzysxxb { get; set; }
        public virtual DbSet<GlyjcYjszzb> GlyjcYjszzb { get; set; }
        public virtual DbSet<GlyjcYjxx> GlyjcYjxx { get; set; }
        public virtual DbSet<GlyjcYjxx1019> GlyjcYjxx1019 { get; set; }
        public virtual DbSet<GlyjcYjxxcopy> GlyjcYjxxcopy { get; set; }
        public virtual DbSet<GlyjcYjya> GlyjcYjya { get; set; }
        public virtual DbSet<GlyjcYkfmyxjl> GlyjcYkfmyxjl { get; set; }
        public virtual DbSet<GlyjcYkglydjl> GlyjcYkglydjl { get; set; }
        public virtual DbSet<GlyjcYkxyndjl> GlyjcYkxyndjl { get; set; }
        public virtual DbSet<GlyjcYkyxpg> GlyjcYkyxpg { get; set; }
        public virtual DbSet<GlyjcYt> GlyjcYt { get; set; }
        public virtual DbSet<GlyjcYtbhqk> GlyjcYtbhqk { get; set; }
        public virtual DbSet<GlyjcYtbhqk1> GlyjcYtbhqk1 { get; set; }
        public virtual DbSet<GlyjcYtbhqk1018> GlyjcYtbhqk1018 { get; set; }
        public virtual DbSet<GlyjcZjzxfx> GlyjcZjzxfx { get; set; }
        public virtual DbSet<GlyjcZrhjjcgzqkjl> GlyjcZrhjjcgzqkjl { get; set; }
        public virtual DbSet<GlyjcZs> GlyjcZs { get; set; }
        public virtual DbSet<GlyjcZsSs> GlyjcZsSs { get; set; }
        public virtual DbSet<GlyjcZtgjbhtjbhjl> GlyjcZtgjbhtjbhjl { get; set; }
        public virtual DbSet<GlyjcZtgjbhtjbhjl2> GlyjcZtgjbhtjbhjl2 { get; set; }
        public virtual DbSet<GlyjcZtgjbhtndjl> GlyjcZtgjbhtndjl { get; set; }
        public virtual DbSet<GlyjcZwWdl> GlyjcZwWdl { get; set; }
        public virtual DbSet<GlyjcZwWdlBhdcjcgzqkjl> GlyjcZwWdlBhdcjcgzqkjl { get; set; }
        public virtual DbSet<GlyjcZwzz> GlyjcZwzz { get; set; }
        public virtual DbSet<GlyjcZxWdl> GlyjcZxWdl { get; set; }
        public virtual DbSet<GlyjcZxWdlBhdcjcgzqkjl> GlyjcZxWdlBhdcjcgzqkjl { get; set; }
        public virtual DbSet<GlyjcZxbhglfggz> GlyjcZxbhglfggz { get; set; }
        public virtual DbSet<GlyjcZz> GlyjcZz { get; set; }
        public virtual DbSet<GlyjcZzjg> GlyjcZzjg { get; set; }
        public virtual DbSet<JczlStzlcfwz> JczlStzlcfwz { get; set; }
        public virtual DbSet<JczlZlfl> JczlZlfl { get; set; }
        public virtual DbSet<JczlZljl> JczlZljl { get; set; }
        public virtual DbSet<JczlZljlDzwj> JczlZljlDzwj { get; set; }
        public virtual DbSet<JieruAqiReportDay> JieruAqiReportDay { get; set; }
        public virtual DbSet<JieruAqiReportHour> JieruAqiReportHour { get; set; }
        public virtual DbSet<JieruArticle> JieruArticle { get; set; }
        public virtual DbSet<JieruCampusInformation> JieruCampusInformation { get; set; }
        public virtual DbSet<JieruCampusInformation20160903> JieruCampusInformation20160903 { get; set; }
        public virtual DbSet<JieruCampusInformation20161017> JieruCampusInformation20161017 { get; set; }
        public virtual DbSet<JieruCampusInformation2018070120190630> JieruCampusInformation2018070120190630 { get; set; }
        public virtual DbSet<JieruCampusInformation201904> JieruCampusInformation201904 { get; set; }
        public virtual DbSet<JieruCampusInformation20200224> JieruCampusInformation20200224 { get; set; }
        public virtual DbSet<JieruCampusInformationCopy> JieruCampusInformationCopy { get; set; }
        public virtual DbSet<JieruCampusInformationCopy1> JieruCampusInformationCopy1 { get; set; }
        public virtual DbSet<JieruCampusInformationCopy2> JieruCampusInformationCopy2 { get; set; }
        public virtual DbSet<JieruCampusInformationCopyhepeng> JieruCampusInformationCopyhepeng { get; set; }
        public virtual DbSet<JieruConfig> JieruConfig { get; set; }
        public virtual DbSet<JieruDzsj> JieruDzsj { get; set; }
        public virtual DbSet<JieruHszljcszbb> JieruHszljcszbb { get; set; }
        public virtual DbSet<JieruHyyb> JieruHyyb { get; set; }
        public virtual DbSet<JieruHyyb2> JieruHyyb2 { get; set; }
        public virtual DbSet<JieruHyychjyb> JieruHyychjyb { get; set; }
        public virtual DbSet<JieruHyychjyb2> JieruHyychjyb2 { get; set; }
        public virtual DbSet<JieruLog> JieruLog { get; set; }
        public virtual DbSet<JieruSyysj> JieruSyysj { get; set; }
        public virtual DbSet<JieruSyysj2016年8月18日152903> JieruSyysj2016年8月18日152903 { get; set; }
        public virtual DbSet<JieruSyysjCopy> JieruSyysjCopy { get; set; }
        public virtual DbSet<JieruWeatherLive> JieruWeatherLive { get; set; }
        public virtual DbSet<JieruWeatherTyphoon> JieruWeatherTyphoon { get; set; }
        public virtual DbSet<JieruWeatherTyphoonPath> JieruWeatherTyphoonPath { get; set; }
        public virtual DbSet<JieruWeatherTyphoonPoint> JieruWeatherTyphoonPoint { get; set; }
        public virtual DbSet<JieruWeatherWarning> JieruWeatherWarning { get; set; }
        public virtual DbSet<MetadataQtlysj> MetadataQtlysj { get; set; }
        public virtual DbSet<MetadataSzlysj> MetadataSzlysj { get; set; }
        public virtual DbSet<MetadataSzlysjCopy> MetadataSzlysjCopy { get; set; }
        public virtual DbSet<MetadataTplysj> MetadataTplysj { get; set; }
        public virtual DbSet<MetadataTplysjCopy> MetadataTplysjCopy { get; set; }
        public virtual DbSet<MetadataTzlysj> MetadataTzlysj { get; set; }
        public virtual DbSet<MetadataTzlysjCopy> MetadataTzlysjCopy { get; set; }
        public virtual DbSet<MetadataWdlysj> MetadataWdlysj { get; set; }
        public virtual DbSet<MetadataWdlysjCopy> MetadataWdlysjCopy { get; set; }
        public virtual DbSet<MetadataWdlysj改变区域前1214> MetadataWdlysj改变区域前1214 { get; set; }
        public virtual DbSet<MetadataXgfjwd> MetadataXgfjwd { get; set; }
        public virtual DbSet<MetadataYxlysj> MetadataYxlysj { get; set; }
        public virtual DbSet<OgrPosition> OgrPosition { get; set; }
        public virtual DbSet<OrgDepartment> OrgDepartment { get; set; }
        public virtual DbSet<OrgLeader> OrgLeader { get; set; }
        public virtual DbSet<OrgUserinfo> OrgUserinfo { get; set; }
        public virtual DbSet<OrgUserrole> OrgUserrole { get; set; }
        public virtual DbSet<OrgUserrole20190524> OrgUserrole20190524 { get; set; }
        public virtual DbSet<PrivsDataprivs> PrivsDataprivs { get; set; }
        public virtual DbSet<PrivsFuncprivs1> PrivsFuncprivs1 { get; set; }
        public virtual DbSet<PrivsFuncprivs11128历史道路等四项去除前> PrivsFuncprivs11128历史道路等四项去除前 { get; set; }
        public virtual DbSet<PrivsFuncprivs120161012> PrivsFuncprivs120161012 { get; set; }
        public virtual DbSet<PrivsFuncprivs12016102711> PrivsFuncprivs12016102711 { get; set; }
        public virtual DbSet<PrivsFuncprivs120161208> PrivsFuncprivs120161208 { get; set; }
        public virtual DbSet<PrivsFuncprivs12016年8月18日104752> PrivsFuncprivs12016年8月18日104752 { get; set; }
        public virtual DbSet<PrivsFuncprivs2> PrivsFuncprivs2 { get; set; }
        public virtual DbSet<PrivsFuncprivs22016年8月18日100154> PrivsFuncprivs22016年8月18日100154 { get; set; }
        public virtual DbSet<PrivsFuncprivs3> PrivsFuncprivs3 { get; set; }
        public virtual DbSet<PrivsFuncprivsCopy> PrivsFuncprivsCopy { get; set; }
        public virtual DbSet<PrivsFuncprivsCopy1> PrivsFuncprivsCopy1 { get; set; }
        public virtual DbSet<PrivsFuncprivsDataprivs> PrivsFuncprivsDataprivs { get; set; }
        public virtual DbSet<PrivsRole> PrivsRole { get; set; }
        public virtual DbSet<PrivsRoleDataprivs> PrivsRoleDataprivs { get; set; }
        public virtual DbSet<PrivsRoleFuncprivs> PrivsRoleFuncprivs { get; set; }
        public virtual DbSet<PrivsSystem> PrivsSystem { get; set; }
        public virtual DbSet<PrivsUser> PrivsUser { get; set; }
        public virtual DbSet<PrivsUserRoleBak> PrivsUserRoleBak { get; set; }
        public virtual DbSet<PrivsUsergrroup> PrivsUsergrroup { get; set; }
        public virtual DbSet<SGcGcda> SGcGcda { get; set; }
        public virtual DbSet<SGlyjcJcpz> SGlyjcJcpz { get; set; }
        public virtual DbSet<SGlyjcJcpz2> SGlyjcJcpz2 { get; set; }
        public virtual DbSet<SPrivsDataprivs1> SPrivsDataprivs1 { get; set; }
        public virtual DbSet<SYcysdtyxtjcsjMetadata> SYcysdtyxtjcsjMetadata { get; set; }
        public virtual DbSet<SystmpTreedata> SystmpTreedata { get; set; }
        public virtual DbSet<Tempceshi> Tempceshi { get; set; }
        public virtual DbSet<Temptb> Temptb { get; set; }
        public virtual DbSet<Test> Test { get; set; }
        public virtual DbSet<Test1214> Test1214 { get; set; }
        public virtual DbSet<Test1214Copy> Test1214Copy { get; set; }
        public virtual DbSet<Testtemp> Testtemp { get; set; }
        public virtual DbSet<Testtemp1> Testtemp1 { get; set; }
        public virtual DbSet<VBhdcWdlysj> VBhdcWdlysj { get; set; }
        public virtual DbSet<VBhdcWdlysjBak> VBhdcWdlysjBak { get; set; }
        public virtual DbSet<VBhjctCzbh> VBhjctCzbh { get; set; }
        public virtual DbSet<VBhxjzNewestinfo> VBhxjzNewestinfo { get; set; }
        public virtual DbSet<VBhxjzNewestupdatetime> VBhxjzNewestupdatetime { get; set; }
        public virtual DbSet<VDhjyWdlysj> VDhjyWdlysj { get; set; }
        public virtual DbSet<VDqbgWdlysj> VDqbgWdlysj { get; set; }
        public virtual DbSet<VDwlmNewestinfo> VDwlmNewestinfo { get; set; }
        public virtual DbSet<VDwlmNewestupdatetime> VDwlmNewestupdatetime { get; set; }
        public virtual DbSet<VExportFl> VExportFl { get; set; }
        public virtual DbSet<VGlyjcBhdcjcgzqkjl> VGlyjcBhdcjcgzqkjl { get; set; }
        public virtual DbSet<VGlyjcBhgcxfdbhxx> VGlyjcBhgcxfdbhxx { get; set; }
        public virtual DbSet<VGlyjcBhgcxfxggzjc> VGlyjcBhgcxfxggzjc { get; set; }
        public virtual DbSet<VGlyjcBhgljfYflxjf> VGlyjcBhgljfYflxjf { get; set; }
        public virtual DbSet<VGlyjcBhkzztpg> VGlyjcBhkzztpg { get; set; }
        public virtual DbSet<VGlyjcBhxjBcjcdx> VGlyjcBhxjBcjcdx { get; set; }
        public virtual DbSet<VGlyjcBhxjzzpjbhxjzjl> VGlyjcBhxjzzpjbhxjzjl { get; set; }
        public virtual DbSet<VGlyjcBhzsyhjzzgcxczp> VGlyjcBhzsyhjzzgcxczp { get; set; }
        public virtual DbSet<VGlyjcBxWdl> VGlyjcBxWdl { get; set; }
        public virtual DbSet<VGlyjcBxWdlNewestdxsj> VGlyjcBxWdlNewestdxsj { get; set; }
        public virtual DbSet<VGlyjcByWdl> VGlyjcByWdl { get; set; }
        public virtual DbSet<VGlyjcByWdlNewestdxsj> VGlyjcByWdlNewestdxsj { get; set; }
        public virtual DbSet<VGlyjcByywhgcjl> VGlyjcByywhgcjl { get; set; }
        public virtual DbSet<VGlyjcCamera> VGlyjcCamera { get; set; }
        public virtual DbSet<VGlyjcCjNewestdxsj> VGlyjcCjNewestdxsj { get; set; }
        public virtual DbSet<VGlyjcDwlmbdxx> VGlyjcDwlmbdxx { get; set; }
        public virtual DbSet<VGlyjcDwlmzp> VGlyjcDwlmzp { get; set; }
        public virtual DbSet<VGlyjcFsWdl> VGlyjcFsWdl { get; set; }
        public virtual DbSet<VGlyjcFsWdlNewestdxsj> VGlyjcFsWdlNewestdxsj { get; set; }
        public virtual DbSet<VGlyjcJzjceJzjc> VGlyjcJzjceJzjc { get; set; }
        public virtual DbSet<VGlyjcLfSzl> VGlyjcLfSzl { get; set; }
        public virtual DbSet<VGlyjcLfSzlNewestdxsj> VGlyjcLfSzlNewestdxsj { get; set; }
        public virtual DbSet<VGlyjcLfWdl> VGlyjcLfWdl { get; set; }
        public virtual DbSet<VGlyjcLfWdlNewestdxsj> VGlyjcLfWdlNewestdxsj { get; set; }
        public virtual DbSet<VGlyjcLsdljcjl> VGlyjcLsdljcjl { get; set; }
        public virtual DbSet<VGlyjcQt> VGlyjcQt { get; set; }
        public virtual DbSet<VGlyjcRcxcjl> VGlyjcRcxcjl { get; set; }
        public virtual DbSet<VGlyjcRcxcycjl> VGlyjcRcxcycjl { get; set; }
        public virtual DbSet<VGlyjcSlWdl> VGlyjcSlWdl { get; set; }
        public virtual DbSet<VGlyjcSlWdlNewestdxsj> VGlyjcSlWdlNewestdxsj { get; set; }
        public virtual DbSet<VGlyjcSpwySzlNewestdxsj> VGlyjcSpwySzlNewestdxsj { get; set; }
        public virtual DbSet<VGlyjcStyycystjxzpjjl> VGlyjcStyycystjxzpjjl { get; set; }
        public virtual DbSet<VGlyjcTlWdl> VGlyjcTlWdl { get; set; }
        public virtual DbSet<VGlyjcTlWdlNewestdxsj> VGlyjcTlWdlNewestdxsj { get; set; }
        public virtual DbSet<VGlyjcWwbhwxda> VGlyjcWwbhwxda { get; set; }
        public virtual DbSet<VGlyjcXjxmgzjlXjxmjl> VGlyjcXjxmgzjlXjxmjl { get; set; }
        public virtual DbSet<VGlyjcXyaxfxtyjxx> VGlyjcXyaxfxtyjxx { get; set; }
        public virtual DbSet<VGlyjcYcysdtxztyxtjycysxzjl> VGlyjcYcysdtxztyxtjycysxzjl { get; set; }
        public virtual DbSet<VGlyjcYhlmzpjyhlmjcjl> VGlyjcYhlmzpjyhlmjcjl { get; set; }
        public virtual DbSet<VGlyjcYjczgz> VGlyjcYjczgz { get; set; }
        public virtual DbSet<VGlyjcYjjsxx> VGlyjcYjjsxx { get; set; }
        public virtual DbSet<VGlyjcYt> VGlyjcYt { get; set; }
        public virtual DbSet<VGlyjcZjzxfxOrguserinfo> VGlyjcZjzxfxOrguserinfo { get; set; }
        public virtual DbSet<VGlyjcZs> VGlyjcZs { get; set; }
        public virtual DbSet<VGlyjcZsSs> VGlyjcZsSs { get; set; }
        public virtual DbSet<VGlyjcZwWdl> VGlyjcZwWdl { get; set; }
        public virtual DbSet<VGlyjcZwWdlNewestdxsj> VGlyjcZwWdlNewestdxsj { get; set; }
        public virtual DbSet<VGlyjcZxWdl> VGlyjcZxWdl { get; set; }
        public virtual DbSet<VGlyjcZxWdlNewestdxsj> VGlyjcZxWdlNewestdxsj { get; set; }
        public virtual DbSet<VGlyjcZz> VGlyjcZz { get; set; }
        public virtual DbSet<VJcRcxcjlRealname> VJcRcxcjlRealname { get; set; }
        public virtual DbSet<VJcRcxcjlRealnameBack> VJcRcxcjlRealnameBack { get; set; }
        public virtual DbSet<VJcRcxcycjlRealname> VJcRcxcycjlRealname { get; set; }
        public virtual DbSet<VJcRcxcycjlRealnameBak> VJcRcxcycjlRealnameBak { get; set; }
        public virtual DbSet<VJcpzYjszzb> VJcpzYjszzb { get; set; }
        public virtual DbSet<VJieruTyphoonPath> VJieruTyphoonPath { get; set; }
        public virtual DbSet<VJieruTyphoonPoint> VJieruTyphoonPoint { get; set; }
        public virtual DbSet<VKlgfsdxczpBcjcdx> VKlgfsdxczpBcjcdx { get; set; }
        public virtual DbSet<VLsdlNewestinfo> VLsdlNewestinfo { get; set; }
        public virtual DbSet<VLsdlNewestupdatetime> VLsdlNewestupdatetime { get; set; }
        public virtual DbSet<VLsdljcjlBcjcdx> VLsdljcjlBcjcdx { get; set; }
        public virtual DbSet<VMetadataSzlysj> VMetadataSzlysj { get; set; }
        public virtual DbSet<VMetadataTplysj> VMetadataTplysj { get; set; }
        public virtual DbSet<VMetadataTzlysj> VMetadataTzlysj { get; set; }
        public virtual DbSet<VMetadataWdlysj> VMetadataWdlysj { get; set; }
        public virtual DbSet<VMetadataYxlysj> VMetadataYxlysj { get; set; }
        public virtual DbSet<VOrgUserFunc> VOrgUserFunc { get; set; }
        public virtual DbSet<VOrgUserRole> VOrgUserRole { get; set; }
        public virtual DbSet<VPrivsRoleDataprivs> VPrivsRoleDataprivs { get; set; }
        public virtual DbSet<VPrivsRoleFunc> VPrivsRoleFunc { get; set; }
        public virtual DbSet<VPrivsRoleFuncprivs> VPrivsRoleFuncprivs { get; set; }
        public virtual DbSet<VQtzpYxlysj> VQtzpYxlysj { get; set; }
        public virtual DbSet<VRyklxzzBcjcdxSzlysj> VRyklxzzBcjcdxSzlysj { get; set; }
        public virtual DbSet<VSbqdTmpjcpzBhdcjcgzqkjlWdlysj> VSbqdTmpjcpzBhdcjcgzqkjlWdlysj { get; set; }
        public virtual DbSet<VSouvWdlysj> VSouvWdlysj { get; set; }
        public virtual DbSet<VSsykcdBcjcdx> VSsykcdBcjcdx { get; set; }
        public virtual DbSet<VSsyklxzzBcjcdxSzlysj> VSsyklxzzBcjcdxSzlysj { get; set; }
        public virtual DbSet<VSydaWdlysj> VSydaWdlysj { get; set; }
        public virtual DbSet<VSysPkCurrentpk> VSysPkCurrentpk { get; set; }
        public virtual DbSet<VSywbWdlysj> VSywbWdlysj { get; set; }
        public virtual DbSet<VTjxNewestinfo> VTjxNewestinfo { get; set; }
        public virtual DbSet<VTjxNewestupdatetime> VTjxNewestupdatetime { get; set; }
        public virtual DbSet<VWwbhwxdaWdlysj> VWwbhwxdaWdlysj { get; set; }
        public virtual DbSet<VWxyxhhpYxlysj> VWxyxhhpYxlysj { get; set; }
        public virtual DbSet<VYcbtYcbts> VYcbtYcbts { get; set; }
        public virtual DbSet<VYcysdtyxtJceJc> VYcysdtyxtJceJc { get; set; }
        public virtual DbSet<VYcysdtyxtJceJcBak1> VYcysdtyxtJceJcBak1 { get; set; }
        public virtual DbSet<VYcysdtyxtjcsjYcys> VYcysdtyxtjcsjYcys { get; set; }
        public virtual DbSet<VYcystpTplysj> VYcystpTplysj { get; set; }
        public virtual DbSet<VYcystzTzlysj> VYcystzTzlysj { get; set; }
        public virtual DbSet<VYglyjcYjxxYjczxx> VYglyjcYjxxYjczxx { get; set; }
        public virtual DbSet<VYhlmNewestinfo> VYhlmNewestinfo { get; set; }
        public virtual DbSet<VYhlmNewestupdatetime> VYhlmNewestupdatetime { get; set; }
        public virtual DbSet<VYsjDomainConstraint> VYsjDomainConstraint { get; set; }
        public virtual DbSet<VYsjPkCurrentpk> VYsjPkCurrentpk { get; set; }
        public virtual DbSet<VYsjTableenumitem> VYsjTableenumitem { get; set; }
        public virtual DbSet<VZdjcCjjcsb> VZdjcCjjcsb { get; set; }
        public virtual DbSet<VZdjcCjjcsbBak> VZdjcCjjcsbBak { get; set; }
        public virtual DbSet<VZdjcCjjczd> VZdjcCjjczd { get; set; }
        public virtual DbSet<VZdjcJcpzSbqdBhdcjcgzqkjlNewestdxsj> VZdjcJcpzSbqdBhdcjcgzqkjlNewestdxsj { get; set; }
        public virtual DbSet<VZdjcWyjcsj> VZdjcWyjcsj { get; set; }
        public virtual DbSet<VZdjcWyjczd> VZdjcWyjczd { get; set; }
        public virtual DbSet<VZdjcZsjc> VZdjcZsjc { get; set; }
        public virtual DbSet<VZdjcZsjczd> VZdjcZsjczd { get; set; }
        public virtual DbSet<XzqDsj> XzqDsj { get; set; }
        public virtual DbSet<XzqQxj> XzqQxj { get; set; }
        public virtual DbSet<XzqSj> XzqSj { get; set; }
        public virtual DbSet<YcbtDomainEnum> YcbtDomainEnum { get; set; }
        public virtual DbSet<YcbtDomainEnumitem> YcbtDomainEnumitem { get; set; }
        public virtual DbSet<YcbtDomainRange> YcbtDomainRange { get; set; }
        public virtual DbSet<YcbtYcd> YcbtYcd { get; set; }
        public virtual DbSet<YcbtYcdtp> YcbtYcdtp { get; set; }
        public virtual DbSet<YcbtYcqy> YcbtYcqy { get; set; }
        public virtual DbSet<YcbtYcqytp> YcbtYcqytp { get; set; }
        public virtual DbSet<YcbtYcys> YcbtYcys { get; set; }
        public virtual DbSet<YcbtYcystp> YcbtYcystp { get; set; }
        public virtual DbSet<YddRw> YddRw { get; set; }
        public virtual DbSet<YsjDomainConstraint> YsjDomainConstraint { get; set; }
        public virtual DbSet<YsjDomainEnum> YsjDomainEnum { get; set; }
        public virtual DbSet<YsjDomainEnumitem> YsjDomainEnumitem { get; set; }
        public virtual DbSet<YsjDomainEnumitem20191227> YsjDomainEnumitem20191227 { get; set; }
        public virtual DbSet<YsjDomainRange> YsjDomainRange { get; set; }
        public virtual DbSet<YsjPkConfig> YsjPkConfig { get; set; }
        public virtual DbSet<YsjPkCurrentpk> YsjPkCurrentpk { get; set; }
        public virtual DbSet<YsjSeqConfig> YsjSeqConfig { get; set; }
        public virtual DbSet<YsjSeqCurrentseq> YsjSeqCurrentseq { get; set; }
        public virtual DbSet<YsjTempview> YsjTempview { get; set; }
        public virtual DbSet<YsjWjglxx> YsjWjglxx { get; set; }
        public virtual DbSet<YsjYwbysj> YsjYwbysj { get; set; }
        public virtual DbSet<ZdjcCjjcqy> ZdjcCjjcqy { get; set; }
        public virtual DbSet<ZdjcCjjcsj> ZdjcCjjcsj { get; set; }
        public virtual DbSet<ZdjcCjjcsj2018年12月18日> ZdjcCjjcsj2018年12月18日 { get; set; }
        public virtual DbSet<ZdjcCjjcsj2018年12月26日> ZdjcCjjcsj2018年12月26日 { get; set; }
        public virtual DbSet<ZdjcCjjcsjCopy> ZdjcCjjcsjCopy { get; set; }
        public virtual DbSet<ZdjcCjjcsjCopy1> ZdjcCjjcsjCopy1 { get; set; }
        public virtual DbSet<ZdjcCjjcsjCopy20190411> ZdjcCjjcsjCopy20190411 { get; set; }
        public virtual DbSet<ZdjcCjjczd> ZdjcCjjczd { get; set; }
        public virtual DbSet<ZdjcJcpzSbqdBhdcjcgzqkjl> ZdjcJcpzSbqdBhdcjcgzqkjl { get; set; }
        public virtual DbSet<ZdjcJcpzSbqdBhdcjcgzqkjlBak> ZdjcJcpzSbqdBhdcjcgzqkjlBak { get; set; }
        public virtual DbSet<ZdjcWyjcsj> ZdjcWyjcsj { get; set; }
        public virtual DbSet<ZdjcWyjczd> ZdjcWyjczd { get; set; }
        public virtual DbSet<ZdjcZsjcsj> ZdjcZsjcsj { get; set; }
        public virtual DbSet<ZdjcZsjczd> ZdjcZsjczd { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. See http://go.microsoft.com/fwlink/?LinkId=723263 for guidance on storing connection strings.
                optionsBuilder.UseMySql("server=119.233.191.32;userid=kls;pwd=kls@654321;port=13306;database=kls_monitor", x => x.ServerVersion("5.6.25-mysql"));
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<DtzyDtJbxx>(entity =>
            {
                entity.ToTable("dtzy_dt_jbxx");

                entity.HasComment("地图_基本信息");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(2000)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fz)
                    .HasColumnName("FZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("分组")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xsblc)
                    .HasColumnName("XSBLC")
                    .HasColumnType("varchar(50)")
                    .HasComment("显示比例尺")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xsfws)
                    .HasColumnName("XSFWS")
                    .HasComment("显示范围上");

                entity.Property(e => e.Xsfwx)
                    .HasColumnName("XSFWX")
                    .HasComment("显示范围下");

                entity.Property(e => e.Xsfwy)
                    .HasColumnName("XSFWY")
                    .HasComment("显示范围右");

                entity.Property(e => e.Xsfwz)
                    .HasColumnName("XSFWZ")
                    .HasComment("显示范围左");

                entity.Property(e => e.Zdxsblc)
                    .HasColumnName("ZDXSBLC")
                    .HasColumnType("varchar(50)")
                    .HasComment("最大显示比例尺")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zxdx)
                    .HasColumnName("ZXDX")
                    .HasComment("中心点X");

                entity.Property(e => e.Zxdy)
                    .HasColumnName("ZXDY")
                    .HasComment("中心点Y");

                entity.Property(e => e.Zxxsblc)
                    .HasColumnName("ZXXSBLC")
                    .HasColumnType("varchar(50)")
                    .HasComment("最小显示比例尺")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<DtzyDtTcxx>(entity =>
            {
                entity.ToTable("dtzy_dt_tcxx");

                entity.HasComment("地图_图层信息");

                entity.HasIndex(e => e.Dtxxid)
                    .HasName("FK_93EBAD2EBB5B46E2");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dtxxid)
                    .HasColumnName("DTXXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("地图信息ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mrkj)
                    .HasColumnName("MRKJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'1'")
                    .HasComment("默认可见");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Tcid)
                    .HasColumnName("TCID")
                    .HasColumnType("varchar(50)")
                    .HasComment("图层ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zdxsjb)
                    .HasColumnName("ZDXSJB")
                    .HasColumnType("int(11)")
                    .HasComment("最大显示级别");

                entity.Property(e => e.Zxxsjb)
                    .HasColumnName("ZXXSJB")
                    .HasColumnType("int(11)")
                    .HasComment("最小显示级别");

                entity.HasOne(d => d.Dtxx)
                    .WithMany(p => p.DtzyDtTcxx)
                    .HasForeignKey(d => d.Dtxxid)
                    .HasConstraintName("FK_93EBAD2EBB5B46E2");
            });

            modelBuilder.Entity<DtzyTcTdt>(entity =>
            {
                entity.ToTable("dtzy_tc_tdt");

                entity.HasComment("图层_天地图");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(2000)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tl)
                    .HasColumnName("TL")
                    .HasColumnType("varchar(300)")
                    .HasComment("图例")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbck)
                    .HasColumnName("ZBCK")
                    .HasColumnType("varchar(50)")
                    .HasComment("坐标参考")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<DtzyTcWfs>(entity =>
            {
                entity.ToTable("dtzy_tc_wfs");

                entity.HasComment("图层_WFS");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzsm)
                    .HasColumnName("BZSM")
                    .HasColumnType("varchar(2000)")
                    .HasComment("备注说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tcys)
                    .HasColumnName("TCYS")
                    .HasColumnType("varchar(100)")
                    .HasComment("图层样式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tl)
                    .HasColumnName("TL")
                    .HasColumnType("varchar(300)")
                    .HasComment("图例")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Url)
                    .HasColumnName("URL")
                    .HasColumnType("varchar(300)")
                    .HasComment("Url地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xybb)
                    .HasColumnName("XYBB")
                    .HasColumnType("varchar(50)")
                    .HasComment("协议版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbck)
                    .HasColumnName("ZBCK")
                    .HasColumnType("varchar(50)")
                    .HasComment("坐标参考")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<DtzyTcWms>(entity =>
            {
                entity.ToTable("dtzy_tc_wms");

                entity.HasComment("图层_WMS");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(2000)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfwptc)
                    .HasColumnName("SFWPTC")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否瓦片图层");

                entity.Property(e => e.Tl)
                    .HasColumnName("TL")
                    .HasColumnType("varchar(300)")
                    .HasComment("图例")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Url)
                    .HasColumnName("URL")
                    .HasColumnType("varchar(300)")
                    .HasComment("URL地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wpgd)
                    .HasColumnName("WPGD")
                    .HasColumnType("int(11)")
                    .HasComment("瓦片高度");

                entity.Property(e => e.Wpgs)
                    .HasColumnName("WPGS")
                    .HasColumnType("varchar(50)")
                    .HasComment("瓦片格式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wpkd)
                    .HasColumnName("WPKD")
                    .HasColumnType("int(11)")
                    .HasComment("瓦片宽度");

                entity.Property(e => e.Xybb)
                    .HasColumnName("XYBB")
                    .HasColumnType("varchar(50)")
                    .HasComment("协议版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbck)
                    .HasColumnName("ZBCK")
                    .HasColumnType("varchar(50)")
                    .HasComment("坐标参考")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ztcj)
                    .HasColumnName("ZTCJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("子图层级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<DtzyTcWmts>(entity =>
            {
                entity.ToTable("dtzy_tc_wmts");

                entity.HasComment("图层_WMTS");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(2000)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tl)
                    .HasColumnName("TL")
                    .HasColumnType("varchar(300)")
                    .HasComment("图例")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Url)
                    .HasColumnName("URL")
                    .HasColumnType("varchar(300)")
                    .HasComment("Url地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbck)
                    .HasColumnName("ZBCK")
                    .HasColumnType("varchar(50)")
                    .HasComment("坐标参考")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ztcj)
                    .HasColumnName("ZTCJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("子图层级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zzfs)
                    .HasColumnName("ZZFS")
                    .HasColumnType("varchar(100)")
                    .HasComment("组织方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<Editrecords>(entity =>
            {
                entity.ToTable("editrecords");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("int(11)");

                entity.Property(e => e.Businesskey)
                    .HasColumnName("BUSINESSKEY")
                    .HasColumnType("varchar(40)")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Date).HasColumnName("DATE");

                entity.Property(e => e.Edittype)
                    .HasColumnName("EDITTYPE")
                    .HasColumnType("int(11)");

                entity.Property(e => e.Featurestate)
                    .HasColumnName("FEATURESTATE")
                    .HasColumnType("int(11)");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("int(11)");

                entity.Property(e => e.Operatekey)
                    .HasColumnName("OPERATEKEY")
                    .HasColumnType("varchar(40)")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Ponlyid)
                    .HasColumnName("PONLYID")
                    .HasColumnType("int(11)");

                entity.Property(e => e.Ptablename)
                    .HasColumnName("PTABLENAME")
                    .HasColumnType("varchar(40)")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Tablename)
                    .HasColumnName("TABLENAME")
                    .HasColumnType("varchar(40)")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.User)
                    .HasColumnName("USER")
                    .HasColumnType("varchar(40)")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");
            });

            modelBuilder.Entity<Fdsfs>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("fdsfs");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcAqsgjl>(entity =>
            {
                entity.ToTable("glyjc_aqsgjl");

                entity.HasComment("安全事故记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Clqk)
                    .HasColumnName("CLQK")
                    .HasColumnType("varchar(500)")
                    .HasComment("处理情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fssj)
                    .HasColumnName("FSSJ")
                    .HasColumnType("datetime")
                    .HasComment("发生时间");

                entity.Property(e => e.Jb)
                    .HasColumnName("JB")
                    .HasColumnType("varchar(50)")
                    .HasComment("级别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Sglx)
                    .HasColumnName("SGLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("事故类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Ss)
                    .HasColumnName("SS")
                    .HasColumnType("varchar(50)")
                    .HasComment("损失")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcBbhjl>(entity =>
            {
                entity.ToTable("glyjc_bbhjl");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bbh)
                    .HasColumnName("BBH")
                    .HasColumnType("int(10)")
                    .HasComment("版本号");

                entity.Property(e => e.Jcbid)
                    .HasColumnName("JCBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对应监测表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzsj)
                    .HasColumnName("JZSJ")
                    .HasColumnType("datetime")
                    .HasComment("截止时间");

                entity.Property(e => e.Qssj)
                    .HasColumnName("QSSJ")
                    .HasColumnType("datetime")
                    .HasComment("起始时间");
            });

            modelBuilder.Entity<GlyjcBbhjlCopy>(entity =>
            {
                entity.ToTable("glyjc_bbhjl_copy");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bbh)
                    .HasColumnName("BBH")
                    .HasColumnType("int(10)")
                    .HasComment("版本号");

                entity.Property(e => e.Jcbid)
                    .HasColumnName("JCBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对应监测表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzsj)
                    .HasColumnName("JZSJ")
                    .HasColumnType("datetime")
                    .HasComment("截止时间");

                entity.Property(e => e.Qssj)
                    .HasColumnName("QSSJ")
                    .HasColumnType("datetime")
                    .HasComment("起始时间");
            });

            modelBuilder.Entity<GlyjcBcjcdx>(entity =>
            {
                entity.ToTable("glyjc_bcjcdx");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("精度");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBcjcdx1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_bcjcdx1");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("精度");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhdcjcgzqkjl>(entity =>
            {
                entity.ToTable("glyjc_bhdcjcgzqkjl");

                entity.HasComment("病害调查监测工作情况记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bbh)
                    .HasColumnName("BBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("版本号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbha)
                    .HasColumnName("BHBHA")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhczzt)
                    .HasColumnName("BHCZZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害存在状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhlx)
                    .HasColumnName("BHLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhsyt)
                    .HasColumnName("BHSYT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhztt)
                    .HasColumnName("BHZTT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害状态图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcff)
                    .HasColumnName("JCFF")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测方法")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jczq)
                    .HasColumnName("JCZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tcjd)
                    .HasColumnName("TCJD")
                    .HasComment("病害在图片的经度");

                entity.Property(e => e.Tcmc)
                    .HasColumnName("TCMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("对应的图层照片记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tcwd)
                    .HasColumnName("TCWD")
                    .HasComment("病害在图片的纬度");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xfsj)
                    .HasColumnName("XFSJ")
                    .HasColumnType("datetime")
                    .HasComment("修复时间");
            });

            modelBuilder.Entity<GlyjcBhdcjcgzqkjl1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_bhdcjcgzqkjl1");

                entity.Property(e => e.Bbh)
                    .HasColumnName("BBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("版本号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhczzt)
                    .HasColumnName("BHCZZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害存在状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhlx)
                    .HasColumnName("BHLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhsyt)
                    .HasColumnName("BHSYT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhztt)
                    .HasColumnName("BHZTT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害状态图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcff)
                    .HasColumnName("JCFF")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测方法")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jczq)
                    .HasColumnName("JCZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcBhdcjcgzqkjl1128>(entity =>
            {
                entity.ToTable("glyjc_bhdcjcgzqkjl_1128");

                entity.HasComment("病害调查监测工作情况记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bbh)
                    .HasColumnName("BBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("版本号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbha)
                    .HasColumnName("BHBHA")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhczzt)
                    .HasColumnName("BHCZZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害存在状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhlx)
                    .HasColumnName("BHLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhsyt)
                    .HasColumnName("BHSYT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhztt)
                    .HasColumnName("BHZTT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害状态图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcff)
                    .HasColumnName("JCFF")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测方法")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jczq)
                    .HasColumnName("JCZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tcjd)
                    .HasColumnName("TCJD")
                    .HasComment("病害在图片的经度");

                entity.Property(e => e.Tcmc)
                    .HasColumnName("TCMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("对应的图层照片记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tcwd)
                    .HasColumnName("TCWD")
                    .HasComment("病害在图片的纬度");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xfsj)
                    .HasColumnName("XFSJ")
                    .HasColumnType("datetime")
                    .HasComment("修复时间");
            });

            modelBuilder.Entity<GlyjcBhdcjcgzqkjl2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_bhdcjcgzqkjl2");

                entity.Property(e => e.Bbh)
                    .HasColumnName("BBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("版本号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhczzt)
                    .HasColumnName("BHCZZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害存在状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhlx)
                    .HasColumnName("BHLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhsyt)
                    .HasColumnName("BHSYT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhztt)
                    .HasColumnName("BHZTT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害状态图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcff)
                    .HasColumnName("JCFF")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测方法")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jczq)
                    .HasColumnName("JCZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tcjd)
                    .HasColumnName("TCJD")
                    .HasComment("病害在图片的经度");

                entity.Property(e => e.Tcmc)
                    .HasColumnName("TCMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("对应的图层照片记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tcwd)
                    .HasColumnName("TCWD")
                    .HasComment("病害在图片的纬度");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcBhdcjcgzqkjlTmp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_bhdcjcgzqkjl_tmp");

                entity.Property(e => e.Bbh)
                    .HasColumnName("BBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("版本号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhczzt)
                    .HasColumnName("BHCZZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害存在状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhlx)
                    .HasColumnName("BHLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhsyt)
                    .HasColumnName("BHSYT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhztt)
                    .HasColumnName("BHZTT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害状态图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcff)
                    .HasColumnName("JCFF")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测方法")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jczq)
                    .HasColumnName("JCZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tcjd)
                    .HasColumnName("TCJD")
                    .HasComment("病害在图片的经度");

                entity.Property(e => e.Tcmc)
                    .HasColumnName("TCMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("对应的图层照片记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tcwd)
                    .HasColumnName("TCWD")
                    .HasComment("病害在图片的纬度");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcBhdcjcgzqkjl修改病害状态之前>(entity =>
            {
                entity.ToTable("glyjc_bhdcjcgzqkjl修改病害状态之前");

                entity.HasComment("病害调查监测工作情况记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bbh)
                    .HasColumnName("BBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("版本号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbha)
                    .HasColumnName("BHBHA")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhczzt)
                    .HasColumnName("BHCZZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害存在状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhlx)
                    .HasColumnName("BHLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhsyt)
                    .HasColumnName("BHSYT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhztt)
                    .HasColumnName("BHZTT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害状态图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcff)
                    .HasColumnName("JCFF")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测方法")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jczq)
                    .HasColumnName("JCZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tcjd)
                    .HasColumnName("TCJD")
                    .HasComment("病害在图片的经度");

                entity.Property(e => e.Tcmc)
                    .HasColumnName("TCMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("对应的图层照片记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tcwd)
                    .HasColumnName("TCWD")
                    .HasComment("病害在图片的纬度");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xfsj)
                    .HasColumnName("XFSJ")
                    .HasColumnType("datetime")
                    .HasComment("修复时间");
            });

            modelBuilder.Entity<GlyjcBhdcjcgzqkjl换区域前1214>(entity =>
            {
                entity.ToTable("glyjc_bhdcjcgzqkjl换区域前1214");

                entity.HasComment("病害调查监测工作情况记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bbh)
                    .HasColumnName("BBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("版本号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbha)
                    .HasColumnName("BHBHA")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhczzt)
                    .HasColumnName("BHCZZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害存在状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhlx)
                    .HasColumnName("BHLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhsyt)
                    .HasColumnName("BHSYT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhztt)
                    .HasColumnName("BHZTT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害状态图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcff)
                    .HasColumnName("JCFF")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测方法")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jczq)
                    .HasColumnName("JCZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tcjd)
                    .HasColumnName("TCJD")
                    .HasComment("病害在图片的经度");

                entity.Property(e => e.Tcmc)
                    .HasColumnName("TCMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("对应的图层照片记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tcwd)
                    .HasColumnName("TCWD")
                    .HasComment("病害在图片的纬度");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xfsj)
                    .HasColumnName("XFSJ")
                    .HasColumnType("datetime")
                    .HasComment("修复时间");
            });

            modelBuilder.Entity<GlyjcBhfwjskzdd>(entity =>
            {
                entity.ToTable("glyjc_bhfwjskzdd");

                entity.HasComment("保护范围建设控制地带");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhfwglgd)
                    .HasColumnName("BHFWGLGD")
                    .HasColumnType("varchar(4000)")
                    .HasComment("保护范围管理规定")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhfwjx)
                    .HasColumnName("BHFWJX")
                    .HasColumnType("varchar(500)")
                    .HasComment("保护范围界线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhfwmj)
                    .HasColumnName("BHFWMJ")
                    .HasComment("保护范围面积");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gbdx)
                    .HasColumnName("GBDX")
                    .HasColumnType("varchar(50)")
                    .HasComment("国保对象")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jskzddglgd)
                    .HasColumnName("JSKZDDGLGD")
                    .HasColumnType("varchar(4000)")
                    .HasComment("建设控制地带管理规定")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jskzddjx)
                    .HasColumnName("JSKZDDJX")
                    .HasColumnType("varchar(500)")
                    .HasComment("建设控制地带界线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jskzddmj)
                    .HasColumnName("JSKZDDMJ")
                    .HasComment("建设控制地带面积");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasComment("onlyid")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcBhgcxfdbhxx>(entity =>
            {
                entity.ToTable("glyjc_bhgcxfdbhxx");

                entity.HasComment("保护工程修复的病害信息");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhgcxfdbhid)
                    .HasColumnName("BHGCXFDBHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护工程修复的病害ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhxmid)
                    .HasColumnName("BHXMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护项目ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xfhzp)
                    .HasColumnName("XFHZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("修复后照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xfsj)
                    .HasColumnName("XFSJ")
                    .HasColumnType("datetime")
                    .HasComment("修复时间");
            });

            modelBuilder.Entity<GlyjcBhgcxfdbhxxCopy>(entity =>
            {
                entity.ToTable("glyjc_bhgcxfdbhxx_copy");

                entity.HasComment("保护工程修复的病害信息");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhgcxfdbhid)
                    .HasColumnName("BHGCXFDBHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护工程修复的病害ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhxmid)
                    .HasColumnName("BHXMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护项目ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xfhzp)
                    .HasColumnName("XFHZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("修复后照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhgcxfdbhxx修改病害状态之前1226>(entity =>
            {
                entity.ToTable("glyjc_bhgcxfdbhxx修改病害状态之前1226");

                entity.HasComment("保护工程修复的病害信息");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhgcxfdbhid)
                    .HasColumnName("BHGCXFDBHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护工程修复的病害ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhxmid)
                    .HasColumnName("BHXMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护项目ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xfhzp)
                    .HasColumnName("XFHZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("修复后照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xfsj)
                    .HasColumnName("XFSJ")
                    .HasColumnType("datetime")
                    .HasComment("修复时间");
            });

            modelBuilder.Entity<GlyjcBhgcxfxggzjc>(entity =>
            {
                entity.ToTable("glyjc_bhgcxfxggzjc");

                entity.HasComment("保护工程修复效果跟踪监测");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(500)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pglx)
                    .HasColumnName("PGLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xfdbhjlid)
                    .HasColumnName("XFDBHJLID")
                    .HasColumnType("varchar(50)")
                    .HasComment("修复的病害记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zp)
                    .HasColumnName("ZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhglghbzjl>(entity =>
            {
                entity.ToTable("glyjc_bhglghbzjl");

                entity.HasComment("保护管理规划编制记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzdw)
                    .HasColumnName("BZDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzhgbzt)
                    .HasColumnName("BZHGBZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("编制和公布状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Ghqx)
                    .HasColumnName("GHQX")
                    .HasColumnType("varchar(50)")
                    .HasComment("规划期限")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xgwd)
                    .HasColumnName("XGWD")
                    .HasColumnType("varchar(50)")
                    .HasComment("相关文档")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zzbzdw)
                    .HasColumnName("ZZBZDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("组织编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhgljf>(entity =>
            {
                entity.ToTable("glyjc_bhgljf");

                entity.HasComment("保护管理经费");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhgljf)
                    .HasColumnName("BHGLJF")
                    .HasComment("保护管理经费");

                entity.Property(e => e.Bhgljflx)
                    .HasColumnName("BHGLJFLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护管理经费类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jfhqrq)
                    .HasColumnName("JFHQRQ")
                    .HasColumnType("datetime")
                    .HasComment("经费获取日期");

                entity.Property(e => e.Ndzjf)
                    .HasColumnName("NDZJF")
                    .HasComment("年度总经费");

                entity.Property(e => e.Qczjf)
                    .HasColumnName("QCZJF")
                    .HasComment("区财政经费");

                entity.Property(e => e.Sczjf)
                    .HasColumnName("SCZJF")
                    .HasComment("市财政经费");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjysczjf)
                    .HasColumnName("SJYSCZJF")
                    .HasComment("市级以上财政经费");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zcjf)
                    .HasColumnName("ZCJF")
                    .HasComment("自筹经费");

                entity.Property(e => e.Zyczjf)
                    .HasColumnName("ZYCZJF")
                    .HasComment("中央财政经费");
            });

            modelBuilder.Entity<GlyjcBhgljg>(entity =>
            {
                entity.ToTable("glyjc_bhgljg");

                entity.HasComment("保护管理机构");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzrs)
                    .HasColumnName("BZRS")
                    .HasColumnType("int(11)")
                    .HasComment("编制人数");

                entity.Property(e => e.Cddzr)
                    .HasColumnName("CDDZR")
                    .HasColumnType("varchar(2000)")
                    .HasComment("承担的责任")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dzyx)
                    .HasColumnName("DZYX")
                    .HasColumnType("varchar(50)")
                    .HasComment("电子邮箱")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fddbr)
                    .HasColumnName("FDDBR")
                    .HasColumnType("varchar(50)")
                    .HasComment("法定代表人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gfwz)
                    .HasColumnName("GFWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("官方网站")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glqysm)
                    .HasColumnName("GLQYSM")
                    .HasColumnType("varchar(2000)")
                    .HasComment("管理区域说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glqyzrfwtlj)
                    .HasColumnName("GLQYZRFWTLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理区域责任范围图路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gzryzs)
                    .HasColumnName("GZRYZS")
                    .HasColumnType("int(11)")
                    .HasComment("工作人员总数");

                entity.Property(e => e.Jgclsj)
                    .HasColumnName("JGCLSJ")
                    .HasColumnType("datetime")
                    .HasComment("机构成立时间");

                entity.Property(e => e.Jgcxsj)
                    .HasColumnName("JGCXSJ")
                    .HasColumnType("datetime")
                    .HasComment("机构撤消时间");

                entity.Property(e => e.Jgjb)
                    .HasColumnName("JGJB")
                    .HasColumnType("varchar(50)")
                    .HasComment("机构级别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jgmc)
                    .HasColumnName("JGMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("机构名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lxdh)
                    .HasColumnName("LXDH")
                    .HasColumnType("varchar(50)")
                    .HasComment("联系电话")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lxrxm)
                    .HasColumnName("LXRXM")
                    .HasColumnType("varchar(50)")
                    .HasComment("联系人姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(2000)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjgldw)
                    .HasColumnName("SJGLDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("上级管理单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Szxzq)
                    .HasColumnName("SZXZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("所在行政区")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zyjfly)
                    .HasColumnName("ZYJFLY")
                    .HasColumnType("varchar(50)")
                    .HasComment("主要经费来源")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zzjgdm)
                    .HasColumnName("ZZJGDM")
                    .HasColumnType("varchar(50)")
                    .HasComment("组织机构代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhglxgpxjl>(entity =>
            {
                entity.ToTable("glyjc_bhglxgpxjl");

                entity.HasComment("保护管理相关培训记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Pxjzsj)
                    .HasColumnName("PXJZSJ")
                    .HasColumnType("datetime")
                    .HasComment("培训截止时间");

                entity.Property(e => e.Pxkssj)
                    .HasColumnName("PXKSSJ")
                    .HasColumnType("datetime")
                    .HasComment("培训开始时间");

                entity.Property(e => e.Pxxmmc)
                    .HasColumnName("PXXMMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("培训项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pxzcjf)
                    .HasColumnName("PXZCJF")
                    .HasColumnType("int(11)")
                    .HasComment("培训支出经费");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sxrysl)
                    .HasColumnName("SXRYSL")
                    .HasColumnType("int(11)")
                    .HasComment("受训人员数量");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcBhjct>(entity =>
            {
                entity.ToTable("glyjc_bhjct");

                entity.HasComment("病害监测图");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tcmc)
                    .HasColumnName("TCMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("图层名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhkzztpg>(entity =>
            {
                entity.ToTable("glyjc_bhkzztpg");

                entity.HasComment("病害控制状态评估");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhdid)
                    .HasColumnName("BHDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhkzztpg)
                    .HasColumnName("BHKZZTPG")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害控制状态评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcBhqht>(entity =>
            {
                entity.ToTable("glyjc_bhqht");

                entity.HasComment("保护区划图");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhqhturl)
                    .HasColumnName("BHQHTURL")
                    .HasColumnType("varchar(200)")
                    .HasComment("保护区划图URL")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整形）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcBhxjzzpjbhxjzjl>(entity =>
            {
                entity.ToTable("glyjc_bhxjzzpjbhxjzjl");

                entity.HasComment("不和谐建筑照片及不和谐建筑记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhxysms)
                    .HasColumnName("BHXYSMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("不和谐因素描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fsbd)
                    .HasColumnName("FSBD")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生变动")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jgnd)
                    .HasColumnName("JGND")
                    .HasColumnType("varchar(50)")
                    .HasComment("竣工年代")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzcqr)
                    .HasColumnName("JZCQR")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑产权人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzcs)
                    .HasColumnName("JZCS")
                    .HasColumnType("int(11)")
                    .HasComment("建筑层数");

                entity.Property(e => e.Jzgd)
                    .HasColumnName("JZGD")
                    .HasComment("建筑高度");

                entity.Property(e => e.Jzjg)
                    .HasColumnName("JZJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑结构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzmc)
                    .HasColumnName("JZMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzwx)
                    .HasColumnName("JZWX")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑外形")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzyt)
                    .HasColumnName("JZYT")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑用途")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qtys)
                    .HasColumnName("QTYS")
                    .HasColumnType("varchar(50)")
                    .HasComment("墙体颜色")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrq)
                    .HasColumnName("TXRQ")
                    .HasColumnType("datetime")
                    .HasComment("填写日期");

                entity.Property(e => e.Wdys)
                    .HasColumnName("WDYS")
                    .HasColumnType("varchar(50)")
                    .HasComment("屋顶颜色")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzsffsbd)
                    .HasColumnName("XZSFFSBD")
                    .HasColumnType("tinyint(4)")
                    .HasComment("现状是否发生变动");

                entity.Property(e => e.Zdmj)
                    .HasColumnName("ZDMJ")
                    .HasColumnType("int(11)")
                    .HasComment("占地面积");

                entity.Property(e => e.Zplj)
                    .HasColumnName("ZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhzsyhjzzgcjl>(entity =>
            {
                entity.ToTable("glyjc_bhzsyhjzzgcjl");

                entity.HasComment("保护展示与环境整治工程记录");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhzsyhjzzgcda)
                    .HasColumnName("bhzsyhjzzgcda")
                    .HasColumnType("varchar(500)")
                    .HasComment("保护展示与环境整治工程档案")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djdw)
                    .HasColumnName("DJDW")
                    .HasColumnType("varchar(255)")
                    .HasComment("代建单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("djrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("djsj")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gcfl)
                    .HasColumnName("gcfl")
                    .HasColumnType("varchar(50)")
                    .HasComment("工程分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gczj)
                    .HasColumnName("GCZJ")
                    .HasComment("工程造价");

                entity.Property(e => e.Gczjqcz)
                    .HasColumnName("GCZJQCZ")
                    .HasComment("工程造价区财政");

                entity.Property(e => e.Gczjscz)
                    .HasColumnName("GCZJSCZ")
                    .HasComment("工程造价市财政");

                entity.Property(e => e.Gczjsjyscz)
                    .HasColumnName("GCZJSJYSCZ")
                    .HasComment("工程造价市级以上财政");

                entity.Property(e => e.Gczjzycz)
                    .HasColumnName("GCZJZYCZ")
                    .HasComment("工程造价中央财政");

                entity.Property(e => e.Jftrze)
                    .HasColumnName("jftrze")
                    .HasColumnType("int(11)")
                    .HasComment("经费投入总额");

                entity.Property(e => e.Jldw)
                    .HasColumnName("JLDW")
                    .HasColumnType("varchar(255)")
                    .HasComment("监理单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jsdd)
                    .HasColumnName("JSDD")
                    .HasColumnType("varchar(100)")
                    .HasComment("建设地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jsdw)
                    .HasColumnName("JSDW")
                    .HasColumnType("varchar(255)")
                    .HasComment("建设单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jsnr)
                    .HasColumnName("JSNR")
                    .HasColumnType("varchar(500)")
                    .HasComment("建设内容")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jssj)
                    .HasColumnName("jssj")
                    .HasColumnType("datetime")
                    .HasComment("结束时间");

                entity.Property(e => e.Jzzdmj)
                    .HasColumnName("JZZDMJ")
                    .HasComment("建筑占地面积");

                entity.Property(e => e.Kssj)
                    .HasColumnName("kssj")
                    .HasColumnType("datetime")
                    .HasComment("开始时间");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasComment("ONLYID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_bin");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("sfkdj")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Sgdw)
                    .HasColumnName("SGDW")
                    .HasColumnType("varchar(255)")
                    .HasComment("施工单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("shbtgsm")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("shrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjdw)
                    .HasColumnName("SJDW")
                    .HasColumnType("varchar(255)")
                    .HasComment("设计单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("tjsj")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wwbmpz)
                    .HasColumnName("wwbmpz")
                    .HasColumnType("varchar(50)")
                    .HasComment("文物部门批准/许可文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmbh)
                    .HasColumnName("XMBH")
                    .HasColumnType("varchar(100)")
                    .HasComment("项目编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmfl)
                    .HasColumnName("xmfl")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmfwturl)
                    .HasColumnName("xmfwturl")
                    .HasColumnType("varchar(200)")
                    .HasComment("项目范围图url")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("xmmc")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zjzmj)
                    .HasColumnName("ZJZMJ")
                    .HasComment("总建筑面积");

                entity.Property(e => e.Zyczjf)
                    .HasColumnName("zyczjf")
                    .HasColumnType("int(11)")
                    .HasComment("中央财政经费");

                entity.Property(e => e.Zydmj)
                    .HasColumnName("ZYDMJ")
                    .HasComment("总用地面积");
            });

            modelBuilder.Entity<GlyjcBhzsyhjzzgcjl1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_bhzsyhjzzgcjl1");

                entity.Property(e => e.Bhzsyhjzzgcda)
                    .HasColumnName("bhzsyhjzzgcda")
                    .HasColumnType("varchar(500)")
                    .HasComment("保护展示与环境整治工程档案")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("djrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("djsj")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gcfl)
                    .HasColumnName("gcfl")
                    .HasColumnType("varchar(50)")
                    .HasComment("工程分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jftrze)
                    .HasColumnName("jftrze")
                    .HasColumnType("int(11)")
                    .HasComment("经费投入总额");

                entity.Property(e => e.Jssj)
                    .HasColumnName("jssj")
                    .HasColumnType("datetime")
                    .HasComment("结束时间");

                entity.Property(e => e.Kssj)
                    .HasColumnName("kssj")
                    .HasColumnType("datetime")
                    .HasComment("开始时间");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasComment("ONLYID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_bin");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("sfkdj")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("shbtgsm")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("shrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("tjsj")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wwbmpz)
                    .HasColumnName("wwbmpz")
                    .HasColumnType("varchar(50)")
                    .HasComment("文物部门批准/许可文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmfl)
                    .HasColumnName("xmfl")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmfwturl)
                    .HasColumnName("xmfwturl")
                    .HasColumnType("varchar(200)")
                    .HasComment("项目范围图url")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("xmmc")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zyczjf)
                    .HasColumnName("zyczjf")
                    .HasColumnType("int(11)")
                    .HasComment("中央财政经费");
            });

            modelBuilder.Entity<GlyjcBhzsyhjzzgcjl20190821>(entity =>
            {
                entity.ToTable("glyjc_bhzsyhjzzgcjl_20190821");

                entity.HasComment("保护展示与环境整治工程记录");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhzsyhjzzgcda)
                    .HasColumnName("bhzsyhjzzgcda")
                    .HasColumnType("varchar(500)")
                    .HasComment("保护展示与环境整治工程档案")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("djrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("djsj")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gcfl)
                    .HasColumnName("gcfl")
                    .HasColumnType("varchar(50)")
                    .HasComment("工程分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jftrze)
                    .HasColumnName("jftrze")
                    .HasColumnType("int(11)")
                    .HasComment("经费投入总额");

                entity.Property(e => e.Jssj)
                    .HasColumnName("jssj")
                    .HasColumnType("datetime")
                    .HasComment("结束时间");

                entity.Property(e => e.Kssj)
                    .HasColumnName("kssj")
                    .HasColumnType("datetime")
                    .HasComment("开始时间");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasComment("ONLYID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_bin");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("sfkdj")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("shbtgsm")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("shrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("tjsj")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wwbmpz)
                    .HasColumnName("wwbmpz")
                    .HasColumnType("varchar(50)")
                    .HasComment("文物部门批准/许可文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmfl)
                    .HasColumnName("xmfl")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmfwturl)
                    .HasColumnName("xmfwturl")
                    .HasColumnType("varchar(200)")
                    .HasComment("项目范围图url")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("xmmc")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zyczjf)
                    .HasColumnName("zyczjf")
                    .HasColumnType("int(11)")
                    .HasComment("中央财政经费");
            });

            modelBuilder.Entity<GlyjcBhzsyhjzzgcxczp>(entity =>
            {
                entity.ToTable("glyjc_bhzsyhjzzgcxczp");

                entity.HasComment("保护展示与环境整治工程现场照片");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhzsyhjzzxmid)
                    .HasColumnName("BHZSYHJZZXMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护展示与环境整治项目ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Qksm)
                    .HasColumnName("QKSM")
                    .HasColumnType("varchar(2000)")
                    .HasComment("情况描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfwg)
                    .HasColumnName("SFWG")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否完工")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjwgsj)
                    .HasColumnName("SJWGSJ")
                    .HasColumnType("datetime")
                    .HasComment("实际完工时间");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zp)
                    .HasColumnName("ZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhzsyhjzzgcxczpCopy>(entity =>
            {
                entity.ToTable("glyjc_bhzsyhjzzgcxczp_copy");

                entity.HasComment("保护展示与环境整治工程现场照片");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhzsyhjzzxmid)
                    .HasColumnName("BHZSYHJZZXMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护展示与环境整治项目ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfwg)
                    .HasColumnName("SFWG")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否完工")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjwgsj)
                    .HasColumnName("SJWGSJ")
                    .HasColumnType("datetime")
                    .HasComment("实际完工时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zp)
                    .HasColumnName("ZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBxWdl>(entity =>
            {
                entity.ToTable("glyjc_bx_wdl");

                entity.HasComment("变形(文档类)");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("bhbh")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("bz")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Pg)
                    .HasColumnName("pg")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("rwid")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBxWdlBhdcjcgzqkjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("glyjc_bx_wdl_bhdcjcgzqkjl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("bhbh")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhmc)
                    .HasColumnName("BHMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bz)
                    .HasColumnName("bz")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("pg")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("rwid")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBy>(entity =>
            {
                entity.ToTable("glyjc_by");

                entity.HasComment("暴雨 ");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cxsj)
                    .HasColumnName("CXSJ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("持续时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment(" 对接人ID ")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment(" 对接时间 ");

                entity.Property(e => e.Fssj)
                    .HasColumnName("FSSJ")
                    .HasColumnType("datetime")
                    .HasComment("发生时间");

                entity.Property(e => e.Hscsyxpg)
                    .HasColumnName("HSCSYXPG")
                    .HasColumnType("varchar(50)")
                    .HasComment("洪水产生影响评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment(" 是否可对接 ");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment(" 是否已对接 ");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment(" 审核游程（记录审核的过程） ")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment(" 提交时间 ");

                entity.Property(e => e._24xsnjyl)
                    .HasColumnName("24XSNJYL")
                    .HasColumnType("int(11)")
                    .HasComment("24小时内降雨量");
            });

            modelBuilder.Entity<GlyjcByWdl>(entity =>
            {
                entity.ToTable("glyjc_by_wdl");

                entity.HasComment("白蚁病害(文档类)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gjsbyyxmj)
                    .HasColumnName("GJSBYYXMJ")
                    .HasComment("构件受白蚁影响面积");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scjysj)
                    .HasColumnName("SCJYSJ")
                    .HasColumnType("datetime")
                    .HasComment("上次降雨时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcByWdlBhdcjcgzqkjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("glyjc_by_wdl_bhdcjcgzqkjl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhmc)
                    .HasColumnName("BHMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gjsbyyxmj)
                    .HasColumnName("GJSBYYXMJ")
                    .HasComment("构件受白蚁影响面积");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scjysj)
                    .HasColumnName("SCJYSJ")
                    .HasColumnType("datetime")
                    .HasComment("上次降雨时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcByywhgcjl>(entity =>
            {
                entity.ToTable("glyjc_byywhgcjl");

                entity.HasComment("保养与维护工程记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Byywhdx)
                    .HasColumnName("BYYWHDX")
                    .HasColumnType("varchar(50)")
                    .HasComment("保养与维护对象")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Byywhnr)
                    .HasColumnName("BYYWHNR")
                    .HasColumnType("varchar(500)")
                    .HasComment("保养与维护内容")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Byywhrq)
                    .HasColumnName("BYYWHRQ")
                    .HasColumnType("datetime")
                    .HasComment("保养与维护日期");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(50)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rcbyzp)
                    .HasColumnName("RCBYZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("日常保养照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Ssz)
                    .HasColumnName("SSZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yf)
                    .HasColumnName("YF")
                    .HasColumnType("varchar(50)")
                    .HasComment("月份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcByywhgcjlYcysqd>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("glyjc_byywhgcjl_ycysqd");

                entity.Property(e => e.Byywhdx)
                    .HasColumnName("BYYWHDX")
                    .HasColumnType("varchar(50)")
                    .HasComment("保养与维护对象")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Byywhnr)
                    .HasColumnName("BYYWHNR")
                    .HasColumnType("varchar(500)")
                    .HasComment("保养与维护内容")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Byywhrq)
                    .HasColumnName("BYYWHRQ")
                    .HasColumnType("datetime")
                    .HasComment("保养与维护日期");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(50)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rcbyzp)
                    .HasColumnName("RCBYZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("日常保养照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Ssz)
                    .HasColumnName("SSZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yf)
                    .HasColumnName("YF")
                    .HasColumnType("varchar(50)")
                    .HasComment("月份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcCamera>(entity =>
            {
                entity.ToTable("glyjc_camera");

                entity.HasComment("视频设备表");

                entity.HasIndex(e => e.Sourceid)
                    .HasName("fk_asldkfalsdk");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cameraid)
                    .HasColumnName("cameraid")
                    .HasColumnType("varchar(50)")
                    .HasComment("视频ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cancontrol)
                    .HasColumnName("cancontrol")
                    .HasColumnType("int(2)")
                    .HasComment("是否为可控制姿态的球机");

                entity.Property(e => e.Channel)
                    .HasColumnName("channel")
                    .HasColumnType("varchar(50)")
                    .HasComment("管道")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dll)
                    .HasColumnName("dll")
                    .HasColumnType("varchar(50)")
                    .HasComment("厂商驱动")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ip)
                    .HasColumnName("ip")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lat)
                    .HasColumnName("lat")
                    .HasComment("经度");

                entity.Property(e => e.Locadesc)
                    .HasColumnName("locadesc")
                    .HasColumnType("varchar(200)")
                    .HasComment("位置说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lon)
                    .HasColumnName("lon")
                    .HasComment("纬度");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Param)
                    .HasColumnName("param")
                    .HasColumnType("varchar(50)")
                    .HasComment("参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Password)
                    .HasColumnName("password")
                    .HasColumnType("varchar(50)")
                    .HasComment("密码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Port)
                    .HasColumnName("port")
                    .HasColumnType("varchar(50)")
                    .HasComment("端口")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("remark")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sourceid)
                    .HasColumnName("sourceid")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备清单ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Statedesc)
                    .HasColumnName("statedesc")
                    .HasColumnType("varchar(200)")
                    .HasComment("状态说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Username)
                    .HasColumnName("username")
                    .HasColumnType("varchar(50)")
                    .HasComment("用户名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Videourl)
                    .HasColumnName("videourl")
                    .HasColumnType("varchar(200)")
                    .HasComment("实时视频URL地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Source)
                    .WithMany(p => p.GlyjcCamera)
                    .HasForeignKey(d => d.Sourceid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_asldkfalsdk");
            });

            modelBuilder.Entity<GlyjcCj>(entity =>
            {
                entity.ToTable("glyjc_cj");

                entity.HasComment("沉降");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcrq)
                    .HasColumnName("DCRQ")
                    .HasColumnType("datetime")
                    .HasComment("调查日期");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gcz)
                    .HasColumnName("GCZ")
                    .HasColumnType("int(11)")
                    .HasComment("高程值(mm)");

                entity.Property(e => e.Jcdsbid)
                    .HasColumnName("JCDSBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点设备ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzfaid)
                    .HasColumnName("JCPZFAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置方案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否可对接")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcCllzlsglz>(entity =>
            {
                entity.ToTable("glyjc_cllzlsglz");

                entity.HasComment("CL离子硫酸根离子");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cllznd)
                    .HasColumnName("CLLZND")
                    .HasComment("CL离子浓度");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Lsglznd)
                    .HasColumnName("LSGLZND")
                    .HasComment("硫酸根离子浓度");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sj)
                    .HasColumnName("SJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcCnsxjz>(entity =>
            {
                entity.ToTable("glyjc_cnsxjz");

                entity.HasComment("承诺事项进展");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cnsxly)
                    .HasColumnName("CNSXLY")
                    .HasColumnType("varchar(50)")
                    .HasComment("承诺事项来源")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.CnsxnrYw)
                    .HasColumnName("CNSXNR_YW")
                    .HasColumnType("mediumtext")
                    .HasComment("承诺事项内容_英文")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.CnsxnrZw)
                    .HasColumnName("CNSXNR_ZW")
                    .HasColumnType("varchar(4000)")
                    .HasComment("承诺事项内容_中文")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cnwcsj)
                    .HasColumnName("CNWCSJ")
                    .HasColumnType("datetime")
                    .HasComment("承诺完成时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dwcqkdbysm)
                    .HasColumnName("DWCQKDBYSM")
                    .HasColumnType("mediumtext")
                    .HasComment("对完成情况的必要说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mqjz)
                    .HasColumnName("MQJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("目前进展")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfct)
                    .HasColumnName("SFCT")
                    .HasColumnType("varchar(20)")
                    .HasComment("是否常态（0-否  1-是）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xgwd)
                    .HasColumnName("XGWD")
                    .HasColumnType("varchar(200)")
                    .HasComment("相关文档")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcCnsxjzCopy>(entity =>
            {
                entity.ToTable("glyjc_cnsxjz_copy");

                entity.HasComment("承诺事项进展");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cnsxly)
                    .HasColumnName("CNSXLY")
                    .HasColumnType("varchar(50)")
                    .HasComment("承诺事项来源")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.CnsxnrYw)
                    .HasColumnName("CNSXNR_YW")
                    .HasColumnType("varchar(4000)")
                    .HasComment("承诺事项内容_英文")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.CnsxnrZw)
                    .HasColumnName("CNSXNR_ZW")
                    .HasColumnType("varchar(4000)")
                    .HasComment("承诺事项内容_中文")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cnwcsj)
                    .HasColumnName("CNWCSJ")
                    .HasColumnType("datetime")
                    .HasComment("承诺完成时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dwcqkdbysm)
                    .HasColumnName("DWCQKDBYSM")
                    .HasColumnType("varchar(10000)")
                    .HasComment("对完成情况的必要说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mqjz)
                    .HasColumnName("MQJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("目前进展")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xgwd)
                    .HasColumnName("XGWD")
                    .HasColumnType("varchar(200)")
                    .HasComment("相关文档")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcCqqkjl>(entity =>
            {
                entity.ToTable("glyjc_cqqkjl");

                entity.HasComment("产权情况记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .IsRequired()
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cqbgrq)
                    .HasColumnName("CQBGRQ")
                    .HasColumnType("datetime")
                    .HasComment("产权变更日期");

                entity.Property(e => e.Cqlx)
                    .HasColumnName("CQLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("产权类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fwzl)
                    .HasColumnName("FWZL")
                    .HasColumnType("varchar(50)")
                    .HasComment("房屋座落")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzmj)
                    .HasColumnName("JZMJ")
                    .HasColumnType("decimal(8,2)")
                    .HasComment("建筑面积（㎡）");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Syr)
                    .HasColumnName("SYR")
                    .HasColumnType("varchar(50)")
                    .HasComment("使用人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrq)
                    .HasColumnName("TXRQ")
                    .HasColumnType("datetime")
                    .HasComment("填写日期");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yt)
                    .HasColumnName("YT")
                    .HasColumnType("varchar(50)")
                    .HasComment("用途")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yzdlr)
                    .HasColumnName("YZDLR")
                    .HasColumnType("varchar(50)")
                    .HasComment("业主代理人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zdmj)
                    .HasColumnName("ZDMJ")
                    .HasColumnType("decimal(8,2)")
                    .HasComment("占地面积（㎡）");
            });

            modelBuilder.Entity<GlyjcDhjy>(entity =>
            {
                entity.ToTable("glyjc_dhjy");

                entity.HasComment("大会决议");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcDqbg>(entity =>
            {
                entity.ToTable("glyjc_dqbg");

                entity.HasComment("定期报告");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcDqzl>(entity =>
            {
                entity.ToTable("glyjc_dqzl");

                entity.HasComment("大气质量");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Co).HasColumnName("CO");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.No2).HasColumnName("NO2");

                entity.Property(e => e.Pm10).HasColumnName("PM10");

                entity.Property(e => e.Pm25).HasColumnName("PM2_5");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sj)
                    .HasColumnName("SJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.So2)
                    .HasColumnName("SO2")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcDwlmbdxx>(entity =>
            {
                entity.ToTable("glyjc_dwlmbdxx");

                entity.HasComment("第五立面变动信息");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdhzp)
                    .HasColumnName("BDHZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("变动后照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdjzdz)
                    .HasColumnName("BDJZDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("变动建筑地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdqkms)
                    .HasColumnName("BDQKMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("变动情况描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdqzp)
                    .HasColumnName("BDQZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("变动前照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dwlmzp)
                    .HasColumnName("DWLMZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("第五立面照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("smallint(6)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("smallint(6)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(500)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(50)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("XMMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpqy)
                    .HasColumnName("ZPQY")
                    .HasColumnType("varchar(50)")
                    .HasComment("照片区域")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcDwlmzp>(entity =>
            {
                entity.ToTable("glyjc_dwlmzp");

                entity.HasComment("第五立面照片");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhms)
                    .HasColumnName("BHMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("变化描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dwlmzp)
                    .HasColumnName("DWLMZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("第五立面照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pzsj)
                    .HasColumnName("PZSJ")
                    .HasColumnType("datetime")
                    .HasComment("拍照时间");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("smallint(6)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("smallint(6)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(500)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(50)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpqy)
                    .HasColumnName("ZPQY")
                    .HasColumnType("varchar(50)")
                    .HasComment("照片区域")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcDz>(entity =>
            {
                entity.ToTable("glyjc_dz");

                entity.HasComment("地震");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dzdj)
                    .HasColumnName("DZDJ")
                    .HasComment("地震等级");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sj)
                    .HasColumnName("SJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcFjb>(entity =>
            {
                entity.ToTable("glyjc_fjb");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务表id对应元数据表")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ccmc)
                    .HasColumnName("CCMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件存储在目标文件夹下的存储名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fjdyzdm)
                    .HasColumnName("FJDYZDM")
                    .HasColumnType("varchar(50)")
                    .HasComment("附件对应字段名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("附件对应数据的主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wjmc)
                    .HasColumnName("WJMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件的真实名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcFjb1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_fjb1");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务表id对应元数据表")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ccmc)
                    .HasColumnName("CCMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件存储在目标文件夹下的存储名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fjdyzdm)
                    .HasColumnName("FJDYZDM")
                    .HasColumnType("varchar(50)")
                    .HasComment("附件对应字段名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("附件对应数据的主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wjmc)
                    .HasColumnName("WJMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件的真实名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcFjb2016年09月01日>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_fjb_2016年09月01日");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务表id对应元数据表")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ccmc)
                    .HasColumnName("CCMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件存储在目标文件夹下的存储名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fjdyzdm)
                    .HasColumnName("FJDYZDM")
                    .HasColumnType("varchar(50)")
                    .HasComment("附件对应字段名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("附件对应数据的主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wjmc)
                    .HasColumnName("WJMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件的真实名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcFjb2016年8月30日173444>(entity =>
            {
                entity.ToTable("glyjc_fjb_2016年8月30日17:34:44");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务表id对应元数据表")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ccmc)
                    .HasColumnName("CCMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件存储在目标文件夹下的存储名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fjdyzdm)
                    .HasColumnName("FJDYZDM")
                    .HasColumnType("varchar(50)")
                    .HasComment("附件对应字段名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("附件对应数据的主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wjmc)
                    .HasColumnName("WJMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件的真实名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcFjb2016年9月19日084453>(entity =>
            {
                entity.ToTable("glyjc_fjb_2016年9月19日08:44:53");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务表id对应元数据表")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ccmc)
                    .HasColumnName("CCMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件存储在目标文件夹下的存储名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fjdyzdm)
                    .HasColumnName("FJDYZDM")
                    .HasColumnType("varchar(50)")
                    .HasComment("附件对应字段名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("附件对应数据的主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wjmc)
                    .HasColumnName("WJMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件的真实名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcFjbCopy>(entity =>
            {
                entity.ToTable("glyjc_fjb_copy");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务表id对应元数据表")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ccmc)
                    .HasColumnName("CCMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件存储在目标文件夹下的存储名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fjdyzdm)
                    .HasColumnName("FJDYZDM")
                    .HasColumnType("varchar(50)")
                    .HasComment("附件对应字段名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("附件对应数据的主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wjmc)
                    .HasColumnName("WJMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("附件的真实名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcFjbCopy1>(entity =>
            {
                entity.ToTable("glyjc_fjb_copy1");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务表id对应元数据表")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ccmc)
                    .HasColumnName("CCMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件存储在目标文件夹下的存储名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fjdyzdm)
                    .HasColumnName("FJDYZDM")
                    .HasColumnType("varchar(50)")
                    .HasComment("附件对应字段名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("附件对应数据的主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wjmc)
                    .HasColumnName("WJMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件的真实名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcFsWdl>(entity =>
            {
                entity.ToTable("glyjc_fs_wdl");

                entity.HasComment("腐蚀病害(文档类)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gjfsmj)
                    .HasColumnName("GJFSMJ")
                    .HasComment("构件腐蚀面积");

                entity.Property(e => e.Gjscmj)
                    .HasColumnName("GJSCMJ")
                    .HasComment("构件受潮面积");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scjysj)
                    .HasColumnName("SCJYSJ")
                    .HasColumnType("datetime")
                    .HasComment("上次降雨时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcFsWdlBhdcjcgzqkjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("glyjc_fs_wdl_bhdcjcgzqkjl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhmc)
                    .HasColumnName("BHMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gjfsmj)
                    .HasColumnName("GJFSMJ")
                    .HasComment("构件腐蚀面积");

                entity.Property(e => e.Gjscmj)
                    .HasColumnName("GJSCMJ")
                    .HasComment("构件受潮面积");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scjysj)
                    .HasColumnName("SCJYSJ")
                    .HasColumnType("datetime")
                    .HasComment("上次降雨时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcGlzdhyjyajl>(entity =>
            {
                entity.ToTable("glyjc_glzdhyjyajl");

                entity.HasComment("管理制度和应急预案记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gbsj)
                    .HasColumnName("GBSJ")
                    .HasColumnType("datetime")
                    .HasComment("公布时间");

                entity.Property(e => e.Gbwh)
                    .HasColumnName("GBWH")
                    .HasColumnType("varchar(50)")
                    .HasComment("公布文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lb)
                    .HasColumnName("LB")
                    .HasColumnType("varchar(50)")
                    .HasComment("类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sssj)
                    .HasColumnName("SSSJ")
                    .HasColumnType("datetime")
                    .HasComment("实施时间");

                entity.Property(e => e.Sxhfzzt)
                    .HasColumnName("SXHFZZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("生效或废止状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wjlj)
                    .HasColumnName("WJLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("文件路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wjnr)
                    .HasColumnName("WJNR")
                    .HasColumnType("varchar(500)")
                    .HasComment("文件内容")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcGwhwj>(entity =>
            {
                entity.ToTable("glyjc_gwhwj");

                entity.HasComment("管委会文件");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fjr)
                    .HasColumnName("FJR")
                    .HasColumnType("varchar(50)")
                    .HasComment("发件人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gwhwj)
                    .HasColumnName("GWHWJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("管委会文件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjr)
                    .HasColumnName("SJR")
                    .HasColumnType("varchar(50)")
                    .HasComment("收件人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjsj)
                    .HasColumnName("SJSJ")
                    .HasColumnType("datetime")
                    .HasComment("收件时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wjlx)
                    .HasColumnName("WJLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文件类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcHjyxpg>(entity =>
            {
                entity.ToTable("glyjc_hjyxpg");

                entity.HasComment("环境影响评估");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgsm)
                    .HasColumnName("PGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("评估说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcJcbg>(entity =>
            {
                entity.ToTable("glyjc_jcbg");

                entity.HasComment("监测报告");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bgfj)
                    .HasColumnName("BGFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("报告附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bgmc)
                    .HasColumnName("BGMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("报告名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bszt)
                    .HasColumnName("BSZT")
                    .HasComment("报送状态");

                entity.Property(e => e.Bznf)
                    .HasColumnName("BZNF")
                    .HasColumnType("varchar(50)")
                    .HasComment("编制年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gysm)
                    .HasColumnName("GYSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("概要说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcJcbgyd>(entity =>
            {
                entity.ToTable("glyjc_jcbgyd");

                entity.HasComment("监测报告");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bgfj)
                    .HasColumnName("BGFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("报告附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bgmc)
                    .HasColumnName("BGMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("报告名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bszt)
                    .HasColumnName("BSZT")
                    .HasComment("报送状态");

                entity.Property(e => e.Bznf)
                    .HasColumnName("BZNF")
                    .HasColumnType("varchar(50)")
                    .HasComment("编制年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzyf)
                    .HasColumnName("BZYF")
                    .HasColumnType("varchar(50)")
                    .HasComment("编制月份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gysm)
                    .HasColumnName("GYSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("概要说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcJcbgydCopy>(entity =>
            {
                entity.ToTable("glyjc_jcbgyd_copy");

                entity.HasComment("监测报告");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bgfj)
                    .HasColumnName("BGFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("报告附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bgmc)
                    .HasColumnName("BGMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("报告名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bszt)
                    .HasColumnName("BSZT")
                    .HasComment("报送状态");

                entity.Property(e => e.Bznf)
                    .HasColumnName("BZNF")
                    .HasColumnType("varchar(50)")
                    .HasComment("编制年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzyf)
                    .HasColumnName("BZYF")
                    .HasColumnType("varchar(50)")
                    .HasComment("编制月份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gysm)
                    .HasColumnName("GYSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("概要说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcJcfa>(entity =>
            {
                entity.ToTable("glyjc_jcfa");

                entity.HasComment("监测方案");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzdw)
                    .HasColumnName("BZDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Famc)
                    .HasColumnName("FAMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pzwh)
                    .HasColumnName("PZWH")
                    .HasColumnType("varchar(50)")
                    .HasComment("批准文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcjg>(entity =>
            {
                entity.ToTable("glyjc_jcjg");

                entity.HasComment("监测机构");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cddzr)
                    .HasColumnName("CDDZR")
                    .HasColumnType("varchar(500)")
                    .HasComment("承担的责任")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dzyx)
                    .HasColumnName("DZYX")
                    .HasColumnType("varchar(50)")
                    .HasComment("电子邮箱")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fzr)
                    .HasColumnName("FZR")
                    .HasColumnType("varchar(50)")
                    .HasComment("负责人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fzrlxdh)
                    .HasColumnName("FZRLXDH")
                    .HasColumnType("varchar(50)")
                    .HasComment("负责人联系电话")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcgzwz)
                    .HasColumnName("JCGZWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测工作网站")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjgmc)
                    .HasColumnName("JCJGMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测机构名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jgclsj)
                    .HasColumnName("JGCLSJ")
                    .HasColumnType("datetime")
                    .HasComment("机构成立时间");

                entity.Property(e => e.Jgcxsj)
                    .HasColumnName("JGCXSJ")
                    .HasColumnType("datetime")
                    .HasComment("机构撤消时间");

                entity.Property(e => e.Lxdh)
                    .HasColumnName("LXDH")
                    .HasColumnType("varchar(50)")
                    .HasComment("联系电话")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lxrxm)
                    .HasColumnName("LXRXM")
                    .HasColumnType("varchar(50)")
                    .HasComment("联系人姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ryzs)
                    .HasColumnName("RYZS")
                    .HasColumnType("int(11)")
                    .HasComment("人员总数");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjgldw)
                    .HasColumnName("SJGLDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("上级管理单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zzjgdm)
                    .HasColumnName("ZZJGDM")
                    .HasColumnType("varchar(50)")
                    .HasComment("组织机构代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcpz>(entity =>
            {
                entity.ToTable("glyjc_jcpz");

                entity.HasComment("监测配置");

                entity.HasIndex(e => new { e.Sjcjfzrid, e.Lrfs })
                    .HasName("index_sjcjfzrid_lrfs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwid)
                    .HasColumnName("JCDXJTBWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwszbid)
                    .HasColumnName("JCDXJTBWSZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位所在表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbids)
                    .HasColumnName("SBIDS")
                    .HasColumnType("varchar(500)")
                    .HasComment("设备ID集（以“，”隔开）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcpz1>(entity =>
            {
                entity.ToTable("glyjc_jcpz1");

                entity.HasComment("监测配置");

                entity.HasIndex(e => new { e.Sjcjfzrid, e.Lrfs })
                    .HasName("index_sjcjfzrid_lrfs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwid)
                    .HasColumnName("JCDXJTBWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwszbid)
                    .HasColumnName("JCDXJTBWSZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位所在表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbids)
                    .HasColumnName("SBIDS")
                    .HasColumnType("varchar(500)")
                    .HasComment("设备ID集（以“，”隔开）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcpz2>(entity =>
            {
                entity.ToTable("glyjc_jcpz2");

                entity.HasComment("监测配置");

                entity.HasIndex(e => new { e.Sjcjfzrid, e.Lrfs })
                    .HasName("index_sjcjfzrid_lrfs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwid)
                    .HasColumnName("JCDXJTBWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwszbid)
                    .HasColumnName("JCDXJTBWSZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位所在表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbids)
                    .HasColumnName("SBIDS")
                    .HasColumnType("varchar(500)")
                    .HasComment("设备ID集（以“，”隔开）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcpz20190621区域人员改变>(entity =>
            {
                entity.ToTable("glyjc_jcpz_20190621区域人员改变");

                entity.HasComment("监测配置");

                entity.HasIndex(e => new { e.Sjcjfzrid, e.Lrfs })
                    .HasName("index_sjcjfzrid_lrfs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwid)
                    .HasColumnName("JCDXJTBWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwszbid)
                    .HasColumnName("JCDXJTBWSZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位所在表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbids)
                    .HasColumnName("SBIDS")
                    .HasColumnType("varchar(500)")
                    .HasComment("设备ID集（以“，”隔开）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcpzCopy>(entity =>
            {
                entity.ToTable("glyjc_jcpz_copy");

                entity.HasComment("监测配置");

                entity.HasIndex(e => new { e.Sjcjfzrid, e.Lrfs })
                    .HasName("index_sjcjfzrid_lrfs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwid)
                    .HasColumnName("JCDXJTBWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwszbid)
                    .HasColumnName("JCDXJTBWSZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位所在表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbids)
                    .HasColumnName("SBIDS")
                    .HasColumnType("varchar(500)")
                    .HasComment("设备ID集（以“，”隔开）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcpzCopy1>(entity =>
            {
                entity.ToTable("glyjc_jcpz_copy1");

                entity.HasComment("监测配置");

                entity.HasIndex(e => new { e.Sjcjfzrid, e.Lrfs })
                    .HasName("index_sjcjfzrid_lrfs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwid)
                    .HasColumnName("JCDXJTBWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwszbid)
                    .HasColumnName("JCDXJTBWSZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位所在表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbids)
                    .HasColumnName("SBIDS")
                    .HasColumnType("varchar(500)")
                    .HasComment("设备ID集（以“，”隔开）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcpzCopy1223>(entity =>
            {
                entity.ToTable("glyjc_jcpz_copy1223");

                entity.HasComment("监测配置");

                entity.HasIndex(e => new { e.Sjcjfzrid, e.Lrfs })
                    .HasName("index_sjcjfzrid_lrfs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwid)
                    .HasColumnName("JCDXJTBWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwszbid)
                    .HasColumnName("JCDXJTBWSZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位所在表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbids)
                    .HasColumnName("SBIDS")
                    .HasColumnType("varchar(500)")
                    .HasComment("设备ID集（以“，”隔开）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcpzCopy1230更新jcdxid>(entity =>
            {
                entity.ToTable("glyjc_jcpz_copy1230更新jcdxid");

                entity.HasComment("监测配置");

                entity.HasIndex(e => new { e.Sjcjfzrid, e.Lrfs })
                    .HasName("index_sjcjfzrid_lrfs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwid)
                    .HasColumnName("JCDXJTBWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwszbid)
                    .HasColumnName("JCDXJTBWSZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位所在表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbids)
                    .HasColumnName("SBIDS")
                    .HasColumnType("varchar(500)")
                    .HasComment("设备ID集（以“，”隔开）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcpzCopy2>(entity =>
            {
                entity.ToTable("glyjc_jcpz_copy2");

                entity.HasComment("监测配置");

                entity.HasIndex(e => new { e.Sjcjfzrid, e.Lrfs })
                    .HasName("index_sjcjfzrid_lrfs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwid)
                    .HasColumnName("JCDXJTBWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwszbid)
                    .HasColumnName("JCDXJTBWSZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位所在表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbids)
                    .HasColumnName("SBIDS")
                    .HasColumnType("varchar(500)")
                    .HasComment("设备ID集（以“，”隔开）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcpzCopy20320>(entity =>
            {
                entity.ToTable("glyjc_jcpz_copy20320");

                entity.HasComment("监测配置");

                entity.HasIndex(e => new { e.Sjcjfzrid, e.Lrfs })
                    .HasName("index_sjcjfzrid_lrfs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwid)
                    .HasColumnName("JCDXJTBWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwszbid)
                    .HasColumnName("JCDXJTBWSZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位所在表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbids)
                    .HasColumnName("SBIDS")
                    .HasColumnType("varchar(500)")
                    .HasComment("设备ID集（以“，”隔开）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcpzCopy3>(entity =>
            {
                entity.ToTable("glyjc_jcpz_copy3");

                entity.HasComment("监测配置");

                entity.HasIndex(e => new { e.Sjcjfzrid, e.Lrfs })
                    .HasName("index_sjcjfzrid_lrfs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwid)
                    .HasColumnName("JCDXJTBWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwszbid)
                    .HasColumnName("JCDXJTBWSZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位所在表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbids)
                    .HasColumnName("SBIDS")
                    .HasColumnType("varchar(500)")
                    .HasComment("设备ID集（以“，”隔开）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcpzCopy4>(entity =>
            {
                entity.ToTable("glyjc_jcpz_copy4");

                entity.HasComment("监测配置");

                entity.HasIndex(e => new { e.Sjcjfzrid, e.Lrfs })
                    .HasName("index_sjcjfzrid_lrfs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwid)
                    .HasColumnName("JCDXJTBWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwszbid)
                    .HasColumnName("JCDXJTBWSZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位所在表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbids)
                    .HasColumnName("SBIDS")
                    .HasColumnType("varchar(500)")
                    .HasComment("设备ID集（以“，”隔开）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcpzCopy5>(entity =>
            {
                entity.ToTable("glyjc_jcpz_copy5");

                entity.HasComment("监测配置");

                entity.HasIndex(e => new { e.Sjcjfzrid, e.Lrfs })
                    .HasName("index_sjcjfzrid_lrfs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwid)
                    .HasColumnName("JCDXJTBWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwszbid)
                    .HasColumnName("JCDXJTBWSZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位所在表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbids)
                    .HasColumnName("SBIDS")
                    .HasColumnType("varchar(500)")
                    .HasComment("设备ID集（以“，”隔开）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcpzcopy6>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_jcpzcopy");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwid)
                    .HasColumnName("JCDXJTBWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwszbid)
                    .HasColumnName("JCDXJTBWSZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位所在表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbid)
                    .HasColumnName("SBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcpz换区域前1214>(entity =>
            {
                entity.ToTable("glyjc_jcpz换区域前1214");

                entity.HasComment("监测配置");

                entity.HasIndex(e => new { e.Sjcjfzrid, e.Lrfs })
                    .HasName("index_sjcjfzrid_lrfs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwid)
                    .HasColumnName("JCDXJTBWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwszbid)
                    .HasColumnName("JCDXJTBWSZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位所在表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbids)
                    .HasColumnName("SBIDS")
                    .HasColumnType("varchar(500)")
                    .HasComment("设备ID集（以“，”隔开）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJrjcjl>(entity =>
            {
                entity.ToTable("glyjc_jrjcjl");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("检测时间");

                entity.Property(e => e.Sfyyc)
                    .HasColumnName("SFYYC")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否有异常（0无，1有）");

                entity.Property(e => e.Sjlxid)
                    .HasColumnName("SJLXID")
                    .HasColumnType("int(10)")
                    .HasComment("数据类型ID");

                entity.Property(e => e.Sjlxname)
                    .HasColumnName("SJLXNAME")
                    .HasColumnType("varchar(200)")
                    .HasComment("数据类型名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Thzdz)
                    .HasColumnName("THZDZ")
                    .HasColumnType("varchar(100)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjzdmc)
                    .HasColumnName("TJZDMC")
                    .HasColumnType("varchar(100)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJrjcjlCopy>(entity =>
            {
                entity.ToTable("glyjc_jrjcjl_copy");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("检测时间");

                entity.Property(e => e.Sfyyc)
                    .HasColumnName("SFYYC")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否有异常（0无，1有）");

                entity.Property(e => e.Sjlxid)
                    .HasColumnName("SJLXID")
                    .HasColumnType("int(10)")
                    .HasComment("数据类型ID");

                entity.Property(e => e.Sjlxname)
                    .HasColumnName("SJLXNAME")
                    .HasColumnType("varchar(200)")
                    .HasComment("数据类型名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Thzdz)
                    .HasColumnName("THZDZ")
                    .HasColumnType("varchar(100)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjzdmc)
                    .HasColumnName("TJZDMC")
                    .HasColumnType("varchar(100)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJrycjl>(entity =>
            {
                entity.ToTable("glyjc_jrycjl");

                entity.HasIndex(e => e.Jcjlid)
                    .HasName("JCJLID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlid)
                    .HasColumnName("JCJLID")
                    .HasColumnType("varchar(50)")
                    .HasComment("检测记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("检测时间");

                entity.Property(e => e.Jrycsj)
                    .HasColumnName("JRYCSJ")
                    .HasColumnType("datetime")
                    .HasComment("接入异常时间");

                entity.Property(e => e.Jrzq)
                    .HasColumnName("JRZQ")
                    .HasColumnType("int(10)")
                    .HasComment("接入周期（秒）");

                entity.HasOne(d => d.Jcjl)
                    .WithMany(p => p.GlyjcJrycjl)
                    .HasForeignKey(d => d.Jcjlid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("glyjc_jrycjl_ibfk_1");
            });

            modelBuilder.Entity<GlyjcJzjcesj>(entity =>
            {
                entity.ToTable("glyjc_jzjcesj");

                entity.HasComment("界桩监测数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("基础数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ms)
                    .HasColumnName("MS")
                    .HasColumnType("varchar(50)")
                    .HasComment("描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估（有变化、无变化）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJzjcsj>(entity =>
            {
                entity.ToTable("glyjc_jzjcsj");

                entity.HasComment("界桩基础数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Jzfl)
                    .HasColumnName("JZFL")
                    .HasColumnType("varchar(50)")
                    .HasComment("界桩分类（遗产区界桩、缓冲区界桩）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzysfl)
                    .HasColumnName("JZYSFL")
                    .HasColumnType("varchar(50)")
                    .HasComment("界桩样式分类（柱桩、地面桩、海面浮标界桩）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzzp)
                    .HasColumnName("JZZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("基准照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ms)
                    .HasColumnName("MS")
                    .HasColumnType("varchar(100)")
                    .HasComment("描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(11)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");
            });

            modelBuilder.Entity<GlyjcKgbgxx>(entity =>
            {
                entity.ToTable("glyjc_kgbgxx");

                entity.HasComment("考古报告信息");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bxry)
                    .HasColumnName("BXRY")
                    .HasColumnType("varchar(50)")
                    .HasComment("编写人员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzdw)
                    .HasColumnName("BZDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cbdw)
                    .HasColumnName("CBDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("出版单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cbsj)
                    .HasColumnName("CBSJ")
                    .HasColumnType("datetime")
                    .HasComment("出版时间");

                entity.Property(e => e.Cbzt)
                    .HasColumnName("CBZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("出版状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Kgbgmc)
                    .HasColumnName("KGBGMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("考古报告名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xgwd)
                    .HasColumnName("XGWD")
                    .HasColumnType("varchar(50)")
                    .HasComment("相关文档")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcKgfjjl>(entity =>
            {
                entity.ToTable("glyjc_kgfjjl");

                entity.HasComment("考古发掘记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djcfj)
                    .HasColumnName("DJCFJ")
                    .HasColumnType("int(11)")
                    .HasComment("第几次发掘");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fjmj)
                    .HasColumnName("FJMJ")
                    .HasColumnType("int(11)")
                    .HasComment("发掘面积");

                entity.Property(e => e.Htmj)
                    .HasColumnName("HTMJ")
                    .HasColumnType("int(11)")
                    .HasComment("回填面积");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasColumnType("double(20,8)");

                entity.Property(e => e.Jftrze)
                    .HasColumnName("JFTRZE")
                    .HasColumnType("int(11)")
                    .HasComment("经费投入总额");

                entity.Property(e => e.Jssj)
                    .HasColumnName("JSSJ")
                    .HasColumnType("datetime")
                    .HasComment("结束时间");

                entity.Property(e => e.Kssj)
                    .HasColumnName("KSSJ")
                    .HasColumnType("datetime")
                    .HasComment("开始时间");

                entity.Property(e => e.Pzfjmj)
                    .HasColumnName("PZFJMJ")
                    .HasColumnType("int(11)")
                    .HasComment("批准发掘面积");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasColumnType("double(20,8)");

                entity.Property(e => e.Wwbmpzwh)
                    .HasColumnName("WWBMPZWH")
                    .HasColumnType("varchar(50)")
                    .HasComment("文物部门批准文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("XMMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yfbdjb)
                    .HasColumnName("YFBDJB")
                    .HasColumnType("varchar(500)")
                    .HasComment("已发表的简报")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yyfjxcbhdjf)
                    .HasColumnName("YYFJXCBHDJF")
                    .HasColumnType("int(11)")
                    .HasComment("用于发掘现场保护的经费");
            });

            modelBuilder.Entity<GlyjcKgfjxczp>(entity =>
            {
                entity.ToTable("glyjc_kgfjxczp");

                entity.HasComment("考古发掘现场照片");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrq)
                    .HasColumnName("CJRQ")
                    .HasColumnType("datetime")
                    .HasComment("采集日期");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfwg)
                    .HasColumnName("SFWG")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否完工")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjwgsj)
                    .HasColumnName("SJWGSJ")
                    .HasColumnType("datetime")
                    .HasComment("实际完工时间");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xmid)
                    .HasColumnName("XMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zplj)
                    .HasColumnName("ZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcKgfjxczpKgfjjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("glyjc_kgfjxczp_kgfjjl");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrq)
                    .HasColumnName("CJRQ")
                    .HasColumnType("datetime")
                    .HasComment("采集日期");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfwg)
                    .HasColumnName("SFWG")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否完工")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjwgsj)
                    .HasColumnName("SJWGSJ")
                    .HasColumnType("datetime")
                    .HasComment("实际完工时间");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xmid)
                    .HasColumnName("XMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("XMMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zplj)
                    .HasColumnName("ZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcKlgfsdxczp>(entity =>
            {
                entity.ToTable("glyjc_klgfsdxczp");

                entity.HasComment("客流高峰时段现场照片");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Lyjd)
                    .HasColumnName("LYJD")
                    .HasColumnType("varchar(50)")
                    .HasComment("旅游景点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zplj)
                    .HasColumnName("ZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcKqzl>(entity =>
            {
                entity.ToTable("glyjc_kqzl");

                entity.HasComment("空气质量");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aqi).HasColumnName("AQI");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sj)
                    .HasColumnName("SJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Sywrw)
                    .HasColumnName("SYWRW")
                    .HasColumnType("varchar(50)")
                    .HasComment("首要污染物")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcLdt>(entity =>
            {
                entity.ToTable("glyjc_ldt");

                entity.HasComment("雷达图");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(20)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Ldttp)
                    .HasColumnName("LDTTP")
                    .HasColumnType("varchar(200)")
                    .HasComment("雷达图图片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sj)
                    .HasColumnName("SJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcLfSzl>(entity =>
            {
                entity.ToTable("glyjc_lf_szl");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Kd)
                    .HasColumnName("KD")
                    .HasColumnType("int(11)")
                    .HasComment("宽度(单位mm)");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcLfSzlBhdcjcgzqkjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("glyjc_lf_szl_bhdcjcgzqkjl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhmc)
                    .HasColumnName("BHMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Kd)
                    .HasColumnName("KD")
                    .HasColumnType("int(11)")
                    .HasComment("宽度(单位mm)");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcLfWdl>(entity =>
            {
                entity.ToTable("glyjc_lf_wdl");

                entity.HasComment("裂缝");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(1000)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcrq)
                    .HasColumnName("DCRQ")
                    .HasColumnType("datetime")
                    .HasComment("调查日期");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcpzfaid)
                    .HasColumnName("JCPZFAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置方案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lfcd)
                    .HasColumnName("LFCD")
                    .HasComment("裂缝长度");

                entity.Property(e => e.Lfkd)
                    .HasColumnName("LFKD")
                    .HasComment("裂缝宽度");

                entity.Property(e => e.Lfkkfw)
                    .HasColumnName("LFKKFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("裂缝开口方位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lfmxt)
                    .HasColumnName("LFMXT")
                    .HasColumnType("varchar(50)")
                    .HasComment("裂缝面形态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lfsd)
                    .HasColumnName("LFSD")
                    .HasComment("裂缝深度");

                entity.Property(e => e.Lxctqk)
                    .HasColumnName("LXCTQK")
                    .HasColumnType("varchar(500)")
                    .HasComment("裂隙充填情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcLfWdlBhdcjcgzqkjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("glyjc_lf_wdl_bhdcjcgzqkjl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhmc)
                    .HasColumnName("BHMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(1000)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcrq)
                    .HasColumnName("DCRQ")
                    .HasColumnType("datetime")
                    .HasComment("调查日期");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzfaid)
                    .HasColumnName("JCPZFAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置方案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lfcd)
                    .HasColumnName("LFCD")
                    .HasComment("裂缝长度");

                entity.Property(e => e.Lfkd)
                    .HasColumnName("LFKD")
                    .HasComment("裂缝宽度");

                entity.Property(e => e.Lfkkfw)
                    .HasColumnName("LFKKFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("裂缝开口方位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lfmxt)
                    .HasColumnName("LFMXT")
                    .HasColumnType("varchar(50)")
                    .HasComment("裂缝面形态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lfsd)
                    .HasColumnName("LFSD")
                    .HasComment("裂缝深度");

                entity.Property(e => e.Lxctqk)
                    .HasColumnName("LXCTQK")
                    .HasColumnType("varchar(500)")
                    .HasComment("裂隙充填情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcLsdljcjl>(entity =>
            {
                entity.ToTable("glyjc_lsdljcjl");

                entity.HasComment("历史道路监测记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlkdbhqk)
                    .HasColumnName("DLKDBHQK")
                    .HasColumnType("varchar(50)")
                    .HasComment("道路宽度变化情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlpz)
                    .HasColumnName("DLPZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("道路铺装")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlzplj)
                    .HasColumnName("DLZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("道路照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlzpmc)
                    .HasColumnName("DLZPMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("道路照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ldmc)
                    .HasColumnName("LDMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("路段名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qtcz)
                    .HasColumnName("QTCZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("墙体材质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qtys)
                    .HasColumnName("QTYS")
                    .HasColumnType("varchar(50)")
                    .HasComment("墙体颜色")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Szdl)
                    .HasColumnName("SZDL")
                    .HasColumnType("varchar(50)")
                    .HasComment("所在道路")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Szhx)
                    .HasColumnName("SZHX")
                    .HasColumnType("varchar(50)")
                    .HasComment("所在环线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrq)
                    .HasColumnName("TXRQ")
                    .HasColumnType("datetime")
                    .HasComment("填写日期");

                entity.Property(e => e.Wqcd)
                    .HasColumnName("WQCD")
                    .HasComment("围墙长度");

                entity.Property(e => e.Wqcdbhqk)
                    .HasColumnName("WQCDBHQK")
                    .HasColumnType("varchar(50)")
                    .HasComment("围墙长度变化情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wqgd)
                    .HasColumnName("WQGD")
                    .HasComment("围墙高度");

                entity.Property(e => e.Wqgdbhqk)
                    .HasColumnName("WQGDBHQK")
                    .HasColumnType("varchar(50)")
                    .HasComment("围墙高度变化情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wqwzbh)
                    .HasColumnName("WQWZBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("围墙位置变化")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wqydlgkb)
                    .HasColumnName("WQYDLGKB")
                    .HasColumnType("varchar(50)")
                    .HasComment("围墙与道路高宽比")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcMjlyjyzsz>(entity =>
            {
                entity.ToTable("glyjc_mjlyjyzsz");

                entity.HasComment("枚举类预警阈值设置");

                entity.HasIndex(e => e.Yjpzfaid)
                    .HasName("FK_YJPZFAID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Mjz)
                    .HasColumnName("MJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("枚举值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yjdj)
                    .HasColumnName("YJDJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjpzfaid)
                    .HasColumnName("YJPZFAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警配置方案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Yjpzfa)
                    .WithMany(p => p.GlyjcMjlyjyzsz)
                    .HasForeignKey(d => d.Yjpzfaid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_YJPZFAID");
            });

            modelBuilder.Entity<GlyjcMjzb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_mjzb");

                entity.HasComment("枚举值表");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(50)")
                    .HasComment("编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.BmcYw)
                    .HasColumnName("BMC_YW")
                    .HasColumnType("varchar(50)")
                    .HasComment("表名称（英文）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.BmcZw)
                    .HasColumnName("BMC_ZW")
                    .HasColumnType("varchar(50)")
                    .HasComment("表名称（中文）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mjx)
                    .HasColumnName("MJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("枚举项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pxbm)
                    .HasColumnName("PXBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("排序编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ZdYw)
                    .HasColumnName("ZD_YW")
                    .HasColumnType("varchar(50)")
                    .HasComment("字段（英文）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ZdZw)
                    .HasColumnName("ZD_ZW")
                    .HasColumnType("varchar(50)")
                    .HasComment("字段（中文）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcQt>(entity =>
            {
                entity.ToTable("glyjc_qt");

                entity.HasComment("其他");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcQtxggh>(entity =>
            {
                entity.ToTable("glyjc_qtxggh");

                entity.HasComment("其他相关规划");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzdw)
                    .HasColumnName("BZDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Ghqx)
                    .HasColumnName("GHQX")
                    .HasColumnType("varchar(50)")
                    .HasComment("规划期限")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zzbzdw)
                    .HasColumnName("ZZBZDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("组织编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcQtzp>(entity =>
            {
                entity.ToTable("glyjc_qtzp");

                entity.HasComment("其他照片");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yxfj)
                    .HasColumnName("YXFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("影像附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcQx>(entity =>
            {
                entity.ToTable("glyjc_qx");

                entity.HasComment("气象");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fl)
                    .HasColumnName("FL")
                    .HasColumnType("int(11)")
                    .HasComment("风力");

                entity.Property(e => e.Fs)
                    .HasColumnName("FS")
                    .HasComment("风速");

                entity.Property(e => e.Fx)
                    .HasColumnName("FX")
                    .HasColumnType("int(11)")
                    .HasComment("风向");

                entity.Property(e => e.Jyl)
                    .HasColumnName("JYL")
                    .HasColumnType("int(11)")
                    .HasComment("降雨量");

                entity.Property(e => e.Qw)
                    .HasColumnName("QW")
                    .HasColumnType("int(11)")
                    .HasComment("气温");

                entity.Property(e => e.Sd)
                    .HasColumnName("SD")
                    .HasColumnType("int(11)")
                    .HasComment("湿度");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sj)
                    .HasColumnName("SJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcRcxcjl>(entity =>
            {
                entity.ToTable("glyjc_rcxcjl");

                entity.HasComment("日常巡查记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xcddwz)
                    .HasColumnName("XCDDWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查地点（位置）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcddycd)
                    .HasColumnName("XCDDYCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查地点（遗产点）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcqkmsfsycqkms)
                    .HasColumnName("XCQKMSFSYCQKMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("巡查情况描述-情况描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcqkmsxclx)
                    .HasColumnName("XCQKMSXCLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查情况描述-巡查路线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcsj)
                    .HasColumnName("XCSJ")
                    .HasColumnType("datetime")
                    .HasComment("巡查时间");

                entity.Property(e => e.Xcy)
                    .HasColumnName("XCY")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yczplj)
                    .HasColumnName("YCZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("异常照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yczpmc)
                    .HasColumnName("YCZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("异常照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcRcxcjl1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_rcxcjl1");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xcddwz)
                    .HasColumnName("XCDDWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查地点（位置）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcddycd)
                    .HasColumnName("XCDDYCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查地点（遗产点）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcqkmsfsycqkms)
                    .HasColumnName("XCQKMSFSYCQKMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("巡查情况描述-发生异常情况描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcqkmssffxycqk)
                    .HasColumnName("XCQKMSSFFXYCQK")
                    .HasColumnType("tinyint(4)")
                    .HasComment("巡查情况描述-是否发现异常情况");

                entity.Property(e => e.Xcqkmsxclx)
                    .HasColumnName("XCQKMSXCLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查情况描述-巡查路线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcsj)
                    .HasColumnName("XCSJ")
                    .HasColumnType("datetime")
                    .HasComment("巡查时间");

                entity.Property(e => e.Xcy)
                    .HasColumnName("XCY")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yczplj)
                    .HasColumnName("YCZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("异常照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yczpmc)
                    .HasColumnName("YCZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("异常照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcRcxcyccl>(entity =>
            {
                entity.ToTable("glyjc_rcxcyccl");

                entity.HasComment("日常巡查异常处理表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Czsj)
                    .HasColumnName("CZSJ")
                    .HasColumnType("datetime")
                    .HasComment("处置时间");

                entity.Property(e => e.Dbzp)
                    .HasColumnName("DBZP")
                    .HasColumnType("varchar(100)")
                    .HasComment("对比照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fh)
                    .HasColumnName("FH")
                    .HasColumnType("varchar(100)")
                    .HasComment("发函")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fksj)
                    .HasColumnName("FKSJ")
                    .HasColumnType("datetime")
                    .HasComment("反馈时间");

                entity.Property(e => e.Hh)
                    .HasColumnName("HH")
                    .HasColumnType("varchar(100)")
                    .HasComment("回函")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzzp)
                    .HasColumnName("JZZP")
                    .HasColumnType("varchar(100)")
                    .HasComment("基准照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wtms)
                    .HasColumnName("WTMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("问题描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycjl)
                    .HasColumnName("YCJL")
                    .HasColumnType("varchar(100)")
                    .HasComment("异常记录")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcRcxcycjl>(entity =>
            {
                entity.ToTable("glyjc_rcxcycjl");

                entity.HasComment("日常巡查异常记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dscqdcs)
                    .HasColumnName("DSCQDCS")
                    .HasColumnType("varchar(500)")
                    .HasComment("当时采取的措施")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fswzwz)
                    .HasColumnName("FSWZWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生地点（位置）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fswzycd)
                    .HasColumnName("FSWZYCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生地点（遗产点）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jchzp)
                    .HasColumnName("JCHZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("解除后照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("解除时间");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjcjfs)
                    .HasColumnName("SJCJFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjms)
                    .HasColumnName("SJMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("事件描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Xcrq)
                    .HasColumnName("XCRQ")
                    .HasColumnType("datetime")
                    .HasComment("巡查日期");

                entity.Property(e => e.Xcy)
                    .HasColumnName("XCY")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yclx)
                    .HasColumnName("YCLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("异常类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycsfjc)
                    .HasColumnName("YCSFJC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("异常是否解除")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycsj)
                    .HasColumnName("YCSJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("异常事件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcRcxcycjl0318>(entity =>
            {
                entity.ToTable("glyjc_rcxcycjl_0318");

                entity.HasComment("日常巡查异常记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dscqdcs)
                    .HasColumnName("DSCQDCS")
                    .HasColumnType("varchar(500)")
                    .HasComment("当时采取的措施")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fswzwz)
                    .HasColumnName("FSWZWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生地点（位置）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fswzycd)
                    .HasColumnName("FSWZYCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生地点（遗产点）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jchzp)
                    .HasColumnName("JCHZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("解除后照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("解除时间");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjcjfs)
                    .HasColumnName("SJCJFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjms)
                    .HasColumnName("SJMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("事件描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Xcrq)
                    .HasColumnName("XCRQ")
                    .HasColumnType("datetime")
                    .HasComment("巡查日期");

                entity.Property(e => e.Xcy)
                    .HasColumnName("XCY")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yclx)
                    .HasColumnName("YCLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("异常类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycsfjc)
                    .HasColumnName("YCSFJC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("异常是否解除")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycsj)
                    .HasColumnName("YCSJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("异常事件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcRcxcycjl0725>(entity =>
            {
                entity.ToTable("glyjc_rcxcycjl_0725");

                entity.HasComment("日常巡查异常记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dscqdcs)
                    .HasColumnName("DSCQDCS")
                    .HasColumnType("varchar(500)")
                    .HasComment("当时采取的措施")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fswzwz)
                    .HasColumnName("FSWZWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生地点（位置）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fswzycd)
                    .HasColumnName("FSWZYCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生地点（遗产点）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jchzp)
                    .HasColumnName("JCHZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("解除后照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("解除时间");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjcjfs)
                    .HasColumnName("SJCJFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjms)
                    .HasColumnName("SJMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("事件描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Xcrq)
                    .HasColumnName("XCRQ")
                    .HasColumnType("datetime")
                    .HasComment("巡查日期");

                entity.Property(e => e.Xcy)
                    .HasColumnName("XCY")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yclx)
                    .HasColumnName("YCLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("异常类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycsfjc)
                    .HasColumnName("YCSFJC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("异常是否解除")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycsj)
                    .HasColumnName("YCSJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("异常事件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcRcxcycjl1009>(entity =>
            {
                entity.ToTable("glyjc_rcxcycjl_1009");

                entity.HasComment("日常巡查异常记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dscqdcs)
                    .HasColumnName("DSCQDCS")
                    .HasColumnType("varchar(500)")
                    .HasComment("当时采取的措施")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fswzwz)
                    .HasColumnName("FSWZWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生地点（位置）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fswzycd)
                    .HasColumnName("FSWZYCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生地点（遗产点）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jchzp)
                    .HasColumnName("JCHZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("解除后照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("解除时间");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjcjfs)
                    .HasColumnName("SJCJFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjms)
                    .HasColumnName("SJMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("事件描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Xcrq)
                    .HasColumnName("XCRQ")
                    .HasColumnType("datetime")
                    .HasComment("巡查日期");

                entity.Property(e => e.Xcy)
                    .HasColumnName("XCY")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycsfjc)
                    .HasColumnName("YCSFJC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("异常是否解除")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycsj)
                    .HasColumnName("YCSJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("异常事件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcRcxcycjl1014>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_rcxcycjl1014");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dscqdcs)
                    .HasColumnName("DSCQDCS")
                    .HasColumnType("varchar(500)")
                    .HasComment("当时采取的措施")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fswzwz)
                    .HasColumnName("FSWZWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生地点（位置）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fswzycd)
                    .HasColumnName("FSWZYCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生地点（遗产点）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jchzp)
                    .HasColumnName("JCHZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("解除后照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("解除时间");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjcjfs)
                    .HasColumnName("SJCJFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjms)
                    .HasColumnName("SJMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("事件描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Xcrq)
                    .HasColumnName("XCRQ")
                    .HasColumnType("datetime")
                    .HasComment("巡查日期");

                entity.Property(e => e.Xcy)
                    .HasColumnName("XCY")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yclx)
                    .HasColumnName("YCLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("异常类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycsfjc)
                    .HasColumnName("YCSFJC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("异常是否解除")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycsj)
                    .HasColumnName("YCSJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("异常事件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcRcxcycjl1016>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_rcxcycjl1016");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dscqdcs)
                    .HasColumnName("DSCQDCS")
                    .HasColumnType("varchar(500)")
                    .HasComment("当时采取的措施")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fswzwz)
                    .HasColumnName("FSWZWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生地点（位置）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fswzycd)
                    .HasColumnName("FSWZYCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生地点（遗产点）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jchzp)
                    .HasColumnName("JCHZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("解除后照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("解除时间");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjcjfs)
                    .HasColumnName("SJCJFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjms)
                    .HasColumnName("SJMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("事件描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Xcrq)
                    .HasColumnName("XCRQ")
                    .HasColumnType("datetime")
                    .HasComment("巡查日期");

                entity.Property(e => e.Xcy)
                    .HasColumnName("XCY")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yclx)
                    .HasColumnName("YCLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("异常类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycsfjc)
                    .HasColumnName("YCSFJC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("异常是否解除")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycsj)
                    .HasColumnName("YCSJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("异常事件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcRwb>(entity =>
            {
                entity.ToTable("glyjc_rwb");

                entity.HasComment("任务表");

                entity.HasIndex(e => e.Cjsj)
                    .HasName("index_rwb");

                entity.HasIndex(e => e.Jcpzfaid)
                    .HasName("FK_GLYJC_RWB");

                entity.HasIndex(e => e.Rwjssj)
                    .HasName("index_rwjssj");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Jcpzfaid)
                    .HasColumnName("JCPZFAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置方案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwjssj)
                    .HasColumnName("RWJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("任务结束时间");

                entity.Property(e => e.Rwkssj)
                    .HasColumnName("RWKSSJ")
                    .HasColumnType("datetime")
                    .HasComment("任务开始时间");

                entity.Property(e => e.Rwmc)
                    .HasColumnName("RWMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("任务名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwzt)
                    .HasColumnName("RWZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzt)
                    .HasColumnName("SJZT")
                    .HasColumnType("varchar(20)")
                    .HasComment("数据状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Jcpzfa)
                    .WithMany(p => p.GlyjcRwb)
                    .HasForeignKey(d => d.Jcpzfaid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_GLYJC_RWB");
            });

            modelBuilder.Entity<GlyjcRwbCopy20200320>(entity =>
            {
                entity.ToTable("glyjc_rwb_copy20200320");

                entity.HasComment("任务表");

                entity.HasIndex(e => e.Cjsj)
                    .HasName("index_rwb");

                entity.HasIndex(e => e.Jcpzfaid)
                    .HasName("FK_GLYJC_RWB");

                entity.HasIndex(e => e.Rwjssj)
                    .HasName("index_rwjssj");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Jcpzfaid)
                    .HasColumnName("JCPZFAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置方案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwjssj)
                    .HasColumnName("RWJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("任务结束时间");

                entity.Property(e => e.Rwkssj)
                    .HasColumnName("RWKSSJ")
                    .HasColumnType("datetime")
                    .HasComment("任务开始时间");

                entity.Property(e => e.Rwmc)
                    .HasColumnName("RWMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("任务名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwzt)
                    .HasColumnName("RWZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzt)
                    .HasColumnName("SJZT")
                    .HasColumnType("varchar(20)")
                    .HasComment("数据状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Jcpzfa)
                    .WithMany(p => p.GlyjcRwbCopy20200320)
                    .HasForeignKey(d => d.Jcpzfaid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("glyjc_rwb_copy20200320_ibfk_1");
            });

            modelBuilder.Entity<GlyjcRykrlxzz>(entity =>
            {
                entity.ToTable("glyjc_rykrlxzz");

                entity.HasComment("日游客容量限制值");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcdx)
                    .HasColumnName("JCDX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rykrlxzz)
                    .HasColumnName("RYKRLXZZ")
                    .HasColumnType("int(11)")
                    .HasComment("日游客容量限制值");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcSblx>(entity =>
            {
                entity.ToTable("glyjc_sblx");

                entity.HasComment("设备类型");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzsm)
                    .HasColumnName("BZSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fl)
                    .HasColumnName("FL")
                    .HasColumnType("varchar(50)")
                    .HasComment("分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gg)
                    .HasColumnName("GG")
                    .HasColumnType("varchar(50)")
                    .HasComment("规格")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jksm)
                    .HasColumnName("JKSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("接口说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbcs)
                    .HasColumnName("SBCS")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备厂商")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbtp)
                    .HasColumnName("SBTP")
                    .HasColumnType("varchar(200)")
                    .HasComment("设备图片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yljj)
                    .HasColumnName("YLJJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("原理简介")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcSbqd>(entity =>
            {
                entity.ToTable("glyjc_sbqd");

                entity.HasComment("设备清单");

                entity.HasIndex(e => e.Id)
                    .HasName("ID");

                entity.HasIndex(e => e.Lx)
                    .HasName("FK_glyjc_sbqd");

                entity.HasIndex(e => e.Sbbh)
                    .HasName("SBBH");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Azdjd)
                    .HasColumnName("AZDJD")
                    .HasComment("安装点经度");

                entity.Property(e => e.Azdszycdid)
                    .HasColumnName("AZDSZYCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("安装点所在遗产点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Azdwd)
                    .HasColumnName("AZDWD")
                    .HasComment("安装点纬度");

                entity.Property(e => e.Azdwzms)
                    .HasColumnName("AZDWZMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("安装点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bcjcdxid)
                    .HasColumnName("BCJCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("补充监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzsm)
                    .HasColumnName("BZSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cgrq)
                    .HasColumnName("CGRQ")
                    .HasColumnType("datetime")
                    .HasComment("采购日期");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fzr)
                    .HasColumnName("FZR")
                    .HasColumnType("varchar(50)")
                    .HasComment("负责人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbbh)
                    .HasColumnName("SBBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbmc)
                    .HasColumnName("SBMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.HasOne(d => d.LxNavigation)
                    .WithMany(p => p.GlyjcSbqd)
                    .HasForeignKey(d => d.Lx)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_glyjc_sbqd");
            });

            modelBuilder.Entity<GlyjcShrzb>(entity =>
            {
                entity.ToTable("glyjc_shrzb");

                entity.HasComment("审核日志表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.BmcYw)
                    .HasColumnName("BMC_YW")
                    .HasColumnType("varchar(50)")
                    .HasComment("表名称（英文）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Shrz)
                    .HasColumnName("SHRZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核日志")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzjid)
                    .HasColumnName("SJZJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcSlWdl>(entity =>
            {
                entity.ToTable("glyjc_sl_wdl");

                entity.HasComment("渗漏病害(文档类)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("'0000-00-00 00:00:00'")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scjysj)
                    .HasColumnName("SCJYSJ")
                    .HasColumnType("datetime")
                    .HasComment("上次降雨时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Slmj)
                    .HasColumnName("SLMJ")
                    .HasComment("渗漏面积");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcSlWdlBhdcjcgzqkjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("glyjc_sl_wdl_bhdcjcgzqkjl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhmc)
                    .HasColumnName("BHMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("'0000-00-00 00:00:00'")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scjysj)
                    .HasColumnName("SCJYSJ")
                    .HasColumnType("datetime")
                    .HasComment("上次降雨时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Slmj)
                    .HasColumnName("SLMJ")
                    .HasComment("渗漏面积");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcSlxx>(entity =>
            {
                entity.ToTable("glyjc_slxx");

                entity.HasComment("水利信息");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Hsycsj)
                    .HasColumnName("HSYCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("海水异常数据")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Phz)
                    .HasColumnName("PHZ")
                    .HasComment("PH值");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Swei)
                    .HasColumnName("SWEI")
                    .HasComment("水位");

                entity.Property(e => e.Swen)
                    .HasColumnName("SWEN")
                    .HasColumnType("int(11)")
                    .HasComment("水温");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yd)
                    .HasColumnName("YD")
                    .HasComment("盐度");
            });

            modelBuilder.Entity<GlyjcSpwySzl>(entity =>
            {
                entity.ToTable("glyjc_spwy_szl");

                entity.HasComment("水平位移数值类");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcrq)
                    .HasColumnName("DCRQ")
                    .HasColumnType("datetime")
                    .HasComment("调查日期");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcpzfaid)
                    .HasColumnName("JCPZFAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置方案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Spwyz)
                    .HasColumnName("SPWYZ")
                    .HasComment("水平位移值");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcSsykcd>(entity =>
            {
                entity.ToTable("glyjc_ssykcd");

                entity.HasComment("瞬时游客程度");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jdmc)
                    .HasColumnName("JDMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("景点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("审核状态");

                entity.Property(e => e.Ssykcd)
                    .HasColumnName("SSYKCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("瞬时游客程度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcSsykrlxzz>(entity =>
            {
                entity.ToTable("glyjc_ssykrlxzz");

                entity.HasComment("瞬时游客容量限制值");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcdx)
                    .HasColumnName("JCDX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Ssykrlxzz)
                    .HasColumnName("SSYKRLXZZ")
                    .HasColumnType("int(11)")
                    .HasComment("瞬时游客容量限制值");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcStbczk>(entity =>
            {
                entity.ToTable("glyjc_stbczk");

                entity.HasComment("山体保存状况");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcdx)
                    .HasColumnName("JCDX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sj)
                    .HasColumnName("SJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Stbhqk)
                    .HasColumnName("STBHQK")
                    .HasColumnType("varchar(50)")
                    .HasComment("山体变化情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tp)
                    .HasColumnName("TP")
                    .HasColumnType("varchar(200)")
                    .HasComment("图片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcStyycystjxzpjjl>(entity =>
            {
                entity.ToTable("glyjc_styycystjxzpjjl");

                entity.HasComment("山体与遗产要素天际线照片及记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdms)
                    .HasColumnName("BDMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("变动描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrq)
                    .HasColumnName("TXRQ")
                    .HasColumnType("datetime")
                    .HasComment("填写日期");

                entity.Property(e => e.Xzsffsbd)
                    .HasColumnName("XZSFFSBD")
                    .HasColumnType("varchar(50)")
                    .HasComment("现状是否发生变动")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zplj)
                    .HasColumnName("ZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zxmc)
                    .HasColumnName("ZXMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("轴线名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcSwWdl>(entity =>
            {
                entity.ToTable("glyjc_sw_wdl");

                entity.HasComment("生物病害(文档类)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cd)
                    .HasColumnName("CD")
                    .HasComment("长度");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Kd)
                    .HasColumnName("KD")
                    .HasComment("宽度");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Swbhmj)
                    .HasColumnName("SWBHMJ")
                    .HasComment("生物病害面积");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcSyda>(entity =>
            {
                entity.ToTable("glyjc_syda");

                entity.HasComment("四有档案");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcSygnbhjltjbhjl>(entity =>
            {
                entity.ToTable("glyjc_sygnbhjltjbhjl");

                entity.HasComment("使用功能变化记录图及变化记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasComment("ONLYID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qksm)
                    .HasColumnName("QKSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("情况说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(50)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sygnbhturl)
                    .HasColumnName("SYGNBHTURL")
                    .HasColumnType("varchar(200)")
                    .HasComment("使用功能变化图URL")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcSygnjzt>(entity =>
            {
                entity.ToTable("glyjc_sygnjzt");

                entity.HasComment("使用功能基准图");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Code)
                    .HasColumnName("Code_")
                    .HasColumnType("varchar(6)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.FuncPrest)
                    .HasColumnName("Func_Prest")
                    .HasColumnType("varchar(12)")
                    .HasComment("使用功能类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Health)
                    .HasColumnType("varchar(8)")
                    .HasComment("安全等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.NameCn)
                    .HasColumnName("Name_cn")
                    .HasColumnType("varchar(16)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.OnlyId)
                    .HasColumnName("OnlyID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qksm)
                    .HasColumnName("QKSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("情况说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(200)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sygnjzturl)
                    .HasColumnName("SYGNJZTURL")
                    .HasColumnType("varchar(200)")
                    .HasComment("使用功能基准图URL")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ywid)
                    .IsRequired()
                    .HasColumnName("YWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcSywb>(entity =>
            {
                entity.ToTable("glyjc_sywb");

                entity.HasComment("申遗文本");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcSz>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_sz");

                entity.HasComment("水质");

                entity.Property(e => e.Bod).HasColumnName("BOD");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cod).HasColumnName("COD");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sj)
                    .HasColumnName("SJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcSzjl>(entity =>
            {
                entity.ToTable("glyjc_szjl");

                entity.HasComment("受灾记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fssj)
                    .HasColumnName("FSSJ")
                    .HasColumnType("datetime")
                    .HasComment("发生时间");

                entity.Property(e => e.Jzjftrze)
                    .HasColumnName("JZJFTRZE")
                    .HasColumnType("int(20)")
                    .HasComment("救灾经费投入总额");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Szqkms)
                    .HasColumnName("SZQKMS")
                    .HasColumnType("varchar(1000)")
                    .HasComment("受灾情况描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wwzscd)
                    .HasColumnName("WWZSCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("文物灾损程度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zhlx)
                    .HasColumnName("ZHLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("灾害类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqcqdffcs)
                    .HasColumnName("ZQCQDFFCS")
                    .HasColumnType("varchar(500)")
                    .HasComment("灾前采取的防范措施")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zrhjjcjlbh)
                    .HasColumnName("ZRHJJCJLBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("自然环境监测记录编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcSzlyjyzsz>(entity =>
            {
                entity.ToTable("glyjc_szlyjyzsz");

                entity.HasComment("数值类预警阈值设置");

                entity.HasIndex(e => e.Yjpzfaid)
                    .HasName("FK_szlyjyzsz_YJPZFAID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ljyjlx)
                    .HasColumnName("LJYJLX")
                    .HasColumnType("varchar(200)")
                    .HasComment("累计预警类型（沉降或变形）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yjdj)
                    .HasColumnName("YJDJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjpzfaid)
                    .HasColumnName("YJPZFAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警配置方案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yzdz)
                    .HasColumnName("YZDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("阈值大值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yzxz)
                    .HasColumnName("YZXZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("阈值小值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Yjpzfa)
                    .WithMany(p => p.GlyjcSzlyjyzsz)
                    .HasForeignKey(d => d.Yjpzfaid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_szlyjyzsz_YJPZFAID");
            });

            modelBuilder.Entity<GlyjcTcpbjzSouvSmcl>(entity =>
            {
                entity.ToTable("glyjc_tcpbjz_souv_smcl");

                entity.HasComment("突出普遍价值（SOUV）声明材料");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.CnsmcldsjNf)
                    .HasColumnName("CNSMCLDSJ_NF")
                    .HasColumnType("datetime")
                    .HasComment("采纳声明材料的时间（年份）");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcTdlyght>(entity =>
            {
                entity.ToTable("glyjc_tdlyght");

                entity.HasComment("土地利用规划图");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tdlyghturl)
                    .HasColumnName("TDLYGHTURL")
                    .HasColumnType("varchar(299)")
                    .HasComment("土地利用规划图URL")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcTdlyxzt>(entity =>
            {
                entity.ToTable("glyjc_tdlyxzt");

                entity.HasComment("土地利用现状图");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Area)
                    .HasColumnName("AREA")
                    .HasColumnType("double(100,0)")
                    .HasComment("面积");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nd)
                    .HasColumnName("ND")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tdlyxz)
                    .HasColumnName("TDLYXZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("土地利用性质 ")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tdlyxzturl)
                    .HasColumnName("TDLYXZTURL")
                    .HasColumnType("varchar(200)")
                    .HasComment("土地利用现状图URL")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ydlx)
                    .HasColumnName("YDLX")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcTdlyxztbhjl>(entity =>
            {
                entity.ToTable("glyjc_tdlyxztbhjl");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(40)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("text")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Year)
                    .HasColumnName("YEAR")
                    .HasColumnType("varchar(20)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcTdlyxztndjl>(entity =>
            {
                entity.ToTable("glyjc_tdlyxztndjl");

                entity.HasComment("土地利用现状图年度记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(200)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Url)
                    .HasColumnName("URL")
                    .HasColumnType("varchar(299)")
                    .HasComment("土地利用现状图URL")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcTf>(entity =>
            {
                entity.ToTable("glyjc_tf");

                entity.HasComment("台风");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bh)
                    .HasColumnName("BH")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dldd)
                    .HasColumnName("DLDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("登陆地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fqbj)
                    .HasColumnName("FQBJ")
                    .HasColumnType("int(11)")
                    .HasComment("风圈半径");

                entity.Property(e => e.Fssj)
                    .HasColumnName("FSSJ")
                    .HasColumnType("datetime")
                    .HasComment("发生时间");

                entity.Property(e => e.Lj)
                    .HasColumnName("LJ")
                    .HasColumnType("varchar(2000)")
                    .HasComment("路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qd)
                    .HasColumnName("QD")
                    .HasColumnType("varchar(50)")
                    .HasComment("强度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qy)
                    .HasColumnName("QY")
                    .HasColumnType("int(11)")
                    .HasComment("气压");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sj)
                    .HasColumnName("SJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ydfx)
                    .HasColumnName("YDFX")
                    .HasColumnType("varchar(50)")
                    .HasComment("移动方向")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydfxyc)
                    .HasColumnName("YDFXYC")
                    .HasColumnType("varchar(50)")
                    .HasComment("移动方向预测")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydsd)
                    .HasColumnName("YDSD")
                    .HasColumnType("int(11)")
                    .HasComment("移动速度");

                entity.Property(e => e.Ywmc)
                    .HasColumnName("YWMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("英文名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zwmc)
                    .HasColumnName("ZWMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("中文名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zxfl)
                    .HasColumnName("ZXFL")
                    .HasComment("中心风力");

                entity.Property(e => e.Zxwzjd)
                    .HasColumnName("ZXWZJD")
                    .HasComment("中心位置经度");

                entity.Property(e => e.Zxwzwd)
                    .HasColumnName("ZXWZWD")
                    .HasComment("中心位置纬度");
            });

            modelBuilder.Entity<GlyjcTlWdl>(entity =>
            {
                entity.ToTable("glyjc_tl_wdl");

                entity.HasComment("脱落病害(文档类)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tlcd)
                    .HasColumnName("TLCD")
                    .HasComment("脱落长度");

                entity.Property(e => e.Tlkd)
                    .HasColumnName("TLKD")
                    .HasComment("脱落宽度");

                entity.Property(e => e.Tlmj)
                    .HasColumnName("TLMJ")
                    .HasComment("脱落面积");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcTlWdlBhdcjcgzqkjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("glyjc_tl_wdl_bhdcjcgzqkjl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhmc)
                    .HasColumnName("BHMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tlcd)
                    .HasColumnName("TLCD")
                    .HasComment("脱落长度");

                entity.Property(e => e.Tlkd)
                    .HasColumnName("TLKD")
                    .HasComment("脱落宽度");

                entity.Property(e => e.Tlmj)
                    .HasColumnName("TLMJ")
                    .HasComment("脱落面积");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcTmpCjJcpz>(entity =>
            {
                entity.ToTable("glyjc_tmp_cj_jcpz");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("int(11)");

                entity.Property(e => e.Jcdxjtbwid)
                    .HasColumnName("JCDXJTBWID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbid)
                    .HasColumnName("sbid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcTsWdl>(entity =>
            {
                entity.ToTable("glyjc_ts_wdl");

                entity.HasComment("褪色病害(文档类)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tscd)
                    .HasColumnName("TSCD")
                    .HasComment("褪色长度");

                entity.Property(e => e.Tskd)
                    .HasColumnName("TSKD")
                    .HasComment("褪色宽度");

                entity.Property(e => e.Tsmj)
                    .HasColumnName("TSMJ")
                    .HasComment("褪色面积");
            });

            modelBuilder.Entity<GlyjcWhj>(entity =>
            {
                entity.ToTable("glyjc_whj");

                entity.HasComment("微环境");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fl)
                    .HasColumnName("FL")
                    .HasColumnType("int(11)")
                    .HasComment("风力");

                entity.Property(e => e.Fs)
                    .HasColumnName("FS")
                    .HasColumnType("double(8,2)")
                    .HasComment("风速（m/s）");

                entity.Property(e => e.Fx)
                    .HasColumnName("FX")
                    .HasColumnType("int(8)")
                    .HasComment("风向（360°，正北方向为0，顺时针增大）");

                entity.Property(e => e.Jsl)
                    .HasColumnName("JSL")
                    .HasColumnType("double(8,2)")
                    .HasComment("降水量（mm）");

                entity.Property(e => e.Ld)
                    .HasColumnName("LD")
                    .HasColumnType("double(8,2)")
                    .HasComment("露点温度（℃）");

                entity.Property(e => e.Lfzfs)
                    .HasColumnName("LFZFS")
                    .HasColumnType("double(8,2)")
                    .HasComment("两分钟风速（m/s）");

                entity.Property(e => e.Ljfsj)
                    .HasColumnName("LJFSJ")
                    .HasColumnType("double(8,3)")
                    .HasComment("累计反辐射");

                entity.Property(e => e.Ljjfs)
                    .HasColumnName("LJJFS")
                    .HasColumnType("double(8,3)")
                    .HasComment("累计净辐射");

                entity.Property(e => e.Ljsfs)
                    .HasColumnName("LJSFS")
                    .HasColumnType("double(8,3)")
                    .HasComment("累计散辐射");

                entity.Property(e => e.Ljzfs)
                    .HasColumnName("LJZFS")
                    .HasColumnType("double(8,3)")
                    .HasComment("累计总辐射");

                entity.Property(e => e.Ljzjfs)
                    .HasColumnName("LJZJFS")
                    .HasColumnType("double(8,3)")
                    .HasComment("累计直接辐射");

                entity.Property(e => e.Ljzwfs)
                    .HasColumnName("LJZWFS")
                    .HasColumnType("double(8,3)")
                    .HasComment("累计紫外辐射");

                entity.Property(e => e.Qy)
                    .HasColumnName("QY")
                    .HasColumnType("double(8,2)")
                    .HasComment("气压（pa）");

                entity.Property(e => e.Rzs)
                    .HasColumnName("RZS")
                    .HasColumnType("double(8,4)")
                    .HasComment("日照时");

                entity.Property(e => e.Sd)
                    .HasColumnName("SD")
                    .HasColumnType("double(8,2)")
                    .HasComment("环境湿度（%）");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Sfzfs)
                    .HasColumnName("SFZFS")
                    .HasColumnType("double(8,2)")
                    .HasComment("十分钟风速（m/s）");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shtbgsm)
                    .HasColumnName("SHTBGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(5)");

                entity.Property(e => e.Sj)
                    .HasColumnName("SJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Ssffs)
                    .HasColumnName("SSFFS")
                    .HasColumnType("double(8,3)")
                    .HasComment("瞬时反辐射");

                entity.Property(e => e.Ssjfs)
                    .HasColumnName("SSJFS")
                    .HasColumnType("double(8,3)")
                    .HasComment("瞬时净辐射");

                entity.Property(e => e.Sssfs)
                    .HasColumnName("SSSFS")
                    .HasColumnType("double(8,3)")
                    .HasComment("瞬时散辐射");

                entity.Property(e => e.Sszfs)
                    .HasColumnName("SSZFS")
                    .HasColumnType("double(8,3)")
                    .HasComment("瞬时总辐射");

                entity.Property(e => e.Sszjfs)
                    .HasColumnName("SSZJFS")
                    .HasColumnType("double(8,3)")
                    .HasComment("瞬时直接辐射");

                entity.Property(e => e.Sszwfs)
                    .HasColumnName("SSZWFS")
                    .HasColumnType("double(8,3)")
                    .HasComment("瞬时紫外辐射");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasColumnType("double(8,2)")
                    .HasComment("环境温度（℃）");
            });

            modelBuilder.Entity<GlyjcWhj1027>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_whj1027");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fl)
                    .HasColumnName("FL")
                    .HasColumnType("int(11)")
                    .HasComment("风力");

                entity.Property(e => e.Fs)
                    .HasColumnName("FS")
                    .HasColumnType("double(8,2)")
                    .HasComment("风速（m/s）");

                entity.Property(e => e.Fx)
                    .HasColumnName("FX")
                    .HasColumnType("int(8)")
                    .HasComment("风向（360°，正北方向为0，顺时针增大）");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jsl)
                    .HasColumnName("JSL")
                    .HasColumnType("double(8,2)")
                    .HasComment("降水量（mm）");

                entity.Property(e => e.Ld)
                    .HasColumnName("LD")
                    .HasColumnType("double(8,2)")
                    .HasComment("露点温度（℃）");

                entity.Property(e => e.Lfzfs)
                    .HasColumnName("LFZFS")
                    .HasColumnType("double(8,2)")
                    .HasComment("两分钟风速（m/s）");

                entity.Property(e => e.Ljfsj)
                    .HasColumnName("LJFSJ")
                    .HasColumnType("double(8,3)")
                    .HasComment("累计反辐射");

                entity.Property(e => e.Ljjfs)
                    .HasColumnName("LJJFS")
                    .HasColumnType("double(8,3)")
                    .HasComment("累计净辐射");

                entity.Property(e => e.Ljsfs)
                    .HasColumnName("LJSFS")
                    .HasColumnType("double(8,3)")
                    .HasComment("累计散辐射");

                entity.Property(e => e.Ljzfs)
                    .HasColumnName("LJZFS")
                    .HasColumnType("double(8,3)")
                    .HasComment("累计总辐射");

                entity.Property(e => e.Ljzjfs)
                    .HasColumnName("LJZJFS")
                    .HasColumnType("double(8,3)")
                    .HasComment("累计直接辐射");

                entity.Property(e => e.Ljzwfs)
                    .HasColumnName("LJZWFS")
                    .HasColumnType("double(8,3)")
                    .HasComment("累计紫外辐射");

                entity.Property(e => e.Qy)
                    .HasColumnName("QY")
                    .HasColumnType("double(8,2)")
                    .HasComment("气压（pa）");

                entity.Property(e => e.Rzs)
                    .HasColumnName("RZS")
                    .HasColumnType("double(8,4)")
                    .HasComment("日照时");

                entity.Property(e => e.Sd)
                    .HasColumnName("SD")
                    .HasColumnType("double(8,2)")
                    .HasComment("环境湿度（%）");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Sfzfs)
                    .HasColumnName("SFZFS")
                    .HasColumnType("double(8,2)")
                    .HasComment("十分钟风速（m/s）");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shtbgsm)
                    .HasColumnName("SHTBGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(5)");

                entity.Property(e => e.Sj)
                    .HasColumnName("SJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Ssffs)
                    .HasColumnName("SSFFS")
                    .HasColumnType("double(8,3)")
                    .HasComment("瞬时反辐射");

                entity.Property(e => e.Ssjfs)
                    .HasColumnName("SSJFS")
                    .HasColumnType("double(8,3)")
                    .HasComment("瞬时净辐射");

                entity.Property(e => e.Sssfs)
                    .HasColumnName("SSSFS")
                    .HasColumnType("double(8,3)")
                    .HasComment("瞬时散辐射");

                entity.Property(e => e.Sszfs)
                    .HasColumnName("SSZFS")
                    .HasColumnType("double(8,3)")
                    .HasComment("瞬时总辐射");

                entity.Property(e => e.Sszjfs)
                    .HasColumnName("SSZJFS")
                    .HasColumnType("double(8,3)")
                    .HasComment("瞬时直接辐射");

                entity.Property(e => e.Sszwfs)
                    .HasColumnName("SSZWFS")
                    .HasColumnType("double(8,3)")
                    .HasComment("瞬时紫外辐射");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasColumnType("double(8,2)")
                    .HasComment("环境温度（℃）");
            });

            modelBuilder.Entity<GlyjcWwbhgcfa>(entity =>
            {
                entity.ToTable("glyjc_wwbhgcfa");

                entity.HasComment("文物保护工程方案");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzdw)
                    .HasColumnName("BZDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Famc)
                    .HasColumnName("FAMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gcid)
                    .HasColumnName("GCID")
                    .HasColumnType("varchar(200)")
                    .HasComment("保护工程id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pzwh)
                    .HasColumnName("PZWH")
                    .HasColumnType("varchar(50)")
                    .HasComment("批准文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcWwbhgcfaBhzsyhjzzgcjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("glyjc_wwbhgcfa_bhzsyhjzzgcjl");

                entity.Property(e => e.Bzdw)
                    .HasColumnName("BZDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Famc)
                    .HasColumnName("FAMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gcid)
                    .HasColumnName("GCID")
                    .HasColumnType("varchar(200)")
                    .HasComment("保护工程id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pzwh)
                    .HasColumnName("PZWH")
                    .HasColumnType("varchar(50)")
                    .HasComment("批准文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("XMMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcWwbhgcfaCopy>(entity =>
            {
                entity.ToTable("glyjc_wwbhgcfa_copy");

                entity.HasComment("文物保护工程方案");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzdw)
                    .HasColumnName("BZDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Famc)
                    .HasColumnName("FAMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gcid)
                    .HasColumnName("GCID")
                    .HasColumnType("varchar(200)")
                    .HasComment("保护工程id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pzwh)
                    .HasColumnName("PZWH")
                    .HasColumnType("varchar(50)")
                    .HasComment("批准文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcWwbhwxda>(entity =>
            {
                entity.ToTable("glyjc_wwbhwxda");

                entity.HasComment("文物保护维修档案");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dalx)
                    .HasColumnName("DALX")
                    .HasColumnType("varchar(50)")
                    .HasComment("档案类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gcid)
                    .HasColumnName("GCID")
                    .HasColumnType("varchar(200)")
                    .HasComment("工程id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcWwbhwxdaCopy>(entity =>
            {
                entity.ToTable("glyjc_wwbhwxda_copy");

                entity.HasComment("文物保护维修档案");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dalx)
                    .HasColumnName("DALX")
                    .HasColumnType("varchar(50)")
                    .HasComment("档案类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gcid)
                    .HasColumnName("GCID")
                    .HasColumnType("varchar(200)")
                    .HasComment("工程id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcWxyt>(entity =>
            {
                entity.ToTable("glyjc_wxyt");

                entity.HasComment("卫星云图");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sj)
                    .HasColumnName("SJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yttp)
                    .HasColumnName("YTTP")
                    .HasColumnType("varchar(200)")
                    .HasComment("云图图片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcWxyxhhp>(entity =>
            {
                entity.ToTable("glyjc_wxyxhhp");

                entity.HasComment("卫星影像或航片");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wxyxlfj)
                    .HasColumnName("WXYXLFJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("卫星影像类附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcXjxmgzjl>(entity =>
            {
                entity.ToTable("glyjc_xjxmgzjl");

                entity.HasComment("新建项目跟踪记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bfhfafm)
                    .HasColumnName("BFHFAFM")
                    .HasColumnType("varchar(500)")
                    .HasComment("不符合方案方面")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfwg)
                    .HasColumnName("SFWG")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否完工")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjwgsj)
                    .HasColumnName("SJWGSJ")
                    .HasColumnType("datetime")
                    .HasComment("实际完工时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Xchjzplj)
                    .HasColumnName("XCHJZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("现场环境照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xjxmjskzqk)
                    .HasColumnName("XJXMJSKZQK")
                    .HasColumnType("varchar(50)")
                    .HasComment(" 新建项目建设控制情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("XMMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmms)
                    .HasColumnName("XMMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("项目描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcXjxmjl>(entity =>
            {
                entity.ToTable("glyjc_xjxmjl");

                entity.HasComment("新建项目记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djdw)
                    .HasColumnName("DJDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("代建单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gczj)
                    .HasColumnName("GCZJ")
                    .HasComment("工程造价");

                entity.Property(e => e.Gczjqcz)
                    .HasColumnName("GCZJQCZ")
                    .HasComment("工程造价区财政");

                entity.Property(e => e.Gczjscz)
                    .HasColumnName("GCZJSCZ")
                    .HasComment("工程造价市财政");

                entity.Property(e => e.Gczjsjyscz)
                    .HasColumnName("GCZJSJYSCZ")
                    .HasComment("工程造价市级以上财政");

                entity.Property(e => e.Gczjzycz)
                    .HasColumnName("GCZJZYCZ")
                    .HasComment("工程造价中央财政");

                entity.Property(e => e.Gd)
                    .HasColumnName("GD")
                    .HasComment("高度");

                entity.Property(e => e.Jgsj)
                    .HasColumnName("JGSJ")
                    .HasColumnType("datetime")
                    .HasComment("竣工时间");

                entity.Property(e => e.Jgt)
                    .HasColumnName("JGT")
                    .HasColumnType("varchar(200)")
                    .HasComment("竣工图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jgyszs)
                    .HasColumnName("JGYSZS")
                    .HasColumnType("varchar(200)")
                    .HasComment("竣工验收证书")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jldw)
                    .HasColumnName("JLDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监理单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jsdd)
                    .HasColumnName("JSDD")
                    .HasColumnType("varchar(200)")
                    .HasComment("建设地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jsdw)
                    .HasColumnName("JSDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("建设单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jsmd)
                    .HasColumnName("JSMD")
                    .HasColumnType("varchar(500)")
                    .HasComment("建设目的")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jsnr)
                    .HasColumnName("JSNR")
                    .HasColumnType("varchar(500)")
                    .HasComment("建设内容")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzzdmj)
                    .HasColumnName("JZZDMJ")
                    .HasComment("建筑占地面积");

                entity.Property(e => e.Kgdjb)
                    .HasColumnName("KGDJB")
                    .HasColumnType("varchar(200)")
                    .HasComment("开工登记表")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kgsj)
                    .HasColumnName("KGSJ")
                    .HasColumnType("datetime")
                    .HasComment("开工时间");

                entity.Property(e => e.Lxbg)
                    .HasColumnName("LXBG")
                    .HasColumnType("varchar(200)")
                    .HasComment("立项报告")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfazjsxkdfajx)
                    .HasColumnName("SFAZJSXKDFAJX")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否按照建设许可的方案进行");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfwj)
                    .HasColumnName("SFWJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否违建");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Sgdw)
                    .HasColumnName("SGDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("施工单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sgt)
                    .HasColumnName("SGT")
                    .HasColumnType("varchar(200)")
                    .HasComment("施工图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjdw)
                    .HasColumnName("SJDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("设计单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wwbmpzxkwh)
                    .HasColumnName("WWBMPZXKWH")
                    .HasColumnType("varchar(50)")
                    .HasComment("文物部门批准许可文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xjxmbh)
                    .HasColumnName("XJXMBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("新建项目编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xjxmgcfa)
                    .HasColumnName("XJXMGCFA")
                    .HasColumnType("varchar(200)")
                    .HasComment("新建项目工程方案")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmjswztlj)
                    .HasColumnName("XMJSWZTLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("项目建设位置图路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("XMMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zdmj)
                    .HasColumnName("ZDMJ")
                    .HasComment("占地面积");

                entity.Property(e => e.Zjzmj)
                    .HasColumnName("ZJZMJ")
                    .HasComment("总占地面积");

                entity.Property(e => e.Zydmj)
                    .HasColumnName("ZYDMJ")
                    .HasComment("总占地面积");
            });

            modelBuilder.Entity<GlyjcXxghzxqkjl>(entity =>
            {
                entity.ToTable("glyjc_xxghzxqkjl");

                entity.HasComment("现行规划执行情况记录");

                entity.HasIndex(e => e.Bhglghbzid)
                    .HasName("fk_alkdfjaisjoei");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhglghbzid)
                    .HasColumnName("BHGLGHBZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护管理规划编制")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jqghxm)
                    .HasColumnName("JQGHXM")
                    .HasColumnType("varchar(500)")
                    .HasComment("近期规划项目")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sszt)
                    .HasColumnName("SSZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wssyy)
                    .HasColumnName("WSSYY")
                    .HasColumnType("varchar(500)")
                    .HasComment("未实施原因")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zxqkzhpj)
                    .HasColumnName("ZXQKZHPJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("执行情况综合评价")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Bhglghbz)
                    .WithMany(p => p.GlyjcXxghzxqkjl)
                    .HasForeignKey(d => d.Bhglghbzid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_alkdfjaisjoei");
            });

            modelBuilder.Entity<GlyjcXxghzxqkjlBhglghbzjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("glyjc_xxghzxqkjl_bhglghbzjl");

                entity.Property(e => e.Bhglghbzid)
                    .HasColumnName("BHGLGHBZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护管理规划编制")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jqghxm)
                    .HasColumnName("JQGHXM")
                    .HasColumnType("varchar(500)")
                    .HasComment("近期规划项目")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sszt)
                    .HasColumnName("SSZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wssyy)
                    .HasColumnName("WSSYY")
                    .HasColumnType("varchar(500)")
                    .HasComment("未实施原因")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zxqkzhpj)
                    .HasColumnName("ZXQKZHPJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("执行情况综合评价")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcXxjlb>(entity =>
            {
                entity.ToTable("glyjc_xxjlb");

                entity.HasComment("消息记录表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fromuser)
                    .HasColumnName("FROMUSER")
                    .HasColumnType("varchar(50)")
                    .HasComment("FROMUSER")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Isread)
                    .HasColumnName("ISREAD")
                    .HasColumnType("tinyint(4)")
                    .HasComment("READ");

                entity.Property(e => e.Msg)
                    .HasColumnName("MSG")
                    .HasColumnType("varchar(1000)")
                    .HasComment("CONTENT")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sendtime)
                    .HasColumnName("SENDTIME")
                    .HasColumnType("datetime")
                    .HasComment("TIME");

                entity.Property(e => e.Touser)
                    .HasColumnName("TOUSER")
                    .HasColumnType("varchar(50)")
                    .HasComment("TOUSER")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcXyaxfxtyjxx>(entity =>
            {
                entity.ToTable("glyjc_xyaxfxtyjxx");

                entity.HasComment("现有安消防系统硬件信息");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jkttsl)
                    .HasColumnName("JKTTSL")
                    .HasColumnType("int(11)")
                    .HasComment("监控探头数量");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tzje)
                    .HasColumnName("TZJE")
                    .HasComment("投资金额");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wztp)
                    .HasColumnName("WZTP")
                    .HasColumnType("varchar(100)")
                    .HasComment("位置图片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xfxtmc)
                    .HasColumnName("XFXTMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("消防系统名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xtgcms)
                    .HasColumnName("XTGCMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("系统构成描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjssjcsj)
                    .HasColumnName("YJSSJCSJ")
                    .HasColumnType("datetime")
                    .HasComment("硬件设施建成时间");

                entity.Property(e => e.Yjssxhms)
                    .HasColumnName("YJSSXHMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("硬件设施型号描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytfl)
                    .HasColumnName("YTFL")
                    .HasColumnType("varchar(50)")
                    .HasComment("用途分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcdhgjwbdwddygx>(entity =>
            {
                entity.ToTable("glyjc_ycdhgjwbdwddygx");

                entity.HasComment("遗产地和各级文保单位的对应关系");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjb)
                    .HasColumnName("BHJB")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护级别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gbpc)
                    .HasColumnName("GBPC")
                    .HasColumnType("varchar(50)")
                    .HasComment("公布批次")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gbsj)
                    .HasColumnName("GBSJ")
                    .HasColumnType("datetime")
                    .HasComment("公布时间");

                entity.Property(e => e.Gbwh)
                    .HasColumnName("GBWH")
                    .HasColumnType("varchar(50)")
                    .HasComment("公布文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wwbhdwlx)
                    .HasColumnName("WWBHDWLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文物保护单位类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wwbhdwmc)
                    .HasColumnName("WWBHDWMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("文物保护单位名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcqhcq>(entity =>
            {
                entity.ToTable("glyjc_ycqhcq");

                entity.HasComment("遗产区缓冲区");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Hcqglgd)
                    .HasColumnName("HCQGLGD")
                    .HasColumnType("varchar(4000)")
                    .HasComment("缓冲区管理规定")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Hcqjx)
                    .HasColumnName("HCQJX")
                    .HasColumnType("varchar(500)")
                    .HasComment("缓冲区界线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Hcqmj)
                    .HasColumnName("HCQMJ")
                    .HasComment("缓冲区面积");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycqglgd)
                    .HasColumnName("YCQGLGD")
                    .HasColumnType("varchar(4000)")
                    .HasComment("遗产区管理规定")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycqjx)
                    .HasColumnName("YCQJX")
                    .HasColumnType("varchar(500)")
                    .HasComment("遗产区界线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycqmj)
                    .HasColumnName("YCQMJ")
                    .HasComment("遗产区面积");
            });

            modelBuilder.Entity<GlyjcYcqhhcqshhjndjcjl>(entity =>
            {
                entity.ToTable("glyjc_ycqhhcqshhjndjcjl");

                entity.HasComment("遗产区和缓冲区社会环境年度监测记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhdwbhdj)
                    .HasColumnName("BHDWBHDJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护动物保护等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhdwfb)
                    .HasColumnName("BHDWFB")
                    .HasColumnType("varchar(500)")
                    .HasComment("保护动物分布")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhdwmc)
                    .HasColumnName("BHDWMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护动物名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhdwsl)
                    .HasColumnName("BHDWSL")
                    .HasColumnType("int(10)")
                    .HasComment("保护动物数量");

                entity.Property(e => e.Bhzwbhdj)
                    .HasColumnName("BHZWBHDJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护植物保护等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhzwfb)
                    .HasColumnName("BHZWFB")
                    .HasColumnType("varchar(500)")
                    .HasComment("保护植物分布")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhzwmc)
                    .HasColumnName("BHZWMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护植物名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhzwsl)
                    .HasColumnName("BHZWSL")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护植物数量")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Csrk)
                    .HasColumnName("CSRK")
                    .HasColumnType("int(10)")
                    .HasComment("出生人口");

                entity.Property(e => e.Czrk)
                    .HasColumnName("CZRK")
                    .HasColumnType("int(10)")
                    .HasComment("常住人口数");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dqdhcqrksl)
                    .HasColumnName("DQDHCQRKSL")
                    .HasColumnType("int(11)")
                    .HasComment("当前的缓冲区人口数量");

                entity.Property(e => e.Dqdycqrksl)
                    .HasColumnName("DQDYCQRKSL")
                    .HasColumnType("int(11)")
                    .HasComment("当前的遗产区人口数量");

                entity.Property(e => e.Female)
                    .HasColumnName("FEMALE")
                    .HasColumnType("int(10)")
                    .HasComment("女性");

                entity.Property(e => e.Fhjrk)
                    .HasColumnName("FHJRK")
                    .HasColumnType("int(10)")
                    .HasComment("非户籍人口");

                entity.Property(e => e.Fmyxfw)
                    .HasColumnName("FMYXFW")
                    .HasColumnType("int(11)")
                    .HasComment("负面影响范围");

                entity.Property(e => e.Hjrk)
                    .HasColumnName("HJRK")
                    .HasColumnType("int(10)")
                    .HasComment("户籍人口");

                entity.Property(e => e.Lrmlsdhcqrk)
                    .HasColumnName("LRMLSDHCQRK")
                    .HasColumnType("int(11)")
                    .HasComment("列入名录时的缓冲区人口");

                entity.Property(e => e.Lrmlsdycqrksl)
                    .HasColumnName("LRMLSDYCQRKSL")
                    .HasColumnType("int(11)")
                    .HasComment("列入名录时的遗产区人口数量");

                entity.Property(e => e.Male)
                    .HasColumnName("MALE")
                    .HasColumnType("int(10)")
                    .HasComment("男性");

                entity.Property(e => e.Nd)
                    .HasColumnName("ND")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qcrk)
                    .HasColumnName("QCRK")
                    .HasColumnType("int(10)")
                    .HasComment("迁出人口");

                entity.Property(e => e.Qrrk)
                    .HasColumnName("QRRK")
                    .HasColumnType("int(10)")
                    .HasComment("迁入人口");

                entity.Property(e => e.Rkmd)
                    .HasColumnName("RKMD")
                    .HasColumnType("varchar(50)")
                    .HasComment("人口密度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rkssxq)
                    .HasColumnName("RKSSXQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("人口疏散需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Swrk)
                    .HasColumnName("SWRK")
                    .HasColumnType("int(10)")
                    .HasComment("死亡人口");

                entity.Property(e => e.Sycrk18)
                    .HasColumnName("SYCRK18")
                    .HasColumnType("int(10)")
                    .HasComment("18岁以下人口");

                entity.Property(e => e.Sysrk60)
                    .HasColumnName("SYSRK60")
                    .HasColumnType("int(10)")
                    .HasComment("60岁以上人口");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycdgdp)
                    .HasColumnName("YCDGDP")
                    .HasComment("遗产地国内生产总值（GDP）");

                entity.Property(e => e.Ycdrjgdp)
                    .HasColumnName("YCDRJGDP")
                    .HasComment("遗产地人均国内生产总值（人均GDP）");

                entity.Property(e => e.Ycqrkmdsyd)
                    .HasColumnName("YCQRKMDSYD")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产区人口密度适宜度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yzwrgyqysl)
                    .HasColumnName("YZWRGYQYSL")
                    .HasColumnType("int(11)")
                    .HasComment("严重污染工业企业数量");

                entity.Property(e => e.Zrks)
                    .HasColumnName("ZRKS")
                    .HasColumnType("int(10)")
                    .HasComment("总人口数");

                entity.Property(e => e.Zykcdsl)
                    .HasColumnName("ZYKCDSL")
                    .HasColumnType("int(11)")
                    .HasComment("资源开采点数量");

                entity.Property(e => e.Zzrk)
                    .HasColumnName("ZZRK")
                    .HasColumnType("int(10)")
                    .HasComment("暂住人口");
            });

            modelBuilder.Entity<GlyjcYcszdshhjndjcjl>(entity =>
            {
                entity.ToTable("glyjc_ycszdshhjndjcjl");

                entity.HasComment("遗产所在地社会环境年度监测记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gjbhdzwzl)
                    .HasColumnName("GJBHDZWZL")
                    .HasColumnType("int(11)")
                    .HasComment("国家保护动植物种类");

                entity.Property(e => e.Nd)
                    .HasColumnName("ND")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rjgdp)
                    .HasColumnName("RJGDP")
                    .HasComment("人均GDP");

                entity.Property(e => e.Rkmd)
                    .HasColumnName("RKMD")
                    .HasComment("人口密度");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycszdyzwrgyqysl)
                    .HasColumnName("YCSZDYZWRGYQYSL")
                    .HasColumnType("int(11)")
                    .HasComment("遗产所在地严重污染工业企业数量");

                entity.Property(e => e.Zbfgl)
                    .HasColumnName("ZBFGL")
                    .HasComment("植被覆盖率");
            });

            modelBuilder.Entity<GlyjcYcysdtxztyxtjycysxzjl>(entity =>
            {
                entity.ToTable("glyjc_ycysdtxztyxtjycysxzjl");

                entity.HasComment("遗产要素单体现状图及遗产要素现状记录_图纸");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qksm)
                    .HasColumnName("QKSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("情况说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tzlj)
                    .HasColumnName("TZLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("图纸路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysbczt)
                    .HasColumnName("YCYSBCZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素保存状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ylt)
                    .HasColumnName("YLT")
                    .HasColumnType("varchar(200)")
                    .HasComment("预览图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcysdtxztyxtjycysxzjlCopy>(entity =>
            {
                entity.ToTable("glyjc_ycysdtxztyxtjycysxzjl_copy");

                entity.HasComment("遗产要素单体现状图及遗产要素现状记录_图纸");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qksm)
                    .HasColumnName("QKSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("情况说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tzlj)
                    .HasColumnName("TZLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("图纸路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysbczt)
                    .HasColumnName("YCYSBCZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素保存状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ylt)
                    .HasColumnName("YLT")
                    .HasColumnType("varchar(200)")
                    .HasComment("预览图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcysdtyxtjcesj>(entity =>
            {
                entity.ToTable("glyjc_ycysdtyxtjcesj");

                entity.HasComment("遗产要素单体影像图监测数据");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Pg)
                    .HasColumnName("pg")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qksm)
                    .HasColumnName("qksm")
                    .HasColumnType("varchar(50)")
                    .HasComment("情况说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("rwid")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysbczt)
                    .HasColumnName("ycysbczt")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素保存状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysdtid)
                    .HasColumnName("ysdtid")
                    .HasColumnType("varchar(50)")
                    .HasComment("要素单体ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yszplj)
                    .HasColumnName("yszplj")
                    .HasColumnType("varchar(200)")
                    .HasComment("要素照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcysdtyxtjcesj1018>(entity =>
            {
                entity.ToTable("glyjc_ycysdtyxtjcesj_1018");

                entity.HasComment("遗产要素单体影像图监测数据");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Pg)
                    .HasColumnName("pg")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qksm)
                    .HasColumnName("qksm")
                    .HasColumnType("varchar(50)")
                    .HasComment("情况说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("rwid")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysbczt)
                    .HasColumnName("ycysbczt")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素保存状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysdtid)
                    .HasColumnName("ysdtid")
                    .HasColumnType("varchar(50)")
                    .HasComment("要素单体ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yszplj)
                    .HasColumnName("yszplj")
                    .HasColumnType("varchar(200)")
                    .HasComment("要素照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcysdtyxtjcesj2016年9月19日084330>(entity =>
            {
                entity.ToTable("glyjc_ycysdtyxtjcesj_2016年9月19日08:43:30");

                entity.HasComment("遗产要素单体影像图监测数据");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Pg)
                    .HasColumnName("pg")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qksm)
                    .HasColumnName("qksm")
                    .HasColumnType("varchar(50)")
                    .HasComment("情况说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("rwid")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysbczt)
                    .HasColumnName("ycysbczt")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素保存状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysdtid)
                    .HasColumnName("ysdtid")
                    .HasColumnType("varchar(50)")
                    .HasComment("要素单体ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yszplj)
                    .HasColumnName("yszplj")
                    .HasColumnType("varchar(200)")
                    .HasComment("要素照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcysdtyxtjcsj>(entity =>
            {
                entity.ToTable("glyjc_ycysdtyxtjcsj");

                entity.HasComment("遗产要素单体影像图基础数据");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdjd)
                    .HasColumnName("cjdjd")
                    .HasComment("采集点经度");

                entity.Property(e => e.Cjdsyt)
                    .HasColumnName("cjdsyt")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集点示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdwd)
                    .HasColumnName("cjdwd")
                    .HasComment("采集点纬度");

                entity.Property(e => e.Cjdwzms)
                    .HasColumnName("cjdwzms")
                    .HasColumnType("varchar(100)")
                    .HasComment("采集点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jzzp)
                    .HasColumnName("JZZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("基准照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcYcysdtyxtjcsj2016年8月30日173313>(entity =>
            {
                entity.ToTable("glyjc_ycysdtyxtjcsj_2016年8月30日17:33:13");

                entity.HasComment("遗产要素单体影像图基础数据");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdjd)
                    .HasColumnName("cjdjd")
                    .HasComment("采集点经度");

                entity.Property(e => e.Cjdsyt)
                    .HasColumnName("cjdsyt")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集点示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdwd)
                    .HasColumnName("cjdwd")
                    .HasComment("采集点纬度");

                entity.Property(e => e.Cjdwzms)
                    .HasColumnName("cjdwzms")
                    .HasColumnType("varchar(100)")
                    .HasComment("采集点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jzzp)
                    .HasColumnName("JZZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("基准照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcYcysdtyxtjcsjCopy>(entity =>
            {
                entity.ToTable("glyjc_ycysdtyxtjcsj_copy");

                entity.HasComment("遗产要素单体影像图基础数据");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdjd)
                    .HasColumnName("cjdjd")
                    .HasComment("采集点经度");

                entity.Property(e => e.Cjdsyt)
                    .HasColumnName("cjdsyt")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集点示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdwd)
                    .HasColumnName("cjdwd")
                    .HasComment("采集点纬度");

                entity.Property(e => e.Cjdwzms)
                    .HasColumnName("cjdwzms")
                    .HasColumnType("varchar(100)")
                    .HasComment("采集点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jzzp)
                    .HasColumnName("JZZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("基准照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcYcysdtyxtjcsjCopy1>(entity =>
            {
                entity.ToTable("glyjc_ycysdtyxtjcsj_copy1");

                entity.HasComment("遗产要素单体影像图基础数据");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdjd)
                    .HasColumnName("cjdjd")
                    .HasComment("采集点经度");

                entity.Property(e => e.Cjdsyt)
                    .HasColumnName("cjdsyt")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集点示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdwd)
                    .HasColumnName("cjdwd")
                    .HasComment("采集点纬度");

                entity.Property(e => e.Cjdwzms)
                    .HasColumnName("cjdwzms")
                    .HasColumnType("varchar(100)")
                    .HasComment("采集点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jzzp)
                    .HasColumnName("JZZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("基准照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcYcysdtyxtjcsj更新区域前1214>(entity =>
            {
                entity.ToTable("glyjc_ycysdtyxtjcsj更新区域前1214");

                entity.HasComment("遗产要素单体影像图基础数据");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdjd)
                    .HasColumnName("cjdjd")
                    .HasComment("采集点经度");

                entity.Property(e => e.Cjdsyt)
                    .HasColumnName("cjdsyt")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集点示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdwd)
                    .HasColumnName("cjdwd")
                    .HasComment("采集点纬度");

                entity.Property(e => e.Cjdwzms)
                    .HasColumnName("cjdwzms")
                    .HasColumnType("varchar(100)")
                    .HasComment("采集点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jzzp)
                    .HasColumnName("JZZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("基准照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcYcysfbt>(entity =>
            {
                entity.ToTable("glyjc_ycysfbt");

                entity.HasComment("遗产要素分布图");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysfbturl)
                    .HasColumnName("YCYSFBTURL")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素分布图URL")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcysqd>(entity =>
            {
                entity.ToTable("glyjc_ycysqd");

                entity.HasComment("遗产要素清单");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhdj)
                    .HasColumnName("BHDJ")
                    .HasColumnType("varchar(255)")
                    .HasComment("保护等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhfwmj)
                    .HasColumnName("BHFWMJ")
                    .HasColumnType("varchar(100)")
                    .HasDefaultValueSql("''")
                    .HasComment("保护范围面积(m²)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gc)
                    .HasColumnName("GC")
                    .HasComment("高程");

                entity.Property(e => e.Gm)
                    .HasColumnName("GM")
                    .HasColumnType("varchar(50)")
                    .HasComment("规模")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Jzgd)
                    .HasColumnName("JZGD")
                    .HasColumnType("varchar(100)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("建筑高度(m)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzmj)
                    .HasColumnName("JZMJ")
                    .HasColumnType("varchar(100)")
                    .HasComment("建筑面积(m²)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzzdmj)
                    .HasColumnName("JZZDMJ")
                    .HasColumnType("varchar(100)")
                    .HasComment(" 建筑占地面积(m²)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qs)
                    .HasColumnName("QS")
                    .HasColumnType("varchar(255)")
                    .HasComment("权属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycyslx)
                    .HasColumnName("YCYSLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycyslxdl)
                    .HasColumnName("YCYSLXDL")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素类型大类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysms)
                    .HasColumnName("YCYSMS")
                    .HasColumnType("varchar(1000)")
                    .HasComment("遗产要素描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysbm)
                    .HasColumnName("YSBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("要素编码（总平台要求的标准编码）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcysqd1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_ycysqd1");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gc)
                    .HasColumnName("GC")
                    .HasComment("高程");

                entity.Property(e => e.Gm)
                    .HasColumnName("GM")
                    .HasColumnType("varchar(50)")
                    .HasComment("规模")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycyslx)
                    .HasColumnName("YCYSLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysms)
                    .HasColumnName("YCYSMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("遗产要素描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcysqd919>(entity =>
            {
                entity.ToTable("glyjc_ycysqd_919");

                entity.HasComment("遗产要素清单");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gc)
                    .HasColumnName("GC")
                    .HasComment("高程");

                entity.Property(e => e.Gm)
                    .HasColumnName("GM")
                    .HasColumnType("varchar(50)")
                    .HasComment("规模")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycyslx)
                    .HasColumnName("YCYSLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycyslxdl)
                    .HasColumnName("YCYSLXDL")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素类型大类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysms)
                    .HasColumnName("YCYSMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("遗产要素描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysbm)
                    .HasColumnName("YSBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("要素编码（总平台要求的标准编码）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcysqdCopy>(entity =>
            {
                entity.ToTable("glyjc_ycysqd_copy");

                entity.HasComment("遗产要素清单");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gc)
                    .HasColumnName("GC")
                    .HasComment("高程");

                entity.Property(e => e.Gm)
                    .HasColumnName("GM")
                    .HasColumnType("varchar(50)")
                    .HasComment("规模")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycyslx)
                    .HasColumnName("YCYSLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycyslxdl)
                    .HasColumnName("YCYSLXDL")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素类型大类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysms)
                    .HasColumnName("YCYSMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("遗产要素描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysbm)
                    .HasColumnName("YSBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("要素编码（总平台要求的标准编码）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcysqdNew>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_ycysqdNew");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gc)
                    .HasColumnName("GC")
                    .HasComment("高程");

                entity.Property(e => e.Gm)
                    .HasColumnName("GM")
                    .HasColumnType("varchar(50)")
                    .HasComment("规模")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycyslx)
                    .HasColumnName("YCYSLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycyslxdl)
                    .HasColumnName("YCYSLXDL")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素类型大类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysms)
                    .HasColumnName("YCYSMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("遗产要素描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysbm)
                    .HasColumnName("YSBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("要素编码（总平台要求的标准编码）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcysqdNew1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_ycysqdNew1");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gc)
                    .HasColumnName("GC")
                    .HasComment("高程");

                entity.Property(e => e.Gm)
                    .HasColumnName("GM")
                    .HasColumnType("varchar(50)")
                    .HasComment("规模")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycyslx)
                    .HasColumnName("YCYSLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycyslxdl)
                    .HasColumnName("YCYSLXDL")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素类型大类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysms)
                    .HasColumnName("YCYSMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("遗产要素描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysbm)
                    .HasColumnName("YSBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("要素编码（总平台要求的标准编码）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYczt>(entity =>
            {
                entity.ToTable("glyjc_yczt");

                entity.HasComment("遗产总图");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcxxwscd)
                    .HasColumnName("JCXXWSCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("基础信息完善程度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(500)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Sfzt)
                    .HasColumnName("SFZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Url)
                    .HasColumnName("URL")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产总图URL")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYhlmzpjyhlmjcjl>(entity =>
            {
                entity.ToTable("glyjc_yhlmzpjyhlmjcjl");

                entity.HasComment("沿海立面照片及沿海立面监测记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhxys)
                    .HasColumnName("BHXYS")
                    .HasColumnType("varchar(50)")
                    .HasComment("不和谐因素")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhxysfswz)
                    .HasColumnName("BHXYSFSWZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("不和谐因素发生位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhxysms)
                    .HasColumnName("BHXYSMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("不和谐因素描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jzmc)
                    .HasColumnName("JZMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrq)
                    .HasColumnName("TXRQ")
                    .HasColumnType("datetime")
                    .HasComment("填写日期");

                entity.Property(e => e.Zplj)
                    .HasColumnName("ZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYjczgz>(entity =>
            {
                entity.ToTable("glyjc_yjczgz");

                entity.HasComment("预警处置跟踪表");

                entity.HasIndex(e => e.Userid)
                    .HasName("fk_yjczgz_userid");

                entity.HasIndex(e => e.Yjxxid)
                    .HasName("fk_yjczgz_yjxxid");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("处置跟踪ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("处置跟踪时间");

                entity.Property(e => e.Czsm)
                    .HasColumnName("czsm")
                    .HasColumnType("varchar(500)")
                    .HasComment("处置跟踪说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasColumnType("varchar(255)")
                    .HasComment("附件名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Picname)
                    .HasColumnName("picname")
                    .HasColumnType("varchar(255)")
                    .HasComment("附图名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("remark")
                    .HasColumnType("varchar(255)")
                    .HasComment("备注信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Userid)
                    .IsRequired()
                    .HasColumnName("userid")
                    .HasColumnType("varchar(50)")
                    .HasComment("用户ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjsfjc)
                    .HasColumnName("YJSFJC")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警是否解除")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxxid)
                    .IsRequired()
                    .HasColumnName("yjxxid")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警信息ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.GlyjcYjczgz)
                    .HasForeignKey(d => d.Userid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_yjczgz_userid");

                entity.HasOne(d => d.Yjxx)
                    .WithMany(p => p.GlyjcYjczgz)
                    .HasForeignKey(d => d.Yjxxid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_yjczgz_yjxxid");
            });

            modelBuilder.Entity<GlyjcYjczxx>(entity =>
            {
                entity.ToTable("glyjc_yjczxx");

                entity.HasComment("预警处置信息");

                entity.HasIndex(e => e.Yjxxid)
                    .HasName("fk_yjczxx_id");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Czgzcyr)
                    .HasColumnName("czgzcyr")
                    .HasColumnType("varchar(50)")
                    .HasComment("处置工作参与人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Czr)
                    .HasColumnName("czr")
                    .HasColumnType("varchar(50)")
                    .HasComment("处置负责人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Czsj)
                    .HasColumnName("czsj")
                    .HasColumnType("datetime")
                    .HasComment("处置时间");

                entity.Property(e => e.Czsm)
                    .HasColumnName("czsm")
                    .HasColumnType("varchar(50)")
                    .HasComment("处置说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("djrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("djsj")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("sfkdj")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxxid)
                    .HasColumnName("yjxxid")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警信息ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zplj)
                    .HasColumnName("zplj")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Yjxx)
                    .WithMany(p => p.GlyjcYjczxx)
                    .HasForeignKey(d => d.Yjxxid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_yjczxx_id");
            });

            modelBuilder.Entity<GlyjcYjczxxcopy>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_yjczxxcopy");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Czgzcyr)
                    .HasColumnName("czgzcyr")
                    .HasColumnType("varchar(50)")
                    .HasComment("处置工作参与人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Czr)
                    .HasColumnName("czr")
                    .HasColumnType("varchar(50)")
                    .HasComment("处置负责人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Czsj)
                    .HasColumnName("czsj")
                    .HasColumnType("datetime")
                    .HasComment("处置时间");

                entity.Property(e => e.Czsm)
                    .HasColumnName("czsm")
                    .HasColumnType("varchar(50)")
                    .HasComment("处置说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("djrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("djsj")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("sfkdj")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Yjxxid)
                    .HasColumnName("yjxxid")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警信息ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zplj)
                    .HasColumnName("zplj")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYjjsxx>(entity =>
            {
                entity.ToTable("glyjc_yjjsxx");

                entity.HasIndex(e => e.Yjszid)
                    .HasName("FK_glyjc_yjjsxx");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tel)
                    .HasColumnName("TEL")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警信息接收人电话")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjdj)
                    .HasColumnName("YJDJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjjsrid)
                    .HasColumnName("YJJSRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警信息接收人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjjsrname)
                    .HasColumnName("YJJSRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警信息接收人姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjszid)
                    .HasColumnName("YJSZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警设置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Yjsz)
                    .WithMany(p => p.GlyjcYjjsxx)
                    .HasForeignKey(d => d.Yjszid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_glyjc_yjjsxx");
            });

            modelBuilder.Entity<GlyjcYjpzysxxb>(entity =>
            {
                entity.ToTable("glyjc_yjpzysxxb");

                entity.HasComment("预警配置预设信息表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.BmcYw)
                    .HasColumnName("BMC_YW")
                    .HasColumnType("varchar(50)")
                    .HasComment("表名称（英文）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.BmcZw)
                    .HasColumnName("BMC_ZW")
                    .HasColumnType("varchar(50)")
                    .HasComment("表名称（中文）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dw)
                    .HasColumnName("DW")
                    .HasColumnType("varchar(50)")
                    .HasComment("单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.YjzdYw)
                    .HasColumnName("YJZD_YW")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警字段（英文）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.YjzdZw)
                    .HasColumnName("YJZD_ZW")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警字段（中文）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjzdlx)
                    .HasColumnName("YJZDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警字段类型（0：枚举，1：数值）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYjszzb>(entity =>
            {
                entity.ToTable("glyjc_yjszzb");

                entity.HasComment("预警设置主表");

                entity.HasIndex(e => e.Jcpzid)
                    .HasName("fk_yjszzb");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Czfzrid)
                    .HasColumnName("CZFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("处置负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ejyjyaid)
                    .HasColumnName("EJYJYAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("二级预警预案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzid)
                    .HasColumnName("JCPZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sijyjyaid)
                    .HasColumnName("SIJYJYAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("四级预警预案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjyjyaid)
                    .HasColumnName("SJYJYAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("三级预警预案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yj1jjsrbm)
                    .HasColumnName("YJ1JJSRBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("一级预警信息接收人部门")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yj1jjsrzw)
                    .HasColumnName("YJ1JJSRZW")
                    .HasColumnType("varchar(50)")
                    .HasComment("一级预警信息接收人职务")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yj2jjsrbm)
                    .HasColumnName("YJ2JJSRBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("二级预警信息接收人部门")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yj2jjsrzw)
                    .HasColumnName("YJ2JJSRZW")
                    .HasColumnType("varchar(50)")
                    .HasComment("二级预警信息接收人职务")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yj3jjsrbm)
                    .HasColumnName("YJ3JJSRBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("三级预警信息接收人部门")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yj3jjsrzw)
                    .HasColumnName("YJ3JJSRZW")
                    .HasColumnType("varchar(50)")
                    .HasComment("三级预警信息接收人职务")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yj4jjsrbm)
                    .HasColumnName("YJ4JJSRBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("四级预警信息接收人部门")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yj4jjsrzw)
                    .HasColumnName("YJ4JJSRZW")
                    .HasColumnType("varchar(50)")
                    .HasComment("四级预警信息接收人职务")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjpzfamc)
                    .HasColumnName("YJPZFAMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxxsm)
                    .HasColumnName("YJXXSM")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警信息说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjyaid)
                    .HasColumnName("YJYAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警预案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjyjyaid)
                    .HasColumnName("YJYJYAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("一级预警预案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjzd)
                    .HasColumnName("YJZD")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Jcpz)
                    .WithMany(p => p.GlyjcYjszzb)
                    .HasForeignKey(d => d.Jcpzid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_yjszzb");
            });

            modelBuilder.Entity<GlyjcYjxx>(entity =>
            {
                entity.ToTable("glyjc_yjxx");

                entity.HasComment("预警信息");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cjsjbid)
                    .HasColumnName("CJSJBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("触警数据表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsjid)
                    .HasColumnName("CJSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("触警数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fbsj)
                    .HasColumnName("FBSJ")
                    .HasColumnType("datetime")
                    .HasComment("发布时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Slsm)
                    .HasColumnName("SLSM")
                    .HasColumnType("varchar(50)")
                    .HasComment("受理说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjdj)
                    .HasColumnName("YJDJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjpzfaid)
                    .HasColumnName("YJPZFAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警配置方案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjsfjc)
                    .HasColumnName("YJSFJC")
                    .HasColumnType("char(1)")
                    .HasComment("预警是否解除")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjslzt)
                    .HasColumnName("YJSLZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警受理状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxxsm)
                    .HasColumnName("YJXXSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("预警信息说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjyaid)
                    .HasColumnName("YJYAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警预案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYjxx1019>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_yjxx1019");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cjsjbid)
                    .HasColumnName("CJSJBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("触警数据表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsjid)
                    .HasColumnName("CJSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("触警数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fbsj)
                    .HasColumnName("FBSJ")
                    .HasColumnType("datetime")
                    .HasComment("发布时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjdj)
                    .HasColumnName("YJDJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjpzfaid)
                    .HasColumnName("YJPZFAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警配置方案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjsfjc)
                    .HasColumnName("YJSFJC")
                    .HasColumnType("char(1)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("预警是否解除")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxxsm)
                    .HasColumnName("YJXXSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("预警信息说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjyaid)
                    .HasColumnName("YJYAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警预案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYjxxcopy>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_yjxxcopy");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cjsjbid)
                    .HasColumnName("CJSJBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("触警数据表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsjid)
                    .HasColumnName("CJSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("触警数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fbsj)
                    .HasColumnName("FBSJ")
                    .HasColumnType("datetime")
                    .HasComment("发布时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjdj)
                    .HasColumnName("YJDJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjpzfaid)
                    .HasColumnName("YJPZFAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警配置方案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjsfjc)
                    .HasColumnName("YJSFJC")
                    .HasColumnType("char(1)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("预警是否解除")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxxsm)
                    .HasColumnName("YJXXSM")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警信息说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjyaid)
                    .HasColumnName("YJYAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警预案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYjya>(entity =>
            {
                entity.ToTable("glyjc_yjya");

                entity.HasComment("预警预案");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bxsj)
                    .HasColumnName("BXSJ")
                    .HasColumnType("datetime")
                    .HasComment("编写时间");

                entity.Property(e => e.Bzsm)
                    .HasColumnName("BZSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yamc)
                    .HasColumnName("YAMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("预案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yawdfj)
                    .HasColumnName("YAWDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("预案文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYkfmyxjl>(entity =>
            {
                entity.ToTable("glyjc_ykfmyxjl");

                entity.HasComment("游客负面影响记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dd)
                    .HasColumnName("DD")
                    .HasColumnType("varchar(200)")
                    .HasComment("地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dyczcdfmyx)
                    .HasColumnName("DYCZCDFMYX")
                    .HasColumnType("varchar(500)")
                    .HasComment("对遗产造成的负面影响")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shijian)
                    .HasColumnName("SHIJIAN")
                    .HasColumnType("varchar(500)")
                    .HasComment("事件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sj)
                    .HasColumnName("SJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcYkglydjl>(entity =>
            {
                entity.ToTable("glyjc_ykglydjl");

                entity.HasComment("游客管理月度记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gwykrcs)
                    .HasColumnName("GWYKRCS")
                    .HasColumnType("int(11)")
                    .HasComment("国外游客人次数");

                entity.Property(e => e.Jjyjjcs)
                    .HasColumnName("JJYJJCS")
                    .HasColumnType("int(11)")
                    .HasComment("讲解员讲解次数");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(50)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Spxdwbdycs)
                    .HasColumnName("SPXDWBDYCS")
                    .HasColumnType("int(11)")
                    .HasComment("受培训的外部导游次数");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wbdycs)
                    .HasColumnName("WBDYCS")
                    .HasColumnType("int(11)")
                    .HasComment("外部导游次数");

                entity.Property(e => e.Yf)
                    .HasColumnName("YF")
                    .HasColumnType("varchar(50)")
                    .HasComment("月份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ykzrcs)
                    .HasColumnName("YKZRCS")
                    .HasColumnType("int(11)")
                    .HasComment("游客总人次数");

                entity.Property(e => e.Yyykrcs)
                    .HasColumnName("YYYKRCS")
                    .HasColumnType("int(11)")
                    .HasComment("预约游客人次数");
            });

            modelBuilder.Entity<GlyjcYkxyndjl>(entity =>
            {
                entity.ToTable("glyjc_ykxyndjl");

                entity.HasComment("游客效益年度记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Csxggzhjydjmsl)
                    .HasColumnName("CSXGGZHJYDJMSL")
                    .HasColumnType("int(11)")
                    .HasComment("从事相关工作和经营的居民数量");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Glbmjyyfwsr)
                    .HasColumnName("GLBMJYYFWSR")
                    .HasComment("管理部门经营与服务收入");

                entity.Property(e => e.Mpsr)
                    .HasColumnName("MPSR")
                    .HasComment("门票收入");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(50)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcYkyxpg>(entity =>
            {
                entity.ToTable("glyjc_ykyxpg");

                entity.HasComment("游客影响评估");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(50)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgr)
                    .HasColumnName("PGR")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgsm)
                    .HasColumnName("PGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("评估说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yf)
                    .HasColumnName("YF")
                    .HasColumnType("varchar(50)")
                    .HasComment("月份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYt>(entity =>
            {
                entity.ToTable("glyjc_yt");

                entity.HasComment("舆图");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxfj)
                    .HasColumnName("YXFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("影像附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYtbhqk>(entity =>
            {
                entity.ToTable("glyjc_ytbhqk");

                entity.HasIndex(e => e.Year)
                    .HasName("index_year");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(100)")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Area)
                    .HasColumnName("AREA")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("占地/建筑面积");

                entity.Property(e => e.Buildtype)
                    .HasColumnName("BUILDTYPE")
                    .HasColumnType("varchar(100)")
                    .HasComment("建筑类型")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Changeres)
                    .HasColumnName("CHANGERES")
                    .HasColumnType("varchar(200)")
                    .HasComment("新增/改变原因")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Hycontent)
                    .HasColumnName("HYCONTENT")
                    .HasColumnType("varchar(50)")
                    .HasComment("行业代码内容")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.HytypeEj)
                    .HasColumnName("HYTYPE_EJ")
                    .HasColumnType("varchar(20)")
                    .HasComment("行业类型(二级)")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.HytypeYj)
                    .HasColumnName("HYTYPE_YJ")
                    .HasColumnType("varchar(10)")
                    .HasComment("行业类型(一级)")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Lrnf)
                    .HasColumnName("LRNF")
                    .HasColumnType("char(4)")
                    .HasComment("录入年份")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(20)")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Place)
                    .HasColumnName("PLACE")
                    .HasColumnType("varchar(100)")
                    .HasComment("位置/住所")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("REMARK")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(100)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Type)
                    .HasColumnName("TYPE")
                    .HasColumnType("varchar(10)")
                    .HasComment("改变类型")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Year)
                    .HasColumnName("YEAR")
                    .HasColumnType("char(4)")
                    .HasComment("公布年代")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.YttypeLy)
                    .HasColumnName("YTTYPE_LY")
                    .HasColumnType("varchar(100)")
                    .HasComment("业态类型（旅游商业态）")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.YttypeSq)
                    .HasColumnName("YTTYPE_SQ")
                    .HasColumnType("varchar(100)")
                    .HasComment("业态类型（社区商业态）")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Zttype)
                    .HasColumnName("ZTTYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("个体/主体类型")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");
            });

            modelBuilder.Entity<GlyjcYtbhqk1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_ytbhqk1");

                entity.Property(e => e.Area)
                    .HasColumnName("AREA")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("占地/建筑面积");

                entity.Property(e => e.Buildtype)
                    .HasColumnName("BUILDTYPE")
                    .HasColumnType("varchar(100)")
                    .HasComment("建筑类型")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Changeres)
                    .HasColumnName("CHANGERES")
                    .HasColumnType("varchar(200)")
                    .HasComment("新增/改变原因")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Hycontent)
                    .HasColumnName("HYCONTENT")
                    .HasColumnType("varchar(50)")
                    .HasComment("行业代码内容")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.HytypeEj)
                    .HasColumnName("HYTYPE_EJ")
                    .HasColumnType("varchar(20)")
                    .HasComment("行业类型(二级)")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.HytypeYj)
                    .HasColumnName("HYTYPE_YJ")
                    .HasColumnType("varchar(10)")
                    .HasComment("行业类型(一级)")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(100)")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Lrnf)
                    .HasColumnName("LRNF")
                    .HasColumnType("char(4)")
                    .HasComment("录入年份")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Onlyid)
                    .IsRequired()
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(20)")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Place)
                    .HasColumnName("PLACE")
                    .HasColumnType("varchar(100)")
                    .HasComment("位置/住所")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("REMARK")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Type)
                    .HasColumnName("TYPE")
                    .HasColumnType("varchar(10)")
                    .HasComment("改变类型")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Year)
                    .HasColumnName("YEAR")
                    .HasColumnType("char(4)")
                    .HasComment("公布年代")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.YttypeLy)
                    .HasColumnName("YTTYPE_LY")
                    .HasColumnType("varchar(100)")
                    .HasComment("业态类型（旅游商业态）")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.YttypeSq)
                    .HasColumnName("YTTYPE_SQ")
                    .HasColumnType("varchar(100)")
                    .HasComment("业态类型（社区商业态）")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Zttype)
                    .HasColumnName("ZTTYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("个体/主体类型")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");
            });

            modelBuilder.Entity<GlyjcYtbhqk1018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_ytbhqk1018");

                entity.Property(e => e.Area)
                    .HasColumnName("AREA")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("占地/建筑面积");

                entity.Property(e => e.Buildtype)
                    .HasColumnName("BUILDTYPE")
                    .HasColumnType("varchar(100)")
                    .HasComment("建筑类型")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Changeres)
                    .HasColumnName("CHANGERES")
                    .HasColumnType("varchar(200)")
                    .HasComment("新增/改变原因")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Hycontent)
                    .HasColumnName("HYCONTENT")
                    .HasColumnType("varchar(50)")
                    .HasComment("行业代码内容")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.HytypeEj)
                    .HasColumnName("HYTYPE_EJ")
                    .HasColumnType("varchar(20)")
                    .HasComment("行业类型(二级)")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.HytypeYj)
                    .HasColumnName("HYTYPE_YJ")
                    .HasColumnType("varchar(10)")
                    .HasComment("行业类型(一级)")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(100)")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Lrnf)
                    .HasColumnName("LRNF")
                    .HasColumnType("char(4)")
                    .HasComment("录入年份")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(20)")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Place)
                    .HasColumnName("PLACE")
                    .HasColumnType("varchar(100)")
                    .HasComment("位置/住所")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("REMARK")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(100)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Type)
                    .HasColumnName("TYPE")
                    .HasColumnType("varchar(10)")
                    .HasComment("改变类型")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Year)
                    .HasColumnName("YEAR")
                    .HasColumnType("char(4)")
                    .HasComment("公布年代")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.YttypeLy)
                    .HasColumnName("YTTYPE_LY")
                    .HasColumnType("varchar(100)")
                    .HasComment("业态类型（旅游商业态）")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.YttypeSq)
                    .HasColumnName("YTTYPE_SQ")
                    .HasColumnType("varchar(100)")
                    .HasComment("业态类型（社区商业态）")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Zttype)
                    .HasColumnName("ZTTYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("个体/主体类型")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");
            });

            modelBuilder.Entity<GlyjcZjzxfx>(entity =>
            {
                entity.ToTable("glyjc_zjzxfx");

                entity.HasComment("专家在线分析");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bgfjmc)
                    .HasColumnName("BGFJMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("报告附件名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bgnrjj)
                    .HasColumnName("BGNRJJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("报告内容简介")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fxbgmc)
                    .HasColumnName("FXBGMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("分析报告名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fxsj)
                    .HasColumnName("FXSJ")
                    .HasColumnType("datetime")
                    .HasComment("分析时间");

                entity.Property(e => e.Scr)
                    .HasColumnName("SCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("上传人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scsj)
                    .HasColumnName("SCSJ")
                    .HasColumnType("datetime")
                    .HasComment("上传时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcZrhjjcgzqkjl>(entity =>
            {
                entity.ToTable("glyjc_zrhjjcgzqkjl");

                entity.HasComment("自然环境监测工作情况记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcdxlx)
                    .HasColumnName("JCDXLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcff)
                    .HasColumnName("JCFF")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测方法")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jczq)
                    .HasColumnName("JCZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(100)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zrhjjcxmbh)
                    .HasColumnName("ZRHJJCXMBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("自然环境监测项目编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zrhjjcxmnr)
                    .HasColumnName("ZRHJJCXMNR")
                    .HasColumnType("varchar(200)")
                    .HasComment("自然环境监测项目内容")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcZs>(entity =>
            {
                entity.ToTable("glyjc_zs");

                entity.HasComment("噪声");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcd)
                    .HasColumnName("JCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sj)
                    .HasColumnName("SJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zs)
                    .HasColumnName("ZS")
                    .HasColumnType("varchar(50)")
                    .HasComment("噪声")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcZsSs>(entity =>
            {
                entity.ToTable("glyjc_zs_ss");

                entity.HasComment("志书、史书");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcZtgjbhtjbhjl>(entity =>
            {
                entity.ToTable("glyjc_ztgjbhtjbhjl");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(40)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhevent)
                    .HasColumnName("BHEVENT")
                    .HasColumnType("varchar(200)")
                    .HasComment("变化事件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhsj)
                    .HasColumnName("BHSJ")
                    .HasColumnType("datetime")
                    .HasComment("变化时间");

                entity.Property(e => e.Bhyy)
                    .HasColumnName("BHYY")
                    .HasColumnType("text")
                    .HasComment("变化原因")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(40)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xwzt)
                    .HasColumnName("XWZT")
                    .HasColumnType("varchar(200)")
                    .HasComment("行为主体")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Year)
                    .HasColumnName("YEAR")
                    .HasColumnType("varchar(20)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcZtgjbhtjbhjl2>(entity =>
            {
                entity.ToTable("glyjc_ztgjbhtjbhjl2");

                entity.HasComment("总体格局变化图及变化记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qksm)
                    .HasColumnName("QKSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("情况说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(50)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ztgjbhturl)
                    .HasColumnName("ZTGJBHTURL")
                    .HasColumnType("varchar(200)")
                    .HasComment("总体格局变化图URL")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcZtgjbhtndjl>(entity =>
            {
                entity.ToTable("glyjc_ztgjbhtndjl");

                entity.HasComment("遗产总图年度记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(200)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Url)
                    .HasColumnName("URL")
                    .HasColumnType("varchar(500)")
                    .HasComment("遗产总图URL")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcZwWdl>(entity =>
            {
                entity.ToTable("glyjc_zw_wdl");

                entity.HasComment("植物病害(文档类)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gxyxmj)
                    .HasColumnName("GXYXMJ")
                    .HasComment("根系影响面积");

                entity.Property(e => e.Gxyxsd)
                    .HasColumnName("GXYXSD")
                    .HasComment("根系影响深度");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zwzl)
                    .HasColumnName("ZWZL")
                    .HasColumnType("varchar(50)")
                    .HasComment("植物种类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcZwWdlBhdcjcgzqkjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("glyjc_zw_wdl_bhdcjcgzqkjl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhmc)
                    .HasColumnName("BHMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gxyxmj)
                    .HasColumnName("GXYXMJ")
                    .HasComment("根系影响面积");

                entity.Property(e => e.Gxyxsd)
                    .HasColumnName("GXYXSD")
                    .HasComment("根系影响深度");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zwzl)
                    .HasColumnName("ZWZL")
                    .HasColumnType("varchar(50)")
                    .HasComment("植物种类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcZwzz>(entity =>
            {
                entity.ToTable("glyjc_zwzz");

                entity.HasComment("职务职责");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zqsm)
                    .HasColumnName("ZQSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("职权说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zryq)
                    .HasColumnName("ZRYQ")
                    .HasColumnType("varchar(500)")
                    .HasComment("责任要求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zwfw)
                    .HasColumnName("ZWFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("职务范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zwmc)
                    .HasColumnName("ZWMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("职务名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zzjgid)
                    .HasColumnName("ZZJGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("组织机构ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcZxWdl>(entity =>
            {
                entity.ToTable("glyjc_zx_wdl");

                entity.HasComment("糟朽病害(文档类)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gjscmj)
                    .HasColumnName("GJSCMJ")
                    .HasComment("构件受潮面积");

                entity.Property(e => e.Gjzxmj)
                    .HasColumnName("GJZXMJ")
                    .HasComment("构件糟朽面积");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scjysj)
                    .HasColumnName("SCJYSJ")
                    .HasColumnType("datetime")
                    .HasComment("上次降雨时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcZxWdlBhdcjcgzqkjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("glyjc_zx_wdl_bhdcjcgzqkjl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhmc)
                    .HasColumnName("BHMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gjscmj)
                    .HasColumnName("GJSCMJ")
                    .HasComment("构件受潮面积");

                entity.Property(e => e.Gjzxmj)
                    .HasColumnName("GJZXMJ")
                    .HasComment("构件糟朽面积");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scjysj)
                    .HasColumnName("SCJYSJ")
                    .HasColumnType("datetime")
                    .HasComment("上次降雨时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcZxbhglfggz>(entity =>
            {
                entity.ToTable("glyjc_zxbhglfggz");

                entity.HasComment("专项保护管理法规规章");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gbsj)
                    .HasColumnName("GBSJ")
                    .HasColumnType("datetime")
                    .HasComment("公布时间");

                entity.Property(e => e.Gbwh)
                    .HasColumnName("GBWH")
                    .HasColumnType("varchar(50)")
                    .HasComment("公布文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lb)
                    .HasColumnName("LB")
                    .HasColumnType("varchar(50)")
                    .HasComment("类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sssj)
                    .HasColumnName("SSSJ")
                    .HasColumnType("datetime")
                    .HasComment("实施时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wjnr)
                    .HasColumnName("WJNR")
                    .HasColumnType("varchar(4000)")
                    .HasComment("文件内容")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcZz>(entity =>
            {
                entity.ToTable("glyjc_zz");

                entity.HasComment("专著");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcZzjg>(entity =>
            {
                entity.ToTable("glyjc_zzjg");

                entity.HasComment("组织机构");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cxrq)
                    .HasColumnName("CXRQ")
                    .HasColumnType("datetime")
                    .HasComment("撤消日期");

                entity.Property(e => e.Dz)
                    .HasColumnName("DZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fjjgid)
                    .HasColumnName("FJJGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级机构ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sm)
                    .HasColumnName("SM")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wz)
                    .HasColumnName("WZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("网址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.X)
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzqbm)
                    .HasColumnName("XZQBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("行政区编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Y)
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zzjgdm)
                    .HasColumnName("ZZJGDM")
                    .HasColumnType("varchar(50)")
                    .HasComment("组织机构代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zzjgmc)
                    .HasColumnName("ZZJGMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("组织机构名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zzjgzz)
                    .HasColumnName("ZZJGZZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("组织机构职责")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JczlStzlcfwz>(entity =>
            {
                entity.ToTable("jczl_stzlcfwz");

                entity.HasComment("实体资料存放位置");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzsm)
                    .HasColumnName("bzsm")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fjid)
                    .HasColumnName("fjid")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("lx")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wzbm)
                    .HasColumnName("wzbm")
                    .HasColumnType("varchar(50)")
                    .HasComment("位置编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JczlZlfl>(entity =>
            {
                entity.ToTable("jczl_zlfl");

                entity.HasComment("资料分类");

                entity.HasIndex(e => e.Fjid)
                    .HasName("FK_88C8468C1AE94530");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzsm)
                    .HasColumnName("bzsm")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fjid)
                    .HasColumnName("fjid")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Flbm)
                    .HasColumnName("flbm")
                    .HasColumnType("varchar(50)")
                    .HasComment("分类编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xsmc)
                    .HasColumnName("xsmc")
                    .HasColumnType("varchar(50)")
                    .HasComment("显示名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Fj)
                    .WithMany(p => p.InverseFj)
                    .HasForeignKey(d => d.Fjid)
                    .HasConstraintName("FK_88C8468C1AE94530");
            });

            modelBuilder.Entity<JczlZljl>(entity =>
            {
                entity.ToTable("jczl_zljl");

                entity.HasComment("资料记录");

                entity.HasIndex(e => e.Jczlflid)
                    .HasName("FK_6E96D6F64DCA4D57");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bgdw)
                    .HasColumnName("bgdw")
                    .HasColumnType("varchar(50)")
                    .HasComment("保管单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bt)
                    .HasColumnName("bt")
                    .HasColumnType("varchar(50)")
                    .HasComment("标题")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Gjc)
                    .HasColumnName("gjc")
                    .HasColumnType("varchar(50)")
                    .HasComment("关键词")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jczlflid)
                    .HasColumnName("jczlflid")
                    .HasColumnType("varchar(50)")
                    .HasComment("基础资料分类ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfdzzl)
                    .HasColumnName("sfdzzl")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否电子资料");

                entity.Property(e => e.Sfsmtp)
                    .HasColumnName("sfsmtp")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否扫描图片");

                entity.Property(e => e.Sfstzl)
                    .HasColumnName("sfstzl")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否实体资料");

                entity.Property(e => e.Slrxm)
                    .HasColumnName("slrxm")
                    .HasColumnType("varchar(50)")
                    .HasComment("收录人姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Slsj)
                    .HasColumnName("slsj")
                    .HasColumnType("datetime")
                    .HasComment("收录时间");

                entity.Property(e => e.Stzlwzbh)
                    .HasColumnName("stzlwzbh")
                    .HasColumnType("varchar(50)")
                    .HasComment("实体资料位置编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzqbm)
                    .HasColumnName("xzqbm")
                    .HasColumnType("varchar(50)")
                    .HasComment("行政区编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zlbm)
                    .HasColumnName("zlbm")
                    .HasColumnType("varchar(50)")
                    .HasComment("资料编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zlsm)
                    .HasColumnName("zlsm")
                    .HasColumnType("varchar(50)")
                    .HasComment("资料说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Jczlfl)
                    .WithMany(p => p.JczlZljl)
                    .HasForeignKey(d => d.Jczlflid)
                    .HasConstraintName("FK_6E96D6F64DCA4D57");
            });

            modelBuilder.Entity<JczlZljlDzwj>(entity =>
            {
                entity.ToTable("jczl_zljl_dzwj");

                entity.HasComment("资料记录_电子文件");

                entity.HasIndex(e => e.Zljlid)
                    .HasName("FK_299402D21A2A4CC3");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scrid)
                    .HasColumnName("scrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("上传人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scsj)
                    .HasColumnName("scsj")
                    .HasColumnType("datetime")
                    .HasComment("上传时间");

                entity.Property(e => e.Wjgs)
                    .HasColumnName("wjgs")
                    .HasColumnType("varchar(50)")
                    .HasComment("文件格式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wjlj)
                    .HasColumnName("wjlj")
                    .HasColumnType("varchar(200)")
                    .HasComment("文件路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wjmc)
                    .HasColumnName("wjmc")
                    .HasColumnType("varchar(50)")
                    .HasComment("文件名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zljlid)
                    .HasColumnName("zljlid")
                    .HasColumnType("varchar(50)")
                    .HasComment("资料记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Zljl)
                    .WithMany(p => p.JczlZljlDzwj)
                    .HasForeignKey(d => d.Zljlid)
                    .HasConstraintName("FK_299402D21A2A4CC3");
            });

            modelBuilder.Entity<JieruAqiReportDay>(entity =>
            {
                entity.ToTable("jieru_aqi_report_day");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aqi)
                    .HasColumnName("aqi")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数（AQI）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiClass)
                    .HasColumnName("aqi_class")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数级别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiLbColor)
                    .HasColumnName("aqi_lb_color")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数类别颜色")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiLbLb)
                    .HasColumnName("aqi_lb_lb")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数类别（类别）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Co24hDensity)
                    .HasColumnName("co_24h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("一氧化碳（CO）24小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Co24hSubindex)
                    .HasColumnName("co_24h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("一氧化碳（CO）24小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Klw24hDensity)
                    .HasColumnName("klw_24h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=10µm）24小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw24hSubindex)
                    .HasColumnName("klw_24h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=10µm）24小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw2d524hDensity)
                    .HasColumnName("klw2d5_24h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=2.5µm）24小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw2d524hSubindex)
                    .HasColumnName("klw2d5_24h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=2.5µm）24小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.MajorPollutant)
                    .HasColumnName("major_pollutant")
                    .HasColumnType("varchar(20)")
                    .HasComment("首要污染物")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.No224hDensity)
                    .HasColumnName("no2_24h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化氮（NO2）24小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.No224hSubindex)
                    .HasColumnName("no2_24h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化氮（NO2）24小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O31hDensity)
                    .HasColumnName("o3_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O31hSubindex)
                    .HasColumnName("o3_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O38hpjDensity)
                    .HasColumnName("o3_8hpj_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）8小时滑动平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O38hpjSubindex)
                    .HasColumnName("o3_8hpj_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）8小时滑动平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ReportDate)
                    .HasColumnName("report_date")
                    .HasColumnType("datetime")
                    .HasComment("发布时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态(整型)");

                entity.Property(e => e.So224hDensity)
                    .HasColumnName("so2_24h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化硫（SO2）24小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.So224hSubindex)
                    .HasColumnName("so2_24h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化硫（SO2）24小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<JieruAqiReportHour>(entity =>
            {
                entity.ToTable("jieru_aqi_report_hour");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aqi)
                    .HasColumnName("aqi")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数（AQI）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiClass)
                    .HasColumnName("aqi_class")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数级别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiLbColor)
                    .HasColumnName("aqi_lb_color")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数类别颜色")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiLbLb)
                    .HasColumnName("aqi_lb_lb")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数类别（类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Co1hDensity)
                    .HasColumnName("co_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("一氧化碳（CO）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Co1hSubindex)
                    .HasColumnName("co_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("一氧化碳（CO）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Klw1hDensity)
                    .HasColumnName("klw_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=10µm）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw1hSubindex)
                    .HasColumnName("klw_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=10µm）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw2d51hDensity)
                    .HasColumnName("klw2d5_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=2.5µm）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw2d51hSubindex)
                    .HasColumnName("klw2d5_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=2.5µm）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.MajorPollutant)
                    .HasColumnName("major_pollutant")
                    .HasColumnType("varchar(20)")
                    .HasComment("首要污染物")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.No21hDensity)
                    .HasColumnName("no2_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化氮（NO2）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.No21hSubindex)
                    .HasColumnName("no2_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化氮（NO2）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O31hDensity)
                    .HasColumnName("o3_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O31hSubindex)
                    .HasColumnName("o3_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O38hpjDensity)
                    .HasColumnName("o3_8hpj_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）8小时滑动平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O38hpjSubindex)
                    .HasColumnName("o3_8hpj_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）8小时滑动平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ReportDate)
                    .HasColumnName("report_date")
                    .HasColumnType("datetime")
                    .HasComment("发布时间，主键");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.So21hDensity)
                    .HasColumnName("so2_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化硫（SO2）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.So21hSubindex)
                    .HasColumnName("so2_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化硫（SO2）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<JieruArticle>(entity =>
            {
                entity.ToTable("jieru_article");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ArticleAuthor)
                    .HasColumnName("article_author")
                    .HasColumnType("varchar(50)")
                    .HasComment("文章作者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ArticleContent)
                    .HasColumnName("article_content")
                    .HasColumnType("longtext")
                    .HasComment("文章内容")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ArticleDatetime)
                    .HasColumnName("article_datetime")
                    .HasColumnType("datetime")
                    .HasComment("发布时间");

                entity.Property(e => e.ArticleId)
                    .HasColumnName("article_id")
                    .HasColumnType("varchar(50)")
                    .HasComment("文章ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ArticleSource)
                    .HasColumnName("article_source")
                    .HasColumnType("varchar(100)")
                    .HasComment("文章来源")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<JieruCampusInformation>(entity =>
            {
                entity.ToTable("jieru_campus_information");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasColumnType("varchar(20)")
                    .HasDefaultValueSql("''")
                    .HasComment("景点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.NumEnter)
                    .HasColumnName("num_enter")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时入园人数");

                entity.Property(e => e.NumIn)
                    .HasColumnName("num_in")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时在园人数");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<JieruCampusInformation20160903>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("jieru_campus_information20160903");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasColumnType("varchar(20)")
                    .HasDefaultValueSql("''")
                    .HasComment("景点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.NumEnter)
                    .HasColumnName("num_enter")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时入园人数");

                entity.Property(e => e.NumIn)
                    .HasColumnName("num_in")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时在园人数");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<JieruCampusInformation20161017>(entity =>
            {
                entity.ToTable("jieru_campus_information_20161017");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasColumnType("varchar(20)")
                    .HasDefaultValueSql("''")
                    .HasComment("景点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.NumEnter)
                    .HasColumnName("num_enter")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时入园人数");

                entity.Property(e => e.NumIn)
                    .HasColumnName("num_in")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时在园人数");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<JieruCampusInformation2018070120190630>(entity =>
            {
                entity.ToTable("jieru_campus_information_2018_07_01__2019_06_30");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasColumnType("varchar(20)")
                    .HasDefaultValueSql("''")
                    .HasComment("景点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.NumEnter)
                    .HasColumnName("num_enter")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时入园人数");

                entity.Property(e => e.NumIn)
                    .HasColumnName("num_in")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时在园人数");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<JieruCampusInformation201904>(entity =>
            {
                entity.ToTable("jieru_campus_information_201904");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasColumnType("varchar(20)")
                    .HasDefaultValueSql("''")
                    .HasComment("景点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.NumEnter)
                    .HasColumnName("num_enter")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时入园人数");

                entity.Property(e => e.NumIn)
                    .HasColumnName("num_in")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时在园人数");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<JieruCampusInformation20200224>(entity =>
            {
                entity.ToTable("jieru_campus_information_20200224");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasColumnType("varchar(20)")
                    .HasDefaultValueSql("''")
                    .HasComment("景点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.NumEnter)
                    .HasColumnName("num_enter")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时入园人数");

                entity.Property(e => e.NumIn)
                    .HasColumnName("num_in")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时在园人数");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<JieruCampusInformationCopy>(entity =>
            {
                entity.ToTable("jieru_campus_information_copy");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasColumnType("varchar(20)")
                    .HasDefaultValueSql("''")
                    .HasComment("景点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.NumEnter)
                    .HasColumnName("num_enter")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时入园人数");

                entity.Property(e => e.NumIn)
                    .HasColumnName("num_in")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时在园人数");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<JieruCampusInformationCopy1>(entity =>
            {
                entity.ToTable("jieru_campus_information_copy1");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasColumnType("varchar(20)")
                    .HasDefaultValueSql("''")
                    .HasComment("景点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.NumEnter)
                    .HasColumnName("num_enter")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时入园人数");

                entity.Property(e => e.NumIn)
                    .HasColumnName("num_in")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时在园人数");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<JieruCampusInformationCopy2>(entity =>
            {
                entity.ToTable("jieru_campus_information_copy2");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasColumnType("varchar(20)")
                    .HasDefaultValueSql("''")
                    .HasComment("景点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.NumEnter)
                    .HasColumnName("num_enter")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时入园人数");

                entity.Property(e => e.NumIn)
                    .HasColumnName("num_in")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时在园人数");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<JieruCampusInformationCopyhepeng>(entity =>
            {
                entity.ToTable("jieru_campus_information_copyhepeng");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasColumnType("varchar(20)")
                    .HasDefaultValueSql("''")
                    .HasComment("景点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.NumEnter)
                    .HasColumnName("num_enter")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时入园人数");

                entity.Property(e => e.NumIn)
                    .HasColumnName("num_in")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时在园人数");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<JieruConfig>(entity =>
            {
                entity.ToTable("jieru_config");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(80)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AlertJudgeUrl)
                    .HasColumnName("alert_judge_url")
                    .HasColumnType("varchar(255)")
                    .HasComment("预警数据抓取为位置url")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.GrabCycle)
                    .HasColumnName("grab_cycle")
                    .HasColumnType("int(11)")
                    .HasComment("抓取周期");

                entity.Property(e => e.GrabMainUrl)
                    .HasColumnName("grab_main_url")
                    .HasColumnType("varchar(255)")
                    .HasComment("数据抓取地址（只有一个抓取url）")
                    .HasCharSet("utf32")
                    .HasCollation("utf32_general_ci");

                entity.Property(e => e.GrabTime)
                    .HasColumnName("grab_time")
                    .HasColumnType("int(11)")
                    .HasComment("抓取时间");

                entity.Property(e => e.GrabType)
                    .IsRequired()
                    .HasColumnName("grab_type")
                    .HasColumnType("varchar(40)")
                    .HasComment("抓取类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.IsStorage)
                    .HasColumnName("is_storage")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否存库");

                entity.Property(e => e.Remark)
                    .HasColumnName("remark")
                    .HasColumnType("varchar(255)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JieruDzsj>(entity =>
            {
                entity.ToTable("jieru_dzsj");

                entity.HasComment("地震数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Depth)
                    .HasColumnName("depth")
                    .HasColumnType("varchar(50)")
                    .HasComment("深度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Lat)
                    .HasColumnName("lat")
                    .HasColumnType("varchar(50)")
                    .HasComment("纬度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lon)
                    .HasColumnName("lon")
                    .HasColumnType("varchar(50)")
                    .HasComment("经度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Power)
                    .HasColumnName("power")
                    .HasColumnType("varchar(50)")
                    .HasComment("震级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("地震时刻");

                entity.Property(e => e.Title)
                    .HasColumnName("title")
                    .HasColumnType("varchar(200)")
                    .HasComment("标题描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<JieruHszljcszbb>(entity =>
            {
                entity.ToTable("jieru_hszljcszbb");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ad)
                    .HasColumnName("AD")
                    .HasComment("氨-氮mg/L");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cycc)
                    .HasColumnName("CYCC")
                    .HasColumnType("varchar(20)")
                    .HasComment("采样层次")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cysd)
                    .HasColumnName("CYSD")
                    .HasComment("采样深度m");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.G).HasComment("镉mg/L");

                entity.Property(e => e.Ge).HasComment("铬mg/L");

                entity.Property(e => e.Gong).HasComment("汞mg/L");

                entity.Property(e => e.Gsy)
                    .HasColumnName("GSY")
                    .HasComment("硅酸盐mg/L");

                entity.Property(e => e.Hxxyl)
                    .HasColumnName("HXXYL")
                    .HasComment("化学需氧量mg/L");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测日期");

                entity.Property(e => e.Jczw)
                    .HasColumnName("JCZW")
                    .HasColumnType("varchar(5)")
                    .HasComment("监测站位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jhjd)
                    .HasColumnName("JHJD")
                    .HasColumnType("float(7,4)")
                    .HasComment("计划经度");

                entity.Property(e => e.Jhwd)
                    .HasColumnName("JHWD")
                    .HasColumnType("float(7,4)")
                    .HasComment("计划纬度");

                entity.Property(e => e.Lhw)
                    .HasColumnName("LHW")
                    .HasComment("硫化物ug/L");

                entity.Property(e => e.Lsy)
                    .HasColumnName("LSY")
                    .HasComment("磷酸盐mg/L");

                entity.Property(e => e.PH)
                    .HasColumnName("pH")
                    .HasComment("pH");

                entity.Property(e => e.Qian).HasComment("铅mg/L");

                entity.Property(e => e.Rjy)
                    .HasColumnName("RJY")
                    .HasComment("溶解氧mg/L");

                entity.Property(e => e.Scjd)
                    .HasColumnName("SCJD")
                    .HasColumnType("float(7,4)")
                    .HasComment("实测经度");

                entity.Property(e => e.Scwd)
                    .HasColumnName("SCWD")
                    .HasColumnType("float(7,4)")
                    .HasComment("实测纬度");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shen).HasComment("砷mg/L");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Ss)
                    .HasColumnName("SS")
                    .HasComment("水深m");

                entity.Property(e => e.Syl)
                    .HasColumnName("SYL")
                    .HasComment("石油类mg/L");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tong).HasComment("铜mg/L");

                entity.Property(e => e.Xfw)
                    .HasColumnName("XFW")
                    .HasComment("悬浮物mg/L");

                entity.Property(e => e.Xin).HasComment("锌mg/L");

                entity.Property(e => e.Xsyd)
                    .HasColumnName("XSYD")
                    .HasComment("硝酸盐-氮mg/L");

                entity.Property(e => e.Yd)
                    .HasColumnName("YD")
                    .HasComment("盐度");

                entity.Property(e => e.Ylsa)
                    .HasColumnName("YLSA")
                    .HasComment("叶绿素-aug/L");

                entity.Property(e => e.Yxsyd)
                    .HasColumnName("YXSYD")
                    .HasComment("亚硝酸盐-氮mg/L");

                entity.Property(e => e.Zd)
                    .HasColumnName("ZD")
                    .HasComment("总氮mg/L");

                entity.Property(e => e.Zl)
                    .HasColumnName("ZL")
                    .HasComment("总磷mg/L");
            });

            modelBuilder.Entity<JieruHyyb>(entity =>
            {
                entity.ToTable("jieru_hyyb");

                entity.HasComment("数据接入_海洋预报");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bcswd)
                    .HasColumnName("BCSWD")
                    .HasColumnType("varchar(20)")
                    .HasComment("表层水温-低d")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bcswg)
                    .HasColumnName("BCSWG")
                    .HasColumnType("varchar(20)")
                    .HasComment("表层水温-高d")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(1000)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cz)
                    .HasColumnName("CZ")
                    .HasColumnType("varchar(100)")
                    .HasComment("传真")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsk1)
                    .HasColumnName("DCSK1")
                    .HasColumnType("varchar(20)")
                    .HasComment("低潮时刻1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsk2)
                    .HasColumnName("DCSK2")
                    .HasColumnType("varchar(20)")
                    .HasComment("低潮时刻2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dh)
                    .HasColumnName("DH")
                    .HasColumnType("varchar(100)")
                    .HasComment("电话")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fbjg1)
                    .HasColumnName("FBJG1")
                    .HasColumnType("varchar(100)")
                    .HasComment("发布机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbjg2)
                    .HasColumnName("FBJG2")
                    .HasColumnType("varchar(100)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbsj)
                    .HasColumnName("FBSJ")
                    .HasColumnType("varchar(20)")
                    .HasComment("发布时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gcsk1)
                    .HasColumnName("GCSK1")
                    .HasColumnType("varchar(20)")
                    .HasComment("高潮时刻1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gcsk2)
                    .HasColumnName("GCSK2")
                    .HasColumnType("varchar(20)")
                    .HasComment("高潮时刻2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Hld)
                    .HasColumnName("HLD")
                    .HasColumnType("varchar(10)")
                    .HasComment("海浪低m")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Hlg)
                    .HasColumnName("HLG")
                    .HasColumnType("varchar(10)")
                    .HasComment("海浪高m")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Hljb)
                    .HasColumnName("HLJB")
                    .HasColumnType("varchar(20)")
                    .HasComment("海浪级别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Hymc)
                    .HasColumnName("HYMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("海域名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjmc)
                    .HasColumnName("SJMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("数据名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yby)
                    .HasColumnName("YBY")
                    .HasColumnType("varchar(100)")
                    .HasComment("预报员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JieruHyyb2>(entity =>
            {
                entity.ToTable("jieru_hyyb2");

                entity.HasComment("数据接入_海洋预报");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bcswd)
                    .HasColumnName("BCSWD")
                    .HasColumnType("varchar(20)")
                    .HasComment("表层水温-低d")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bcswg)
                    .HasColumnName("BCSWG")
                    .HasColumnType("varchar(20)")
                    .HasComment("表层水温-高d")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(1000)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cz)
                    .HasColumnName("CZ")
                    .HasColumnType("varchar(100)")
                    .HasComment("传真")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsk1)
                    .HasColumnName("DCSK1")
                    .HasColumnType("varchar(20)")
                    .HasComment("低潮时刻1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsk2)
                    .HasColumnName("DCSK2")
                    .HasColumnType("varchar(20)")
                    .HasComment("低潮时刻2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dh)
                    .HasColumnName("DH")
                    .HasColumnType("varchar(100)")
                    .HasComment("电话")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbjg1)
                    .HasColumnName("FBJG1")
                    .HasColumnType("varchar(100)")
                    .HasComment("发布机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbjg2)
                    .HasColumnName("FBJG2")
                    .HasColumnType("varchar(100)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbsj)
                    .HasColumnName("FBSJ")
                    .HasColumnType("varchar(20)")
                    .HasComment("发布时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gcsk1)
                    .HasColumnName("GCSK1")
                    .HasColumnType("varchar(20)")
                    .HasComment("高潮时刻1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gcsk2)
                    .HasColumnName("GCSK2")
                    .HasColumnType("varchar(20)")
                    .HasComment("高潮时刻2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Hld)
                    .HasColumnName("HLD")
                    .HasColumnType("varchar(10)")
                    .HasComment("海浪低m")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Hlg)
                    .HasColumnName("HLG")
                    .HasColumnType("varchar(10)")
                    .HasComment("海浪高m")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Hljb)
                    .HasColumnName("HLJB")
                    .HasColumnType("varchar(20)")
                    .HasComment("海浪级别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Hymc)
                    .HasColumnName("HYMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("海域名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmc)
                    .HasColumnName("SJMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("数据名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yby)
                    .HasColumnName("YBY")
                    .HasColumnType("varchar(100)")
                    .HasComment("预报员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JieruHyychjyb>(entity =>
            {
                entity.ToTable("jieru_hyychjyb");

                entity.HasComment("数据接入_海洋浴场环境预报");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(1000)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dysyd)
                    .HasColumnName("DYSYD")
                    .HasColumnType("varchar(20)")
                    .HasComment("冬泳适宜度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbsj)
                    .HasColumnName("FBSJ")
                    .HasColumnType("datetime")
                    .HasComment("发布时间");

                entity.Property(e => e.Hl)
                    .HasColumnName("HL")
                    .HasColumnType("varchar(20)")
                    .HasComment("海浪m")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jsymsd)
                    .HasColumnName("JSYMSD")
                    .HasColumnType("varchar(100)")
                    .HasComment("礁石淹没时段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Stylzs)
                    .HasColumnName("STYLZS")
                    .HasColumnType("varchar(100)")
                    .HasComment("沙滩娱乐指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sw)
                    .HasColumnName("SW")
                    .HasColumnType("varchar(20)")
                    .HasComment("水温d")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ts)
                    .HasColumnName("TS")
                    .HasColumnType("varchar(200)")
                    .HasComment("提示")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycmc)
                    .HasColumnName("YCMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("浴场名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zjyysd)
                    .HasColumnName("ZJYYSD")
                    .HasColumnType("varchar(100)")
                    .HasComment("最佳游泳时段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JieruHyychjyb2>(entity =>
            {
                entity.ToTable("jieru_hyychjyb2");

                entity.HasComment("数据接入_海洋浴场环境预报");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(1000)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dysyd)
                    .HasColumnName("DYSYD")
                    .HasColumnType("varchar(20)")
                    .HasComment("冬泳适宜度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Hl)
                    .HasColumnName("HL")
                    .HasColumnType("varchar(20)")
                    .HasComment("海浪m")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jsymsd)
                    .HasColumnName("JSYMSD")
                    .HasColumnType("varchar(100)")
                    .HasComment("礁石淹没时段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Stylzs)
                    .HasColumnName("STYLZS")
                    .HasColumnType("varchar(100)")
                    .HasComment("沙滩娱乐指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sw)
                    .HasColumnName("SW")
                    .HasColumnType("varchar(20)")
                    .HasComment("水温d")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ts)
                    .HasColumnName("TS")
                    .HasColumnType("varchar(200)")
                    .HasComment("提示")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycmc)
                    .HasColumnName("YCMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("浴场名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zjyysd)
                    .HasColumnName("ZJYYSD")
                    .HasColumnType("varchar(100)")
                    .HasComment("最佳游泳时段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JieruLog>(entity =>
            {
                entity.ToTable("jieru_log");

                entity.HasComment("接入日志");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ccsm)
                    .HasColumnName("ccsm")
                    .HasColumnType("varchar(500)")
                    .HasComment("出错说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cgzqjls)
                    .HasColumnName("cgzqjls")
                    .HasColumnType("int(11)")
                    .HasComment("成功抓取记录数");

                entity.Property(e => e.Sfcg)
                    .HasColumnName("sfcg")
                    .HasColumnType("bit(1)")
                    .HasComment("是否成功");

                entity.Property(e => e.Zqsj)
                    .HasColumnName("zqsj")
                    .HasColumnType("datetime")
                    .HasComment("抓取时间");

                entity.Property(e => e.Zqxdm)
                    .HasColumnName("zqxdm")
                    .HasColumnType("varchar(50)")
                    .HasComment("抓取项代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JieruSyysj>(entity =>
            {
                entity.ToTable("jieru_syysj");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Alz)
                    .HasColumnName("ALZ")
                    .HasComment("铵离子mg/L");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cydmc)
                    .HasColumnName("CYDMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("采样点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cykssj)
                    .HasColumnName("CYKSSJ")
                    .HasColumnType("datetime")
                    .HasComment("采样开始时间");

                entity.Property(e => e.Cyzzsj)
                    .HasColumnName("CYZZSJ")
                    .HasColumnType("datetime")
                    .HasComment("采样终止时间");

                entity.Property(e => e.Ddl)
                    .HasColumnName("DDL")
                    .HasComment("电导率μS/cm");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Flz)
                    .HasColumnName("FLZ")
                    .HasComment("氟离子mg/L");

                entity.Property(e => e.Glz)
                    .HasColumnName("GLZ")
                    .HasComment("钙离子mg/L");

                entity.Property(e => e.Jlz)
                    .HasColumnName("JLZ")
                    .HasComment("钾离子mg/L");

                entity.Property(e => e.Jslx)
                    .HasColumnName("JSLX")
                    .HasColumnType("varchar(20)")
                    .HasComment("降水类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jyl)
                    .HasColumnName("JYL")
                    .HasComment("降雨量(mm)");

                entity.Property(e => e.Llz)
                    .HasColumnName("LLZ")
                    .HasComment("氯离子mg/L");

                entity.Property(e => e.Lsylz)
                    .HasColumnName("LSYLZ")
                    .HasComment("硫酸盐离子mg/L");

                entity.Property(e => e.Mlz)
                    .HasColumnName("MLZ")
                    .HasComment("镁离子mg/L");

                entity.Property(e => e.Nlz)
                    .HasColumnName("NLZ")
                    .HasComment("钠离子mg/L");

                entity.Property(e => e.PH)
                    .HasColumnName("pH")
                    .HasComment("pH");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xsglz)
                    .HasColumnName("XSGLZ")
                    .HasComment("硝酸根离子mg/L");
            });

            modelBuilder.Entity<JieruSyysj2016年8月18日152903>(entity =>
            {
                entity.ToTable("jieru_syysj_2016年8月18日15:29:03");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Alz)
                    .HasColumnName("ALZ")
                    .HasComment("铵离子mg/L");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cydmc)
                    .HasColumnName("CYDMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("采样点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cykssj)
                    .HasColumnName("CYKSSJ")
                    .HasColumnType("datetime")
                    .HasComment("采样开始时间");

                entity.Property(e => e.Cyzzsj)
                    .HasColumnName("CYZZSJ")
                    .HasColumnType("datetime")
                    .HasComment("采样终止时间");

                entity.Property(e => e.Ddl)
                    .HasColumnName("DDL")
                    .HasComment("电导率μS/cm");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Flz)
                    .HasColumnName("FLZ")
                    .HasComment("氟离子mg/L");

                entity.Property(e => e.Glz)
                    .HasColumnName("GLZ")
                    .HasComment("钙离子mg/L");

                entity.Property(e => e.Jlz)
                    .HasColumnName("JLZ")
                    .HasComment("钾离子mg/L");

                entity.Property(e => e.Jslx)
                    .HasColumnName("JSLX")
                    .HasColumnType("varchar(20)")
                    .HasComment("降水类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jyl)
                    .HasColumnName("JYL")
                    .HasComment("降雨量(mm)");

                entity.Property(e => e.Llz)
                    .HasColumnName("LLZ")
                    .HasComment("氯离子mg/L");

                entity.Property(e => e.Lsylz)
                    .HasColumnName("LSYLZ")
                    .HasComment("硫酸盐离子mg/L");

                entity.Property(e => e.Mlz)
                    .HasColumnName("MLZ")
                    .HasComment("镁离子mg/L");

                entity.Property(e => e.Nlz)
                    .HasColumnName("NLZ")
                    .HasComment("钠离子mg/L");

                entity.Property(e => e.PH)
                    .HasColumnName("pH")
                    .HasComment("pH");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xsglz)
                    .HasColumnName("XSGLZ")
                    .HasComment("硝酸根离子mg/L");
            });

            modelBuilder.Entity<JieruSyysjCopy>(entity =>
            {
                entity.ToTable("jieru_syysj_copy");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Alz)
                    .HasColumnName("ALZ")
                    .HasComment("铵离子mg/L");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cydmc)
                    .HasColumnName("CYDMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("采样点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cykssj)
                    .HasColumnName("CYKSSJ")
                    .HasColumnType("datetime")
                    .HasComment("采样开始时间");

                entity.Property(e => e.Cyzzsj)
                    .HasColumnName("CYZZSJ")
                    .HasColumnType("datetime")
                    .HasComment("采样终止时间");

                entity.Property(e => e.Ddl)
                    .HasColumnName("DDL")
                    .HasComment("电导率μS/cm");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Flz)
                    .HasColumnName("FLZ")
                    .HasComment("氟离子mg/L");

                entity.Property(e => e.Glz)
                    .HasColumnName("GLZ")
                    .HasComment("钙离子mg/L");

                entity.Property(e => e.Jlz)
                    .HasColumnName("JLZ")
                    .HasComment("钾离子mg/L");

                entity.Property(e => e.Jslx)
                    .HasColumnName("JSLX")
                    .HasColumnType("varchar(20)")
                    .HasComment("降水类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jyl)
                    .HasColumnName("JYL")
                    .HasComment("降雨量(mm)");

                entity.Property(e => e.Llz)
                    .HasColumnName("LLZ")
                    .HasComment("氯离子mg/L");

                entity.Property(e => e.Lsylz)
                    .HasColumnName("LSYLZ")
                    .HasComment("硫酸盐离子mg/L");

                entity.Property(e => e.Mlz)
                    .HasColumnName("MLZ")
                    .HasComment("镁离子mg/L");

                entity.Property(e => e.Nlz)
                    .HasColumnName("NLZ")
                    .HasComment("钠离子mg/L");

                entity.Property(e => e.PH)
                    .HasColumnName("pH")
                    .HasComment("pH");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xsglz)
                    .HasColumnName("XSGLZ")
                    .HasComment("硝酸根离子mg/L");
            });

            modelBuilder.Entity<JieruWeatherLive>(entity =>
            {
                entity.ToTable("jieru_weather_live");

                entity.HasComment("鼓浪屿天气实况");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Humidity)
                    .HasColumnName("humidity")
                    .HasColumnType("varchar(20)")
                    .HasComment("当前湿度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pressure)
                    .HasColumnName("pressure")
                    .HasColumnType("varchar(20)")
                    .HasComment("气压")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rain)
                    .HasColumnName("rain")
                    .HasColumnType("varchar(20)")
                    .HasComment("一小时内的降雨量")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Temp)
                    .HasColumnName("temp")
                    .HasColumnType("varchar(20)")
                    .HasComment("当前气温，摄氏度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("发布时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Visibility)
                    .HasColumnName("visibility")
                    .HasColumnType("varchar(20)")
                    .HasComment("能见度，单位为米")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.WindDesc)
                    .HasColumnName("wind_desc")
                    .HasColumnType("varchar(20)")
                    .HasComment("风向描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.WindDirection)
                    .HasColumnName("wind_direction")
                    .HasColumnType("varchar(20)")
                    .HasComment("风向")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.WindSpeed)
                    .HasColumnName("wind_speed")
                    .HasColumnType("varchar(20)")
                    .HasComment("风速")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JieruWeatherTyphoon>(entity =>
            {
                entity.ToTable("jieru_weather_typhoon");

                entity.HasComment("鼓浪屿天气台风");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Code)
                    .HasColumnName("code")
                    .HasColumnType("int(11)")
                    .HasComment("台风代码");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Enname)
                    .HasColumnName("enname")
                    .HasColumnType("varchar(50)")
                    .HasComment("英文名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Happenyear)
                    .HasColumnName("happenyear")
                    .HasColumnType("char(4)")
                    .HasComment("发生年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasColumnType("varchar(50)")
                    .HasComment("台风名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<JieruWeatherTyphoonPath>(entity =>
            {
                entity.ToTable("jieru_weather_typhoon_path");

                entity.HasComment("台风路径");

                entity.HasIndex(e => e.Pid)
                    .HasName("typhoon_info_id");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Airpressure)
                    .HasColumnName("airpressure")
                    .HasColumnType("int(11)")
                    .HasComment("气压");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Latitude)
                    .HasColumnName("latitude")
                    .HasComment("纬度");

                entity.Property(e => e.Longitude)
                    .HasColumnName("longitude")
                    .HasComment("经度");

                entity.Property(e => e.Movedirection)
                    .HasColumnName("movedirection")
                    .HasColumnType("varchar(50)")
                    .HasComment("移动方向")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Movespeed)
                    .HasColumnName("movespeed")
                    .HasColumnType("int(11)")
                    .HasComment("移动速度");

                entity.Property(e => e.Pid)
                    .HasColumnName("pid")
                    .HasColumnType("varchar(50)")
                    .HasComment("父ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("发生时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasColumnType("varchar(50)")
                    .HasComment("台风类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Windpower)
                    .HasColumnName("windpower")
                    .HasColumnType("int(11)")
                    .HasComment("风力");

                entity.Property(e => e.Windradius10)
                    .HasColumnName("windradius10")
                    .HasComment("10级风圈");

                entity.Property(e => e.Windradius12)
                    .HasColumnName("windradius12")
                    .HasComment("12级风圈");

                entity.Property(e => e.Windradius7)
                    .HasColumnName("windradius7")
                    .HasComment("7级风圈");

                entity.Property(e => e.Windspeed)
                    .HasColumnName("windspeed")
                    .HasColumnType("int(11)")
                    .HasComment("风速");

                entity.Property(e => e.Year)
                    .HasColumnName("year")
                    .HasColumnType("char(4)")
                    .HasComment("发生年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.P)
                    .WithMany(p => p.JieruWeatherTyphoonPath)
                    .HasForeignKey(d => d.Pid)
                    .HasConstraintName("fk_typhon_path_pid");
            });

            modelBuilder.Entity<JieruWeatherTyphoonPoint>(entity =>
            {
                entity.ToTable("jieru_weather_typhoon_point");

                entity.HasIndex(e => e.Pid)
                    .HasName("typhoon_path_id");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Airpressure)
                    .HasColumnName("airpressure")
                    .HasColumnType("int(11)")
                    .HasComment("气压");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fbtime)
                    .HasColumnName("fbtime")
                    .HasColumnType("datetime")
                    .HasComment("发布时间");

                entity.Property(e => e.Latitude)
                    .HasColumnName("latitude")
                    .HasComment("纬度");

                entity.Property(e => e.Longitude)
                    .HasColumnName("longitude")
                    .HasComment("经度");

                entity.Property(e => e.Movedirection)
                    .HasColumnName("movedirection")
                    .HasColumnType("varchar(50)")
                    .HasComment("移动方向")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Movespeed)
                    .HasColumnName("movespeed")
                    .HasColumnType("int(11)")
                    .HasComment("移动速度");

                entity.Property(e => e.Pid)
                    .HasColumnName("pid")
                    .HasColumnType("varchar(50)")
                    .HasComment("父ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("发生时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasColumnType("varchar(50)")
                    .HasComment("台风类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Windpower)
                    .HasColumnName("windpower")
                    .HasColumnType("int(11)")
                    .HasComment("风力");

                entity.Property(e => e.Windradius10)
                    .HasColumnName("windradius10")
                    .HasComment("10级风圈");

                entity.Property(e => e.Windradius12)
                    .HasColumnName("windradius12")
                    .HasComment("12级风圈");

                entity.Property(e => e.Windradius7)
                    .HasColumnName("windradius7")
                    .HasComment("7级风圈");

                entity.Property(e => e.Windspeed)
                    .HasColumnName("windspeed")
                    .HasColumnType("int(11)")
                    .HasComment("风速");

                entity.Property(e => e.Year)
                    .HasColumnName("year")
                    .HasColumnType("char(4)")
                    .HasComment("发生年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.P)
                    .WithMany(p => p.JieruWeatherTyphoonPoint)
                    .HasForeignKey(d => d.Pid)
                    .HasConstraintName("fk_typhon_point_pid");
            });

            modelBuilder.Entity<JieruWeatherWarning>(entity =>
            {
                entity.ToTable("jieru_weather_warning");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("bz")
                    .HasColumnType("varchar(200)")
                    .HasComment("标准")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cont)
                    .HasColumnName("cont")
                    .HasColumnType("varchar(500)")
                    .HasComment("发布内容")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Contensign)
                    .HasColumnName("contensign")
                    .HasColumnType("varchar(2000)")
                    .HasComment("发布内容(同cont)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dept)
                    .HasColumnName("dept")
                    .HasColumnType("varchar(50)")
                    .HasComment("发布部门")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.ForecasterSign)
                    .HasColumnName("forecaster_sign")
                    .HasColumnType("varchar(50)")
                    .HasComment("发布人员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fy)
                    .HasColumnName("fy")
                    .HasColumnType("text")
                    .HasComment("防御指南")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Isrescindsign)
                    .HasColumnName("isrescindsign")
                    .HasComment("是否解除预警");

                entity.Property(e => e.Prekind)
                    .HasColumnName("prekind")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pretimesign)
                    .HasColumnName("pretimesign")
                    .HasColumnType("datetime")
                    .HasComment("发布日期");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Signimagepath)
                    .HasColumnName("signimagepath")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警图片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Signmean)
                    .HasColumnName("signmean")
                    .HasColumnType("text")
                    .HasComment("预警含义")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Signtitle)
                    .HasColumnName("signtitle")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警信号描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Title)
                    .HasColumnName("title")
                    .HasColumnType("varchar(200)")
                    .HasComment("预警信号名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.TitleJx)
                    .HasColumnName("title_jx")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Warnsign)
                    .HasColumnName("warnsign")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<MetadataQtlysj>(entity =>
            {
                entity.ToTable("metadata_qtlysj");

                entity.HasComment("其他类元数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(100)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(100)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjcjfs)
                    .HasColumnName("JCSJCJFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据采集方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcszm)
                    .HasColumnName("JCSZM")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测数值名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(20)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfw)
                    .HasColumnName("SJCJFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("数据采集范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjlrdw)
                    .HasColumnName("SJCJLRDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("数据采集录入单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcldw)
                    .HasColumnName("SJCLDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("数据处理单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjfhdw)
                    .HasColumnName("SJFHDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("数据复核单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjfhsj)
                    .HasColumnName("SJFHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据复核时间");

                entity.Property(e => e.Sjldx)
                    .HasColumnName("SJLDX")
                    .HasColumnType("varchar(30)")
                    .HasComment("数据量大小")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjlx)
                    .HasColumnName("SJLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjly)
                    .HasColumnName("SJLY")
                    .HasColumnType("varchar(100)")
                    .HasComment("数据来源")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(100)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjscjlsj)
                    .HasColumnName("SJSCJLSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据生成/记录时间");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szcjdzbxx)
                    .HasColumnName("SZCJDZBXX")
                    .HasColumnType("varchar(50)")
                    .HasComment("数值采集点坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(100)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzcs)
                    .HasColumnName("XZCS")
                    .HasColumnType("int(11)")
                    .HasComment("下载次数");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysdlxxzb)
                    .HasColumnName("YCYSDLXXZB")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<MetadataSzlysj>(entity =>
            {
                entity.ToTable("metadata_szlysj");

                entity.HasComment("数值类元数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsb)
                    .HasColumnName("CJSB")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集设备")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(100)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(100)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsz)
                    .HasColumnName("JCSZ")
                    .HasColumnType("varchar(30)")
                    .HasComment("监测数值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcszcjfs)
                    .HasColumnName("JCSZCJFS")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测数值采集方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcszm)
                    .HasColumnName("JCSZM")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数值名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jldw)
                    .HasColumnName("JLDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("计量单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shr)
                    .HasColumnName("SHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjlrdw)
                    .HasColumnName("SJCJLRDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("数据采集录入单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjlrzrr)
                    .HasColumnName("SJCJLRZRR")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集录入责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjfhdw)
                    .HasColumnName("SJFHDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("数据复核单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjfhr)
                    .HasColumnName("SJFHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据复核人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjfhsj)
                    .HasColumnName("SJFHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据复核时间");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjscjlsj)
                    .HasColumnName("SJSCJLSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据生成/记录时间");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szcjdzbxx)
                    .HasColumnName("SZCJDZBXX")
                    .HasColumnType("varchar(50)")
                    .HasComment("数值采集点坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(100)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzcs)
                    .HasColumnName("XZCS")
                    .HasColumnType("int(11)")
                    .HasComment("下载次数");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysdlxxzb)
                    .HasColumnName("YCYSDLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<MetadataSzlysjCopy>(entity =>
            {
                entity.ToTable("metadata_szlysj_copy");

                entity.HasComment("数值类元数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsb)
                    .HasColumnName("CJSB")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集设备")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(100)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(100)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsz)
                    .HasColumnName("JCSZ")
                    .HasColumnType("varchar(30)")
                    .HasComment("监测数值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcszcjfs)
                    .HasColumnName("JCSZCJFS")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测数值采集方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcszm)
                    .HasColumnName("JCSZM")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数值名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jldw)
                    .HasColumnName("JLDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("计量单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shr)
                    .HasColumnName("SHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjlrdw)
                    .HasColumnName("SJCJLRDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("数据采集录入单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjlrzrr)
                    .HasColumnName("SJCJLRZRR")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集录入责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjfhdw)
                    .HasColumnName("SJFHDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("数据复核单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjfhr)
                    .HasColumnName("SJFHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据复核人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjfhsj)
                    .HasColumnName("SJFHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据复核时间");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjscjlsj)
                    .HasColumnName("SJSCJLSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据生成/记录时间");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szcjdzbxx)
                    .HasColumnName("SZCJDZBXX")
                    .HasColumnType("varchar(50)")
                    .HasComment("数值采集点坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(100)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzcs)
                    .HasColumnName("XZCS")
                    .HasColumnType("int(11)")
                    .HasComment("下载次数");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysdlxxzb)
                    .HasColumnName("YCYSDLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<MetadataTplysj>(entity =>
            {
                entity.ToTable("metadata_tplysj");

                entity.HasComment("图片类元数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdzbxx)
                    .HasColumnName("CJDZBXX")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集点坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(200)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(100)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pssb)
                    .HasColumnName("PSSB")
                    .HasColumnType("varchar(50)")
                    .HasComment("拍摄设备")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Tpcjdw)
                    .HasColumnName("TPCJDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片采集单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpcjzrr)
                    .HasColumnName("TPCJZRR")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片采集责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpgs)
                    .HasColumnName("TPGS")
                    .HasColumnType("varchar(30)")
                    .HasComment("图片格式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpmc)
                    .HasColumnName("TPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("图片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpscsj)
                    .HasColumnName("TPSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("图片生成时间");

                entity.Property(e => e.Tpsddw)
                    .HasColumnName("TPSDDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("图片审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpsdsj)
                    .HasColumnName("TPSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("图片审定时间");

                entity.Property(e => e.Tpsdz)
                    .HasColumnName("TPSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpsjl)
                    .HasColumnName("TPSJL")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片数据量")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzcs)
                    .HasColumnName("XZCS")
                    .HasColumnType("int(11)")
                    .HasComment("下载次数");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<MetadataTplysjCopy>(entity =>
            {
                entity.ToTable("metadata_tplysj_copy");

                entity.HasComment("图片类元数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdzbxx)
                    .HasColumnName("CJDZBXX")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集点坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(200)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(100)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pssb)
                    .HasColumnName("PSSB")
                    .HasColumnType("varchar(50)")
                    .HasComment("拍摄设备")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Tpcjdw)
                    .HasColumnName("TPCJDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片采集单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpcjzrr)
                    .HasColumnName("TPCJZRR")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片采集责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpgs)
                    .HasColumnName("TPGS")
                    .HasColumnType("varchar(30)")
                    .HasComment("图片格式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpmc)
                    .HasColumnName("TPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("图片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpscsj)
                    .HasColumnName("TPSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("图片生成时间");

                entity.Property(e => e.Tpsddw)
                    .HasColumnName("TPSDDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("图片审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpsdsj)
                    .HasColumnName("TPSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("图片审定时间");

                entity.Property(e => e.Tpsdz)
                    .HasColumnName("TPSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpsjl)
                    .HasColumnName("TPSJL")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片数据量")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzcs)
                    .HasColumnName("XZCS")
                    .HasColumnType("int(11)")
                    .HasComment("下载次数");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<MetadataTzlysj>(entity =>
            {
                entity.ToTable("metadata_tzlysj");

                entity.HasComment("图纸类元数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Chr)
                    .HasColumnName("CHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("测绘人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Chzrdw)
                    .HasColumnName("CHZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("测绘责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ctshr)
                    .HasColumnName("CTSHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("成图审核人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ctshsj)
                    .HasColumnName("CTSHSJ")
                    .HasColumnType("datetime")
                    .HasComment("成图审核时间");

                entity.Property(e => e.Ctsj)
                    .HasColumnName("CTSJ")
                    .HasColumnType("datetime")
                    .HasComment("成图时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fgfw)
                    .HasColumnName("FGFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("覆盖范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(50)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tfcc)
                    .HasColumnName("TFCC")
                    .HasColumnType("varchar(100)")
                    .HasComment("图幅尺寸")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Tzgs)
                    .HasColumnName("TZGS")
                    .HasColumnType("varchar(20)")
                    .HasComment("图纸格式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzjz)
                    .HasColumnName("TZJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("图纸介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzlb)
                    .HasColumnName("TZLB")
                    .HasColumnType("varchar(200)")
                    .HasComment("图纸类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzmc)
                    .HasColumnName("TZMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("图纸名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tznrlx)
                    .HasColumnName("TZNRLX")
                    .HasColumnType("varchar(100)")
                    .HasComment("图纸内容类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzsxblc)
                    .HasColumnName("TZSXBLC")
                    .HasColumnType("varchar(20)")
                    .HasComment("图纸属性比例尺")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzcs)
                    .HasColumnName("XZCS")
                    .HasColumnType("int(11)")
                    .HasComment("下载次数");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytbh)
                    .HasColumnName("YTBH")
                    .HasColumnType("varchar(200)")
                    .HasComment("原图编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytblc)
                    .HasColumnName("YTBLC")
                    .HasColumnType("varchar(50)")
                    .HasComment("原图比例尺")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytmc)
                    .HasColumnName("YTMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("原图名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytscdw)
                    .HasColumnName("YTSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原图收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytzbx)
                    .HasColumnName("YTZBX")
                    .HasColumnType("varchar(50)")
                    .HasComment("原图坐标系")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytztdw)
                    .HasColumnName("YTZTDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("原图制图单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytztsj)
                    .HasColumnName("YTZTSJ")
                    .HasColumnType("datetime")
                    .HasComment("原图制图时间");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<MetadataTzlysjCopy>(entity =>
            {
                entity.ToTable("metadata_tzlysj_copy");

                entity.HasComment("图纸类元数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Chr)
                    .HasColumnName("CHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("测绘人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Chzrdw)
                    .HasColumnName("CHZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("测绘责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ctshr)
                    .HasColumnName("CTSHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("成图审核人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ctshsj)
                    .HasColumnName("CTSHSJ")
                    .HasColumnType("datetime")
                    .HasComment("成图审核时间");

                entity.Property(e => e.Ctsj)
                    .HasColumnName("CTSJ")
                    .HasColumnType("datetime")
                    .HasComment("成图时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fgfw)
                    .HasColumnName("FGFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("覆盖范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(50)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tfcc)
                    .HasColumnName("TFCC")
                    .HasColumnType("varchar(100)")
                    .HasComment("图幅尺寸")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Tzgs)
                    .HasColumnName("TZGS")
                    .HasColumnType("varchar(20)")
                    .HasComment("图纸格式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzjz)
                    .HasColumnName("TZJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("图纸介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzlb)
                    .HasColumnName("TZLB")
                    .HasColumnType("varchar(200)")
                    .HasComment("图纸类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzmc)
                    .HasColumnName("TZMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("图纸名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tznrlx)
                    .HasColumnName("TZNRLX")
                    .HasColumnType("varchar(100)")
                    .HasComment("图纸内容类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzsxblc)
                    .HasColumnName("TZSXBLC")
                    .HasColumnType("varchar(20)")
                    .HasComment("图纸属性比例尺")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzcs)
                    .HasColumnName("XZCS")
                    .HasColumnType("int(11)")
                    .HasComment("下载次数");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytbh)
                    .HasColumnName("YTBH")
                    .HasColumnType("varchar(200)")
                    .HasComment("原图编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytblc)
                    .HasColumnName("YTBLC")
                    .HasColumnType("varchar(50)")
                    .HasComment("原图比例尺")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytmc)
                    .HasColumnName("YTMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("原图名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytscdw)
                    .HasColumnName("YTSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原图收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytzbx)
                    .HasColumnName("YTZBX")
                    .HasColumnType("varchar(50)")
                    .HasComment("原图坐标系")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytztdw)
                    .HasColumnName("YTZTDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("原图制图单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytztsj)
                    .HasColumnName("YTZTSJ")
                    .HasColumnType("datetime")
                    .HasComment("原图制图时间");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<MetadataWdlysj>(entity =>
            {
                entity.ToTable("metadata_wdlysj");

                entity.HasComment("文档类元数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lycs)
                    .HasColumnName("LYCS")
                    .HasColumnType("int(11)")
                    .HasComment("利用次数");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjccbdlj)
                    .HasColumnName("SJCCBDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccydlj)
                    .HasColumnName("SJCCYDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(20)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Wdbb)
                    .HasColumnName("WDBB")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdbzdw)
                    .HasColumnName("WDBZDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("文档编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdcjsj)
                    .HasColumnName("WDCJSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档创建时间");

                entity.Property(e => e.Wdjz)
                    .HasColumnName("WDJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdlx)
                    .HasColumnName("WDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdmc)
                    .HasColumnName("WDMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdscsj)
                    .HasColumnName("WDSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档上传时间");

                entity.Property(e => e.Wdsddw)
                    .HasColumnName("WDSDDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdsdsj)
                    .HasColumnName("WDSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档审定时间");

                entity.Property(e => e.Wdsdz)
                    .HasColumnName("WDSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdzz)
                    .HasColumnName("WDZZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档作者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yswdbh)
                    .HasColumnName("YSWDBH")
                    .HasColumnType("varchar(100)")
                    .HasComment("原始文档编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdd)
                    .HasColumnName("YWDSCDD")
                    .HasColumnType("varchar(100)")
                    .HasComment("原文档收藏地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdw)
                    .HasColumnName("YWDSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原文档收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscrq)
                    .HasColumnName("YWDSCRQ")
                    .HasColumnType("datetime")
                    .HasComment("原文档生成日期");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<MetadataWdlysjCopy>(entity =>
            {
                entity.ToTable("metadata_wdlysj_copy");

                entity.HasComment("文档类元数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lycs)
                    .HasColumnName("LYCS")
                    .HasColumnType("int(11)")
                    .HasComment("利用次数");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjccbdlj)
                    .HasColumnName("SJCCBDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccydlj)
                    .HasColumnName("SJCCYDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(20)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Wdbb)
                    .HasColumnName("WDBB")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdbzdw)
                    .HasColumnName("WDBZDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("文档编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdcjsj)
                    .HasColumnName("WDCJSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档创建时间");

                entity.Property(e => e.Wdjz)
                    .HasColumnName("WDJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdlx)
                    .HasColumnName("WDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdmc)
                    .HasColumnName("WDMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdscsj)
                    .HasColumnName("WDSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档上传时间");

                entity.Property(e => e.Wdsddw)
                    .HasColumnName("WDSDDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdsdsj)
                    .HasColumnName("WDSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档审定时间");

                entity.Property(e => e.Wdsdz)
                    .HasColumnName("WDSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdzz)
                    .HasColumnName("WDZZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档作者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yswdbh)
                    .HasColumnName("YSWDBH")
                    .HasColumnType("varchar(100)")
                    .HasComment("原始文档编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdd)
                    .HasColumnName("YWDSCDD")
                    .HasColumnType("varchar(100)")
                    .HasComment("原文档收藏地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdw)
                    .HasColumnName("YWDSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原文档收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscrq)
                    .HasColumnName("YWDSCRQ")
                    .HasColumnType("datetime")
                    .HasComment("原文档生成日期");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<MetadataWdlysj改变区域前1214>(entity =>
            {
                entity.ToTable("metadata_wdlysj改变区域前1214");

                entity.HasComment("文档类元数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lycs)
                    .HasColumnName("LYCS")
                    .HasColumnType("int(11)")
                    .HasComment("利用次数");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjccbdlj)
                    .HasColumnName("SJCCBDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccydlj)
                    .HasColumnName("SJCCYDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(20)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Wdbb)
                    .HasColumnName("WDBB")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdbzdw)
                    .HasColumnName("WDBZDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("文档编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdcjsj)
                    .HasColumnName("WDCJSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档创建时间");

                entity.Property(e => e.Wdjz)
                    .HasColumnName("WDJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdlx)
                    .HasColumnName("WDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdmc)
                    .HasColumnName("WDMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdscsj)
                    .HasColumnName("WDSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档上传时间");

                entity.Property(e => e.Wdsddw)
                    .HasColumnName("WDSDDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdsdsj)
                    .HasColumnName("WDSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档审定时间");

                entity.Property(e => e.Wdsdz)
                    .HasColumnName("WDSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdzz)
                    .HasColumnName("WDZZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档作者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yswdbh)
                    .HasColumnName("YSWDBH")
                    .HasColumnType("varchar(100)")
                    .HasComment("原始文档编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdd)
                    .HasColumnName("YWDSCDD")
                    .HasColumnType("varchar(100)")
                    .HasComment("原文档收藏地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdw)
                    .HasColumnName("YWDSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原文档收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscrq)
                    .HasColumnName("YWDSCRQ")
                    .HasColumnType("datetime")
                    .HasComment("原文档生成日期");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<MetadataXgfjwd>(entity =>
            {
                entity.ToTable("metadata_xgfjwd");

                entity.HasComment("相关附件文档");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjr)
                    .HasColumnName("CJR")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Lj)
                    .HasColumnName("LJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lyid)
                    .HasColumnName("LYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("来源ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lylx)
                    .HasColumnName("LYLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("来源类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Scrid)
                    .HasColumnName("SCRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("上传人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scsj)
                    .HasColumnName("SCSJ")
                    .HasColumnType("datetime")
                    .HasComment("上传时间");

                entity.Property(e => e.Sm)
                    .HasColumnName("SM")
                    .HasColumnType("varchar(50)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdlx)
                    .HasColumnName("WDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<MetadataYxlysj>(entity =>
            {
                entity.ToTable("metadata_yxlysj");

                entity.HasComment("影像类元数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(100)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(20)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(100)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysyxcjdw)
                    .HasColumnName("YSYXCJDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原始影像采集单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxcjfw)
                    .HasColumnName("YXCJFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("影像采集范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxcldw)
                    .HasColumnName("YXCLDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("影像处理单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxfbl)
                    .HasColumnName("YXFBL")
                    .HasColumnType("varchar(20)")
                    .HasComment("影像分辨率")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxfw)
                    .HasColumnName("YXFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("影像范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxlx)
                    .HasColumnName("YXLX")
                    .HasColumnType("varchar(20)")
                    .HasComment("影像类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxly)
                    .HasColumnName("YXLY")
                    .HasColumnType("varchar(200)")
                    .HasComment("影像来源")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxmc)
                    .HasColumnName("YXMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("影像名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxscsj)
                    .HasColumnName("YXSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("影像生成时间");

                entity.Property(e => e.Yxsddw)
                    .HasColumnName("YXSDDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("影像审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxsdsj)
                    .HasColumnName("YXSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("影像审定时间");

                entity.Property(e => e.Yxsdz)
                    .HasColumnName("YXSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("影像审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxsjl)
                    .HasColumnName("YXSJL")
                    .HasColumnType("varchar(20)")
                    .HasComment("影像数据量")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(100)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<OgrPosition>(entity =>
            {
                entity.ToTable("ogr_position");

                entity.HasComment("职位");

                entity.HasIndex(e => e.Departmentid)
                    .HasName("FK_857975909A0D4C22");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Departmentid)
                    .HasColumnName("DEPARTMENTID")
                    .HasColumnType("varchar(50)")
                    .HasComment("组织机构ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Descreiption)
                    .HasColumnName("DESCREIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("REMARK")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Requirement)
                    .HasColumnName("REQUIREMENT")
                    .HasColumnType("varchar(200)")
                    .HasComment("要求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Responsibility)
                    .HasColumnName("RESPONSIBILITY")
                    .HasColumnType("varchar(200)")
                    .HasComment("职责")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<OrgDepartment>(entity =>
            {
                entity.ToTable("org_department");

                entity.HasComment("组织机构");

                entity.HasIndex(e => e.Parentid)
                    .HasName("FK_C0DE25463CD24714");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Address)
                    .HasColumnName("ADDRESS")
                    .HasColumnType("varchar(100)")
                    .HasComment("地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Contacts)
                    .HasColumnName("CONTACTS")
                    .HasColumnType("varchar(50)")
                    .HasComment("联系人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Createdate)
                    .HasColumnName("CREATEDATE")
                    .HasColumnType("datetime")
                    .HasComment("创建日期");

                entity.Property(e => e.Cxrq)
                    .HasColumnName("CXRQ")
                    .HasColumnType("datetime")
                    .HasComment("撤消日期");

                entity.Property(e => e.Departmentcode)
                    .HasColumnName("DEPARTMENTCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("组织机构代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Duty)
                    .HasColumnName("DUTY")
                    .HasColumnType("varchar(200)")
                    .HasComment("组织机构职责")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Email)
                    .HasColumnName("EMAIL")
                    .HasColumnType("varchar(50)")
                    .HasComment("联系电子邮箱")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Isdepartment)
                    .HasColumnName("ISDEPARTMENT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否部门");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Parentid)
                    .HasColumnName("PARENTID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("REMARK")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Telephone)
                    .HasColumnName("TELEPHONE")
                    .HasColumnType("varchar(50)")
                    .HasComment("联系电话")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Url)
                    .HasColumnName("URL")
                    .HasColumnType("varchar(100)")
                    .HasComment("网址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.X).HasComment("X");

                entity.Property(e => e.Xzqbm)
                    .HasColumnName("XZQBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("行政区编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Y).HasComment("Y");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.InverseParent)
                    .HasForeignKey(d => d.Parentid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_C0DE25463CD24714");
            });

            modelBuilder.Entity<OrgLeader>(entity =>
            {
                entity.ToTable("org_leader");

                entity.HasComment("领导");

                entity.HasIndex(e => e.Departmentid)
                    .HasName("FK_E5F3A5CD5D1F4CFD");

                entity.HasIndex(e => e.Userid)
                    .HasName("FK_D7366134B139444D");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Departmentid)
                    .IsRequired()
                    .HasColumnName("DEPARTMENTID")
                    .HasColumnType("varchar(50)")
                    .HasComment("部门编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(50)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Leaderlevel)
                    .HasColumnName("LEADERLEVEL")
                    .HasColumnType("tinyint(4)")
                    .HasComment("领导级别");

                entity.Property(e => e.Responsibility)
                    .HasColumnName("RESPONSIBILITY")
                    .HasColumnType("varchar(200)")
                    .HasComment("职责")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rolename)
                    .IsRequired()
                    .HasColumnName("ROLENAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("角色名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Userid)
                    .IsRequired()
                    .HasColumnName("USERID")
                    .HasColumnType("varchar(50)")
                    .HasComment("员工编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Department)
                    .WithMany(p => p.OrgLeader)
                    .HasForeignKey(d => d.Departmentid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_E5F3A5CD5D1F4CFD");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.OrgLeader)
                    .HasForeignKey(d => d.Userid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_D7366134B139444D");
            });

            modelBuilder.Entity<OrgUserinfo>(entity =>
            {
                entity.ToTable("org_userinfo");

                entity.HasComment("员工");

                entity.HasIndex(e => e.Departmentid)
                    .HasName("FK_B929685D035B49AF");

                entity.HasIndex(e => e.Leaderid)
                    .HasName("FK_9A34852244AA4556");

                entity.HasIndex(e => e.Positionid)
                    .HasName("FK_173019BB55EF45AC");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Careerentry)
                    .HasColumnName("CAREERENTRY")
                    .HasColumnType("datetime")
                    .HasComment("入职日期");

                entity.Property(e => e.Departmentid)
                    .IsRequired()
                    .HasColumnName("DEPARTMENTID")
                    .HasColumnType("varchar(50)")
                    .HasComment("部门编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Email)
                    .HasColumnName("EMAIL")
                    .HasColumnType("varchar(50)")
                    .HasComment("电子邮箱")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Idcard)
                    .HasColumnName("IDCARD")
                    .HasColumnType("varchar(20)")
                    .HasComment("身份证号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ishangposition)
                    .HasColumnName("ISHANGPOSITION")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否挂职");

                entity.Property(e => e.Leaderid)
                    .HasColumnName("LEADERID")
                    .HasColumnType("varchar(50)")
                    .HasComment("上级领导编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Leavedate)
                    .HasColumnName("LEAVEDATE")
                    .HasColumnType("datetime")
                    .HasComment("离职日期");

                entity.Property(e => e.Loginname)
                    .IsRequired()
                    .HasColumnName("LOGINNAME")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Maploginname)
                    .HasColumnName("MAPLOGINNAME")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mappassword)
                    .HasColumnName("MAPPASSWORD")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称(员工编号)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Password)
                    .HasColumnName("PASSWORD")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Photo)
                    .HasColumnName("PHOTO")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Positionid)
                    .HasColumnName("POSITIONID")
                    .HasColumnType("varchar(50)")
                    .HasComment("职位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qq)
                    .HasColumnName("QQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("QQ号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Realname)
                    .HasColumnName("REALNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("REMARK")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sex)
                    .HasColumnName("SEX")
                    .HasColumnType("tinyint(4)")
                    .HasComment("性别");

                entity.Property(e => e.Sfauto)
                    .HasColumnName("SFAUTO")
                    .HasComment("是否移动端用户");

                entity.Property(e => e.Sfgly)
                    .HasColumnName("SFGLY")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否管理员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfjr)
                    .HasColumnName("SFJR")
                    .HasComment("是否为外部接入系统用户");

                entity.Property(e => e.Sfsystem)
                    .HasColumnName("SFSYSTEM")
                    .HasComment("是否系统平台用户");

                entity.Property(e => e.Systemuserid)
                    .HasColumnName("SYSTEMUSERID")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统用户ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tel)
                    .HasColumnName("TEL")
                    .HasColumnType("varchar(50)")
                    .HasComment("电话")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Department)
                    .WithMany(p => p.OrgUserinfo)
                    .HasForeignKey(d => d.Departmentid)
                    .HasConstraintName("FK_B929685D035B49AF");

                entity.HasOne(d => d.Leader)
                    .WithMany(p => p.InverseLeader)
                    .HasForeignKey(d => d.Leaderid)
                    .HasConstraintName("FK_9A34852244AA4556");

                entity.HasOne(d => d.Position)
                    .WithMany(p => p.OrgUserinfo)
                    .HasForeignKey(d => d.Positionid)
                    .HasConstraintName("FK_173019BB55EF45AC");
            });

            modelBuilder.Entity<OrgUserrole>(entity =>
            {
                entity.HasKey(e => new { e.Userid, e.Roleid })
                    .HasName("PRIMARY");

                entity.ToTable("org_userrole");

                entity.HasComment("员工角色");

                entity.Property(e => e.Userid)
                    .HasColumnName("USERID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Roleid)
                    .HasColumnName("ROLEID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<OrgUserrole20190524>(entity =>
            {
                entity.HasKey(e => new { e.Userid, e.Roleid })
                    .HasName("PRIMARY");

                entity.ToTable("org_userrole_20190524");

                entity.HasComment("员工角色");

                entity.Property(e => e.Userid)
                    .HasColumnName("USERID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Roleid)
                    .HasColumnName("ROLEID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsDataprivs>(entity =>
            {
                entity.ToTable("privs_dataprivs");

                entity.HasComment("数据权限");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Argsappend)
                    .HasColumnName("ARGSAPPEND")
                    .HasColumnType("varchar(200)")
                    .HasComment("补充参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Argstext)
                    .HasColumnName("ARGSTEXT")
                    .HasColumnType("varchar(500)")
                    .HasComment("参数说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Columntext)
                    .HasColumnName("COLUMNTEXT")
                    .HasColumnType("varchar(200)")
                    .HasComment("允许操作的字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dataoperation)
                    .HasColumnName("DATAOPERATION")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据操作")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Datasourcetext)
                    .HasColumnName("DATASOURCETEXT")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据源内容")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Datasourcetype)
                    .HasColumnName("DATASOURCETYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据源类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(200)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wheretext)
                    .HasColumnName("WHERETEXT")
                    .HasColumnType("varchar(200)")
                    .HasComment("允许操作的数据")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsFuncprivs1>(entity =>
            {
                entity.ToTable("privs_funcprivs1");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Accessid)
                    .HasColumnName("ACCESSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Accesstype)
                    .HasColumnName("ACCESSTYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .IsRequired()
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("操作参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("int(11)")
                    .HasComment("排序索引");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nodetype)
                    .HasColumnName("NODETYPE")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("树状结构节点类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Operation)
                    .HasColumnName("OPERATION")
                    .HasColumnType("varchar(500)")
                    .HasComment("操作")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Systemcode)
                    .HasColumnName("SYSTEMCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsFuncprivs11128历史道路等四项去除前>(entity =>
            {
                entity.ToTable("privs_funcprivs1_1128历史道路等四项去除前");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Accessid)
                    .HasColumnName("ACCESSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Accesstype)
                    .HasColumnName("ACCESSTYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .IsRequired()
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("操作参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("int(11)")
                    .HasComment("排序索引");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nodetype)
                    .HasColumnName("NODETYPE")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("树状结构节点类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Operation)
                    .HasColumnName("OPERATION")
                    .HasColumnType("varchar(500)")
                    .HasComment("操作")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Systemcode)
                    .HasColumnName("SYSTEMCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsFuncprivs120161012>(entity =>
            {
                entity.ToTable("privs_funcprivs1_20161012");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Accessid)
                    .HasColumnName("ACCESSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Accesstype)
                    .HasColumnName("ACCESSTYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .IsRequired()
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("操作参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("int(11)")
                    .HasComment("排序索引");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nodetype)
                    .HasColumnName("NODETYPE")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("树状结构节点类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Operation)
                    .HasColumnName("OPERATION")
                    .HasColumnType("varchar(500)")
                    .HasComment("操作")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Systemcode)
                    .HasColumnName("SYSTEMCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsFuncprivs12016102711>(entity =>
            {
                entity.ToTable("privs_funcprivs1_20161027_11");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Accessid)
                    .HasColumnName("ACCESSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Accesstype)
                    .HasColumnName("ACCESSTYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .IsRequired()
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("操作参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("int(11)")
                    .HasComment("排序索引");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nodetype)
                    .HasColumnName("NODETYPE")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("树状结构节点类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Operation)
                    .HasColumnName("OPERATION")
                    .HasColumnType("varchar(500)")
                    .HasComment("操作")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Systemcode)
                    .HasColumnName("SYSTEMCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsFuncprivs120161208>(entity =>
            {
                entity.ToTable("privs_funcprivs1_20161208");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Accessid)
                    .HasColumnName("ACCESSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Accesstype)
                    .HasColumnName("ACCESSTYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .IsRequired()
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("操作参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("int(11)")
                    .HasComment("排序索引");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nodetype)
                    .HasColumnName("NODETYPE")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("树状结构节点类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Operation)
                    .HasColumnName("OPERATION")
                    .HasColumnType("varchar(500)")
                    .HasComment("操作")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Systemcode)
                    .HasColumnName("SYSTEMCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsFuncprivs12016年8月18日104752>(entity =>
            {
                entity.ToTable("privs_funcprivs1_2016年8月18日10:47:52");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Accessid)
                    .HasColumnName("ACCESSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Accesstype)
                    .HasColumnName("ACCESSTYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .IsRequired()
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("操作参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("int(11)")
                    .HasComment("排序索引");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nodetype)
                    .HasColumnName("NODETYPE")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("树状结构节点类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Operation)
                    .HasColumnName("OPERATION")
                    .HasColumnType("varchar(500)")
                    .HasComment("操作")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Systemcode)
                    .HasColumnName("SYSTEMCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsFuncprivs2>(entity =>
            {
                entity.ToTable("privs_funcprivs2");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Accessid)
                    .HasColumnName("ACCESSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Accesstype)
                    .HasColumnName("ACCESSTYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .IsRequired()
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("操作参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("int(11)")
                    .HasComment("排序索引");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nodetype)
                    .HasColumnName("NODETYPE")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("树状结构节点类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Operation)
                    .HasColumnName("OPERATION")
                    .HasColumnType("varchar(500)")
                    .HasComment("操作")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Systemcode)
                    .HasColumnName("SYSTEMCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsFuncprivs22016年8月18日100154>(entity =>
            {
                entity.ToTable("privs_funcprivs2_2016年8月18日10:01:54");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Accessid)
                    .HasColumnName("ACCESSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Accesstype)
                    .HasColumnName("ACCESSTYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .IsRequired()
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("操作参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("int(11)")
                    .HasComment("排序索引");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nodetype)
                    .HasColumnName("NODETYPE")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("树状结构节点类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Operation)
                    .HasColumnName("OPERATION")
                    .HasColumnType("varchar(500)")
                    .HasComment("操作")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Systemcode)
                    .HasColumnName("SYSTEMCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsFuncprivs3>(entity =>
            {
                entity.ToTable("privs_funcprivs3");

                entity.HasComment("功能权限");

                entity.HasIndex(e => e.Pid)
                    .HasName("FK_CF7ADCBCDEFA45C4");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Accessid)
                    .HasColumnName("ACCESSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Accesstype)
                    .HasColumnName("ACCESSTYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .IsRequired()
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("操作参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("int(11)")
                    .HasComment("排序索引");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Operation)
                    .HasColumnName("OPERATION")
                    .HasColumnType("varchar(500)")
                    .HasComment("操作")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Systemcode)
                    .HasColumnName("SYSTEMCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsFuncprivsCopy>(entity =>
            {
                entity.ToTable("privs_funcprivs_copy");

                entity.HasComment("功能权限");

                entity.HasIndex(e => e.Pid)
                    .HasName("FK_CF7ADCBCDEFA45C4");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Accessid)
                    .HasColumnName("ACCESSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Accesstype)
                    .HasColumnName("ACCESSTYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .IsRequired()
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("操作参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("int(11)")
                    .HasComment("排序索引");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Operation)
                    .HasColumnName("OPERATION")
                    .HasColumnType("varchar(50)")
                    .HasComment("操作")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Systemcode)
                    .HasColumnName("SYSTEMCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.P)
                    .WithMany(p => p.PrivsFuncprivsCopy)
                    .HasForeignKey(d => d.Pid)
                    .HasConstraintName("privs_funcprivs_copy_ibfk_1");
            });

            modelBuilder.Entity<PrivsFuncprivsCopy1>(entity =>
            {
                entity.ToTable("privs_funcprivs_copy1");

                entity.HasComment("功能权限");

                entity.HasIndex(e => e.Pid)
                    .HasName("FK_CF7ADCBCDEFA45C4");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Accessid)
                    .HasColumnName("ACCESSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Accesstype)
                    .HasColumnName("ACCESSTYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .IsRequired()
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("操作参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("int(11)")
                    .HasComment("排序索引");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Operation)
                    .HasColumnName("OPERATION")
                    .HasColumnType("varchar(50)")
                    .HasComment("操作")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Systemcode)
                    .HasColumnName("SYSTEMCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.P)
                    .WithMany(p => p.PrivsFuncprivsCopy1)
                    .HasForeignKey(d => d.Pid)
                    .HasConstraintName("privs_funcprivs_copy1_ibfk_1");
            });

            modelBuilder.Entity<PrivsFuncprivsDataprivs>(entity =>
            {
                entity.HasKey(e => new { e.Funcprivsid, e.Dataprivsid })
                    .HasName("PRIMARY");

                entity.ToTable("privs_funcprivs_dataprivs");

                entity.HasComment("功能权限_数据权限关联表");

                entity.HasIndex(e => e.Dataprivsid)
                    .HasName("FK_2338727B671E460A");

                entity.Property(e => e.Funcprivsid)
                    .HasColumnName("FUNCPRIVSID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("功能权限编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dataprivsid)
                    .HasColumnName("DATAPRIVSID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("数据权限编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Dataprivs)
                    .WithMany(p => p.PrivsFuncprivsDataprivs)
                    .HasForeignKey(d => d.Dataprivsid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_2338727B671E460A");

                entity.HasOne(d => d.Funcprivs)
                    .WithMany(p => p.PrivsFuncprivsDataprivs)
                    .HasForeignKey(d => d.Funcprivsid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_50B25F9594BB410E");
            });

            modelBuilder.Entity<PrivsRole>(entity =>
            {
                entity.ToTable("privs_role");

                entity.HasComment("角色");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .IsRequired()
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Systemcode)
                    .HasColumnName("SYSTEMCODE")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsRoleDataprivs>(entity =>
            {
                entity.HasKey(e => new { e.Roleid, e.Privsid })
                    .HasName("PRIMARY");

                entity.ToTable("privs_role_dataprivs");

                entity.HasComment("角色数据权限关联表");

                entity.HasIndex(e => e.Privsid)
                    .HasName("FK_D1C8D2D8CE4B44CE");

                entity.Property(e => e.Roleid)
                    .HasColumnName("ROLEID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("角色编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Privsid)
                    .HasColumnName("PRIVSID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("数据权限编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Privs)
                    .WithMany(p => p.PrivsRoleDataprivs)
                    .HasForeignKey(d => d.Privsid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_D1C8D2D8CE4B44CE");

                entity.HasOne(d => d.Role)
                    .WithMany(p => p.PrivsRoleDataprivs)
                    .HasForeignKey(d => d.Roleid)
                    .HasConstraintName("FK_3E754E78F6634B3A");
            });

            modelBuilder.Entity<PrivsRoleFuncprivs>(entity =>
            {
                entity.HasKey(e => new { e.Roleid, e.Privsid })
                    .HasName("PRIMARY");

                entity.ToTable("privs_role_funcprivs");

                entity.HasIndex(e => e.Privsid)
                    .HasName("fk_dujfuekfdkjr");

                entity.Property(e => e.Roleid)
                    .HasColumnName("roleid")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Privsid)
                    .HasColumnName("privsid")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Privs)
                    .WithMany(p => p.PrivsRoleFuncprivs)
                    .HasForeignKey(d => d.Privsid)
                    .HasConstraintName("fk_dujfuekfdkjr");

                entity.HasOne(d => d.Role)
                    .WithMany(p => p.PrivsRoleFuncprivs)
                    .HasForeignKey(d => d.Roleid)
                    .HasConstraintName("fk_sadflaskjfie");
            });

            modelBuilder.Entity<PrivsSystem>(entity =>
            {
                entity.ToTable("privs_system");

                entity.HasComment("system");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .IsRequired()
                    .HasColumnName("MC")
                    .HasColumnType("varchar(100)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sm)
                    .HasColumnName("SM")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywid)
                    .IsRequired()
                    .HasColumnName("YWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsUser>(entity =>
            {
                entity.ToTable("privs_user");

                entity.HasComment("用户");

                entity.HasIndex(e => e.Usergroupid)
                    .HasName("FK_A2D165BF457B4A1B");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .IsRequired()
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名（用户在系统中交流时的匿名）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Email)
                    .HasColumnName("EMAIL")
                    .HasColumnType("varchar(50)")
                    .HasComment("电子邮箱")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Issystem)
                    .HasColumnName("ISSYSTEM")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否系统用户");

                entity.Property(e => e.Mobile)
                    .HasColumnName("MOBILE")
                    .HasColumnType("varchar(50)")
                    .HasComment("手机号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称（登录时的用户名）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Password)
                    .IsRequired()
                    .HasColumnName("PASSWORD")
                    .HasColumnType("varchar(200)")
                    .HasComment("密码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Photopath)
                    .HasColumnName("PHOTOPATH")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("REMARK")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Token)
                    .HasColumnName("TOKEN")
                    .HasColumnType("varchar(1000)")
                    .HasComment("凭证")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Usergroupid)
                    .HasColumnName("USERGROUPID")
                    .HasColumnType("varchar(50)")
                    .HasComment("用户组编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Usergroup)
                    .WithMany(p => p.PrivsUser)
                    .HasForeignKey(d => d.Usergroupid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_A2D165BF457B4A1B");
            });

            modelBuilder.Entity<PrivsUserRoleBak>(entity =>
            {
                entity.HasKey(e => new { e.Userid, e.Roleid })
                    .HasName("PRIMARY");

                entity.ToTable("privs_user_role_bak");

                entity.HasComment("用户角色关联表");

                entity.HasIndex(e => e.Roleid)
                    .HasName("FK_7A54F98651E143AD");

                entity.Property(e => e.Userid)
                    .HasColumnName("USERID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("用户编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Roleid)
                    .HasColumnName("ROLEID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("角色编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsUsergrroup>(entity =>
            {
                entity.ToTable("privs_usergrroup");

                entity.HasComment("用户组");

                entity.HasIndex(e => e.Pid)
                    .HasName("FK_BFB6DF30A04C43EE");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .IsRequired()
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.P)
                    .WithMany(p => p.InverseP)
                    .HasForeignKey(d => d.Pid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_BFB6DF30A04C43EE");
            });

            modelBuilder.Entity<SGcGcda>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("s_gc_gcda");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dalx)
                    .HasColumnName("DALX")
                    .HasColumnType("varchar(50)")
                    .HasComment("档案类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gcid)
                    .HasColumnName("GCID")
                    .HasColumnType("varchar(200)")
                    .HasComment("工程id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gcmc)
                    .HasColumnName("GCMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<SGlyjcJcpz>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("s_glyjc_jcpz");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwid)
                    .HasColumnName("JCDXJTBWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwszbid)
                    .HasColumnName("JCDXJTBWSZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位所在表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzid)
                    .IsRequired()
                    .HasColumnName("JCPZID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<SGlyjcJcpz2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("s_glyjc_jcpz_2");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwid)
                    .HasColumnName("JCDXJTBWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwszbid)
                    .HasColumnName("JCDXJTBWSZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位所在表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzid)
                    .IsRequired()
                    .HasColumnName("JCPZID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<SPrivsDataprivs1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("s_privs_dataprivs_1");

                entity.Property(e => e.Aliasname)
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Argsappend)
                    .HasColumnName("ARGSAPPEND")
                    .HasColumnType("varchar(200)")
                    .HasComment("补充参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Argstext)
                    .HasColumnName("ARGSTEXT")
                    .HasColumnType("varchar(500)")
                    .HasComment("参数说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Columntext)
                    .HasColumnName("COLUMNTEXT")
                    .HasColumnType("varchar(200)")
                    .HasComment("允许操作的字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dataoperation)
                    .HasColumnName("DATAOPERATION")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据操作")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Datasourcetext)
                    .HasColumnName("DATASOURCETEXT")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据源内容")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Datasourcetype)
                    .HasColumnName("DATASOURCETYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据源类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(200)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wheretext)
                    .HasColumnName("WHERETEXT")
                    .HasColumnType("varchar(200)")
                    .HasComment("允许操作的数据")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<SYcysdtyxtjcsjMetadata>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("s_ycysdtyxtjcsj_metadata");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdjd)
                    .HasColumnName("cjdjd")
                    .HasComment("采集点经度");

                entity.Property(e => e.Cjdsyt)
                    .HasColumnName("cjdsyt")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集点示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdwd)
                    .HasColumnName("cjdwd")
                    .HasComment("采集点纬度");

                entity.Property(e => e.Cjdwzms)
                    .HasColumnName("cjdwzms")
                    .HasColumnType("varchar(100)")
                    .HasComment("采集点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzzp)
                    .HasColumnName("JZZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("基准照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<SystmpTreedata>(entity =>
            {
                entity.ToTable("systmp_treedata");

                entity.HasComment("systmp_treedata");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dataid)
                    .IsRequired()
                    .HasColumnName("dataid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Swid)
                    .IsRequired()
                    .HasColumnName("swid")
                    .HasColumnType("varchar(50)")
                    .HasComment("事务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<Tempceshi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tempceshi");

                entity.HasComment("鼓浪屿导入数据临时中间表");

                entity.Property(e => e.Rs)
                    .HasColumnName("rs")
                    .HasColumnType("int(15)")
                    .HasComment("人数");

                entity.Property(e => e.Sj)
                    .HasColumnName("sj")
                    .HasColumnType("datetime")
                    .HasComment("时间");
            });

            modelBuilder.Entity<Temptb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temptb");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("varchar(24)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qksm)
                    .HasColumnName("QKSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("情况说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzlyurl)
                    .HasColumnName("TZLYURL")
                    .HasColumnType("varchar(500)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysbczt)
                    .HasColumnName("YCYSBCZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素保存状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjdj)
                    .HasColumnName("YJDJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjsfjc)
                    .HasColumnName("YJSFJC")
                    .HasColumnType("char(1)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("预警是否解除")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxxid)
                    .HasColumnName("YJXXID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ylt)
                    .HasColumnName("YLT")
                    .HasColumnType("varchar(200)")
                    .HasComment("预览图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ylturl)
                    .HasColumnName("YLTURL")
                    .HasColumnType("varchar(503)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<Test>(entity =>
            {
                entity.ToTable("test");

                entity.HasComment("测试表");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Date1)
                    .HasColumnName("date1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Date2)
                    .HasColumnName("date2")
                    .HasColumnType("datetime");

                entity.Property(e => e.F1)
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.F2)
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<Test1214>(entity =>
            {
                entity.ToTable("test1214");

                entity.HasComment("测试表");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bmid)
                    .HasColumnName("BMID")
                    .HasColumnType("varchar(255)")
                    .HasComment("部门ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Date1)
                    .HasColumnName("date1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Date2)
                    .HasColumnName("date2")
                    .HasColumnType("datetime");

                entity.Property(e => e.F1)
                    .HasColumnType("varchar(255)")
                    .HasComment("人名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.F2)
                    .HasColumnType("varchar(255)")
                    .HasComment("人员ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysmc)
                    .HasColumnName("YSMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<Test1214Copy>(entity =>
            {
                entity.ToTable("test1214_copy");

                entity.HasComment("测试表");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bmid)
                    .HasColumnName("BMID")
                    .HasColumnType("varchar(255)")
                    .HasComment("部门ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Date1)
                    .HasColumnName("date1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Date2)
                    .HasColumnName("date2")
                    .HasColumnType("datetime");

                entity.Property(e => e.F1)
                    .HasColumnType("varchar(255)")
                    .HasComment("人名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.F2)
                    .HasColumnType("varchar(255)")
                    .HasComment("人员ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysmc)
                    .HasColumnName("YSMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<Testtemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("testtemp");

                entity.HasComment("临时表测试");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fswzwz)
                    .HasColumnName("FSWZWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生地点（位置）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjms)
                    .HasColumnName("SJMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("事件描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycsj)
                    .HasColumnName("YCSJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("异常事件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<Testtemp1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("testtemp1");

                entity.HasComment("临时表测试1,划分异常区域，采集解除数据");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VBhdcWdlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_bhdc_wdlysj");

                entity.Property(e => e.Bbh)
                    .HasColumnName("BBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("版本号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhczzt)
                    .HasColumnName("BHCZZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害存在状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhlx)
                    .HasColumnName("BHLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhsyt)
                    .HasColumnName("BHSYT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhztt)
                    .HasColumnName("BHZTT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害状态图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcff)
                    .HasColumnName("JCFF")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测方法")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jczq)
                    .HasColumnName("JCZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mid)
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VBhdcWdlysjBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_bhdc_wdlysj_bak");

                entity.Property(e => e.Bbh)
                    .HasColumnName("BBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("版本号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhczzt)
                    .HasColumnName("BHCZZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害存在状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhlx)
                    .HasColumnName("BHLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhsyt)
                    .HasColumnName("BHSYT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhztt)
                    .HasColumnName("BHZTT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害状态图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcff)
                    .HasColumnName("JCFF")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测方法")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jczq)
                    .HasColumnName("JCZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mid)
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VBhjctCzbh>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_bhjct_czbh");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tcmc)
                    .HasColumnName("TCMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("图层名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VBhxjzNewestinfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_bhxjz_newestinfo");

                entity.Property(e => e.Jd)
                    .HasColumnName("jd")
                    .HasComment("精度");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfcj)
                    .HasColumnName("sfcj")
                    .HasColumnType("int(1)");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjbbmc)
                    .IsRequired()
                    .HasColumnName("sjbbmc")
                    .HasColumnType("varchar(21)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("sjid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("wd")
                    .HasComment("纬度");

                entity.Property(e => e.Yjdj)
                    .HasColumnName("yjdj")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywzj)
                    .IsRequired()
                    .HasColumnName("ywzj")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VBhxjzNewestupdatetime>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_bhxjz_newestupdatetime");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dxid)
                    .HasColumnName("dxid")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VDhjyWdlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_dhjy_wdlysj");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lycs)
                    .HasColumnName("LYCS")
                    .HasColumnType("int(11)")
                    .HasComment("利用次数");

                entity.Property(e => e.Mid)
                    .IsRequired()
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccbdlj)
                    .HasColumnName("SJCCBDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccydlj)
                    .HasColumnName("SJCCYDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(20)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Wdbb)
                    .HasColumnName("WDBB")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdbzdw)
                    .HasColumnName("WDBZDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("文档编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdcjsj)
                    .HasColumnName("WDCJSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档创建时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdjz)
                    .HasColumnName("WDJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdlx)
                    .HasColumnName("WDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdmc)
                    .HasColumnName("WDMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdscsj)
                    .HasColumnName("WDSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档上传时间");

                entity.Property(e => e.Wdsddw)
                    .HasColumnName("WDSDDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdsdsj)
                    .HasColumnName("WDSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档审定时间");

                entity.Property(e => e.Wdsdz)
                    .HasColumnName("WDSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdzz)
                    .HasColumnName("WDZZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档作者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yswdbh)
                    .HasColumnName("YSWDBH")
                    .HasColumnType("varchar(100)")
                    .HasComment("原始文档编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdd)
                    .HasColumnName("YWDSCDD")
                    .HasColumnType("varchar(100)")
                    .HasComment("原文档收藏地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdw)
                    .HasColumnName("YWDSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原文档收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscrq)
                    .HasColumnName("YWDSCRQ")
                    .HasColumnType("datetime")
                    .HasComment("原文档生成日期");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VDqbgWdlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_dqbg_wdlysj");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lycs)
                    .HasColumnName("LYCS")
                    .HasColumnType("int(11)")
                    .HasComment("利用次数");

                entity.Property(e => e.Mid)
                    .IsRequired()
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccbdlj)
                    .HasColumnName("SJCCBDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccydlj)
                    .HasColumnName("SJCCYDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(20)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Wdbb)
                    .HasColumnName("WDBB")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdbzdw)
                    .HasColumnName("WDBZDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("文档编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdcjsj)
                    .HasColumnName("WDCJSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档创建时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdjz)
                    .HasColumnName("WDJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdlx)
                    .HasColumnName("WDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdmc)
                    .HasColumnName("WDMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdscsj)
                    .HasColumnName("WDSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档上传时间");

                entity.Property(e => e.Wdsddw)
                    .HasColumnName("WDSDDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdsdsj)
                    .HasColumnName("WDSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档审定时间");

                entity.Property(e => e.Wdsdz)
                    .HasColumnName("WDSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdzz)
                    .HasColumnName("WDZZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档作者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yswdbh)
                    .HasColumnName("YSWDBH")
                    .HasColumnType("varchar(100)")
                    .HasComment("原始文档编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdd)
                    .HasColumnName("YWDSCDD")
                    .HasColumnType("varchar(100)")
                    .HasComment("原文档收藏地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdw)
                    .HasColumnName("YWDSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原文档收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscrq)
                    .HasColumnName("YWDSCRQ")
                    .HasColumnType("datetime")
                    .HasComment("原文档生成日期");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VDwlmNewestinfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_dwlm_newestinfo");

                entity.Property(e => e.Jd)
                    .HasColumnName("jd")
                    .HasComment("精度");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfcj)
                    .HasColumnName("sfcj")
                    .HasColumnType("int(1)");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjbbmc)
                    .IsRequired()
                    .HasColumnName("sjbbmc")
                    .HasColumnType("varchar(12)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("sjid")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("wd")
                    .HasComment("纬度");

                entity.Property(e => e.Yjdj)
                    .HasColumnName("yjdj")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywzj)
                    .IsRequired()
                    .HasColumnName("ywzj")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VDwlmNewestupdatetime>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_dwlm_newestupdatetime");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dxid)
                    .HasColumnName("dxid")
                    .HasColumnType("varchar(50)")
                    .HasComment("照片区域")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VExportFl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ExportFL");

                entity.Property(e => e.Fl)
                    .IsRequired()
                    .HasColumnName("FL")
                    .HasColumnType("varchar(1)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(100)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcBhdcjcgzqkjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_bhdcjcgzqkjl");

                entity.Property(e => e.Bbh)
                    .HasColumnName("BBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("版本号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbha)
                    .HasColumnName("BHBHA")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhczzt)
                    .HasColumnName("BHCZZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害存在状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhlx)
                    .HasColumnName("BHLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhsyt)
                    .HasColumnName("BHSYT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhztt)
                    .HasColumnName("BHZTT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害状态图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcff)
                    .HasColumnName("JCFF")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测方法")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jczq)
                    .HasColumnName("JCZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tcjd)
                    .HasColumnName("TCJD")
                    .HasComment("病害在图片的经度");

                entity.Property(e => e.Tcmc)
                    .HasColumnName("TCMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("对应的图层照片记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tcwd)
                    .HasColumnName("TCWD")
                    .HasComment("病害在图片的纬度");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xfsj)
                    .HasColumnName("XFSJ")
                    .HasColumnType("datetime")
                    .HasComment("修复时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcBhgcxfdbhxx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_bhgcxfdbhxx");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhczzt)
                    .HasColumnName("BHCZZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害存在状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhgcxfdbhid)
                    .HasColumnName("BHGCXFDBHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护工程修复的病害ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhlx)
                    .HasColumnName("BHLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhxmid)
                    .HasColumnName("BHXMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护项目ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xfhzp)
                    .HasColumnName("XFHZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("修复后照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xfsj)
                    .HasColumnName("XFSJ")
                    .HasColumnType("datetime")
                    .HasComment("修复时间");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("XMMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcBhgcxfxggzjc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_bhgcxfxggzjc");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhczzt)
                    .HasColumnName("BHCZZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害存在状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhlx)
                    .HasColumnName("BHLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(500)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pglx)
                    .HasColumnName("PGLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xfdbhjlid)
                    .HasColumnName("XFDBHJLID")
                    .HasColumnType("varchar(50)")
                    .HasComment("修复的病害记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zp)
                    .HasColumnName("ZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcBhgljfYflxjf>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_bhgljf_yflxjf");

                entity.Property(e => e.Bhgljf)
                    .HasColumnName("bhgljf")
                    .HasComment("保护管理经费");

                entity.Property(e => e.Bhgljflx)
                    .HasColumnName("bhgljflx")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护管理经费类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yf)
                    .HasColumnName("yf")
                    .HasColumnType("int(2)");
            });

            modelBuilder.Entity<VGlyjcBhkzztpg>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_bhkzztpg");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhdid)
                    .HasColumnName("BHDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhkzztpg)
                    .HasColumnName("BHKZZTPG")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害控制状态评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhlx)
                    .HasColumnName("BHLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcBhxjBcjcdx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_bhxj_bcjcdx");

                entity.Property(e => e.Bhxysms)
                    .HasColumnName("BHXYSMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("不和谐因素描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fsbd)
                    .HasColumnName("FSBD")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生变动")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("精度");

                entity.Property(e => e.Jgnd)
                    .HasColumnName("JGND")
                    .HasColumnType("varchar(50)")
                    .HasComment("竣工年代")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzcqr)
                    .HasColumnName("JZCQR")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑产权人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzcs)
                    .HasColumnName("JZCS")
                    .HasColumnType("int(11)")
                    .HasComment("建筑层数");

                entity.Property(e => e.Jzgd)
                    .HasColumnName("JZGD")
                    .HasComment("建筑高度");

                entity.Property(e => e.Jzjg)
                    .HasColumnName("JZJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑结构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzmc)
                    .HasColumnName("JZMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzwx)
                    .HasColumnName("JZWX")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑外形")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzyt)
                    .HasColumnName("JZYT")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑用途")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qtys)
                    .HasColumnName("QTYS")
                    .HasColumnType("varchar(50)")
                    .HasComment("墙体颜色")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrq)
                    .HasColumnName("TXRQ")
                    .HasColumnType("datetime")
                    .HasComment("填写日期");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wdys)
                    .HasColumnName("WDYS")
                    .HasColumnType("varchar(50)")
                    .HasComment("屋顶颜色")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzsffsbd)
                    .HasColumnName("XZSFFSBD")
                    .HasColumnType("tinyint(4)")
                    .HasComment("现状是否发生变动");

                entity.Property(e => e.Zdmj)
                    .HasColumnName("ZDMJ")
                    .HasColumnType("int(11)")
                    .HasComment("占地面积");

                entity.Property(e => e.Zplj)
                    .HasColumnName("ZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcBhxjzzpjbhxjzjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_bhxjzzpjbhxjzjl");

                entity.Property(e => e.Bhxysms)
                    .HasColumnName("BHXYSMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("不和谐因素描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fsbd)
                    .HasColumnName("FSBD")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生变动")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jgnd)
                    .HasColumnName("JGND")
                    .HasColumnType("varchar(50)")
                    .HasComment("竣工年代")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzcqr)
                    .HasColumnName("JZCQR")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑产权人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzcs)
                    .HasColumnName("JZCS")
                    .HasColumnType("int(11)")
                    .HasComment("建筑层数");

                entity.Property(e => e.Jzgd)
                    .HasColumnName("JZGD")
                    .HasComment("建筑高度");

                entity.Property(e => e.Jzjg)
                    .HasColumnName("JZJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑结构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzmc)
                    .HasColumnName("JZMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzwx)
                    .HasColumnName("JZWX")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑外形")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzyt)
                    .HasColumnName("JZYT")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑用途")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qtys)
                    .HasColumnName("QTYS")
                    .HasColumnType("varchar(50)")
                    .HasComment("墙体颜色")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrq)
                    .HasColumnName("TXRQ")
                    .HasColumnType("datetime")
                    .HasComment("填写日期");

                entity.Property(e => e.Wdys)
                    .HasColumnName("WDYS")
                    .HasColumnType("varchar(50)")
                    .HasComment("屋顶颜色")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzsffsbd)
                    .HasColumnName("XZSFFSBD")
                    .HasColumnType("tinyint(4)")
                    .HasComment("现状是否发生变动");

                entity.Property(e => e.Zdmj)
                    .HasColumnName("ZDMJ")
                    .HasColumnType("int(11)")
                    .HasComment("占地面积");

                entity.Property(e => e.Zplj)
                    .HasColumnName("ZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcBhzsyhjzzgcxczp>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_bhzsyhjzzgcxczp");

                entity.Property(e => e.Bhzsyhjzzxmid)
                    .HasColumnName("BHZSYHJZZXMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护展示与环境整治项目ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qksm)
                    .HasColumnName("QKSM")
                    .HasColumnType("varchar(2000)")
                    .HasComment("情况描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfwg)
                    .HasColumnName("SFWG")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否完工")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjwgsj)
                    .HasColumnName("SJWGSJ")
                    .HasColumnType("datetime")
                    .HasComment("实际完工时间");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("xmmc")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcBxWdl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_bx_wdl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("bhbh")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhmc)
                    .HasColumnName("BHMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bz)
                    .HasColumnName("bz")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("pg")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("rwid")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcBxWdlNewestdxsj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_bx_wdl_newestdxsj");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");
            });

            modelBuilder.Entity<VGlyjcByWdl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_by_wdl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhmc)
                    .HasColumnName("BHMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gjsbyyxmj)
                    .HasColumnName("GJSBYYXMJ")
                    .HasComment("构件受白蚁影响面积");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scjysj)
                    .HasColumnName("SCJYSJ")
                    .HasColumnType("datetime")
                    .HasComment("上次降雨时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcByWdlNewestdxsj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_by_wdl_newestdxsj");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");
            });

            modelBuilder.Entity<VGlyjcByywhgcjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_byywhgcjl");

                entity.Property(e => e.Byywhdx)
                    .HasColumnName("BYYWHDX")
                    .HasColumnType("varchar(50)")
                    .HasComment("保养与维护对象")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Byywhnr)
                    .HasColumnName("BYYWHNR")
                    .HasColumnType("varchar(500)")
                    .HasComment("保养与维护内容")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Byywhrq)
                    .HasColumnName("BYYWHRQ")
                    .HasColumnType("datetime")
                    .HasComment("保养与维护日期");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(50)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rcbyzp)
                    .HasColumnName("RCBYZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("日常保养照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Ssz)
                    .HasColumnName("SSZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yf)
                    .HasColumnName("YF")
                    .HasColumnType("varchar(50)")
                    .HasComment("月份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcCamera>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_camera");

                entity.Property(e => e.Azdjd)
                    .HasColumnName("AZDJD")
                    .HasComment("安装点经度");

                entity.Property(e => e.Azdszycdid)
                    .HasColumnName("AZDSZYCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("安装点所在遗产点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Azdwd)
                    .HasColumnName("AZDWD")
                    .HasComment("安装点纬度");

                entity.Property(e => e.Bcjcdxid)
                    .HasColumnName("BCJCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("补充监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cameraid)
                    .HasColumnName("cameraid")
                    .HasColumnType("varchar(50)")
                    .HasComment("视频ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cancontrol)
                    .HasColumnName("cancontrol")
                    .HasColumnType("int(2)")
                    .HasComment("是否为可控制姿态的球机");

                entity.Property(e => e.Channel)
                    .HasColumnName("channel")
                    .HasColumnType("varchar(50)")
                    .HasComment("管道")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dll)
                    .HasColumnName("dll")
                    .HasColumnType("varchar(50)")
                    .HasComment("厂商驱动")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ip)
                    .HasColumnName("ip")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lat)
                    .HasColumnName("lat")
                    .HasComment("经度");

                entity.Property(e => e.Locadesc)
                    .HasColumnName("locadesc")
                    .HasColumnType("varchar(200)")
                    .HasComment("位置说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lon)
                    .HasColumnName("lon")
                    .HasComment("纬度");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Param)
                    .HasColumnName("param")
                    .HasColumnType("varchar(50)")
                    .HasComment("参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Password)
                    .HasColumnName("password")
                    .HasColumnType("varchar(50)")
                    .HasComment("密码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Port)
                    .HasColumnName("port")
                    .HasColumnType("varchar(50)")
                    .HasComment("端口")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("remark")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbid)
                    .IsRequired()
                    .HasColumnName("sbid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbmc)
                    .HasColumnName("SBMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sourceid)
                    .HasColumnName("sourceid")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备清单ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Username)
                    .HasColumnName("username")
                    .HasColumnType("varchar(50)")
                    .HasComment("用户名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Videourl)
                    .HasColumnName("videourl")
                    .HasColumnType("varchar(200)")
                    .HasComment("实时视频URL地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcCjNewestdxsj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_cj_newestdxsj");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");
            });

            modelBuilder.Entity<VGlyjcDwlmbdxx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_dwlmbdxx");

                entity.Property(e => e.Bdhzp)
                    .HasColumnName("BDHZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("变动后照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdjzdz)
                    .HasColumnName("BDJZDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("变动建筑地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdqkms)
                    .HasColumnName("BDQKMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("变动情况描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdqzp)
                    .HasColumnName("BDQZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("变动前照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dwlmzp)
                    .HasColumnName("DWLMZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("第五立面照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("smallint(6)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("smallint(6)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(500)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(50)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("XMMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpqy)
                    .HasColumnName("ZPQY")
                    .HasColumnType("varchar(50)")
                    .HasComment("照片区域")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcDwlmzp>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_dwlmzp");

                entity.Property(e => e.Bhms)
                    .HasColumnName("BHMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("变化描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dwlmzp)
                    .HasColumnName("DWLMZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("第五立面照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pzsj)
                    .HasColumnName("PZSJ")
                    .HasColumnType("datetime")
                    .HasComment("拍照时间");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("smallint(6)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("smallint(6)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(500)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(50)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpqy)
                    .HasColumnName("ZPQY")
                    .HasColumnType("varchar(50)")
                    .HasComment("照片区域")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcFsWdl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_fs_wdl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhmc)
                    .HasColumnName("BHMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gjfsmj)
                    .HasColumnName("GJFSMJ")
                    .HasComment("构件腐蚀面积");

                entity.Property(e => e.Gjscmj)
                    .HasColumnName("GJSCMJ")
                    .HasComment("构件受潮面积");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scjysj)
                    .HasColumnName("SCJYSJ")
                    .HasColumnType("datetime")
                    .HasComment("上次降雨时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcFsWdlNewestdxsj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_fs_wdl_newestdxsj");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");
            });

            modelBuilder.Entity<VGlyjcJzjceJzjc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_jzjce_jzjc");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("基础数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzfl)
                    .HasColumnName("JZFL")
                    .HasColumnType("varchar(50)")
                    .HasComment("界桩分类（遗产区界桩、缓冲区界桩）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ms)
                    .HasColumnName("MS")
                    .HasColumnType("varchar(50)")
                    .HasComment("描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估（有变化、无变化）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcLfSzl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_lf_szl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhmc)
                    .HasColumnName("BHMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Kd)
                    .HasColumnName("KD")
                    .HasColumnType("int(11)")
                    .HasComment("宽度(单位mm)");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcLfSzlNewestdxsj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_lf_szl_newestdxsj");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");
            });

            modelBuilder.Entity<VGlyjcLfWdl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_lf_wdl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhmc)
                    .HasColumnName("BHMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(1000)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcrq)
                    .HasColumnName("DCRQ")
                    .HasColumnType("datetime")
                    .HasComment("调查日期");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzfaid)
                    .HasColumnName("JCPZFAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置方案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lfcd)
                    .HasColumnName("LFCD")
                    .HasComment("裂缝长度");

                entity.Property(e => e.Lfkd)
                    .HasColumnName("LFKD")
                    .HasComment("裂缝宽度");

                entity.Property(e => e.Lfkkfw)
                    .HasColumnName("LFKKFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("裂缝开口方位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lfmxt)
                    .HasColumnName("LFMXT")
                    .HasColumnType("varchar(50)")
                    .HasComment("裂缝面形态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lfsd)
                    .HasColumnName("LFSD")
                    .HasComment("裂缝深度");

                entity.Property(e => e.Lxctqk)
                    .HasColumnName("LXCTQK")
                    .HasColumnType("varchar(500)")
                    .HasComment("裂隙充填情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcLfWdlNewestdxsj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_lf_wdl_newestdxsj");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");
            });

            modelBuilder.Entity<VGlyjcLsdljcjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_lsdljcjl");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlkdbhqk)
                    .HasColumnName("DLKDBHQK")
                    .HasColumnType("varchar(50)")
                    .HasComment("道路宽度变化情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlpz)
                    .HasColumnName("DLPZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("道路铺装")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlzplj)
                    .HasColumnName("DLZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("道路照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlzpmc)
                    .HasColumnName("DLZPMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("道路照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ldmc)
                    .HasColumnName("LDMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("路段名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qtcz)
                    .HasColumnName("QTCZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("墙体材质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qtys)
                    .HasColumnName("QTYS")
                    .HasColumnType("varchar(50)")
                    .HasComment("墙体颜色")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Szdl)
                    .HasColumnName("SZDL")
                    .HasColumnType("varchar(50)")
                    .HasComment("所在道路")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Szhx)
                    .HasColumnName("SZHX")
                    .HasColumnType("varchar(50)")
                    .HasComment("所在环线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrq)
                    .HasColumnName("TXRQ")
                    .HasColumnType("datetime")
                    .HasComment("填写日期");

                entity.Property(e => e.Wqcd)
                    .HasColumnName("WQCD")
                    .HasComment("围墙长度");

                entity.Property(e => e.Wqcdbhqk)
                    .HasColumnName("WQCDBHQK")
                    .HasColumnType("varchar(50)")
                    .HasComment("围墙长度变化情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wqgd)
                    .HasColumnName("WQGD")
                    .HasComment("围墙高度");

                entity.Property(e => e.Wqgdbhqk)
                    .HasColumnName("WQGDBHQK")
                    .HasColumnType("varchar(50)")
                    .HasComment("围墙高度变化情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wqwzbh)
                    .HasColumnName("WQWZBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("围墙位置变化")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wqydlgkb)
                    .HasColumnName("WQYDLGKB")
                    .HasColumnType("varchar(50)")
                    .HasComment("围墙与道路高宽比")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcQt>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_qt");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lycs)
                    .HasColumnName("LYCS")
                    .HasColumnType("int(11)")
                    .HasComment("利用次数");

                entity.Property(e => e.Mid)
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccbdlj)
                    .HasColumnName("SJCCBDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccydlj)
                    .HasColumnName("SJCCYDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(20)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Wdbb)
                    .HasColumnName("WDBB")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdbzdw)
                    .HasColumnName("WDBZDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("文档编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdcjsj)
                    .HasColumnName("WDCJSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档创建时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdjz)
                    .HasColumnName("WDJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdlx)
                    .HasColumnName("WDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdmc)
                    .HasColumnName("WDMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdscsj)
                    .HasColumnName("WDSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档上传时间");

                entity.Property(e => e.Wdsddw)
                    .HasColumnName("WDSDDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdsdsj)
                    .HasColumnName("WDSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档审定时间");

                entity.Property(e => e.Wdsdz)
                    .HasColumnName("WDSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdzz)
                    .HasColumnName("WDZZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档作者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yswdbh)
                    .HasColumnName("YSWDBH")
                    .HasColumnType("varchar(100)")
                    .HasComment("原始文档编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdd)
                    .HasColumnName("YWDSCDD")
                    .HasColumnType("varchar(100)")
                    .HasComment("原文档收藏地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdw)
                    .HasColumnName("YWDSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原文档收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscrq)
                    .HasColumnName("YWDSCRQ")
                    .HasColumnType("datetime")
                    .HasComment("原文档生成日期");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcRcxcjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_rcxcjl");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xcddwz)
                    .HasColumnName("XCDDWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查地点（位置）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcddycd)
                    .HasColumnName("XCDDYCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查地点（遗产点）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcqkmsfsycqkms)
                    .HasColumnName("XCQKMSFSYCQKMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("巡查情况描述-情况描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcqkmsxclx)
                    .HasColumnName("XCQKMSXCLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查情况描述-巡查路线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcsj)
                    .HasColumnName("XCSJ")
                    .HasColumnType("datetime")
                    .HasComment("巡查时间");

                entity.Property(e => e.Xcy)
                    .HasColumnName("XCY")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcyrealname)
                    .HasColumnName("XCYREALNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yczplj)
                    .HasColumnName("YCZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("异常照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yczpmc)
                    .HasColumnName("YCZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("异常照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcRcxcycjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_rcxcycjl");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dscqdcs)
                    .HasColumnName("DSCQDCS")
                    .HasColumnType("varchar(500)")
                    .HasComment("当时采取的措施")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fswzwz)
                    .HasColumnName("FSWZWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生地点（位置）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fswzycd)
                    .HasColumnName("FSWZYCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生地点（遗产点）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jchzp)
                    .HasColumnName("JCHZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("解除后照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("解除时间");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjcjfs)
                    .HasColumnName("SJCJFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjms)
                    .HasColumnName("SJMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("事件描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Xcrq)
                    .HasColumnName("XCRQ")
                    .HasColumnType("datetime")
                    .HasComment("巡查日期");

                entity.Property(e => e.Xcy)
                    .HasColumnName("XCY")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcyrealname)
                    .HasColumnName("XCYREALNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yclx)
                    .HasColumnName("YCLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("异常类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycsfjc)
                    .HasColumnName("YCSFJC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("异常是否解除")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycsj)
                    .HasColumnName("YCSJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("异常事件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcSlWdl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_sl_wdl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhmc)
                    .HasColumnName("BHMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("'0000-00-00 00:00:00'")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scjysj)
                    .HasColumnName("SCJYSJ")
                    .HasColumnType("datetime")
                    .HasComment("上次降雨时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Slmj)
                    .HasColumnName("SLMJ")
                    .HasComment("渗漏面积");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcSlWdlNewestdxsj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_sl_wdl_newestdxsj");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");
            });

            modelBuilder.Entity<VGlyjcSpwySzlNewestdxsj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_spwy_szl_newestdxsj");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");
            });

            modelBuilder.Entity<VGlyjcStyycystjxzpjjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_styycystjxzpjjl");

                entity.Property(e => e.Bdms)
                    .HasColumnName("BDMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("变动描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("精度");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrq)
                    .HasColumnName("TXRQ")
                    .HasColumnType("datetime")
                    .HasComment("填写日期");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Xzsffsbd)
                    .HasColumnName("XZSFFSBD")
                    .HasColumnType("varchar(50)")
                    .HasComment("现状是否发生变动")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zplj)
                    .HasColumnName("ZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zxmc)
                    .HasColumnName("ZXMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("轴线名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcTlWdl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_tl_wdl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhmc)
                    .HasColumnName("BHMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tlcd)
                    .HasColumnName("TLCD")
                    .HasComment("脱落长度");

                entity.Property(e => e.Tlkd)
                    .HasColumnName("TLKD")
                    .HasComment("脱落宽度");

                entity.Property(e => e.Tlmj)
                    .HasColumnName("TLMJ")
                    .HasComment("脱落面积");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcTlWdlNewestdxsj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_tl_wdl_newestdxsj");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");
            });

            modelBuilder.Entity<VGlyjcWwbhwxda>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_wwbhwxda");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dalx)
                    .HasColumnName("DALX")
                    .HasColumnType("varchar(50)")
                    .HasComment("档案类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gcid)
                    .HasColumnName("GCID")
                    .HasColumnType("varchar(200)")
                    .HasComment("工程id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("xmmc")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcXjxmgzjlXjxmjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_xjxmgzjl_xjxmjl");

                entity.Property(e => e.Bfhfafm)
                    .HasColumnName("BFHFAFM")
                    .HasColumnType("varchar(500)")
                    .HasComment("不符合方案方面")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfwg)
                    .HasColumnName("SFWG")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否完工")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjwgsj)
                    .HasColumnName("SJWGSJ")
                    .HasColumnType("datetime")
                    .HasComment("实际完工时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Xchjzplj)
                    .HasColumnName("XCHJZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("现场环境照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xjxmjskzqk)
                    .HasColumnName("XJXMJSKZQK")
                    .HasColumnType("varchar(50)")
                    .HasComment(" 新建项目建设控制情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xjxmmc)
                    .HasColumnName("xjxmmc")
                    .HasColumnType("varchar(100)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("XMMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmms)
                    .HasColumnName("XMMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("项目描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcXyaxfxtyjxx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_xyaxfxtyjxx");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jkttsl)
                    .HasColumnName("JKTTSL")
                    .HasColumnType("int(11)")
                    .HasComment("监控探头数量");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tzje)
                    .HasColumnName("TZJE")
                    .HasComment("投资金额");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wztp)
                    .HasColumnName("WZTP")
                    .HasColumnType("varchar(100)")
                    .HasComment("位置图片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xfxtmc)
                    .HasColumnName("XFXTMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("消防系统名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xtgcms)
                    .HasColumnName("XTGCMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("系统构成描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjssjcsj)
                    .HasColumnName("YJSSJCSJ")
                    .HasColumnType("datetime")
                    .HasComment("硬件设施建成时间");

                entity.Property(e => e.Yjssxhms)
                    .HasColumnName("YJSSXHMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("硬件设施型号描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytfl)
                    .HasColumnName("YTFL")
                    .HasColumnType("varchar(50)")
                    .HasComment("用途分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcYcysdtxztyxtjycysxzjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_ycysdtxztyxtjycysxzjl");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qksm)
                    .HasColumnName("QKSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("情况说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tzlj)
                    .HasColumnName("TZLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("图纸路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysbczt)
                    .HasColumnName("YCYSBCZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素保存状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ylt)
                    .HasColumnName("YLT")
                    .HasColumnType("varchar(200)")
                    .HasComment("预览图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcYhlmzpjyhlmjcjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_yhlmzpjyhlmjcjl");

                entity.Property(e => e.Bhxys)
                    .HasColumnName("BHXYS")
                    .HasColumnType("varchar(50)")
                    .HasComment("不和谐因素")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhxysfswz)
                    .HasColumnName("BHXYSFSWZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("不和谐因素发生位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhxysms)
                    .HasColumnName("BHXYSMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("不和谐因素描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzmc)
                    .HasColumnName("JZMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrq)
                    .HasColumnName("TXRQ")
                    .HasColumnType("datetime")
                    .HasComment("填写日期");

                entity.Property(e => e.Zplj)
                    .HasColumnName("ZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcYjczgz>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_yjczgz");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("处置跟踪时间");

                entity.Property(e => e.Czsm)
                    .HasColumnName("czsm")
                    .HasColumnType("varchar(500)")
                    .HasComment("处置跟踪说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasColumnType("varchar(255)")
                    .HasComment("附件名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("处置跟踪ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Picname)
                    .HasColumnName("picname")
                    .HasColumnType("varchar(255)")
                    .HasComment("附图名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("remark")
                    .HasColumnType("varchar(255)")
                    .HasComment("备注信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Userid)
                    .IsRequired()
                    .HasColumnName("userid")
                    .HasColumnType("varchar(50)")
                    .HasComment("用户ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Username)
                    .HasColumnName("username")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjsfjc)
                    .HasColumnName("YJSFJC")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警是否解除")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxxid)
                    .IsRequired()
                    .HasColumnName("yjxxid")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警信息ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcYjjsxx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_yjjsxx");

                entity.Property(e => e.Realname)
                    .HasColumnName("REALNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tel)
                    .HasColumnName("TEL")
                    .HasColumnType("varchar(50)")
                    .HasComment("电话")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjdj)
                    .HasColumnName("YJDJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjjsrid)
                    .HasColumnName("YJJSRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警信息接收人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjpzfamc)
                    .HasColumnName("YJPZFAMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjszid)
                    .HasColumnName("YJSZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警设置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcYt>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_yt");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lycs)
                    .HasColumnName("LYCS")
                    .HasColumnType("int(11)")
                    .HasComment("利用次数");

                entity.Property(e => e.Mid)
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccbdlj)
                    .HasColumnName("SJCCBDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccydlj)
                    .HasColumnName("SJCCYDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(20)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Wdbb)
                    .HasColumnName("WDBB")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdbzdw)
                    .HasColumnName("WDBZDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("文档编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdcjsj)
                    .HasColumnName("WDCJSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档创建时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdjz)
                    .HasColumnName("WDJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdlx)
                    .HasColumnName("WDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdmc)
                    .HasColumnName("WDMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdscsj)
                    .HasColumnName("WDSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档上传时间");

                entity.Property(e => e.Wdsddw)
                    .HasColumnName("WDSDDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdsdsj)
                    .HasColumnName("WDSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档审定时间");

                entity.Property(e => e.Wdsdz)
                    .HasColumnName("WDSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdzz)
                    .HasColumnName("WDZZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档作者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yswdbh)
                    .HasColumnName("YSWDBH")
                    .HasColumnType("varchar(100)")
                    .HasComment("原始文档编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdd)
                    .HasColumnName("YWDSCDD")
                    .HasColumnType("varchar(100)")
                    .HasComment("原文档收藏地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdw)
                    .HasColumnName("YWDSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原文档收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscrq)
                    .HasColumnName("YWDSCRQ")
                    .HasColumnType("datetime")
                    .HasComment("原文档生成日期");

                entity.Property(e => e.Yxfj)
                    .HasColumnName("YXFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("影像附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcZjzxfxOrguserinfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_zjzxfx_orguserinfo");

                entity.Property(e => e.Bgfjmc)
                    .HasColumnName("BGFJMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("报告附件名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bgnrjj)
                    .HasColumnName("BGNRJJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("报告内容简介")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fxbgmc)
                    .HasColumnName("FXBGMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("分析报告名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fxsj)
                    .HasColumnName("FXSJ")
                    .HasColumnType("datetime")
                    .HasComment("分析时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Realname)
                    .HasColumnName("REALNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scr)
                    .HasColumnName("SCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("上传人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scsj)
                    .HasColumnName("SCSJ")
                    .HasColumnType("datetime")
                    .HasComment("上传时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<VGlyjcZs>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_zs");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcd)
                    .HasColumnName("JCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sj)
                    .HasColumnName("SJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zs)
                    .HasColumnName("ZS")
                    .HasColumnType("varchar(50)")
                    .HasComment("噪声")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcZsSs>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_zs_ss");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lycs)
                    .HasColumnName("LYCS")
                    .HasColumnType("int(11)")
                    .HasComment("利用次数");

                entity.Property(e => e.Mid)
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccbdlj)
                    .HasColumnName("SJCCBDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccydlj)
                    .HasColumnName("SJCCYDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(20)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Wdbb)
                    .HasColumnName("WDBB")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdbzdw)
                    .HasColumnName("WDBZDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("文档编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdcjsj)
                    .HasColumnName("WDCJSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档创建时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdjz)
                    .HasColumnName("WDJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdlx)
                    .HasColumnName("WDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdmc)
                    .HasColumnName("WDMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdscsj)
                    .HasColumnName("WDSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档上传时间");

                entity.Property(e => e.Wdsddw)
                    .HasColumnName("WDSDDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdsdsj)
                    .HasColumnName("WDSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档审定时间");

                entity.Property(e => e.Wdsdz)
                    .HasColumnName("WDSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdzz)
                    .HasColumnName("WDZZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档作者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yswdbh)
                    .HasColumnName("YSWDBH")
                    .HasColumnType("varchar(100)")
                    .HasComment("原始文档编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdd)
                    .HasColumnName("YWDSCDD")
                    .HasColumnType("varchar(100)")
                    .HasComment("原文档收藏地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdw)
                    .HasColumnName("YWDSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原文档收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscrq)
                    .HasColumnName("YWDSCRQ")
                    .HasColumnType("datetime")
                    .HasComment("原文档生成日期");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcZwWdl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_zw_wdl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhmc)
                    .HasColumnName("BHMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gxyxmj)
                    .HasColumnName("GXYXMJ")
                    .HasComment("根系影响面积");

                entity.Property(e => e.Gxyxsd)
                    .HasColumnName("GXYXSD")
                    .HasComment("根系影响深度");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zwzl)
                    .HasColumnName("ZWZL")
                    .HasColumnType("varchar(50)")
                    .HasComment("植物种类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcZwWdlNewestdxsj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_zw_wdl_newestdxsj");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");
            });

            modelBuilder.Entity<VGlyjcZxWdl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_zx_wdl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhmc)
                    .HasColumnName("BHMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gjscmj)
                    .HasColumnName("GJSCMJ")
                    .HasComment("构件受潮面积");

                entity.Property(e => e.Gjzxmj)
                    .HasColumnName("GJZXMJ")
                    .HasComment("构件糟朽面积");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scjysj)
                    .HasColumnName("SCJYSJ")
                    .HasColumnType("datetime")
                    .HasComment("上次降雨时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcZxWdlNewestdxsj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_zx_wdl_newestdxsj");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcZz>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_zz");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lycs)
                    .HasColumnName("LYCS")
                    .HasColumnType("int(11)")
                    .HasComment("利用次数");

                entity.Property(e => e.Mid)
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccbdlj)
                    .HasColumnName("SJCCBDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccydlj)
                    .HasColumnName("SJCCYDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(20)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Wdbb)
                    .HasColumnName("WDBB")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdbzdw)
                    .HasColumnName("WDBZDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("文档编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdcjsj)
                    .HasColumnName("WDCJSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档创建时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdjz)
                    .HasColumnName("WDJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdlx)
                    .HasColumnName("WDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdmc)
                    .HasColumnName("WDMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdscsj)
                    .HasColumnName("WDSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档上传时间");

                entity.Property(e => e.Wdsddw)
                    .HasColumnName("WDSDDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdsdsj)
                    .HasColumnName("WDSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档审定时间");

                entity.Property(e => e.Wdsdz)
                    .HasColumnName("WDSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdzz)
                    .HasColumnName("WDZZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档作者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yswdbh)
                    .HasColumnName("YSWDBH")
                    .HasColumnType("varchar(100)")
                    .HasComment("原始文档编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdd)
                    .HasColumnName("YWDSCDD")
                    .HasColumnType("varchar(100)")
                    .HasComment("原文档收藏地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdw)
                    .HasColumnName("YWDSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原文档收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscrq)
                    .HasColumnName("YWDSCRQ")
                    .HasColumnType("datetime")
                    .HasComment("原文档生成日期");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VJcRcxcjlRealname>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_jc_rcxcjl_realname");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xcddwz)
                    .HasColumnName("XCDDWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查地点（位置）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcddycd)
                    .HasColumnName("XCDDYCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查地点（遗产点）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcqkmsfsycqkms)
                    .HasColumnName("XCQKMSFSYCQKMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("巡查情况描述-情况描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcqkmsxclx)
                    .HasColumnName("XCQKMSXCLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查情况描述-巡查路线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcsj)
                    .HasColumnName("XCSJ")
                    .HasColumnType("datetime")
                    .HasComment("巡查时间");

                entity.Property(e => e.Xcy)
                    .HasColumnName("XCY")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcyrealname)
                    .HasColumnName("XCYREALNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yczplj)
                    .HasColumnName("YCZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("异常照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yczpmc)
                    .HasColumnName("YCZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("异常照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VJcRcxcjlRealnameBack>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_jc_rcxcjl_realname_back");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xcddwz)
                    .HasColumnName("XCDDWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查地点（位置）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcddycd)
                    .HasColumnName("XCDDYCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查地点（遗产点）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcqkmsfsycqkms)
                    .HasColumnName("XCQKMSFSYCQKMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("巡查情况描述-情况描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcqkmsxclx)
                    .HasColumnName("XCQKMSXCLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查情况描述-巡查路线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcsj)
                    .HasColumnName("XCSJ")
                    .HasColumnType("datetime")
                    .HasComment("巡查时间");

                entity.Property(e => e.Xcy)
                    .HasColumnName("XCY")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcyrealname)
                    .HasColumnName("XCYREALNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yczplj)
                    .HasColumnName("YCZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("异常照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yczpmc)
                    .HasColumnName("YCZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("异常照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VJcRcxcycjlRealname>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_jc_rcxcycjl_realname");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dscqdcs)
                    .HasColumnName("DSCQDCS")
                    .HasColumnType("varchar(500)")
                    .HasComment("当时采取的措施")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fswzwz)
                    .HasColumnName("FSWZWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生地点（位置）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fswzycd)
                    .HasColumnName("FSWZYCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生地点（遗产点）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jchzp)
                    .HasColumnName("JCHZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("解除后照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("解除时间");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjcjfs)
                    .HasColumnName("SJCJFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjms)
                    .HasColumnName("SJMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("事件描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Xcrq)
                    .HasColumnName("XCRQ")
                    .HasColumnType("datetime")
                    .HasComment("巡查日期");

                entity.Property(e => e.Xcy)
                    .HasColumnName("XCY")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcyrealname)
                    .HasColumnName("XCYREALNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yclx)
                    .HasColumnName("YCLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("异常类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycsfjc)
                    .HasColumnName("YCSFJC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("异常是否解除")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycsj)
                    .HasColumnName("YCSJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("异常事件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VJcRcxcycjlRealnameBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_jc_rcxcycjl_realname_bak");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dscqdcs)
                    .HasColumnName("DSCQDCS")
                    .HasColumnType("varchar(500)")
                    .HasComment("当时采取的措施")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fswzwz)
                    .HasColumnName("FSWZWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生地点（位置）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fswzycd)
                    .HasColumnName("FSWZYCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生地点（遗产点）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jchzp)
                    .HasColumnName("JCHZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("解除后照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("解除时间");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjms)
                    .HasColumnName("SJMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("事件描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Xcrq)
                    .HasColumnName("XCRQ")
                    .HasColumnType("datetime")
                    .HasComment("巡查日期");

                entity.Property(e => e.Xcy)
                    .HasColumnName("XCY")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcyrealname)
                    .HasColumnName("XCYREALNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycsfjc)
                    .HasColumnName("YCSFJC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("异常是否解除")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycsj)
                    .HasColumnName("YCSJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("异常事件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VJcpzYjszzb>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_jcpz_yjszzb");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Czfzrid)
                    .HasColumnName("CZFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("处置负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ejyjyaid)
                    .HasColumnName("EJYJYAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("二级预警预案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ejyjyamc)
                    .HasColumnName("EJYJYAMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("预案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwid)
                    .HasColumnName("JCDXJTBWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwszbid)
                    .HasColumnName("JCDXJTBWSZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位所在表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzid)
                    .IsRequired()
                    .HasColumnName("JCPZID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sijyjyaid)
                    .HasColumnName("SIJYJYAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("四级预警预案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sijyjyamc)
                    .HasColumnName("SIJYJYAMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("预案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjyjyaid)
                    .HasColumnName("SJYJYAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("三级预警预案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjyjyamc)
                    .HasColumnName("SJYJYAMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("预案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yj1jjsrbm)
                    .HasColumnName("YJ1JJSRBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("一级预警信息接收人部门")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yj1jjsrzw)
                    .HasColumnName("YJ1JJSRZW")
                    .HasColumnType("varchar(50)")
                    .HasComment("一级预警信息接收人职务")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yj2jjsrbm)
                    .HasColumnName("YJ2JJSRBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("二级预警信息接收人部门")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yj2jjsrzw)
                    .HasColumnName("YJ2JJSRZW")
                    .HasColumnType("varchar(50)")
                    .HasComment("二级预警信息接收人职务")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yj3jjsrbm)
                    .HasColumnName("YJ3JJSRBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("三级预警信息接收人部门")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yj3jjsrzw)
                    .HasColumnName("YJ3JJSRZW")
                    .HasColumnType("varchar(50)")
                    .HasComment("三级预警信息接收人职务")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yj4jjsrbm)
                    .HasColumnName("YJ4JJSRBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("四级预警信息接收人部门")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yj4jjsrzw)
                    .HasColumnName("YJ4JJSRZW")
                    .HasColumnType("varchar(50)")
                    .HasComment("四级预警信息接收人职务")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjpzfamc)
                    .HasColumnName("YJPZFAMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxxsm)
                    .HasColumnName("YJXXSM")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警信息说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjyjyaid)
                    .HasColumnName("YJYJYAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("一级预警预案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjyjyamc)
                    .HasColumnName("YJYJYAMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("预案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjzd)
                    .HasColumnName("YJZD")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VJieruTyphoonPath>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_jieru_typhoon_path");

                entity.Property(e => e.Airpressure)
                    .HasColumnName("airpressure")
                    .HasColumnType("int(11)")
                    .HasComment("气压");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Code)
                    .HasColumnName("code")
                    .HasColumnType("int(11)")
                    .HasComment("台风代码");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Enname)
                    .HasColumnName("ENNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("英文名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Happenyear)
                    .HasColumnName("happenyear")
                    .HasColumnType("char(4)")
                    .HasComment("发生年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Latitude)
                    .HasColumnName("latitude")
                    .HasComment("纬度");

                entity.Property(e => e.Longitude)
                    .HasColumnName("longitude")
                    .HasComment("经度");

                entity.Property(e => e.Movedirection)
                    .HasColumnName("movedirection")
                    .HasColumnType("varchar(50)")
                    .HasComment("移动方向")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Movespeed)
                    .HasColumnName("movespeed")
                    .HasColumnType("int(11)")
                    .HasComment("移动速度");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasColumnType("varchar(50)")
                    .HasComment("台风名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("pid")
                    .HasColumnType("varchar(50)")
                    .HasComment("父ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("发生时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasColumnType("varchar(50)")
                    .HasComment("台风类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Windpower)
                    .HasColumnName("windpower")
                    .HasColumnType("int(11)")
                    .HasComment("风力");

                entity.Property(e => e.Windradius10)
                    .HasColumnName("windradius10")
                    .HasComment("10级风圈");

                entity.Property(e => e.Windradius12)
                    .HasColumnName("windradius12")
                    .HasComment("12级风圈");

                entity.Property(e => e.Windradius7)
                    .HasColumnName("windradius7")
                    .HasComment("7级风圈");

                entity.Property(e => e.Windspeed)
                    .HasColumnName("windspeed")
                    .HasColumnType("int(11)")
                    .HasComment("风速");

                entity.Property(e => e.Year)
                    .HasColumnName("year")
                    .HasColumnType("char(4)")
                    .HasComment("发生年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VJieruTyphoonPoint>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_jieru_typhoon_point");

                entity.Property(e => e.Airpressure)
                    .HasColumnName("airpressure")
                    .HasColumnType("int(11)")
                    .HasComment("气压");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Code)
                    .HasColumnName("code")
                    .HasColumnType("int(11)")
                    .HasComment("台风代码");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Enname)
                    .HasColumnName("ENNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("英文名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbtime)
                    .HasColumnName("fbtime")
                    .HasColumnType("datetime")
                    .HasComment("发布时间");

                entity.Property(e => e.Happenyear)
                    .HasColumnName("happenyear")
                    .HasColumnType("char(4)")
                    .HasComment("发生年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Latitude)
                    .HasColumnName("latitude")
                    .HasComment("纬度");

                entity.Property(e => e.Longitude)
                    .HasColumnName("longitude")
                    .HasComment("经度");

                entity.Property(e => e.Movedirection)
                    .HasColumnName("movedirection")
                    .HasColumnType("varchar(50)")
                    .HasComment("移动方向")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Movespeed)
                    .HasColumnName("movespeed")
                    .HasColumnType("int(11)")
                    .HasComment("移动速度");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasColumnType("varchar(50)")
                    .HasComment("台风名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("pid")
                    .HasColumnType("varchar(50)")
                    .HasComment("父ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("发生时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasColumnType("varchar(50)")
                    .HasComment("台风类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Windpower)
                    .HasColumnName("windpower")
                    .HasColumnType("int(11)")
                    .HasComment("风力");

                entity.Property(e => e.Windradius10)
                    .HasColumnName("windradius10")
                    .HasComment("10级风圈");

                entity.Property(e => e.Windradius12)
                    .HasColumnName("windradius12")
                    .HasComment("12级风圈");

                entity.Property(e => e.Windradius7)
                    .HasColumnName("windradius7")
                    .HasComment("7级风圈");

                entity.Property(e => e.Windspeed)
                    .HasColumnName("windspeed")
                    .HasColumnType("int(11)")
                    .HasComment("风速");

                entity.Property(e => e.Year)
                    .HasColumnName("year")
                    .HasColumnType("char(4)")
                    .HasComment("发生年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VKlgfsdxczpBcjcdx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_klgfsdxczp_bcjcdx");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdzbxx)
                    .HasColumnName("CJDZBXX")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集点坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(200)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(100)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lyjd)
                    .HasColumnName("LYJD")
                    .HasColumnType("varchar(50)")
                    .HasComment("旅游景点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pssb)
                    .HasColumnName("PSSB")
                    .HasColumnType("varchar(50)")
                    .HasComment("拍摄设备")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tpcjdw)
                    .HasColumnName("TPCJDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片采集单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpcjzrr)
                    .HasColumnName("TPCJZRR")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片采集责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpgs)
                    .HasColumnName("TPGS")
                    .HasColumnType("varchar(30)")
                    .HasComment("图片格式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tplysjid)
                    .IsRequired()
                    .HasColumnName("TPLYSJID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tplysjshrid)
                    .HasColumnName("TPLYSJSHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tplysjshsj)
                    .HasColumnName("TPLYSJSHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Tpmc)
                    .HasColumnName("TPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("图片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpscsj)
                    .HasColumnName("TPSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("图片生成时间");

                entity.Property(e => e.Tpsddw)
                    .HasColumnName("TPSDDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("图片审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpsdsj)
                    .HasColumnName("TPSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("图片审定时间");

                entity.Property(e => e.Tpsdz)
                    .HasColumnName("TPSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpsjl)
                    .HasColumnName("TPSJL")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片数据量")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzcs)
                    .HasColumnName("XZCS")
                    .HasColumnType("int(11)")
                    .HasComment("下载次数");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zplj)
                    .HasColumnName("ZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VLsdlNewestinfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_lsdl_newestinfo");

                entity.Property(e => e.Jd)
                    .HasColumnName("jd")
                    .HasComment("精度");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfcj)
                    .HasColumnName("sfcj")
                    .HasColumnType("int(1)");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjbbmc)
                    .IsRequired()
                    .HasColumnName("sjbbmc")
                    .HasColumnType("varchar(14)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("sjid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("wd")
                    .HasComment("纬度");

                entity.Property(e => e.Yjdj)
                    .HasColumnName("yjdj")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywzj)
                    .IsRequired()
                    .HasColumnName("ywzj")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VLsdlNewestupdatetime>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_lsdl_newestupdatetime");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dxid)
                    .HasColumnName("dxid")
                    .HasColumnType("varchar(50)")
                    .HasComment("路段名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VLsdljcjlBcjcdx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_lsdljcjl_bcjcdx");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlkdbhqk)
                    .HasColumnName("DLKDBHQK")
                    .HasColumnType("varchar(50)")
                    .HasComment("道路宽度变化情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlpz)
                    .HasColumnName("DLPZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("道路铺装")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlzplj)
                    .HasColumnName("DLZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("道路照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("精度");

                entity.Property(e => e.Ldmc)
                    .HasColumnName("LDMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("路段名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qtcz)
                    .HasColumnName("QTCZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("墙体材质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qtys)
                    .HasColumnName("QTYS")
                    .HasColumnType("varchar(50)")
                    .HasComment("墙体颜色")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Szdl)
                    .HasColumnName("SZDL")
                    .HasColumnType("varchar(50)")
                    .HasComment("所在道路")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Szhx)
                    .HasColumnName("SZHX")
                    .HasColumnType("varchar(50)")
                    .HasComment("所在环线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrq)
                    .HasColumnName("TXRQ")
                    .HasColumnType("datetime")
                    .HasComment("填写日期");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wqcd)
                    .HasColumnName("WQCD")
                    .HasComment("围墙长度");

                entity.Property(e => e.Wqcdbhqk)
                    .HasColumnName("WQCDBHQK")
                    .HasColumnType("varchar(50)")
                    .HasComment("围墙长度变化情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wqgd)
                    .HasColumnName("WQGD")
                    .HasComment("围墙高度");

                entity.Property(e => e.Wqgdbhqk)
                    .HasColumnName("WQGDBHQK")
                    .HasColumnType("varchar(50)")
                    .HasComment("围墙高度变化情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wqwzbh)
                    .HasColumnName("WQWZBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("围墙位置变化")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wqydlgkb)
                    .HasColumnName("WQYDLGKB")
                    .HasColumnType("varchar(50)")
                    .HasComment("围墙与道路高宽比")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VMetadataSzlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_metadata_szlysj");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsb)
                    .HasColumnName("CJSB")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集设备")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(100)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(100)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsz)
                    .HasColumnName("JCSZ")
                    .HasColumnType("varchar(30)")
                    .HasComment("监测数值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcszcjfs)
                    .HasColumnName("JCSZCJFS")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测数值采集方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcszm)
                    .HasColumnName("JCSZM")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数值名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jldw)
                    .HasColumnName("JLDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("计量单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shr)
                    .HasColumnName("SHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjlrdw)
                    .HasColumnName("SJCJLRDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("数据采集录入单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjlrzrr)
                    .HasColumnName("SJCJLRZRR")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集录入责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjfhdw)
                    .HasColumnName("SJFHDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("数据复核单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjfhr)
                    .HasColumnName("SJFHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据复核人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjfhsj)
                    .HasColumnName("SJFHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据复核时间");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjscjlsj)
                    .HasColumnName("SJSCJLSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据生成/记录时间");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szcjdzbxx)
                    .HasColumnName("SZCJDZBXX")
                    .HasColumnType("varchar(50)")
                    .HasComment("数值采集点坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(100)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzcs)
                    .HasColumnName("XZCS")
                    .HasColumnType("int(11)")
                    .HasComment("下载次数");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysdlxxzb)
                    .HasColumnName("YCYSDLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VMetadataTplysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_metadata_tplysj");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdzbxx)
                    .HasColumnName("CJDZBXX")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集点坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(200)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(100)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pssb)
                    .HasColumnName("PSSB")
                    .HasColumnType("varchar(50)")
                    .HasComment("拍摄设备")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Tpcjdw)
                    .HasColumnName("TPCJDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片采集单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpcjzrr)
                    .HasColumnName("TPCJZRR")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片采集责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpgs)
                    .HasColumnName("TPGS")
                    .HasColumnType("varchar(30)")
                    .HasComment("图片格式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpmc)
                    .HasColumnName("TPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("图片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpscsj)
                    .HasColumnName("TPSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("图片生成时间");

                entity.Property(e => e.Tpsddw)
                    .HasColumnName("TPSDDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("图片审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpsdsj)
                    .HasColumnName("TPSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("图片审定时间");

                entity.Property(e => e.Tpsdz)
                    .HasColumnName("TPSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpsjl)
                    .HasColumnName("TPSJL")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片数据量")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzcs)
                    .HasColumnName("XZCS")
                    .HasColumnType("int(11)")
                    .HasComment("下载次数");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VMetadataTzlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_metadata_tzlysj");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Chr)
                    .HasColumnName("CHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("测绘人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Chzrdw)
                    .HasColumnName("CHZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("测绘责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ctshr)
                    .HasColumnName("CTSHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("成图审核人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ctshsj)
                    .HasColumnName("CTSHSJ")
                    .HasColumnType("datetime")
                    .HasComment("成图审核时间");

                entity.Property(e => e.Ctsj)
                    .HasColumnName("CTSJ")
                    .HasColumnType("datetime")
                    .HasComment("成图时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fgfw)
                    .HasColumnName("FGFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("覆盖范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(50)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tfcc)
                    .HasColumnName("TFCC")
                    .HasColumnType("varchar(100)")
                    .HasComment("图幅尺寸")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Tzgs)
                    .HasColumnName("TZGS")
                    .HasColumnType("varchar(20)")
                    .HasComment("图纸格式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzjz)
                    .HasColumnName("TZJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("图纸介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzlb)
                    .HasColumnName("TZLB")
                    .HasColumnType("varchar(200)")
                    .HasComment("图纸类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzmc)
                    .HasColumnName("TZMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("图纸名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tznrlx)
                    .HasColumnName("TZNRLX")
                    .HasColumnType("varchar(100)")
                    .HasComment("图纸内容类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzsxblc)
                    .HasColumnName("TZSXBLC")
                    .HasColumnType("varchar(20)")
                    .HasComment("图纸属性比例尺")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzcs)
                    .HasColumnName("XZCS")
                    .HasColumnType("int(11)")
                    .HasComment("下载次数");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytbh)
                    .HasColumnName("YTBH")
                    .HasColumnType("varchar(200)")
                    .HasComment("原图编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytblc)
                    .HasColumnName("YTBLC")
                    .HasColumnType("varchar(50)")
                    .HasComment("原图比例尺")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytmc)
                    .HasColumnName("YTMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("原图名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytscdw)
                    .HasColumnName("YTSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原图收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytzbx)
                    .HasColumnName("YTZBX")
                    .HasColumnType("varchar(50)")
                    .HasComment("原图坐标系")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytztdw)
                    .HasColumnName("YTZTDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("原图制图单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytztsj)
                    .HasColumnName("YTZTSJ")
                    .HasColumnType("datetime")
                    .HasComment("原图制图时间");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VMetadataWdlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_metadata_wdlysj");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lycs)
                    .HasColumnName("LYCS")
                    .HasColumnType("int(11)")
                    .HasComment("利用次数");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjccbdlj)
                    .HasColumnName("SJCCBDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccydlj)
                    .HasColumnName("SJCCYDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(20)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Wdbb)
                    .HasColumnName("WDBB")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdbzdw)
                    .HasColumnName("WDBZDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("文档编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdcjsj)
                    .HasColumnName("WDCJSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档创建时间");

                entity.Property(e => e.Wdjz)
                    .HasColumnName("WDJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdlx)
                    .HasColumnName("WDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdmc)
                    .HasColumnName("WDMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdscsj)
                    .HasColumnName("WDSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档上传时间");

                entity.Property(e => e.Wdsddw)
                    .HasColumnName("WDSDDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdsdsj)
                    .HasColumnName("WDSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档审定时间");

                entity.Property(e => e.Wdsdz)
                    .HasColumnName("WDSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdzz)
                    .HasColumnName("WDZZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档作者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yswdbh)
                    .HasColumnName("YSWDBH")
                    .HasColumnType("varchar(100)")
                    .HasComment("原始文档编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdd)
                    .HasColumnName("YWDSCDD")
                    .HasColumnType("varchar(100)")
                    .HasComment("原文档收藏地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdw)
                    .HasColumnName("YWDSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原文档收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscrq)
                    .HasColumnName("YWDSCRQ")
                    .HasColumnType("datetime")
                    .HasComment("原文档生成日期");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VMetadataYxlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_metadata_yxlysj");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(100)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(20)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(100)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysyxcjdw)
                    .HasColumnName("YSYXCJDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原始影像采集单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxcjfw)
                    .HasColumnName("YXCJFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("影像采集范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxcldw)
                    .HasColumnName("YXCLDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("影像处理单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxfbl)
                    .HasColumnName("YXFBL")
                    .HasColumnType("varchar(20)")
                    .HasComment("影像分辨率")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxfw)
                    .HasColumnName("YXFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("影像范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxlx)
                    .HasColumnName("YXLX")
                    .HasColumnType("varchar(20)")
                    .HasComment("影像类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxly)
                    .HasColumnName("YXLY")
                    .HasColumnType("varchar(200)")
                    .HasComment("影像来源")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxmc)
                    .HasColumnName("YXMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("影像名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxscsj)
                    .HasColumnName("YXSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("影像生成时间");

                entity.Property(e => e.Yxsddw)
                    .HasColumnName("YXSDDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("影像审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxsdsj)
                    .HasColumnName("YXSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("影像审定时间");

                entity.Property(e => e.Yxsdz)
                    .HasColumnName("YXSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("影像审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxsjl)
                    .HasColumnName("YXSJL")
                    .HasColumnType("varchar(20)")
                    .HasComment("影像数据量")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(100)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VOrgUserFunc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_org_user_func");

                entity.Property(e => e.Accessid)
                    .HasColumnName("accessid")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Accesstype)
                    .HasColumnName("accesstype")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dept)
                    .IsRequired()
                    .HasColumnName("dept")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Funcid)
                    .IsRequired()
                    .HasColumnName("funcid")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Funcname)
                    .IsRequired()
                    .HasColumnName("funcname")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Funcpid)
                    .HasColumnName("funcpid")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称(员工编号)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nodetype)
                    .HasColumnName("nodetype")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("树状结构节点类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Realname)
                    .HasColumnName("REALNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Systemcode)
                    .HasColumnName("systemcode")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Userid)
                    .IsRequired()
                    .HasColumnName("userid")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VOrgUserRole>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_org_user_role");

                entity.Property(e => e.Dept)
                    .IsRequired()
                    .HasColumnName("dept")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Loginname)
                    .IsRequired()
                    .HasColumnName("LOGINNAME")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称(员工编号)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Realname)
                    .HasColumnName("REALNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Roleid)
                    .IsRequired()
                    .HasColumnName("roleid")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rolename)
                    .IsRequired()
                    .HasColumnName("rolename")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Userid)
                    .IsRequired()
                    .HasColumnName("userid")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VPrivsRoleDataprivs>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_privs_role_dataprivs");

                entity.Property(e => e.Aliasname)
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Argsappend)
                    .HasColumnName("ARGSAPPEND")
                    .HasColumnType("varchar(200)")
                    .HasComment("补充参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Argstext)
                    .HasColumnName("ARGSTEXT")
                    .HasColumnType("varchar(500)")
                    .HasComment("参数说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Columntext)
                    .HasColumnName("COLUMNTEXT")
                    .HasColumnType("varchar(200)")
                    .HasComment("允许操作的字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dataoperation)
                    .HasColumnName("DATAOPERATION")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据操作")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Datasourcetext)
                    .HasColumnName("DATASOURCETEXT")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据源内容")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Datasourcetype)
                    .HasColumnName("DATASOURCETYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据源类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(200)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Roleid)
                    .IsRequired()
                    .HasColumnName("ROLEID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("角色编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wheretext)
                    .HasColumnName("WHERETEXT")
                    .HasColumnType("varchar(200)")
                    .HasComment("允许操作的数据")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VPrivsRoleFunc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_privs_role_func");

                entity.Property(e => e.Accessid)
                    .HasColumnName("ACCESSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Accesstype)
                    .HasColumnName("ACCESSTYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Funcid)
                    .IsRequired()
                    .HasColumnName("funcid")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Funcname)
                    .IsRequired()
                    .HasColumnName("funcname")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Funcpid)
                    .HasColumnName("funcpid")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nodetype)
                    .HasColumnName("NODETYPE")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("树状结构节点类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Roleid)
                    .IsRequired()
                    .HasColumnName("ROLEID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rolename)
                    .IsRequired()
                    .HasColumnName("rolename")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Systemcode)
                    .HasColumnName("SYSTEMCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VPrivsRoleFuncprivs>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_privs_role_funcprivs");

                entity.Property(e => e.Accessid)
                    .HasColumnName("ACCESSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Accesstype)
                    .HasColumnName("ACCESSTYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .IsRequired()
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("操作参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("int(11)")
                    .HasComment("排序索引");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Operation)
                    .HasColumnName("OPERATION")
                    .HasColumnType("varchar(500)")
                    .HasComment("操作")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Roleid)
                    .IsRequired()
                    .HasColumnName("ROLEID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Systemcode)
                    .HasColumnName("SYSTEMCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VQtzpYxlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_qtzp_yxlysj");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(100)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mid)
                    .IsRequired()
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(20)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(100)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysyxcjdw)
                    .HasColumnName("YSYXCJDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原始影像采集单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxcjfw)
                    .HasColumnName("YXCJFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("影像采集范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxcldw)
                    .HasColumnName("YXCLDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("影像处理单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxfbl)
                    .HasColumnName("YXFBL")
                    .HasColumnType("varchar(20)")
                    .HasComment("影像分辨率")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxfj)
                    .HasColumnName("YXFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("影像附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxfw)
                    .HasColumnName("YXFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("影像范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxlx)
                    .HasColumnName("YXLX")
                    .HasColumnType("varchar(20)")
                    .HasComment("影像类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxly)
                    .HasColumnName("YXLY")
                    .HasColumnType("varchar(200)")
                    .HasComment("影像来源")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxmc)
                    .HasColumnName("YXMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("影像名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxscsj)
                    .HasColumnName("YXSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("影像生成时间");

                entity.Property(e => e.Yxsddw)
                    .HasColumnName("YXSDDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("影像审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxsdsj)
                    .HasColumnName("YXSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("影像审定时间");

                entity.Property(e => e.Yxsdz)
                    .HasColumnName("YXSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("影像审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxsjl)
                    .HasColumnName("YXSJL")
                    .HasColumnType("varchar(20)")
                    .HasComment("影像数据量")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(100)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VRyklxzzBcjcdxSzlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ryklxzz_bcjcdx_szlysj");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsb)
                    .HasColumnName("CJSB")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集设备")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(100)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(100)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdx)
                    .HasColumnName("JCDX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsz)
                    .HasColumnName("JCSZ")
                    .HasColumnType("varchar(30)")
                    .HasComment("监测数值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcszcjfs)
                    .HasColumnName("JCSZCJFS")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测数值采集方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcszm)
                    .HasColumnName("JCSZM")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数值名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jldw)
                    .HasColumnName("JLDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("计量单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mid)
                    .IsRequired()
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rykrlxzz)
                    .HasColumnName("RYKRLXZZ")
                    .HasColumnType("int(11)")
                    .HasComment("日游客容量限制值");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shr)
                    .HasColumnName("SHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjlrdw)
                    .HasColumnName("SJCJLRDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("数据采集录入单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjlrzrr)
                    .HasColumnName("SJCJLRZRR")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集录入责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjfhdw)
                    .HasColumnName("SJFHDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("数据复核单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjfhr)
                    .HasColumnName("SJFHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据复核人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjfhsj)
                    .HasColumnName("SJFHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据复核时间");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjscjlsj)
                    .HasColumnName("SJSCJLSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据生成/记录时间");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szcjdzbxx)
                    .HasColumnName("SZCJDZBXX")
                    .HasColumnType("varchar(50)")
                    .HasComment("数值采集点坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(100)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzcs)
                    .HasColumnName("XZCS")
                    .HasColumnType("int(11)")
                    .HasComment("下载次数");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysdlxxzb)
                    .HasColumnName("YCYSDLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VSbqdTmpjcpzBhdcjcgzqkjlWdlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_sbqd_tmpjcpz_bhdcjcgzqkjl_wdlysj");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("bhjd")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("bhwd")
                    .HasComment("病害纬度");

                entity.Property(e => e.Jcdxjtbwid)
                    .HasColumnName("JCDXJTBWID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbbh)
                    .HasColumnName("SBBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbid)
                    .IsRequired()
                    .HasColumnName("sbid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbmc)
                    .HasColumnName("sbmc")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VSouvWdlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_souv_wdlysj");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.CnsmcldsjNf)
                    .HasColumnName("CNSMCLDSJ_NF")
                    .HasColumnType("datetime")
                    .HasComment("采纳声明材料的时间（年份）");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lycs)
                    .HasColumnName("LYCS")
                    .HasColumnType("int(11)")
                    .HasComment("利用次数");

                entity.Property(e => e.Mid)
                    .IsRequired()
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccbdlj)
                    .HasColumnName("SJCCBDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccydlj)
                    .HasColumnName("SJCCYDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(20)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Wdbb)
                    .HasColumnName("WDBB")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdbzdw)
                    .HasColumnName("WDBZDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("文档编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdcjsj)
                    .HasColumnName("WDCJSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档创建时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdjz)
                    .HasColumnName("WDJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdlx)
                    .HasColumnName("WDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdmc)
                    .HasColumnName("WDMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdscsj)
                    .HasColumnName("WDSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档上传时间");

                entity.Property(e => e.Wdsddw)
                    .HasColumnName("WDSDDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdsdsj)
                    .HasColumnName("WDSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档审定时间");

                entity.Property(e => e.Wdsdz)
                    .HasColumnName("WDSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdzz)
                    .HasColumnName("WDZZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档作者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yswdbh)
                    .HasColumnName("YSWDBH")
                    .HasColumnType("varchar(100)")
                    .HasComment("原始文档编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdd)
                    .HasColumnName("YWDSCDD")
                    .HasColumnType("varchar(100)")
                    .HasComment("原文档收藏地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdw)
                    .HasColumnName("YWDSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原文档收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscrq)
                    .HasColumnName("YWDSCRQ")
                    .HasColumnType("datetime")
                    .HasComment("原文档生成日期");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VSsykcdBcjcdx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ssykcd_bcjcdx");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("精度");

                entity.Property(e => e.Jdmc)
                    .HasColumnName("JDMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("景点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jdmcid)
                    .HasColumnName("JDMCID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("审核状态");

                entity.Property(e => e.Ssykcd)
                    .HasColumnName("SSYKCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("瞬时游客程度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VSsyklxzzBcjcdxSzlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ssyklxzz_bcjcdx_szlysj");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsb)
                    .HasColumnName("CJSB")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集设备")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(100)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(100)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdx)
                    .HasColumnName("JCDX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsz)
                    .HasColumnName("JCSZ")
                    .HasColumnType("varchar(30)")
                    .HasComment("监测数值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcszcjfs)
                    .HasColumnName("JCSZCJFS")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测数值采集方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcszm)
                    .HasColumnName("JCSZM")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数值名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jldw)
                    .HasColumnName("JLDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("计量单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mid)
                    .IsRequired()
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shr)
                    .HasColumnName("SHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjlrdw)
                    .HasColumnName("SJCJLRDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("数据采集录入单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjlrzrr)
                    .HasColumnName("SJCJLRZRR")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集录入责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjfhdw)
                    .HasColumnName("SJFHDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("数据复核单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjfhr)
                    .HasColumnName("SJFHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据复核人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjfhsj)
                    .HasColumnName("SJFHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据复核时间");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjscjlsj)
                    .HasColumnName("SJSCJLSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据生成/记录时间");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Ssykrlxzz)
                    .HasColumnName("SSYKRLXZZ")
                    .HasColumnType("int(11)")
                    .HasComment("瞬时游客容量限制值");

                entity.Property(e => e.Szcjdzbxx)
                    .HasColumnName("SZCJDZBXX")
                    .HasColumnType("varchar(50)")
                    .HasComment("数值采集点坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(100)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzcs)
                    .HasColumnName("XZCS")
                    .HasColumnType("int(11)")
                    .HasComment("下载次数");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysdlxxzb)
                    .HasColumnName("YCYSDLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VSydaWdlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_syda_wdlysj");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lycs)
                    .HasColumnName("LYCS")
                    .HasColumnType("int(11)")
                    .HasComment("利用次数");

                entity.Property(e => e.Mid)
                    .IsRequired()
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccbdlj)
                    .HasColumnName("SJCCBDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccydlj)
                    .HasColumnName("SJCCYDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(20)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Wdbb)
                    .HasColumnName("WDBB")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdbzdw)
                    .HasColumnName("WDBZDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("文档编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdcjsj)
                    .HasColumnName("WDCJSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档创建时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdjz)
                    .HasColumnName("WDJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdlx)
                    .HasColumnName("WDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdmc)
                    .HasColumnName("WDMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdscsj)
                    .HasColumnName("WDSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档上传时间");

                entity.Property(e => e.Wdsddw)
                    .HasColumnName("WDSDDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdsdsj)
                    .HasColumnName("WDSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档审定时间");

                entity.Property(e => e.Wdsdz)
                    .HasColumnName("WDSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdzz)
                    .HasColumnName("WDZZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档作者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yswdbh)
                    .HasColumnName("YSWDBH")
                    .HasColumnType("varchar(100)")
                    .HasComment("原始文档编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdd)
                    .HasColumnName("YWDSCDD")
                    .HasColumnType("varchar(100)")
                    .HasComment("原文档收藏地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdw)
                    .HasColumnName("YWDSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原文档收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscrq)
                    .HasColumnName("YWDSCRQ")
                    .HasColumnType("datetime")
                    .HasComment("原文档生成日期");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VSysPkCurrentpk>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_sys_pk_currentpk");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(50)")
                    .HasComment("表名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dqz)
                    .HasColumnName("DQZ")
                    .HasColumnType("int(11)")
                    .HasComment("当前值");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pkid)
                    .IsRequired()
                    .HasColumnName("PKID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qssxm)
                    .HasColumnName("QSSXM")
                    .HasColumnType("int(11)")
                    .HasComment("起始顺序码");

                entity.Property(e => e.Qz)
                    .HasColumnName("QZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("前缀")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qzc)
                    .HasColumnName("QZC")
                    .HasColumnType("int(11)")
                    .HasComment("前缀长");

                entity.Property(e => e.Sxmc)
                    .HasColumnName("SXMC")
                    .HasColumnType("int(11)")
                    .HasComment("顺序码长");
            });

            modelBuilder.Entity<VSywbWdlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_sywb_wdlysj");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lycs)
                    .HasColumnName("LYCS")
                    .HasColumnType("int(11)")
                    .HasComment("利用次数");

                entity.Property(e => e.Mid)
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjccbdlj)
                    .HasColumnName("SJCCBDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccydlj)
                    .HasColumnName("SJCCYDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(20)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Wdbb)
                    .HasColumnName("WDBB")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdbzdw)
                    .HasColumnName("WDBZDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("文档编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdcjsj)
                    .HasColumnName("WDCJSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档创建时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdjz)
                    .HasColumnName("WDJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdlx)
                    .HasColumnName("WDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdmc)
                    .HasColumnName("WDMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdscsj)
                    .HasColumnName("WDSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档上传时间");

                entity.Property(e => e.Wdsddw)
                    .HasColumnName("WDSDDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdsdsj)
                    .HasColumnName("WDSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档审定时间");

                entity.Property(e => e.Wdsdz)
                    .HasColumnName("WDSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdzz)
                    .HasColumnName("WDZZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档作者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yswdbh)
                    .HasColumnName("YSWDBH")
                    .HasColumnType("varchar(100)")
                    .HasComment("原始文档编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdd)
                    .HasColumnName("YWDSCDD")
                    .HasColumnType("varchar(100)")
                    .HasComment("原文档收藏地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdw)
                    .HasColumnName("YWDSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原文档收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscrq)
                    .HasColumnName("YWDSCRQ")
                    .HasColumnType("datetime")
                    .HasComment("原文档生成日期");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VTjxNewestinfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_tjx_newestinfo");

                entity.Property(e => e.Jd)
                    .HasColumnName("jd")
                    .HasComment("精度");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfcj)
                    .HasColumnName("sfcj")
                    .HasColumnType("int(1)");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjbbmc)
                    .IsRequired()
                    .HasColumnName("sjbbmc")
                    .HasColumnType("varchar(21)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("sjid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("wd")
                    .HasComment("纬度");

                entity.Property(e => e.Yjdj)
                    .HasColumnName("yjdj")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywzj)
                    .IsRequired()
                    .HasColumnName("ywzj")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VTjxNewestupdatetime>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_tjx_newestupdatetime");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dxid)
                    .HasColumnName("dxid")
                    .HasColumnType("varchar(50)")
                    .HasComment("轴线名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VWwbhwxdaWdlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_wwbhwxda_wdlysj");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dalx)
                    .HasColumnName("DALX")
                    .HasColumnType("varchar(50)")
                    .HasComment("档案类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gcid)
                    .HasColumnName("GCID")
                    .HasColumnType("varchar(200)")
                    .HasComment("工程id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gcmc)
                    .HasColumnName("GCMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lycs)
                    .HasColumnName("LYCS")
                    .HasColumnType("int(11)")
                    .HasComment("利用次数");

                entity.Property(e => e.Mid)
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjccbdlj)
                    .HasColumnName("SJCCBDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccydlj)
                    .HasColumnName("SJCCYDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(20)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Wdbb)
                    .HasColumnName("WDBB")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdbzdw)
                    .HasColumnName("WDBZDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("文档编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdcjsj)
                    .HasColumnName("WDCJSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档创建时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdjz)
                    .HasColumnName("WDJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdlx)
                    .HasColumnName("WDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdmc)
                    .HasColumnName("WDMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdscsj)
                    .HasColumnName("WDSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档上传时间");

                entity.Property(e => e.Wdsddw)
                    .HasColumnName("WDSDDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdsdsj)
                    .HasColumnName("WDSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档审定时间");

                entity.Property(e => e.Wdsdz)
                    .HasColumnName("WDSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdzz)
                    .HasColumnName("WDZZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档作者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yswdbh)
                    .HasColumnName("YSWDBH")
                    .HasColumnType("varchar(100)")
                    .HasComment("原始文档编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdd)
                    .HasColumnName("YWDSCDD")
                    .HasColumnType("varchar(100)")
                    .HasComment("原文档收藏地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdw)
                    .HasColumnName("YWDSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原文档收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscrq)
                    .HasColumnName("YWDSCRQ")
                    .HasColumnType("datetime")
                    .HasComment("原文档生成日期");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VWxyxhhpYxlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_wxyxhhp_yxlysj");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(100)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mid)
                    .IsRequired()
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(20)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(100)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wxyxlfj)
                    .HasColumnName("WXYXLFJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("卫星影像类附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysyxcjdw)
                    .HasColumnName("YSYXCJDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原始影像采集单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxcjfw)
                    .HasColumnName("YXCJFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("影像采集范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxcldw)
                    .HasColumnName("YXCLDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("影像处理单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxfbl)
                    .HasColumnName("YXFBL")
                    .HasColumnType("varchar(20)")
                    .HasComment("影像分辨率")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxfw)
                    .HasColumnName("YXFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("影像范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxlx)
                    .HasColumnName("YXLX")
                    .HasColumnType("varchar(20)")
                    .HasComment("影像类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxly)
                    .HasColumnName("YXLY")
                    .HasColumnType("varchar(200)")
                    .HasComment("影像来源")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxmc)
                    .HasColumnName("YXMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("影像名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxscsj)
                    .HasColumnName("YXSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("影像生成时间");

                entity.Property(e => e.Yxsddw)
                    .HasColumnName("YXSDDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("影像审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxsdsj)
                    .HasColumnName("YXSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("影像审定时间");

                entity.Property(e => e.Yxsdz)
                    .HasColumnName("YXSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("影像审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxsjl)
                    .HasColumnName("YXSJL")
                    .HasColumnType("varchar(20)")
                    .HasComment("影像数据量")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(100)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VYcbtYcbts>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ycbt_ycbts");

                entity.Property(e => e.Btlx)
                    .IsRequired()
                    .HasColumnName("btlx")
                    .HasColumnType("varchar(8)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fjid)
                    .HasColumnName("fjid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yclx)
                    .IsRequired()
                    .HasColumnName("yclx")
                    .HasColumnType("char(0)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywlx)
                    .IsRequired()
                    .HasColumnName("ywlx")
                    .HasColumnType("char(0)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("zt")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VYcysdtyxtJceJc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ycysdtyxt_jce_jc");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdjd)
                    .HasColumnName("CJDJD")
                    .HasComment("采集点经度");

                entity.Property(e => e.Cjdsyt)
                    .HasColumnName("CJDSYT")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集点示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdwd)
                    .HasColumnName("CJDWD")
                    .HasComment("采集点纬度");

                entity.Property(e => e.Cjdwzms)
                    .HasColumnName("CJDWZMS")
                    .HasColumnType("varchar(100)")
                    .HasComment("采集点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcid)
                    .HasColumnName("JCID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("pg")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qksm)
                    .HasColumnName("qksm")
                    .HasColumnType("varchar(50)")
                    .HasComment("情况说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("rwid")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysbczt)
                    .HasColumnName("ycysbczt")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素保存状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysdtid)
                    .HasColumnName("ysdtid")
                    .HasColumnType("varchar(50)")
                    .HasComment("要素单体ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yszplj)
                    .HasColumnName("yszplj")
                    .HasColumnType("varchar(200)")
                    .HasComment("要素照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VYcysdtyxtJceJcBak1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ycysdtyxt_jce_jc_bak1");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdjd)
                    .HasColumnName("CJDJD")
                    .HasComment("采集点经度");

                entity.Property(e => e.Cjdsyt)
                    .HasColumnName("CJDSYT")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集点示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdwd)
                    .HasColumnName("CJDWD")
                    .HasComment("采集点纬度");

                entity.Property(e => e.Cjdwzms)
                    .HasColumnName("CJDWZMS")
                    .HasColumnType("varchar(100)")
                    .HasComment("采集点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcid)
                    .HasColumnName("JCID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("pg")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qksm)
                    .HasColumnName("qksm")
                    .HasColumnType("varchar(50)")
                    .HasComment("情况说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("rwid")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysbczt)
                    .HasColumnName("ycysbczt")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素保存状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysdtid)
                    .HasColumnName("ysdtid")
                    .HasColumnType("varchar(50)")
                    .HasComment("要素单体ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yszplj)
                    .HasColumnName("yszplj")
                    .HasColumnType("varchar(200)")
                    .HasComment("要素照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VYcysdtyxtjcsjYcys>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ycysdtyxtjcsj_ycys");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdjd)
                    .HasColumnName("cjdjd")
                    .HasComment("采集点经度");

                entity.Property(e => e.Cjdsyt)
                    .HasColumnName("cjdsyt")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集点示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdwd)
                    .HasColumnName("cjdwd")
                    .HasComment("采集点纬度");

                entity.Property(e => e.Cjdwzms)
                    .HasColumnName("cjdwzms")
                    .HasColumnType("varchar(100)")
                    .HasComment("采集点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzzp)
                    .HasColumnName("JZZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("基准照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VYcystpTplysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ycystp_tplysj");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdjd)
                    .HasColumnName("cjdjd")
                    .HasComment("采集点经度");

                entity.Property(e => e.Cjdsyt)
                    .HasColumnName("cjdsyt")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集点示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdwd)
                    .HasColumnName("cjdwd")
                    .HasComment("采集点纬度");

                entity.Property(e => e.Cjdwzms)
                    .HasColumnName("cjdwzms")
                    .HasColumnType("varchar(100)")
                    .HasComment("采集点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VYcystzTzlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ycystz_tzlysj");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mid)
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qksm)
                    .HasColumnName("QKSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("情况说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tzlj)
                    .HasColumnName("TZLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("图纸路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysbczt)
                    .HasColumnName("YCYSBCZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素保存状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ylt)
                    .HasColumnName("YLT")
                    .HasColumnType("varchar(200)")
                    .HasComment("预览图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VYglyjcYjxxYjczxx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_yglyjc_yjxx_yjczxx");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cjsjbid)
                    .HasColumnName("CJSJBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("触警数据表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsjid)
                    .HasColumnName("CJSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("触警数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Czgzcyr)
                    .HasColumnName("czgzcyr")
                    .HasColumnType("varchar(50)")
                    .HasComment("处置工作参与人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Czr)
                    .HasColumnName("czr")
                    .HasColumnType("varchar(50)")
                    .HasComment("处置负责人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Czsj)
                    .HasColumnName("czsj")
                    .HasColumnType("datetime")
                    .HasComment("处置时间");

                entity.Property(e => e.Czsm)
                    .HasColumnName("czsm")
                    .HasColumnType("varchar(50)")
                    .HasComment("处置说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("djrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("djsj")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fbsj)
                    .HasColumnName("FBSJ")
                    .HasColumnType("datetime")
                    .HasComment("发布时间");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("sfkdj")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Slsm)
                    .HasColumnName("SLSM")
                    .HasColumnType("varchar(50)")
                    .HasComment("受理说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjdj)
                    .HasColumnName("YJDJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjpzfaid)
                    .HasColumnName("YJPZFAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警配置方案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjsfjc)
                    .HasColumnName("YJSFJC")
                    .HasColumnType("char(1)")
                    .HasComment("预警是否解除")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjslzt)
                    .HasColumnName("YJSLZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警受理状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxxid)
                    .HasColumnName("yjxxid")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警信息ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxxidz)
                    .IsRequired()
                    .HasColumnName("yjxxidz")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxxsm)
                    .HasColumnName("YJXXSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("预警信息说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjyaid)
                    .HasColumnName("YJYAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警预案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zplj)
                    .HasColumnName("zplj")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VYhlmNewestinfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_yhlm_newestinfo");

                entity.Property(e => e.Jd)
                    .HasColumnName("jd")
                    .HasComment("精度");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfcj)
                    .HasColumnName("sfcj")
                    .HasColumnType("int(1)");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjbbmc)
                    .IsRequired()
                    .HasColumnName("sjbbmc")
                    .HasColumnType("varchar(21)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("sjid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("wd")
                    .HasComment("纬度");

                entity.Property(e => e.Yjdj)
                    .HasColumnName("yjdj")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywzj)
                    .IsRequired()
                    .HasColumnName("ywzj")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VYhlmNewestupdatetime>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_yhlm_newestupdatetime");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dxid)
                    .HasColumnName("dxid")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VYsjDomainConstraint>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ysj_domain_constraint");

                entity.Property(e => e.Code)
                    .HasColumnName("CODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Columnid)
                    .HasColumnName("COLUMNID")
                    .HasColumnType("varchar(50)")
                    .HasComment("字段标识")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tableid)
                    .HasColumnName("TABLEID")
                    .HasColumnType("varchar(50)")
                    .HasComment("表标识")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VYsjPkCurrentpk>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ysj_pk_currentpk");

                entity.Property(e => e.Bm)
                    .HasColumnName("bm")
                    .HasColumnType("varchar(50)")
                    .HasComment("表名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("bz")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dqz)
                    .HasColumnName("dqz")
                    .HasColumnType("int(11)")
                    .HasComment("当前值");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pkid)
                    .HasColumnName("pkid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qssxm)
                    .HasColumnName("qssxm")
                    .HasColumnType("int(11)")
                    .HasComment("起始顺序码");

                entity.Property(e => e.Qz)
                    .HasColumnName("qz")
                    .HasColumnType("varchar(50)")
                    .HasComment("前缀")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qzc)
                    .HasColumnName("qzc")
                    .HasColumnType("int(11)")
                    .HasComment("前缀长");

                entity.Property(e => e.Sxmc)
                    .HasColumnName("sxmc")
                    .HasColumnType("int(11)")
                    .HasComment("顺序码长");
            });

            modelBuilder.Entity<VYsjTableenumitem>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ysj_tableenumitem");

                entity.Property(e => e.Code)
                    .HasColumnName("CODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Columnid)
                    .HasColumnName("COLUMNID")
                    .HasColumnType("varchar(50)")
                    .HasComment("字段标识")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Enumid)
                    .HasColumnName("ENUMID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Enumname)
                    .HasColumnName("ENUMNAME")
                    .HasColumnType("varchar(100)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tableid)
                    .HasColumnName("TABLEID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VZdjcCjjcsb>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_zdjc_cjjcsb");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Cjdid)
                    .HasColumnName("cjdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("沉降点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjz)
                    .HasColumnName("cjz")
                    .HasComment("沉降值");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwid)
                    .HasColumnName("JCDXJTBWID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jssj)
                    .HasColumnName("jssj")
                    .HasColumnType("datetime")
                    .HasComment("接收时间");

                entity.Property(e => e.Sbid)
                    .HasColumnName("SBID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbmc)
                    .HasColumnName("SBMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(2)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VZdjcCjjcsbBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_zdjc_cjjcsb_bak");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Cjdid)
                    .HasColumnName("cjdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("沉降点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjz)
                    .HasColumnName("cjz")
                    .HasComment("沉降值");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxjtbwid)
                    .HasColumnName("JCDXJTBWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jssj)
                    .HasColumnName("jssj")
                    .HasColumnType("datetime")
                    .HasComment("接收时间");

                entity.Property(e => e.Sbid)
                    .HasColumnName("SBID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbmc)
                    .HasColumnName("SBMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");
            });

            modelBuilder.Entity<VZdjcCjjczd>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_zdjc_cjjczd");

                entity.Property(e => e.Cjdid)
                    .HasColumnName("cjdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("jd")
                    .HasComment("安装点经度");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("wd")
                    .HasComment("安装点纬度");

                entity.Property(e => e.Wzms)
                    .HasColumnName("wzms")
                    .HasColumnType("varchar(500)")
                    .HasComment("安装点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VZdjcJcpzSbqdBhdcjcgzqkjlNewestdxsj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_zdjc_jcpz_sbqd_bhdcjcgzqkjl_newestdxsj");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");
            });

            modelBuilder.Entity<VZdjcWyjcsj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_zdjc_wyjcsj");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jssj)
                    .HasColumnName("jssj")
                    .HasColumnType("datetime")
                    .HasComment("接收时间");

                entity.Property(e => e.Sbid)
                    .HasColumnName("SBID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("char(1)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Wydid)
                    .HasColumnName("wydid")
                    .HasColumnType("varchar(50)")
                    .HasComment("位移点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wyz)
                    .HasColumnName("wyz")
                    .HasComment("位移值");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VZdjcWyjczd>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_zdjc_wyjczd");

                entity.Property(e => e.Cspyl)
                    .HasColumnName("cspyl")
                    .HasComment("初始偏移量");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("jd")
                    .HasComment("安装点经度");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("wd")
                    .HasComment("安装点纬度");

                entity.Property(e => e.Wydid)
                    .HasColumnName("wydid")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wzms)
                    .HasColumnName("wzms")
                    .HasColumnType("varchar(500)")
                    .HasComment("安装点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VZdjcZsjc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_zdjc_zsjc");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jczdid)
                    .HasColumnName("JCZDID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("jd")
                    .HasComment("安装点经度");

                entity.Property(e => e.Jssj)
                    .HasColumnName("jssj")
                    .HasColumnType("datetime")
                    .HasComment("接收时间");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(2)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("tinyint(2)")
                    .HasComment("审核状态");

                entity.Property(e => e.Wd)
                    .HasColumnName("wd")
                    .HasComment("安装点纬度");

                entity.Property(e => e.Wzms)
                    .HasColumnName("wzms")
                    .HasColumnType("varchar(500)")
                    .HasComment("安装点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zdid)
                    .HasColumnName("zdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("终端ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zsz)
                    .HasColumnName("zsz")
                    .HasComment("噪声值");
            });

            modelBuilder.Entity<VZdjcZsjczd>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_zdjc_zsjczd");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("jd")
                    .HasComment("安装点经度");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("wd")
                    .HasComment("安装点纬度");

                entity.Property(e => e.Wzms)
                    .HasColumnName("wzms")
                    .HasColumnType("varchar(500)")
                    .HasComment("安装点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zdid)
                    .HasColumnName("zdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<XzqDsj>(entity =>
            {
                entity.ToTable("xzq_dsj");

                entity.HasComment("地市级");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");
            });

            modelBuilder.Entity<XzqQxj>(entity =>
            {
                entity.ToTable("xzq_qxj");

                entity.HasComment("区县级");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");
            });

            modelBuilder.Entity<XzqSj>(entity =>
            {
                entity.ToTable("xzq_sj");

                entity.HasComment("省级");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");
            });

            modelBuilder.Entity<YcbtDomainEnum>(entity =>
            {
                entity.ToTable("ycbt_domain_enum");

                entity.HasComment("域管理_枚举域");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mjxbt)
                    .HasColumnName("MJXBT")
                    .HasColumnType("varchar(50)")
                    .HasComment("枚举项标题")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Namespace)
                    .HasColumnName("NAMESPACE")
                    .HasColumnType("varchar(200)")
                    .HasComment("名字空间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<YcbtDomainEnumitem>(entity =>
            {
                entity.ToTable("ycbt_domain_enumitem");

                entity.HasComment("域管理_枚举项");

                entity.HasIndex(e => e.Enumid)
                    .HasName("FK_845571C2BD2B4ACA");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Code)
                    .HasColumnName("CODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Enumid)
                    .HasColumnName("ENUMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("枚举ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Isabstract)
                    .HasColumnName("ISABSTRACT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否抽象");

                entity.Property(e => e.Kz1)
                    .HasColumnName("KZ1")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kz2)
                    .HasColumnName("KZ2")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kz3)
                    .HasColumnName("KZ3")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展3")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kz4)
                    .HasColumnName("KZ4")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展4")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kz5)
                    .HasColumnName("KZ5")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展5")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Enum)
                    .WithMany(p => p.YcbtDomainEnumitem)
                    .HasForeignKey(d => d.Enumid)
                    .HasConstraintName("FK_845571C2BD2B4ACA");
            });

            modelBuilder.Entity<YcbtDomainRange>(entity =>
            {
                entity.ToTable("ycbt_domain_range");

                entity.HasComment("域管理_范围域");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Isbetweenmintomax)
                    .HasColumnName("ISBETWEENMINTOMAX")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否在最小值和最大值之间");

                entity.Property(e => e.Iscontainmax)
                    .HasColumnName("ISCONTAINMAX")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否包含最大值");

                entity.Property(e => e.Iscontainmin)
                    .HasColumnName("ISCONTAINMIN")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否包含最小值");

                entity.Property(e => e.MaxValue)
                    .HasColumnName("MAX_VALUE")
                    .HasComment("最大值");

                entity.Property(e => e.MinValue)
                    .HasColumnName("MIN_VALUE")
                    .HasComment("最小值");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Namespace)
                    .HasColumnName("NAMESPACE")
                    .HasColumnType("varchar(200)")
                    .HasComment("名字空间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<YcbtYcd>(entity =>
            {
                entity.ToTable("ycbt_ycd");

                entity.HasComment("遗产地");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhchyjb)
                    .HasColumnName("BHCHYJB")
                    .HasColumnType("varchar(100)")
                    .HasComment("保护称号与级别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhgljg)
                    .HasColumnName("BHGLJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护管理机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhxzms)
                    .HasColumnName("BHXZMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("保护现状描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dbxtplj)
                    .HasColumnName("DBXTPLJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("代表性图片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gbjg)
                    .HasColumnName("GBJG")
                    .HasColumnType("varchar(100)")
                    .HasComment("公布机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gbsj)
                    .HasColumnName("GBSJ")
                    .HasColumnType("datetime")
                    .HasComment("公布时间");

                entity.Property(e => e.Gbwh)
                    .HasColumnName("GBWH")
                    .HasColumnType("varchar(100)")
                    .HasComment("公布文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gk)
                    .HasColumnName("GK")
                    .HasColumnType("varchar(1000)")
                    .HasComment("概况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Jzndbm)
                    .HasColumnName("JZNDBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("截止年代编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kznf)
                    .HasColumnName("KZNF")
                    .HasColumnType("varchar(50)")
                    .HasComment("扩展年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lxbz)
                    .HasColumnName("LXBZ")
                    .HasColumnType("varchar(1000)")
                    .HasComment("遴选标准")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qsndbm)
                    .HasColumnName("QSNDBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("起始年代编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rxnf)
                    .HasColumnName("RXNF")
                    .HasColumnType("varchar(50)")
                    .HasComment("入选年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否审核通过");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wzsm)
                    .HasColumnName("WZSM")
                    .HasColumnType("varchar(255)")
                    .HasComment("位置说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xhrid)
                    .HasColumnName("XHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("销毁人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xhsj)
                    .HasColumnName("XHSJ")
                    .HasColumnType("datetime")
                    .HasComment("销毁时间");

                entity.Property(e => e.Xzgnsm)
                    .HasColumnName("XZGNSM")
                    .HasColumnType("varchar(200)")
                    .HasComment("现状功能说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzqbm)
                    .HasColumnName("XZQBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("行政区编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycjz)
                    .HasColumnName("YCJZ")
                    .HasColumnType("varchar(1000)")
                    .HasComment("遗产价值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycpj)
                    .HasColumnName("YCPJ")
                    .HasColumnType("varchar(1000)")
                    .HasComment("遗产评价")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywm)
                    .HasColumnName("YWM")
                    .HasColumnType("varchar(100)")
                    .HasComment("英文名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zwm)
                    .HasColumnName("ZWM")
                    .HasColumnType("varchar(50)")
                    .HasComment("中文名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zyycxzms)
                    .HasColumnName("ZYYCXZMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("主要遗存现状描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<YcbtYcdtp>(entity =>
            {
                entity.ToTable("ycbt_ycdtp");

                entity.HasComment("遗产地图片");

                entity.HasIndex(e => e.Ycdid)
                    .HasName("FK_454D44D328B24DAB");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Tplj)
                    .HasColumnName("TPLJ")
                    .HasColumnType("varchar(100)")
                    .HasComment("图片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpmc)
                    .HasColumnName("TPMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpsm)
                    .HasColumnName("TPSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("图片说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycdid)
                    .HasColumnName("YCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产地ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Ycd)
                    .WithMany(p => p.YcbtYcdtp)
                    .HasForeignKey(d => d.Ycdid)
                    .HasConstraintName("FK_454D44D328B24DAB");
            });

            modelBuilder.Entity<YcbtYcqy>(entity =>
            {
                entity.ToTable("ycbt_ycqy");

                entity.HasComment("遗产区域");

                entity.HasIndex(e => e.Fjid)
                    .HasName("FK_A41FA4D0A5B945C5");

                entity.HasIndex(e => e.Ycdid)
                    .HasName("FK_528145E60CD84CB7");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dbxtplj)
                    .HasColumnName("DBXTPLJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("代表性图片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(500)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fjid)
                    .HasColumnName("FJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gk)
                    .HasColumnName("GK")
                    .HasColumnType("varchar(1000)")
                    .HasComment("概况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gldwmc)
                    .HasColumnName("GLDWMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("管理单位名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Hcqbjx)
                    .HasColumnName("HCQBJX")
                    .HasColumnType("varchar(2000)")
                    .HasComment("缓冲区边界线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Hxqbjx)
                    .HasColumnName("HXQBJX")
                    .HasColumnType("varchar(2000)")
                    .HasComment("核心区边界线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdwmc)
                    .HasColumnName("JCDWMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测单位名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Jzndbm)
                    .HasColumnName("JZNDBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("截止年代编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qsndbm)
                    .HasColumnName("QSNDBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("起始年代编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否审核通过");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wzsm)
                    .HasColumnName("WZSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("位置说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xhrid)
                    .HasColumnName("XHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("销毁人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xhsj)
                    .HasColumnName("XHSJ")
                    .HasColumnType("datetime")
                    .HasComment("销毁时间");

                entity.Property(e => e.Ycdid)
                    .HasColumnName("YCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywlx)
                    .HasColumnName("YWLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Fj)
                    .WithMany(p => p.InverseFj)
                    .HasForeignKey(d => d.Fjid)
                    .HasConstraintName("FK_A41FA4D0A5B945C5");

                entity.HasOne(d => d.Ycd)
                    .WithMany(p => p.YcbtYcqy)
                    .HasForeignKey(d => d.Ycdid)
                    .HasConstraintName("FK_528145E60CD84CB7");
            });

            modelBuilder.Entity<YcbtYcqytp>(entity =>
            {
                entity.ToTable("ycbt_ycqytp");

                entity.HasComment("遗产区域图片");

                entity.HasIndex(e => e.Ycqyid)
                    .HasName("FK_7D79DA8ED5824D96");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Tplj)
                    .HasColumnName("TPLJ")
                    .HasColumnType("varchar(100)")
                    .HasComment("图片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpmc)
                    .HasColumnName("TPMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpsm)
                    .HasColumnName("TPSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("图片说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycqyid)
                    .HasColumnName("YCQYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产QYID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Ycqy)
                    .WithMany(p => p.YcbtYcqytp)
                    .HasForeignKey(d => d.Ycqyid)
                    .HasConstraintName("FK_7D79DA8ED5824D96");
            });

            modelBuilder.Entity<YcbtYcys>(entity =>
            {
                entity.ToTable("ycbt_ycys");

                entity.HasComment("遗产要素");

                entity.HasIndex(e => e.Fjid)
                    .HasName("FK_90B1F4E24694496B");

                entity.HasIndex(e => e.Ycqyid)
                    .HasName("FK_F43CAC6952924521");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bcxz)
                    .HasColumnName("BCXZ")
                    .HasColumnType("varchar(2000)")
                    .HasComment("保存现况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjbych)
                    .HasColumnName("BHJBYCH")
                    .HasColumnType("varchar(100)")
                    .HasComment("保护级别与称号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bjx)
                    .HasColumnName("BJX")
                    .HasColumnType("varchar(2000)")
                    .HasComment("边界线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dpxtplj)
                    .HasColumnName("DPXTPLJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("代表性图片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fjid)
                    .HasColumnName("FJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gbnf)
                    .HasColumnName("GBNF")
                    .HasColumnType("varchar(50)")
                    .HasComment("公布年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gk)
                    .HasColumnName("GK")
                    .HasColumnType("varchar(1000)")
                    .HasComment("概况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gljgmc)
                    .HasColumnName("GLJGMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("管理机构名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Hjxz)
                    .HasColumnName("HJXZ")
                    .HasColumnType("varchar(2000)")
                    .HasComment("环境状况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Jjurl)
                    .HasColumnName("JJURL")
                    .HasColumnType("varchar(100)")
                    .HasComment("简介URL")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzndbm)
                    .HasColumnName("JZNDBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("截止年代编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qsndbm)
                    .HasColumnName("QSNDBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("起始年代编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否审核通过");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wzsm)
                    .HasColumnName("WZSM")
                    .HasColumnType("varchar(1000)")
                    .HasComment("位置说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xdwzx)
                    .HasColumnName("XDWZX")
                    .HasComment("相对位置X");

                entity.Property(e => e.Xdwzy)
                    .HasColumnName("XDWZY")
                    .HasComment("相对位置Y");

                entity.Property(e => e.Xhrid)
                    .HasColumnName("XHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("销毁人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xhsj)
                    .HasColumnName("XHSJ")
                    .HasColumnType("datetime")
                    .HasComment("销毁时间");

                entity.Property(e => e.Yclx)
                    .HasColumnName("YCLX")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycqyid)
                    .HasColumnName("YCQYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产区域ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywlx)
                    .HasColumnName("YWLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zyxjb)
                    .HasColumnName("ZYXJB")
                    .HasColumnType("tinyint(4)")
                    .HasComment("重要性级别");

                entity.HasOne(d => d.Fj)
                    .WithMany(p => p.InverseFj)
                    .HasForeignKey(d => d.Fjid)
                    .HasConstraintName("FK_90B1F4E24694496B");

                entity.HasOne(d => d.Ycqy)
                    .WithMany(p => p.YcbtYcys)
                    .HasForeignKey(d => d.Ycqyid)
                    .HasConstraintName("FK_F43CAC6952924521");
            });

            modelBuilder.Entity<YcbtYcystp>(entity =>
            {
                entity.ToTable("ycbt_ycystp");

                entity.HasComment("遗产要素图片");

                entity.HasIndex(e => e.Ycysid)
                    .HasName("FK_C6380F8A2DF74EC3");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Tplj)
                    .HasColumnName("TPLJ")
                    .HasColumnType("varchar(100)")
                    .HasComment("图片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpmc)
                    .HasColumnName("TPMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpsm)
                    .HasColumnName("TPSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("图片说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Ycys)
                    .WithMany(p => p.YcbtYcystp)
                    .HasForeignKey(d => d.Ycysid)
                    .HasConstraintName("FK_C6380F8A2DF74EC3");
            });

            modelBuilder.Entity<YddRw>(entity =>
            {
                entity.ToTable("ydd_rw");

                entity.HasComment("任务");

                entity.HasIndex(e => e.Jclbid)
                    .HasName("fk_jclbid");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdxbh)
                    .HasColumnName("cjdxbh")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集对象编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jclbid)
                    .HasColumnName("jclbid")
                    .HasColumnType("varchar(200)")
                    .HasComment("监测类别ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzsj)
                    .HasColumnName("jzsj")
                    .HasColumnType("datetime")
                    .HasComment("截止时间");

                entity.Property(e => e.Rwmc)
                    .HasColumnName("rwmc")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwsm)
                    .HasColumnName("rwsm")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("tjsj")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("ycysid")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yhid)
                    .HasColumnName("yhid")
                    .HasColumnType("varchar(50)")
                    .HasComment("用户ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("zt")
                    .HasColumnType("varchar(50)")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Jclb)
                    .WithMany(p => p.YddRw)
                    .HasForeignKey(d => d.Jclbid)
                    .HasConstraintName("fk_jclbid");
            });

            modelBuilder.Entity<YsjDomainConstraint>(entity =>
            {
                entity.ToTable("ysj_domain_constraint");

                entity.HasComment("域管理_域约束");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Columnid)
                    .HasColumnName("COLUMNID")
                    .HasColumnType("varchar(50)")
                    .HasComment("字段标识")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Domainid)
                    .HasColumnName("DOMAINID")
                    .HasColumnType("varchar(50)")
                    .HasComment("域标识")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tableid)
                    .HasColumnName("TABLEID")
                    .HasColumnType("varchar(50)")
                    .HasComment("表标识")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<YsjDomainEnum>(entity =>
            {
                entity.ToTable("ysj_domain_enum");

                entity.HasComment("域管理_枚举域");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(100)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mjxbt)
                    .HasColumnName("MJXBT")
                    .HasColumnType("varchar(50)")
                    .HasComment("枚举项标题")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Namespace)
                    .HasColumnName("NAMESPACE")
                    .HasColumnType("varchar(200)")
                    .HasComment("名字空间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<YsjDomainEnumitem>(entity =>
            {
                entity.ToTable("ysj_domain_enumitem");

                entity.HasComment("域管理_枚举项");

                entity.HasIndex(e => e.Enumid)
                    .HasName("FK_FA138B2F97DA4E72");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(100)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Code)
                    .HasColumnName("CODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Enumid)
                    .HasColumnName("ENUMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("枚举ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Isabstract)
                    .HasColumnName("ISABSTRACT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否抽象");

                entity.Property(e => e.Kz1)
                    .HasColumnName("KZ1")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kz2)
                    .HasColumnName("KZ2")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kz3)
                    .HasColumnName("KZ3")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展3")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kz4)
                    .HasColumnName("KZ4")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展4")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kz5)
                    .HasColumnName("KZ5")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展5")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Enum)
                    .WithMany(p => p.YsjDomainEnumitem)
                    .HasForeignKey(d => d.Enumid)
                    .HasConstraintName("FK_FA138B2F97DA4E72");
            });

            modelBuilder.Entity<YsjDomainEnumitem20191227>(entity =>
            {
                entity.ToTable("ysj_domain_enumitem_20191227");

                entity.HasComment("域管理_枚举项");

                entity.HasIndex(e => e.Enumid)
                    .HasName("FK_FA138B2F97DA4E72");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(100)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Code)
                    .HasColumnName("CODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Enumid)
                    .HasColumnName("ENUMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("枚举ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Isabstract)
                    .HasColumnName("ISABSTRACT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否抽象");

                entity.Property(e => e.Kz1)
                    .HasColumnName("KZ1")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kz2)
                    .HasColumnName("KZ2")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kz3)
                    .HasColumnName("KZ3")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展3")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kz4)
                    .HasColumnName("KZ4")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展4")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kz5)
                    .HasColumnName("KZ5")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展5")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Enum)
                    .WithMany(p => p.YsjDomainEnumitem20191227)
                    .HasForeignKey(d => d.Enumid)
                    .HasConstraintName("ysj_domain_enumitem_20191227_ibfk_1");
            });

            modelBuilder.Entity<YsjDomainRange>(entity =>
            {
                entity.ToTable("ysj_domain_range");

                entity.HasComment("域管理_范围域");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .HasColumnName("aliasname")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("description")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Isbetweenmintomax)
                    .HasColumnName("isbetweenmintomax")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否在最小值和最大值之间");

                entity.Property(e => e.Iscontainmax)
                    .HasColumnName("iscontainmax")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否包含最大值");

                entity.Property(e => e.Iscontainmin)
                    .HasColumnName("iscontainmin")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否包含最小值");

                entity.Property(e => e.MaxValue)
                    .HasColumnName("MAX_VALUE")
                    .HasColumnType("tinyint(4)")
                    .HasComment("最大值");

                entity.Property(e => e.MinValue)
                    .HasColumnName("min_value")
                    .HasComment("最小值");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Namespace)
                    .HasColumnName("namespace")
                    .HasColumnType("varchar(200)")
                    .HasComment("名字空间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<YsjPkConfig>(entity =>
            {
                entity.ToTable("ysj_pk_config");

                entity.HasComment("主键_主键配置");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(50)")
                    .HasComment("表名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qssxm)
                    .HasColumnName("QSSXM")
                    .HasColumnType("int(11)")
                    .HasComment("起始顺序码");

                entity.Property(e => e.Qzc)
                    .HasColumnName("QZC")
                    .HasColumnType("int(11)")
                    .HasComment("前缀长");

                entity.Property(e => e.Sxmc)
                    .HasColumnName("SXMC")
                    .HasColumnType("int(11)")
                    .HasComment("顺序码长");
            });

            modelBuilder.Entity<YsjPkCurrentpk>(entity =>
            {
                entity.ToTable("ysj_pk_currentpk");

                entity.HasComment("主键_当前主键");

                entity.HasIndex(e => e.Bid)
                    .HasName("FK_D71CB526B0024F0C");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasComment("表编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dqz)
                    .HasColumnName("DQZ")
                    .HasColumnType("int(11)")
                    .HasComment("当前值");

                entity.Property(e => e.Qz)
                    .HasColumnName("QZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("前缀")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.B)
                    .WithMany(p => p.YsjPkCurrentpk)
                    .HasForeignKey(d => d.Bid)
                    .HasConstraintName("FK_D71CB526B0024F0C");
            });

            modelBuilder.Entity<YsjSeqConfig>(entity =>
            {
                entity.ToTable("YSJ_SEQ_CONFIG");

                entity.HasComment("序列_序列配置");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(50)")
                    .HasComment("表名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qssxm)
                    .HasColumnName("QSSXM")
                    .HasColumnType("int(11)")
                    .HasComment("起始顺序码");

                entity.Property(e => e.Sxmc)
                    .HasColumnName("SXMC")
                    .HasColumnType("int(11)")
                    .HasComment("顺序码长");
            });

            modelBuilder.Entity<YsjSeqCurrentseq>(entity =>
            {
                entity.ToTable("YSJ_SEQ_CURRENTSEQ");

                entity.HasComment("序列_当前顺序码");

                entity.HasIndex(e => e.Sxmpzid)
                    .HasName("FK_4C903A61670A4D9E");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dqz)
                    .HasColumnName("DQZ")
                    .HasColumnType("int(11)")
                    .HasComment("当前值");

                entity.Property(e => e.Qz)
                    .HasColumnName("QZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("前缀")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sxmpzid)
                    .HasColumnName("SXMPZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("顺序码配置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Sxmpz)
                    .WithMany(p => p.YsjSeqCurrentseq)
                    .HasForeignKey(d => d.Sxmpzid)
                    .HasConstraintName("FK_4C903A61670A4D9E");
            });

            modelBuilder.Entity<YsjTempview>(entity =>
            {
                entity.ToTable("ysj_tempview");

                entity.HasComment("元数据_临时视图");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("bm")
                    .HasColumnType("varchar(50)")
                    .HasComment("表名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mrcxzd)
                    .HasColumnName("mrcxzd")
                    .HasColumnType("varchar(50)")
                    .HasComment("默认查询字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mrpxgz)
                    .HasColumnName("mrpxgz")
                    .HasColumnType("varchar(50)")
                    .HasComment("默认排序规则")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mrzdjls)
                    .HasColumnName("mrzdjls")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'-1'")
                    .HasComment("默认最大记录数");

                entity.Property(e => e.Qz)
                    .IsRequired()
                    .HasColumnName("qz")
                    .HasColumnType("varchar(100)")
                    .HasComment("前缀")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sm)
                    .HasColumnName("sm")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zdj)
                    .HasColumnName("zdj")
                    .HasColumnType("varchar(500)")
                    .HasComment("字段集")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<YsjWjglxx>(entity =>
            {
                entity.ToTable("ysj_wjglxx");

                entity.HasComment("外键关联信息");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bjgid)
                    .HasColumnName("BJGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("表结构ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzdmc)
                    .HasColumnName("BZDMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("表字段名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jlclfs)
                    .HasColumnName("JLCLFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("级联处理方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wjbbm)
                    .HasColumnName("WJBBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("外键表表名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wjbzdm)
                    .HasColumnName("WJBZDM")
                    .HasColumnType("varchar(50)")
                    .HasComment("外键表字段名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<YsjYwbysj>(entity =>
            {
                entity.ToTable("ysj_ywbysj");

                entity.HasComment("业务表元数据");

                entity.HasIndex(e => e.Fjid)
                    .HasName("FK_09A5C77C594D4B4A");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bbgdzq)
                    .HasColumnName("BBGDZQ")
                    .HasColumnType("int(5)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("版本归档周期（以天为单位，默认为半年）");

                entity.Property(e => e.Bbm)
                    .HasColumnName("BBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("表别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bmc)
                    .HasColumnName("BMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("表名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ccxdlj)
                    .HasColumnName("CCXDLJ")
                    .HasColumnType("varchar(100)")
                    .HasComment("存储相对路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fjid)
                    .HasColumnName("FJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ftp)
                    .HasColumnName("FTP")
                    .HasColumnType("varchar(50)")
                    .HasComment("账户")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwffqz)
                    .HasColumnName("FWFFQZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("服务方法前缀")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kz1)
                    .HasColumnName("KZ1")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kz2)
                    .HasColumnName("KZ2")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kz3)
                    .HasColumnName("KZ3")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展3")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kz4)
                    .HasColumnName("KZ4")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展4")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kz5)
                    .HasColumnName("KZ5")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展5")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Sfbbgd)
                    .HasColumnName("SFBBGD")
                    .HasColumnType("int(1)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否版本归档");

                entity.Property(e => e.Sfrwxjc)
                    .HasColumnName("SFRWXJC")
                    .HasColumnType("int(1)")
                    .HasComment("是否任务型监测");

                entity.Property(e => e.Sfwjcx)
                    .HasColumnName("SFWJCX")
                    .HasColumnType("int(1)")
                    .HasComment("是否为监测项");

                entity.Property(e => e.Sfyfj)
                    .HasColumnName("SFYFJ")
                    .HasColumnType("int(1)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否有附件");

                entity.Property(e => e.Wjccwldz)
                    .HasColumnName("WJCCWLDZ")
                    .HasColumnType("varchar(100)")
                    .HasComment("文件存储物理地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjlx)
                    .HasColumnName("YJLX")
                    .HasColumnType("varchar(10)")
                    .HasComment("预警类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjyzlx)
                    .HasColumnName("YJYZLX")
                    .HasColumnType("int(1)")
                    .HasComment("预警阈值类型，系统生成预警信息使用（枚举型：0，数值型：1）");

                entity.Property(e => e.Ysjbbm)
                    .HasColumnName("YSJBBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("元数据表表名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywzj)
                    .HasColumnName("YWZJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zstmc)
                    .HasColumnName("ZSTMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("主视图名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Fj)
                    .WithMany(p => p.InverseFj)
                    .HasForeignKey(d => d.Fjid)
                    .HasConstraintName("FK_09A5C77C594D4B4A");
            });

            modelBuilder.Entity<ZdjcCjjcqy>(entity =>
            {
                entity.ToTable("zdjc_cjjcqy");

                entity.HasComment("沉降监测区域");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("jd")
                    .HasComment("经度");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("wd")
                    .HasComment("纬度");

                entity.Property(e => e.Wzsm)
                    .HasColumnName("wzsm")
                    .HasColumnType("varchar(50)")
                    .HasComment("位置说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<ZdjcCjjcsj>(entity =>
            {
                entity.ToTable("zdjc_cjjcsj");

                entity.HasComment("沉降监测数据");

                entity.HasIndex(e => e.Cjdid)
                    .HasName("FK_03E7FD3A70CD4512");

                entity.HasIndex(e => e.Id)
                    .HasName("id");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdid)
                    .HasColumnName("cjdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("沉降点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjz)
                    .HasColumnName("cjz")
                    .HasComment("沉降值");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jssj)
                    .HasColumnName("jssj")
                    .HasColumnType("datetime")
                    .HasComment("接收时间");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(2)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");
            });

            modelBuilder.Entity<ZdjcCjjcsj2018年12月18日>(entity =>
            {
                entity.ToTable("zdjc_cjjcsj_2018年12月18日");

                entity.HasComment("沉降监测数据");

                entity.HasIndex(e => e.Cjdid)
                    .HasName("FK_03E7FD3A70CD4512");

                entity.HasIndex(e => e.Id)
                    .HasName("id");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdid)
                    .HasColumnName("cjdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("沉降点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjz)
                    .HasColumnName("cjz")
                    .HasComment("沉降值");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jssj)
                    .HasColumnName("jssj")
                    .HasColumnType("datetime")
                    .HasComment("接收时间");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(2)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");
            });

            modelBuilder.Entity<ZdjcCjjcsj2018年12月26日>(entity =>
            {
                entity.ToTable("zdjc_cjjcsj_2018年12月26日");

                entity.HasComment("沉降监测数据");

                entity.HasIndex(e => e.Cjdid)
                    .HasName("FK_03E7FD3A70CD4512");

                entity.HasIndex(e => e.Id)
                    .HasName("id");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdid)
                    .HasColumnName("cjdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("沉降点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjz)
                    .HasColumnName("cjz")
                    .HasComment("沉降值");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jssj)
                    .HasColumnName("jssj")
                    .HasColumnType("datetime")
                    .HasComment("接收时间");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(2)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");
            });

            modelBuilder.Entity<ZdjcCjjcsjCopy>(entity =>
            {
                entity.ToTable("zdjc_cjjcsj_copy");

                entity.HasComment("沉降监测数据");

                entity.HasIndex(e => e.Cjdid)
                    .HasName("FK_03E7FD3A70CD4512");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdid)
                    .HasColumnName("cjdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("沉降点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjz)
                    .HasColumnName("cjz")
                    .HasComment("沉降值");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jssj)
                    .HasColumnName("jssj")
                    .HasColumnType("datetime")
                    .HasComment("接收时间");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(2)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");
            });

            modelBuilder.Entity<ZdjcCjjcsjCopy1>(entity =>
            {
                entity.ToTable("zdjc_cjjcsj_copy1");

                entity.HasComment("沉降监测数据");

                entity.HasIndex(e => e.Cjdid)
                    .HasName("FK_03E7FD3A70CD4512");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdid)
                    .HasColumnName("cjdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("沉降点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjz)
                    .HasColumnName("cjz")
                    .HasComment("沉降值");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jssj)
                    .HasColumnName("jssj")
                    .HasColumnType("datetime")
                    .HasComment("接收时间");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(2)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");
            });

            modelBuilder.Entity<ZdjcCjjcsjCopy20190411>(entity =>
            {
                entity.ToTable("zdjc_cjjcsj_copy20190411");

                entity.HasComment("沉降监测数据");

                entity.HasIndex(e => e.Cjdid)
                    .HasName("FK_03E7FD3A70CD4512");

                entity.HasIndex(e => e.Id)
                    .HasName("id");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdid)
                    .HasColumnName("cjdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("沉降点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjz)
                    .HasColumnName("cjz")
                    .HasComment("沉降值");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jssj)
                    .HasColumnName("jssj")
                    .HasColumnType("datetime")
                    .HasComment("接收时间");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(2)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");
            });

            modelBuilder.Entity<ZdjcCjjczd>(entity =>
            {
                entity.ToTable("zdjc_cjjczd");

                entity.HasComment("沉降监测终端");

                entity.HasIndex(e => e.Cjdid)
                    .HasName("cjdid")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdid)
                    .IsRequired()
                    .HasColumnName("cjdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("沉降点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjjcqyid)
                    .HasColumnName("CJJCQYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("沉降监测区域ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjr)
                    .HasColumnName("cjr")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Flag)
                    .HasColumnName("flag")
                    .HasColumnType("int(11)")
                    .HasComment("flag");

                entity.Property(e => e.Jd)
                    .HasColumnName("jd")
                    .HasComment("经度");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sczq)
                    .HasColumnName("sczq")
                    .HasColumnType("int(11)")
                    .HasComment("上传周期");

                entity.Property(e => e.Sfjzd)
                    .HasColumnName("sfjzd")
                    .HasColumnType("int(11)")
                    .HasComment("是否基准点");

                entity.Property(e => e.Txfs)
                    .HasColumnName("txfs")
                    .HasColumnType("varchar(50)")
                    .HasComment("通信方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("wd")
                    .HasComment("纬度");

                entity.Property(e => e.Wzsm)
                    .HasColumnName("wzsm")
                    .HasColumnType("varchar(50)")
                    .HasComment("位置说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("zt")
                    .HasColumnType("varchar(50)")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zxscsj)
                    .HasColumnName("zxscsj")
                    .HasColumnType("datetime")
                    .HasComment("最新上传时间");
            });

            modelBuilder.Entity<ZdjcJcpzSbqdBhdcjcgzqkjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("zdjc_jcpz_sbqd_bhdcjcgzqkjl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jssj)
                    .HasColumnName("jssj")
                    .HasColumnType("datetime")
                    .HasComment("接收时间");

                entity.Property(e => e.Sbid)
                    .HasColumnName("SBID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("char(1)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Wydid)
                    .HasColumnName("wydid")
                    .HasColumnType("varchar(50)")
                    .HasComment("位移点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wyz)
                    .HasColumnName("wyz")
                    .HasComment("位移值");
            });

            modelBuilder.Entity<ZdjcJcpzSbqdBhdcjcgzqkjlBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("zdjc_jcpz_sbqd_bhdcjcgzqkjl_bak");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象的具体部位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jssj)
                    .HasColumnName("jssj")
                    .HasColumnType("datetime")
                    .HasComment("接收时间");

                entity.Property(e => e.Sbid)
                    .IsRequired()
                    .HasColumnName("SBID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("char(1)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Wydid)
                    .HasColumnName("wydid")
                    .HasColumnType("varchar(50)")
                    .HasComment("位移点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wyz)
                    .HasColumnName("wyz")
                    .HasComment("位移值");
            });

            modelBuilder.Entity<ZdjcWyjcsj>(entity =>
            {
                entity.ToTable("zdjc_wyjcsj");

                entity.HasComment("位移监测数据");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jssj)
                    .HasColumnName("jssj")
                    .HasColumnType("datetime")
                    .HasComment("接收时间");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("char(1)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Wydid)
                    .HasColumnName("wydid")
                    .HasColumnType("varchar(50)")
                    .HasComment("位移点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wyz)
                    .HasColumnName("wyz")
                    .HasComment("位移值");
            });

            modelBuilder.Entity<ZdjcWyjczd>(entity =>
            {
                entity.ToTable("zdjc_wyjczd");

                entity.HasComment("位移监测终端");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cspyl)
                    .HasColumnName("cspyl")
                    .HasComment("初始偏移量");

                entity.Property(e => e.Sbqdid)
                    .HasColumnName("sbqdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备清单ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<ZdjcZsjcsj>(entity =>
            {
                entity.ToTable("zdjc_zsjcsj");

                entity.HasComment("噪声监测数据");

                entity.HasIndex(e => e.Jcsj)
                    .HasName("index_jcsj");

                entity.HasIndex(e => e.Zdid)
                    .HasName("index_zdid");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jssj)
                    .HasColumnName("jssj")
                    .HasColumnType("datetime")
                    .HasComment("接收时间");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(2)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Sfyyjfx)
                    .HasColumnName("sfyyjfx")
                    .HasColumnType("tinyint(2)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已预警分析");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("tinyint(2)")
                    .HasComment("审核状态");

                entity.Property(e => e.Zdid)
                    .HasColumnName("zdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("终端ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zsz)
                    .HasColumnName("zsz")
                    .HasComment("噪声值");
            });

            modelBuilder.Entity<ZdjcZsjczd>(entity =>
            {
                entity.ToTable("zdjc_zsjczd");

                entity.HasComment("噪声监测终端");

                entity.HasIndex(e => e.Zdid)
                    .HasName("zdid")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjr)
                    .HasColumnName("cjr")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Flag)
                    .HasColumnName("flag")
                    .HasColumnType("int(11)")
                    .HasComment("flag");

                entity.Property(e => e.Jd)
                    .HasColumnName("jd")
                    .HasComment("经度");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sczq)
                    .HasColumnName("sczq")
                    .HasColumnType("int(11)")
                    .HasComment("上传周期");

                entity.Property(e => e.Tyfs)
                    .HasColumnName("tyfs")
                    .HasColumnType("varchar(50)")
                    .HasComment("通信方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("wd")
                    .HasComment("纬度");

                entity.Property(e => e.Wzsm)
                    .HasColumnName("wzsm")
                    .HasColumnType("varchar(50)")
                    .HasComment("位置说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zdid)
                    .HasColumnName("zdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("终端ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("zt")
                    .HasColumnType("varchar(50)")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zxscsj)
                    .HasColumnName("zxscsj")
                    .HasColumnType("datetime")
                    .HasComment("最新上传时间");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
