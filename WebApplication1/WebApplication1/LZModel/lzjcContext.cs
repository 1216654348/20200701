using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace WebApplication1.LZModel
{
    public partial class lzjcContext : DbContext
    {
        public lzjcContext()
        {
        }

        public lzjcContext(DbContextOptions<lzjcContext> options)
            : base(options)
        {
        }

        public virtual DbSet<CfgSpd> CfgSpd { get; set; }
        public virtual DbSet<CljqrJcsj> CljqrJcsj { get; set; }
        public virtual DbSet<CljqrLfpoints> CljqrLfpoints { get; set; }
        public virtual DbSet<CljqrPoints> CljqrPoints { get; set; }
        public virtual DbSet<CljqrWypoints> CljqrWypoints { get; set; }
        public virtual DbSet<Composedata> Composedata { get; set; }
        public virtual DbSet<ConJcpzJcd> ConJcpzJcd { get; set; }
        public virtual DbSet<ConJcxJcd> ConJcxJcd { get; set; }
        public virtual DbSet<DtzyDtJbxx> DtzyDtJbxx { get; set; }
        public virtual DbSet<DtzyDtTcxx> DtzyDtTcxx { get; set; }
        public virtual DbSet<DtzyTcTdt> DtzyTcTdt { get; set; }
        public virtual DbSet<DtzyTcWfs> DtzyTcWfs { get; set; }
        public virtual DbSet<DtzyTcWms> DtzyTcWms { get; set; }
        public virtual DbSet<DtzyTcWmts> DtzyTcWmts { get; set; }
        public virtual DbSet<Editrecords> Editrecords { get; set; }
        public virtual DbSet<Eeeeeeee> Eeeeeeee { get; set; }
        public virtual DbSet<Fdsfs> Fdsfs { get; set; }
        public virtual DbSet<Geodatabase> Geodatabase { get; set; }
        public virtual DbSet<GeometryColumns> GeometryColumns { get; set; }
        public virtual DbSet<GlyjcAqsgjl> GlyjcAqsgjl { get; set; }
        public virtual DbSet<GlyjcBbhjl> GlyjcBbhjl { get; set; }
        public virtual DbSet<GlyjcBcjcdx> GlyjcBcjcdx { get; set; }
        public virtual DbSet<GlyjcBhdcjcgzqkjl> GlyjcBhdcjcgzqkjl { get; set; }
        public virtual DbSet<GlyjcBhdcjcgzqkjl20180907> GlyjcBhdcjcgzqkjl20180907 { get; set; }
        public virtual DbSet<GlyjcBhdcjcgzqkjl20180917> GlyjcBhdcjcgzqkjl20180917 { get; set; }
        public virtual DbSet<GlyjcBhdcjcgzqkjl2018年5月30日> GlyjcBhdcjcgzqkjl2018年5月30日 { get; set; }
        public virtual DbSet<GlyjcBhdcjcgzqkjl20190812> GlyjcBhdcjcgzqkjl20190812 { get; set; }
        public virtual DbSet<GlyjcBhdcjcgzqkjlCopy20200602> GlyjcBhdcjcgzqkjlCopy20200602 { get; set; }
        public virtual DbSet<GlyjcBhdtxx> GlyjcBhdtxx { get; set; }
        public virtual DbSet<GlyjcBhfbtjcsj> GlyjcBhfbtjcsj { get; set; }
        public virtual DbSet<GlyjcBhfwjskzdd> GlyjcBhfwjskzdd { get; set; }
        public virtual DbSet<GlyjcBhgcjcwz> GlyjcBhgcjcwz { get; set; }
        public virtual DbSet<GlyjcBhgcjcwzdtxx> GlyjcBhgcjcwzdtxx { get; set; }
        public virtual DbSet<GlyjcBhgcxfdbhxx> GlyjcBhgcxfdbhxx { get; set; }
        public virtual DbSet<GlyjcBhgcxfxggzjc> GlyjcBhgcxfxggzjc { get; set; }
        public virtual DbSet<GlyjcBhglghbzjl> GlyjcBhglghbzjl { get; set; }
        public virtual DbSet<GlyjcBhgljf> GlyjcBhgljf { get; set; }
        public virtual DbSet<GlyjcBhgljg> GlyjcBhgljg { get; set; }
        public virtual DbSet<GlyjcBhglxgpxjl> GlyjcBhglxgpxjl { get; set; }
        public virtual DbSet<GlyjcBhjcsjJcefwt> GlyjcBhjcsjJcefwt { get; set; }
        public virtual DbSet<GlyjcBhjct> GlyjcBhjct { get; set; }
        public virtual DbSet<GlyjcBhjcwz> GlyjcBhjcwz { get; set; }
        public virtual DbSet<GlyjcBhkzztpg> GlyjcBhkzztpg { get; set; }
        public virtual DbSet<GlyjcBhpf> GlyjcBhpf { get; set; }
        public virtual DbSet<GlyjcBhqht> GlyjcBhqht { get; set; }
        public virtual DbSet<GlyjcBhqhtjcsj> GlyjcBhqhtjcsj { get; set; }
        public virtual DbSet<GlyjcBhwzdtxx> GlyjcBhwzdtxx { get; set; }
        public virtual DbSet<GlyjcBhxjzzpjbhxjzjl> GlyjcBhxjzzpjbhxjzjl { get; set; }
        public virtual DbSet<GlyjcBhzsyhjzzgcjl> GlyjcBhzsyhjzzgcjl { get; set; }
        public virtual DbSet<GlyjcBhzsyhjzzgcjl181112> GlyjcBhzsyhjzzgcjl181112 { get; set; }
        public virtual DbSet<GlyjcBhzsyhjzzgcjlCopy> GlyjcBhzsyhjzzgcjlCopy { get; set; }
        public virtual DbSet<GlyjcBhzsyhjzzgcjlCopy1> GlyjcBhzsyhjzzgcjlCopy1 { get; set; }
        public virtual DbSet<GlyjcBhzsyhjzzgcjldtxx> GlyjcBhzsyhjzzgcjldtxx { get; set; }
        public virtual DbSet<GlyjcBhzsyhjzzgcjldtxxCopy> GlyjcBhzsyhjzzgcjldtxxCopy { get; set; }
        public virtual DbSet<GlyjcBhzsyhjzzgcxczp> GlyjcBhzsyhjzzgcxczp { get; set; }
        public virtual DbSet<GlyjcBhzsyhjzzgcxczpCopy> GlyjcBhzsyhjzzgcxczpCopy { get; set; }
        public virtual DbSet<GlyjcBtWdl> GlyjcBtWdl { get; set; }
        public virtual DbSet<GlyjcBtjhjgycsyx> GlyjcBtjhjgycsyx { get; set; }
        public virtual DbSet<GlyjcBxWdl> GlyjcBxWdl { get; set; }
        public virtual DbSet<GlyjcBxWdlBhdcjcgzqkjl> GlyjcBxWdlBhdcjcgzqkjl { get; set; }
        public virtual DbSet<GlyjcBy> GlyjcBy { get; set; }
        public virtual DbSet<GlyjcByWdl> GlyjcByWdl { get; set; }
        public virtual DbSet<GlyjcByszjl> GlyjcByszjl { get; set; }
        public virtual DbSet<GlyjcByywhgcjl> GlyjcByywhgcjl { get; set; }
        public virtual DbSet<GlyjcByywhgcjlYcysqd> GlyjcByywhgcjlYcysqd { get; set; }
        public virtual DbSet<GlyjcCamera> GlyjcCamera { get; set; }
        public virtual DbSet<GlyjcCj> GlyjcCj { get; set; }
        public virtual DbSet<GlyjcCjqxrzjl> GlyjcCjqxrzjl { get; set; }
        public virtual DbSet<GlyjcClfmjiancesj> GlyjcClfmjiancesj { get; set; }
        public virtual DbSet<GlyjcClfmjichusj> GlyjcClfmjichusj { get; set; }
        public virtual DbSet<GlyjcCllzlsglz> GlyjcCllzlsglz { get; set; }
        public virtual DbSet<GlyjcCnsx> GlyjcCnsx { get; set; }
        public virtual DbSet<GlyjcCnsxCopy20200727> GlyjcCnsxCopy20200727 { get; set; }
        public virtual DbSet<GlyjcCnsxjz> GlyjcCnsxjz { get; set; }
        public virtual DbSet<GlyjcCnsxjzCopy20200727> GlyjcCnsxjzCopy20200727 { get; set; }
        public virtual DbSet<GlyjcCqqkjl> GlyjcCqqkjl { get; set; }
        public virtual DbSet<GlyjcDbssz> GlyjcDbssz { get; set; }
        public virtual DbSet<GlyjcDhjy> GlyjcDhjy { get; set; }
        public virtual DbSet<GlyjcDqbg> GlyjcDqbg { get; set; }
        public virtual DbSet<GlyjcDqzl> GlyjcDqzl { get; set; }
        public virtual DbSet<GlyjcDrszjl> GlyjcDrszjl { get; set; }
        public virtual DbSet<GlyjcDttp> GlyjcDttp { get; set; }
        public virtual DbSet<GlyjcDwWdl> GlyjcDwWdl { get; set; }
        public virtual DbSet<GlyjcDwlmbdxx> GlyjcDwlmbdxx { get; set; }
        public virtual DbSet<GlyjcDwlmzp> GlyjcDwlmzp { get; set; }
        public virtual DbSet<GlyjcDz> GlyjcDz { get; set; }
        public virtual DbSet<GlyjcFjb> GlyjcFjb { get; set; }
        public virtual DbSet<GlyjcFjb1> GlyjcFjb1 { get; set; }
        public virtual DbSet<GlyjcFjbCopy> GlyjcFjbCopy { get; set; }
        public virtual DbSet<GlyjcFjbCopy0428> GlyjcFjbCopy0428 { get; set; }
        public virtual DbSet<GlyjcFjbCopy1> GlyjcFjbCopy1 { get; set; }
        public virtual DbSet<GlyjcFjbCopy20180509> GlyjcFjbCopy20180509 { get; set; }
        public virtual DbSet<GlyjcFjbCopy2018年5月9日154452> GlyjcFjbCopy2018年5月9日154452 { get; set; }
        public virtual DbSet<GlyjcFsWdl> GlyjcFsWdl { get; set; }
        public virtual DbSet<GlyjcGhxmlb> GlyjcGhxmlb { get; set; }
        public virtual DbSet<GlyjcGljg> GlyjcGljg { get; set; }
        public virtual DbSet<GlyjcGls> GlyjcGls { get; set; }
        public virtual DbSet<GlyjcGlsCopy20200610> GlyjcGlsCopy20200610 { get; set; }
        public virtual DbSet<GlyjcGlzdhyjyajl> GlyjcGlzdhyjyajl { get; set; }
        public virtual DbSet<GlyjcHjyxpg> GlyjcHjyxpg { get; set; }
        public virtual DbSet<GlyjcHjyxpgCopy> GlyjcHjyxpgCopy { get; set; }
        public virtual DbSet<GlyjcHsszjl> GlyjcHsszjl { get; set; }
        public virtual DbSet<GlyjcJbhj> GlyjcJbhj { get; set; }
        public virtual DbSet<GlyjcJbhj20200407> GlyjcJbhj20200407 { get; set; }
        public virtual DbSet<GlyjcJbhjCopy20181227qhx> GlyjcJbhjCopy20181227qhx { get; set; }
        public virtual DbSet<GlyjcJbhjWp> GlyjcJbhjWp { get; set; }
        public virtual DbSet<GlyjcJcbg> GlyjcJcbg { get; set; }
        public virtual DbSet<GlyjcJcbgyd> GlyjcJcbgyd { get; set; }
        public virtual DbSet<GlyjcJcfa> GlyjcJcfa { get; set; }
        public virtual DbSet<GlyjcJcjg> GlyjcJcjg { get; set; }
        public virtual DbSet<GlyjcJcpt> GlyjcJcpt { get; set; }
        public virtual DbSet<GlyjcJcpz> GlyjcJcpz { get; set; }
        public virtual DbSet<GlyjcJcpz0925改周期> GlyjcJcpz0925改周期 { get; set; }
        public virtual DbSet<GlyjcJcpzCopy> GlyjcJcpzCopy { get; set; }
        public virtual DbSet<GlyjcJcpzCopy1> GlyjcJcpzCopy1 { get; set; }
        public virtual DbSet<GlyjcJcpzCopy2> GlyjcJcpzCopy2 { get; set; }
        public virtual DbSet<GlyjcJcpzCopy20180827> GlyjcJcpzCopy20180827 { get; set; }
        public virtual DbSet<GlyjcJcpzCopy20181129Qhx> GlyjcJcpzCopy20181129Qhx { get; set; }
        public virtual DbSet<GlyjcJcpzCopy20181220qhx> GlyjcJcpzCopy20181220qhx { get; set; }
        public virtual DbSet<GlyjcJcpzCopy20200511> GlyjcJcpzCopy20200511 { get; set; }
        public virtual DbSet<GlyjcJcpzCopy20200513> GlyjcJcpzCopy20200513 { get; set; }
        public virtual DbSet<GlyjcJcpzCopy20200520> GlyjcJcpzCopy20200520 { get; set; }
        public virtual DbSet<GlyjcJcpzCopy20200527> GlyjcJcpzCopy20200527 { get; set; }
        public virtual DbSet<GlyjcJcpzRwscsj> GlyjcJcpzRwscsj { get; set; }
        public virtual DbSet<GlyjcJcpzrybb> GlyjcJcpzrybb { get; set; }
        public virtual DbSet<GlyjcJcpzsjg> GlyjcJcpzsjg { get; set; }
        public virtual DbSet<GlyjcJcpzsjg20181012100400> GlyjcJcpzsjg20181012100400 { get; set; }
        public virtual DbSet<GlyjcJcpzsjg2018321110926> GlyjcJcpzsjg2018321110926 { get; set; }
        public virtual DbSet<GlyjcJcpzsjg2018327142211> GlyjcJcpzsjg2018327142211 { get; set; }
        public virtual DbSet<GlyjcJcpzysj> GlyjcJcpzysj { get; set; }
        public virtual DbSet<GlyjcJcyjzd> GlyjcJcyjzd { get; set; }
        public virtual DbSet<GlyjcJghjjlWdl> GlyjcJghjjlWdl { get; set; }
        public virtual DbSet<GlyjcJksjjrpzb> GlyjcJksjjrpzb { get; set; }
        public virtual DbSet<GlyjcJrjcjg> GlyjcJrjcjg { get; set; }
        public virtual DbSet<GlyjcJrjcjl> GlyjcJrjcjl { get; set; }
        public virtual DbSet<GlyjcJrjglx> GlyjcJrjglx { get; set; }
        public virtual DbSet<GlyjcJrjl> GlyjcJrjl { get; set; }
        public virtual DbSet<GlyjcJrycjl> GlyjcJrycjl { get; set; }
        public virtual DbSet<GlyjcJskzygzxjc> GlyjcJskzygzxjc { get; set; }
        public virtual DbSet<GlyjcJskzygzxjcdtxx> GlyjcJskzygzxjcdtxx { get; set; }
        public virtual DbSet<GlyjcJzjc> GlyjcJzjc { get; set; }
        public virtual DbSet<GlyjcKgbgxx> GlyjcKgbgxx { get; set; }
        public virtual DbSet<GlyjcKgfjctww> GlyjcKgfjctww { get; set; }
        public virtual DbSet<GlyjcKgfjctwwCopy> GlyjcKgfjctwwCopy { get; set; }
        public virtual DbSet<GlyjcKgfjdt> GlyjcKgfjdt { get; set; }
        public virtual DbSet<GlyjcKgfjdtdtxx> GlyjcKgfjdtdtxx { get; set; }
        public virtual DbSet<GlyjcKgfjjcwz> GlyjcKgfjjcwz { get; set; }
        public virtual DbSet<GlyjcKgfjjcwzdtxx> GlyjcKgfjjcwzdtxx { get; set; }
        public virtual DbSet<GlyjcKgfjjl> GlyjcKgfjjl { get; set; }
        public virtual DbSet<GlyjcKgfjjldtxx> GlyjcKgfjjldtxx { get; set; }
        public virtual DbSet<GlyjcKgfjxczp> GlyjcKgfjxczp { get; set; }
        public virtual DbSet<GlyjcKgfjxczpKgfjjl> GlyjcKgfjxczpKgfjjl { get; set; }
        public virtual DbSet<GlyjcKgfjxm> GlyjcKgfjxm { get; set; }
        public virtual DbSet<GlyjcKlgfsdxczp> GlyjcKlgfsdxczp { get; set; }
        public virtual DbSet<GlyjcKlgfxczpJcwz> GlyjcKlgfxczpJcwz { get; set; }
        public virtual DbSet<GlyjcKlgfxczpJcwzdtxx> GlyjcKlgfxczpJcwzdtxx { get; set; }
        public virtual DbSet<GlyjcKqzl> GlyjcKqzl { get; set; }
        public virtual DbSet<GlyjcLdt> GlyjcLdt { get; set; }
        public virtual DbSet<GlyjcLeader> GlyjcLeader { get; set; }
        public virtual DbSet<GlyjcLeshanRyklJcwz> GlyjcLeshanRyklJcwz { get; set; }
        public virtual DbSet<GlyjcLfSzl> GlyjcLfSzl { get; set; }
        public virtual DbSet<GlyjcLfSzlBhdcjcgzqkjl> GlyjcLfSzlBhdcjcgzqkjl { get; set; }
        public virtual DbSet<GlyjcLfWdl> GlyjcLfWdl { get; set; }
        public virtual DbSet<GlyjcLfWdlBhdcjcgzqkjl> GlyjcLfWdlBhdcjcgzqkjl { get; set; }
        public virtual DbSet<GlyjcLsdljcjl> GlyjcLsdljcjl { get; set; }
        public virtual DbSet<GlyjcLzjcdaduijie> GlyjcLzjcdaduijie { get; set; }
        public virtual DbSet<GlyjcMjlyjyzsz> GlyjcMjlyjyzsz { get; set; }
        public virtual DbSet<GlyjcMjzb> GlyjcMjzb { get; set; }
        public virtual DbSet<GlyjcMxfwqd> GlyjcMxfwqd { get; set; }
        public virtual DbSet<GlyjcPgDllb> GlyjcPgDllb { get; set; }
        public virtual DbSet<GlyjcPgJcdxlx> GlyjcPgJcdxlx { get; set; }
        public virtual DbSet<GlyjcPgPgjg> GlyjcPgPgjg { get; set; }
        public virtual DbSet<GlyjcPgPgjlb> GlyjcPgPgjlb { get; set; }
        public virtual DbSet<GlyjcPgPgjlzbdx> GlyjcPgPgjlzbdx { get; set; }
        public virtual DbSet<GlyjcPgPgmx> GlyjcPgPgmx { get; set; }
        public virtual DbSet<GlyjcPgPgmxjgysb> GlyjcPgPgmxjgysb { get; set; }
        public virtual DbSet<GlyjcPgPgsz> GlyjcPgPgsz { get; set; }
        public virtual DbSet<GlyjcPgPgzb> GlyjcPgPgzb { get; set; }
        public virtual DbSet<GlyjcPgPgzbdx> GlyjcPgPgzbdx { get; set; }
        public virtual DbSet<GlyjcPgXzfxsjb> GlyjcPgXzfxsjb { get; set; }
        public virtual DbSet<GlyjcPgXzyssjb> GlyjcPgXzyssjb { get; set; }
        public virtual DbSet<GlyjcPgZbdxglb> GlyjcPgZbdxglb { get; set; }
        public virtual DbSet<GlyjcPgZbsjjgb> GlyjcPgZbsjjgb { get; set; }
        public virtual DbSet<GlyjcPgZjxx> GlyjcPgZjxx { get; set; }
        public virtual DbSet<GlyjcPgztjl> GlyjcPgztjl { get; set; }
        public virtual DbSet<GlyjcQnsw> GlyjcQnsw { get; set; }
        public virtual DbSet<GlyjcQt> GlyjcQt { get; set; }
        public virtual DbSet<GlyjcQtxggh> GlyjcQtxggh { get; set; }
        public virtual DbSet<GlyjcQtzp> GlyjcQtzp { get; set; }
        public virtual DbSet<GlyjcQx> GlyjcQx { get; set; }
        public virtual DbSet<GlyjcQyhj> GlyjcQyhj { get; set; }
        public virtual DbSet<GlyjcQyhjzd> GlyjcQyhjzd { get; set; }
        public virtual DbSet<GlyjcRcxcjl> GlyjcRcxcjl { get; set; }
        public virtual DbSet<GlyjcRcxcjlCopy20181220> GlyjcRcxcjlCopy20181220 { get; set; }
        public virtual DbSet<GlyjcRcxcjlCopy20200511> GlyjcRcxcjlCopy20200511 { get; set; }
        public virtual DbSet<GlyjcRcxcqdjlb> GlyjcRcxcqdjlb { get; set; }
        public virtual DbSet<GlyjcRcxcqy> GlyjcRcxcqy { get; set; }
        public virtual DbSet<GlyjcRcxcqyCopy20200511> GlyjcRcxcqyCopy20200511 { get; set; }
        public virtual DbSet<GlyjcRcxcqyTest> GlyjcRcxcqyTest { get; set; }
        public virtual DbSet<GlyjcRcxcqytest1> GlyjcRcxcqytest1 { get; set; }
        public virtual DbSet<GlyjcRcxcycjl> GlyjcRcxcycjl { get; set; }
        public virtual DbSet<GlyjcRcxcycjlCopy20200511> GlyjcRcxcycjlCopy20200511 { get; set; }
        public virtual DbSet<GlyjcRcxcycjlHep20191125150914> GlyjcRcxcycjlHep20191125150914 { get; set; }
        public virtual DbSet<GlyjcRcxcyctj> GlyjcRcxcyctj { get; set; }
        public virtual DbSet<GlyjcRcxczycbg> GlyjcRcxczycbg { get; set; }
        public virtual DbSet<GlyjcRcxczycbgscjl> GlyjcRcxczycbgscjl { get; set; }
        public virtual DbSet<GlyjcRhwzp> GlyjcRhwzp { get; set; }
        public virtual DbSet<GlyjcRhwzpCopy20180920csz> GlyjcRhwzpCopy20180920csz { get; set; }
        public virtual DbSet<GlyjcRwb> GlyjcRwb { get; set; }
        public virtual DbSet<GlyjcRwb032615> GlyjcRwb032615 { get; set; }
        public virtual DbSet<GlyjcRwbCopy20190125> GlyjcRwbCopy20190125 { get; set; }
        public virtual DbSet<GlyjcRwbCopy20200611> GlyjcRwbCopy20200611 { get; set; }
        public virtual DbSet<GlyjcRwbCopy20200612> GlyjcRwbCopy20200612 { get; set; }
        public virtual DbSet<GlyjcRypftj> GlyjcRypftj { get; set; }
        public virtual DbSet<GlyjcRypftjCopy20181107qhx> GlyjcRypftjCopy20181107qhx { get; set; }
        public virtual DbSet<GlyjcSbjcd> GlyjcSbjcd { get; set; }
        public virtual DbSet<GlyjcSbjcdJcpz> GlyjcSbjcdJcpz { get; set; }
        public virtual DbSet<GlyjcSblx> GlyjcSblx { get; set; }
        public virtual DbSet<GlyjcSblxCopy> GlyjcSblxCopy { get; set; }
        public virtual DbSet<GlyjcSblxjcx> GlyjcSblxjcx { get; set; }
        public virtual DbSet<GlyjcSblxyjcdbdygx> GlyjcSblxyjcdbdygx { get; set; }
        public virtual DbSet<GlyjcSbqd> GlyjcSbqd { get; set; }
        public virtual DbSet<GlyjcSbqd0716> GlyjcSbqd0716 { get; set; }
        public virtual DbSet<GlyjcSbqdCopy> GlyjcSbqdCopy { get; set; }
        public virtual DbSet<GlyjcSbqdCopy1> GlyjcSbqdCopy1 { get; set; }
        public virtual DbSet<GlyjcSbqdCopy20181203Qhx> GlyjcSbqdCopy20181203Qhx { get; set; }
        public virtual DbSet<GlyjcSbqdSxtbflj> GlyjcSbqdSxtbflj { get; set; }
        public virtual DbSet<GlyjcShrzb> GlyjcShrzb { get; set; }
        public virtual DbSet<GlyjcShstatic> GlyjcShstatic { get; set; }
        public virtual DbSet<GlyjcShstaticCopy1> GlyjcShstaticCopy1 { get; set; }
        public virtual DbSet<GlyjcShuiwei> GlyjcShuiwei { get; set; }
        public virtual DbSet<GlyjcShuiwei0823> GlyjcShuiwei0823 { get; set; }
        public virtual DbSet<GlyjcShuiweihistorydata> GlyjcShuiweihistorydata { get; set; }
        public virtual DbSet<GlyjcSjjcxb> GlyjcSjjcxb { get; set; }
        public virtual DbSet<GlyjcSjztjl> GlyjcSjztjl { get; set; }
        public virtual DbSet<GlyjcSlSzl> GlyjcSlSzl { get; set; }
        public virtual DbSet<GlyjcSlWdl> GlyjcSlWdl { get; set; }
        public virtual DbSet<GlyjcSlWdlBhdcjcgzqkjl> GlyjcSlWdlBhdcjcgzqkjl { get; set; }
        public virtual DbSet<GlyjcSlWdlCopy20181025> GlyjcSlWdlCopy20181025 { get; set; }
        public virtual DbSet<GlyjcSlWdlCopy20190121> GlyjcSlWdlCopy20190121 { get; set; }
        public virtual DbSet<GlyjcSlWdlCopy20200604> GlyjcSlWdlCopy20200604 { get; set; }
        public virtual DbSet<GlyjcSlxx> GlyjcSlxx { get; set; }
        public virtual DbSet<GlyjcSpwySzl> GlyjcSpwySzl { get; set; }
        public virtual DbSet<GlyjcSsykcd> GlyjcSsykcd { get; set; }
        public virtual DbSet<GlyjcStbczk> GlyjcStbczk { get; set; }
        public virtual DbSet<GlyjcStlsWdl> GlyjcStlsWdl { get; set; }
        public virtual DbSet<GlyjcStyycystjxzpjjl> GlyjcStyycystjxzpjjl { get; set; }
        public virtual DbSet<GlyjcSwWdl> GlyjcSwWdl { get; set; }
        public virtual DbSet<GlyjcSyda> GlyjcSyda { get; set; }
        public virtual DbSet<GlyjcSygnbhjltjbhjl> GlyjcSygnbhjltjbhjl { get; set; }
        public virtual DbSet<GlyjcSygnjzt> GlyjcSygnjzt { get; set; }
        public virtual DbSet<GlyjcSygnjztdtxx> GlyjcSygnjztdtxx { get; set; }
        public virtual DbSet<GlyjcSystem> GlyjcSystem { get; set; }
        public virtual DbSet<GlyjcSystem20200526> GlyjcSystem20200526 { get; set; }
        public virtual DbSet<GlyjcSywb> GlyjcSywb { get; set; }
        public virtual DbSet<GlyjcSz> GlyjcSz { get; set; }
        public virtual DbSet<GlyjcSzjl> GlyjcSzjl { get; set; }
        public virtual DbSet<GlyjcSzlyjyzsz> GlyjcSzlyjyzsz { get; set; }
        public virtual DbSet<GlyjcTcpbjzSouvSmcl> GlyjcTcpbjzSouvSmcl { get; set; }
        public virtual DbSet<GlyjcTdlyght> GlyjcTdlyght { get; set; }
        public virtual DbSet<GlyjcTdlyxzt> GlyjcTdlyxzt { get; set; }
        public virtual DbSet<GlyjcTdlyxztbhjl> GlyjcTdlyxztbhjl { get; set; }
        public virtual DbSet<GlyjcTdlyxztndjl> GlyjcTdlyxztndjl { get; set; }
        public virtual DbSet<GlyjcTf> GlyjcTf { get; set; }
        public virtual DbSet<GlyjcTfszjl> GlyjcTfszjl { get; set; }
        public virtual DbSet<GlyjcTjlkxjichusj> GlyjcTjlkxjichusj { get; set; }
        public virtual DbSet<GlyjcTlWdl> GlyjcTlWdl { get; set; }
        public virtual DbSet<GlyjcTrsq> GlyjcTrsq { get; set; }
        public virtual DbSet<GlyjcTrsqCopy> GlyjcTrsqCopy { get; set; }
        public virtual DbSet<GlyjcTrsqCsz0812> GlyjcTrsqCsz0812 { get; set; }
        public virtual DbSet<GlyjcTsWdl> GlyjcTsWdl { get; set; }
        public virtual DbSet<GlyjcTtWdl> GlyjcTtWdl { get; set; }
        public virtual DbSet<GlyjcTtblWdl> GlyjcTtblWdl { get; set; }
        public virtual DbSet<GlyjcWhj> GlyjcWhj { get; set; }
        public virtual DbSet<GlyjcWrj> GlyjcWrj { get; set; }
        public virtual DbSet<GlyjcWwbhgcfa> GlyjcWwbhgcfa { get; set; }
        public virtual DbSet<GlyjcWwbhgcfaBhzsyhjzzgcjl> GlyjcWwbhgcfaBhzsyhjzzgcjl { get; set; }
        public virtual DbSet<GlyjcWwbhwxda> GlyjcWwbhwxda { get; set; }
        public virtual DbSet<GlyjcWxyt> GlyjcWxyt { get; set; }
        public virtual DbSet<GlyjcWxyxhhp> GlyjcWxyxhhp { get; set; }
        public virtual DbSet<GlyjcWxyxhhpCopy> GlyjcWxyxhhpCopy { get; set; }
        public virtual DbSet<GlyjcXcgj> GlyjcXcgj { get; set; }
        public virtual DbSet<GlyjcXcyb> GlyjcXcyb { get; set; }
        public virtual DbSet<GlyjcXgdgljl> GlyjcXgdgljl { get; set; }
        public virtual DbSet<GlyjcXgdgljlCopy20200511> GlyjcXgdgljlCopy20200511 { get; set; }
        public virtual DbSet<GlyjcXgjlb> GlyjcXgjlb { get; set; }
        public virtual DbSet<GlyjcXgxfxBhZrhj> GlyjcXgxfxBhZrhj { get; set; }
        public virtual DbSet<GlyjcXgxfxBhwzqd> GlyjcXgxfxBhwzqd { get; set; }
        public virtual DbSet<GlyjcXgxfxZrhjqd> GlyjcXgxfxZrhjqd { get; set; }
        public virtual DbSet<GlyjcXjxmgzjl> GlyjcXjxmgzjl { get; set; }
        public virtual DbSet<GlyjcXjxmgzjlBfhfafmjl> GlyjcXjxmgzjlBfhfafmjl { get; set; }
        public virtual DbSet<GlyjcXjxmjcwz> GlyjcXjxmjcwz { get; set; }
        public virtual DbSet<GlyjcXjxmjl> GlyjcXjxmjl { get; set; }
        public virtual DbSet<GlyjcXjxmjldtxx> GlyjcXjxmjldtxx { get; set; }
        public virtual DbSet<GlyjcXjxmjlwzdtxx> GlyjcXjxmjlwzdtxx { get; set; }
        public virtual DbSet<GlyjcXxghzxqkjl> GlyjcXxghzxqkjl { get; set; }
        public virtual DbSet<GlyjcXxghzxqkjlBhglghbzjl> GlyjcXxghzxqkjlBhglghbzjl { get; set; }
        public virtual DbSet<GlyjcXxjlb> GlyjcXxjlb { get; set; }
        public virtual DbSet<GlyjcXxjlbCopy1> GlyjcXxjlbCopy1 { get; set; }
        public virtual DbSet<GlyjcXyaxfxtyjxx> GlyjcXyaxfxtyjxx { get; set; }
        public virtual DbSet<GlyjcYcdhgjwbdwddygx> GlyjcYcdhgjwbdwddygx { get; set; }
        public virtual DbSet<GlyjcYcgzjl> GlyjcYcgzjl { get; set; }
        public virtual DbSet<GlyjcYcgzjl0716> GlyjcYcgzjl0716 { get; set; }
        public virtual DbSet<GlyjcYcgzjlCopy> GlyjcYcgzjlCopy { get; set; }
        public virtual DbSet<GlyjcYcq> GlyjcYcq { get; set; }
        public virtual DbSet<GlyjcYcqCopy20200513> GlyjcYcqCopy20200513 { get; set; }
        public virtual DbSet<GlyjcYcqej> GlyjcYcqej { get; set; }
        public virtual DbSet<GlyjcYcqhcq> GlyjcYcqhcq { get; set; }
        public virtual DbSet<GlyjcYcqhhcqshhjndjcjl> GlyjcYcqhhcqshhjndjcjl { get; set; }
        public virtual DbSet<GlyjcYcsygntjcsj> GlyjcYcsygntjcsj { get; set; }
        public virtual DbSet<GlyjcYcszdshhjndjcjl> GlyjcYcszdshhjndjcjl { get; set; }
        public virtual DbSet<GlyjcYcyjfkyj> GlyjcYcyjfkyj { get; set; }
        public virtual DbSet<GlyjcYcyjfkyjCopy> GlyjcYcyjfkyjCopy { get; set; }
        public virtual DbSet<GlyjcYcyjfkyjCopy1> GlyjcYcyjfkyjCopy1 { get; set; }
        public virtual DbSet<GlyjcYcysdtxx> GlyjcYcysdtxx { get; set; }
        public virtual DbSet<GlyjcYcysdtxxCopy20200529> GlyjcYcysdtxxCopy20200529 { get; set; }
        public virtual DbSet<GlyjcYcysdtxztyxtjycysxzjl> GlyjcYcysdtxztyxtjycysxzjl { get; set; }
        public virtual DbSet<GlyjcYcysdtyxtjcesj> GlyjcYcysdtyxtjcesj { get; set; }
        public virtual DbSet<GlyjcYcysdtyxtjcesjCopy12018年5月9日104016贺鹏备份> GlyjcYcysdtyxtjcesjCopy12018年5月9日104016贺鹏备份 { get; set; }
        public virtual DbSet<GlyjcYcysdtyxtjcesjCopy20180902qhx> GlyjcYcysdtyxtjcesjCopy20180902qhx { get; set; }
        public virtual DbSet<GlyjcYcysdtyxtjcesjCopy20180921> GlyjcYcysdtyxtjcesjCopy20180921 { get; set; }
        public virtual DbSet<GlyjcYcysdtyxtjcsj> GlyjcYcysdtyxtjcsj { get; set; }
        public virtual DbSet<GlyjcYcysdtyxtjcsjCopy12018年5月9日104016贺鹏备份> GlyjcYcysdtyxtjcsjCopy12018年5月9日104016贺鹏备份 { get; set; }
        public virtual DbSet<GlyjcYcysdtyxtjcsjCopy20181130qhx> GlyjcYcysdtyxtjcsjCopy20181130qhx { get; set; }
        public virtual DbSet<GlyjcYcysfbt> GlyjcYcysfbt { get; set; }
        public virtual DbSet<GlyjcYcysfbtjcsj> GlyjcYcysfbtjcsj { get; set; }
        public virtual DbSet<GlyjcYcysqd> GlyjcYcysqd { get; set; }
        public virtual DbSet<GlyjcYcysqdCopy> GlyjcYcysqdCopy { get; set; }
        public virtual DbSet<GlyjcYcysqdCopy1> GlyjcYcysqdCopy1 { get; set; }
        public virtual DbSet<GlyjcYcysqdCopy2> GlyjcYcysqdCopy2 { get; set; }
        public virtual DbSet<GlyjcYcysqdCopy20181015qhx> GlyjcYcysqdCopy20181015qhx { get; set; }
        public virtual DbSet<GlyjcYcysqdCopy20200513> GlyjcYcysqdCopy20200513 { get; set; }
        public virtual DbSet<GlyjcYczbb> GlyjcYczbb { get; set; }
        public virtual DbSet<GlyjcYczt> GlyjcYczt { get; set; }
        public virtual DbSet<GlyjcYcztjcsj> GlyjcYcztjcsj { get; set; }
        public virtual DbSet<GlyjcYcztjcsjCopy20181024qhx> GlyjcYcztjcsjCopy20181024qhx { get; set; }
        public virtual DbSet<GlyjcYddcjd> GlyjcYddcjd { get; set; }
        public virtual DbSet<GlyjcYhlmzpjyhlmjcjl> GlyjcYhlmzpjyhlmjcjl { get; set; }
        public virtual DbSet<GlyjcYjczgz> GlyjcYjczgz { get; set; }
        public virtual DbSet<GlyjcYjczxx> GlyjcYjczxx { get; set; }
        public virtual DbSet<GlyjcYjgzjc> GlyjcYjgzjc { get; set; }
        public virtual DbSet<GlyjcYjgzjcCopy> GlyjcYjgzjcCopy { get; set; }
        public virtual DbSet<GlyjcYjgzjcCopy1> GlyjcYjgzjcCopy1 { get; set; }
        public virtual DbSet<GlyjcYjgzjl> GlyjcYjgzjl { get; set; }
        public virtual DbSet<GlyjcYjjsxx> GlyjcYjjsxx { get; set; }
        public virtual DbSet<GlyjcYjpzysxxb> GlyjcYjpzysxxb { get; set; }
        public virtual DbSet<GlyjcYjsb> GlyjcYjsb { get; set; }
        public virtual DbSet<GlyjcYjsbCopy> GlyjcYjsbCopy { get; set; }
        public virtual DbSet<GlyjcYjszzb> GlyjcYjszzb { get; set; }
        public virtual DbSet<GlyjcYjwz> GlyjcYjwz { get; set; }
        public virtual DbSet<GlyjcYjxx> GlyjcYjxx { get; set; }
        public virtual DbSet<GlyjcYjxxCopy> GlyjcYjxxCopy { get; set; }
        public virtual DbSet<GlyjcYjxxCopy1> GlyjcYjxxCopy1 { get; set; }
        public virtual DbSet<GlyjcYjxxfl> GlyjcYjxxfl { get; set; }
        public virtual DbSet<GlyjcYjxxfl0716改> GlyjcYjxxfl0716改 { get; set; }
        public virtual DbSet<GlyjcYjya> GlyjcYjya { get; set; }
        public virtual DbSet<GlyjcYkfmyxjl> GlyjcYkfmyxjl { get; set; }
        public virtual DbSet<GlyjcYkglydjl> GlyjcYkglydjl { get; set; }
        public virtual DbSet<GlyjcYkljcqy> GlyjcYkljcqy { get; set; }
        public virtual DbSet<GlyjcYkljcqyCopy> GlyjcYkljcqyCopy { get; set; }
        public virtual DbSet<GlyjcYkqydtxx> GlyjcYkqydtxx { get; set; }
        public virtual DbSet<GlyjcYkxyndjl> GlyjcYkxyndjl { get; set; }
        public virtual DbSet<GlyjcYkyxpg> GlyjcYkyxpg { get; set; }
        public virtual DbSet<GlyjcYscgWdl> GlyjcYscgWdl { get; set; }
        public virtual DbSet<GlyjcYscgWdlCopy20181023qhx> GlyjcYscgWdlCopy20181023qhx { get; set; }
        public virtual DbSet<GlyjcYt> GlyjcYt { get; set; }
        public virtual DbSet<GlyjcYtbhqk> GlyjcYtbhqk { get; set; }
        public virtual DbSet<GlyjcYulianghistorydata> GlyjcYulianghistorydata { get; set; }
        public virtual DbSet<GlyjcZbfg> GlyjcZbfg { get; set; }
        public virtual DbSet<GlyjcZbfgdtxx> GlyjcZbfgdtxx { get; set; }
        public virtual DbSet<GlyjcZjrwb> GlyjcZjrwb { get; set; }
        public virtual DbSet<GlyjcZjzxfx> GlyjcZjzxfx { get; set; }
        public virtual DbSet<GlyjcZqwc> GlyjcZqwc { get; set; }
        public virtual DbSet<GlyjcZrhjjcgzqkjl> GlyjcZrhjjcgzqkjl { get; set; }
        public virtual DbSet<GlyjcZrhjjcwz> GlyjcZrhjjcwz { get; set; }
        public virtual DbSet<GlyjcZs> GlyjcZs { get; set; }
        public virtual DbSet<GlyjcZsSs> GlyjcZsSs { get; set; }
        public virtual DbSet<GlyjcZtgjbhtjbhjl> GlyjcZtgjbhtjbhjl { get; set; }
        public virtual DbSet<GlyjcZtgjbhtjbhjldtxx> GlyjcZtgjbhtjbhjldtxx { get; set; }
        public virtual DbSet<GlyjcZtgjbhtndjl> GlyjcZtgjbhtndjl { get; set; }
        public virtual DbSet<GlyjcZwWdl> GlyjcZwWdl { get; set; }
        public virtual DbSet<GlyjcZwWdlBhdcjcgzqkjl> GlyjcZwWdlBhdcjcgzqkjl { get; set; }
        public virtual DbSet<GlyjcZwzz> GlyjcZwzz { get; set; }
        public virtual DbSet<GlyjcZxWdl> GlyjcZxWdl { get; set; }
        public virtual DbSet<GlyjcZxbhglfggz> GlyjcZxbhglfggz { get; set; }
        public virtual DbSet<GlyjcZz> GlyjcZz { get; set; }
        public virtual DbSet<GlyjcZzjg> GlyjcZzjg { get; set; }
        public virtual DbSet<HepengTempDtzb> HepengTempDtzb { get; set; }
        public virtual DbSet<HltBhzsyhjzzgcjlYcysqd> HltBhzsyhjzzgcjlYcysqd { get; set; }
        public virtual DbSet<HltKgfjYcys> HltKgfjYcys { get; set; }
        public virtual DbSet<HltXgdYcys> HltXgdYcys { get; set; }
        public virtual DbSet<HpfJcbg> HpfJcbg { get; set; }
        public virtual DbSet<HpfJcbgYj> HpfJcbgYj { get; set; }
        public virtual DbSet<HpfNbAqsgjl> HpfNbAqsgjl { get; set; }
        public virtual DbSet<HpfNbAxfxtyjssxx> HpfNbAxfxtyjssxx { get; set; }
        public virtual DbSet<HpfNbBhdcqk> HpfNbBhdcqk { get; set; }
        public virtual DbSet<HpfNbBhglghbzqkjlb> HpfNbBhglghbzqkjlb { get; set; }
        public virtual DbSet<HpfNbBhgljfqk> HpfNbBhgljfqk { get; set; }
        public virtual DbSet<HpfNbBhgljgqk> HpfNbBhgljgqk { get; set; }
        public virtual DbSet<HpfNbBhglryqk> HpfNbBhglryqk { get; set; }
        public virtual DbSet<HpfNbBhzshjzzgcqk> HpfNbBhzshjzzgcqk { get; set; }
        public virtual DbSet<HpfNbDyycbhglgzjy> HpfNbDyycbhglgzjy { get; set; }
        public virtual DbSet<HpfNbJcgzxg> HpfNbJcgzxg { get; set; }
        public virtual DbSet<HpfNbJcgzzpg> HpfNbJcgzzpg { get; set; }
        public virtual DbSet<HpfNbJcjgqk> HpfNbJcjgqk { get; set; }
        public virtual DbSet<HpfNbJcsbdsy> HpfNbJcsbdsy { get; set; }
        public virtual DbSet<HpfNbJfdsy> HpfNbJfdsy { get; set; }
        public virtual DbSet<HpfNbJskzjcqk> HpfNbJskzjcqk { get; set; }
        public virtual DbSet<HpfNbKgfjqk> HpfNbKgfjqk { get; set; }
        public virtual DbSet<HpfNbKykt> HpfNbKykt { get; set; }
        public virtual DbSet<HpfNbKyktCbzz> HpfNbKyktCbzz { get; set; }
        public virtual DbSet<HpfNbKyktXslw> HpfNbKyktXslw { get; set; }
        public virtual DbSet<HpfNbLyxyndjl> HpfNbLyxyndjl { get; set; }
        public virtual DbSet<HpfNbNdbgfj> HpfNbNdbgfj { get; set; }
        public virtual DbSet<HpfNbNdbgfxbgjdz> HpfNbNdbgfxbgjdz { get; set; }
        public virtual DbSet<HpfNbNdbgjcsj> HpfNbNdbgjcsj { get; set; }
        public virtual DbSet<HpfNbNdbgjdz> HpfNbNdbgjdz { get; set; }
        public virtual DbSet<HpfNbNdbgjlb> HpfNbNdbgjlb { get; set; }
        public virtual DbSet<HpfNbNdbgsfjlb> HpfNbNdbgsfjlb { get; set; }
        public virtual DbSet<HpfNbNdbgshb> HpfNbNdbgshb { get; set; }
        public virtual DbSet<HpfNbNdbgtbz> HpfNbNdbgtbz { get; set; }
        public virtual DbSet<HpfNbNdbgtyfjb> HpfNbNdbgtyfjb { get; set; }
        public virtual DbSet<HpfNbNdbgzb> HpfNbNdbgzb { get; set; }
        public virtual DbSet<HpfNbNdbgztz> HpfNbNdbgztz { get; set; }
        public virtual DbSet<HpfNbPxynljsqkGljgrycy> HpfNbPxynljsqkGljgrycy { get; set; }
        public virtual DbSet<HpfNbPxynljsqkZbhcb> HpfNbPxynljsqkZbhcb { get; set; }
        public virtual DbSet<HpfNbQtxgghqk> HpfNbQtxgghqk { get; set; }
        public virtual DbSet<HpfNbRwysjcqk> HpfNbRwysjcqk { get; set; }
        public virtual DbSet<HpfNbSfyrwysjcqk> HpfNbSfyrwysjcqk { get; set; }
        public virtual DbSet<HpfNbSfzsgzrzh> HpfNbSfzsgzrzh { get; set; }
        public virtual DbSet<HpfNbSjycwyhjy> HpfNbSjycwyhjy { get; set; }
        public virtual DbSet<HpfNbSycn> HpfNbSycn { get; set; }
        public virtual DbSet<HpfNbSycnlxqk> HpfNbSycnlxqk { get; set; }
        public virtual DbSet<HpfNbTcpbjzsm> HpfNbTcpbjzsm { get; set; }
        public virtual DbSet<HpfNbXgzl> HpfNbXgzl { get; set; }
        public virtual DbSet<HpfNbXxghzxqk> HpfNbXxghzxqk { get; set; }
        public virtual DbSet<HpfNbXyjdgzjh> HpfNbXyjdgzjh { get; set; }
        public virtual DbSet<HpfNbYcbhglzk> HpfNbYcbhglzk { get; set; }
        public virtual DbSet<HpfNbYcdztpg> HpfNbYcdztpg { get; set; }
        public virtual DbSet<HpfNbYcqd> HpfNbYcqd { get; set; }
        public virtual DbSet<HpfNbYcqhcqshhjndjcjl> HpfNbYcqhcqshhjndjcjl { get; set; }
        public virtual DbSet<HpfNbYcsygnqk> HpfNbYcsygnqk { get; set; }
        public virtual DbSet<HpfNbYcszdshhjndjcjl> HpfNbYcszdshhjndjcjl { get; set; }
        public virtual DbSet<HpfNbYcysdtqk> HpfNbYcysdtqk { get; set; }
        public virtual DbSet<HpfNbYkl> HpfNbYkl { get; set; }
        public virtual DbSet<HpfNbZdbhjcqk> HpfNbZdbhjcqk { get; set; }
        public virtual DbSet<HpfNbZrhjnr> HpfNbZrhjnr { get; set; }
        public virtual DbSet<HpfNbZrhjysjcqk> HpfNbZrhjysjcqk { get; set; }
        public virtual DbSet<HpfNbZrhjyxpg> HpfNbZrhjyxpg { get; set; }
        public virtual DbSet<HpfNbZrzhjcqk> HpfNbZrzhjcqk { get; set; }
        public virtual DbSet<HpfNbZs> HpfNbZs { get; set; }
        public virtual DbSet<HpfNbZtgjqk> HpfNbZtgjqk { get; set; }
        public virtual DbSet<HpfNbZxfggzqk> HpfNbZxfggzqk { get; set; }
        public virtual DbSet<HpfNbZxqkzhpj> HpfNbZxqkzhpj { get; set; }
        public virtual DbSet<HpfNbZygzcj> HpfNbZygzcj { get; set; }
        public virtual DbSet<HpfNbZywtysk> HpfNbZywtysk { get; set; }
        public virtual DbSet<HpfYcjcxxSjwhyc> HpfYcjcxxSjwhyc { get; set; }
        public virtual DbSet<HpfYcjcxxYcys> HpfYcjcxxYcys { get; set; }
        public virtual DbSet<HpfYcjcxxYcyslx> HpfYcjcxxYcyslx { get; set; }
        public virtual DbSet<HpfYcjcxxYczcbf> HpfYcjcxxYczcbf { get; set; }
        public virtual DbSet<HsRcxcQyCopy1> HsRcxcQyCopy1 { get; set; }
        public virtual DbSet<JbhjWp> JbhjWp { get; set; }
        public virtual DbSet<JczlStzlcfwz> JczlStzlcfwz { get; set; }
        public virtual DbSet<JczlZlfl> JczlZlfl { get; set; }
        public virtual DbSet<JczlZljl> JczlZljl { get; set; }
        public virtual DbSet<JczlZljlDzwj> JczlZljlDzwj { get; set; }
        public virtual DbSet<JieruAqiDensityvalue> JieruAqiDensityvalue { get; set; }
        public virtual DbSet<JieruAqiDensityvalueCopy> JieruAqiDensityvalueCopy { get; set; }
        public virtual DbSet<JieruAqiLimitvalue> JieruAqiLimitvalue { get; set; }
        public virtual DbSet<JieruAqiLimitvalueCopy> JieruAqiLimitvalueCopy { get; set; }
        public virtual DbSet<JieruAqiMintueData> JieruAqiMintueData { get; set; }
        public virtual DbSet<JieruAqiMintueDataCopy> JieruAqiMintueDataCopy { get; set; }
        public virtual DbSet<JieruAqiReportDay> JieruAqiReportDay { get; set; }
        public virtual DbSet<JieruAqiReportDayCopy> JieruAqiReportDayCopy { get; set; }
        public virtual DbSet<JieruAqiReportDayCopy手动导入数据> JieruAqiReportDayCopy手动导入数据 { get; set; }
        public virtual DbSet<JieruAqiReportDayCopy改时间之前> JieruAqiReportDayCopy改时间之前 { get; set; }
        public virtual DbSet<JieruAqiReportHour> JieruAqiReportHour { get; set; }
        public virtual DbSet<JieruAqiReportHourCopy> JieruAqiReportHourCopy { get; set; }
        public virtual DbSet<JieruAqiReportHourCopy手动导入数据> JieruAqiReportHourCopy手动导入数据 { get; set; }
        public virtual DbSet<JieruAqiReportHourCopy改时间之前> JieruAqiReportHourCopy改时间之前 { get; set; }
        public virtual DbSet<JieruArticle> JieruArticle { get; set; }
        public virtual DbSet<JieruConfig> JieruConfig { get; set; }
        public virtual DbSet<JieruConfigCopy> JieruConfigCopy { get; set; }
        public virtual DbSet<JieruConfigCopy20200622> JieruConfigCopy20200622 { get; set; }
        public virtual DbSet<JieruConfigCopy20200630> JieruConfigCopy20200630 { get; set; }
        public virtual DbSet<JieruConfigCopy20200709> JieruConfigCopy20200709 { get; set; }
        public virtual DbSet<JieruConfigCopy删掉无用配置之前> JieruConfigCopy删掉无用配置之前 { get; set; }
        public virtual DbSet<JieruDzsj> JieruDzsj { get; set; }
        public virtual DbSet<JieruDzsjCopy> JieruDzsjCopy { get; set; }
        public virtual DbSet<JieruHszljcszbb> JieruHszljcszbb { get; set; }
        public virtual DbSet<JieruLog> JieruLog { get; set; }
        public virtual DbSet<JieruProxy> JieruProxy { get; set; }
        public virtual DbSet<JieruShuiwei> JieruShuiwei { get; set; }
        public virtual DbSet<JieruSyysj> JieruSyysj { get; set; }
        public virtual DbSet<JieruSyysjCopy> JieruSyysjCopy { get; set; }
        public virtual DbSet<JieruWeatherLive> JieruWeatherLive { get; set; }
        public virtual DbSet<JieruWeatherLiveCopy> JieruWeatherLiveCopy { get; set; }
        public virtual DbSet<JieruWeatherTyphoon> JieruWeatherTyphoon { get; set; }
        public virtual DbSet<JieruWeatherTyphoonCopy> JieruWeatherTyphoonCopy { get; set; }
        public virtual DbSet<JieruWeatherTyphoonPath> JieruWeatherTyphoonPath { get; set; }
        public virtual DbSet<JieruWeatherTyphoonPathCopy> JieruWeatherTyphoonPathCopy { get; set; }
        public virtual DbSet<JieruWeatherTyphoonPoint> JieruWeatherTyphoonPoint { get; set; }
        public virtual DbSet<JieruWeatherTyphoonPointCopy> JieruWeatherTyphoonPointCopy { get; set; }
        public virtual DbSet<JieruWeatherWarning> JieruWeatherWarning { get; set; }
        public virtual DbSet<JieruWeatherWarningCopy> JieruWeatherWarningCopy { get; set; }
        public virtual DbSet<JieruZrhjJczd> JieruZrhjJczd { get; set; }
        public virtual DbSet<LeshanCrkxx> LeshanCrkxx { get; set; }
        public virtual DbSet<LeshanFirewarning> LeshanFirewarning { get; set; }
        public virtual DbSet<LeshanFjptrs> LeshanFjptrs { get; set; }
        public virtual DbSet<LeshanHjjcd> LeshanHjjcd { get; set; }
        public virtual DbSet<LeshanJcgt> LeshanJcgt { get; set; }
        public virtual DbSet<LeshanJcparking> LeshanJcparking { get; set; }
        public virtual DbSet<LeshanJqcrkxx> LeshanJqcrkxx { get; set; }
        public virtual DbSet<LeshanParkcrknum> LeshanParkcrknum { get; set; }
        public virtual DbSet<LeshanParkinfo> LeshanParkinfo { get; set; }
        public virtual DbSet<LeshanRlt> LeshanRlt { get; set; }
        public virtual DbSet<LeshanRltCopy20200709> LeshanRltCopy20200709 { get; set; }
        public virtual DbSet<LeshanRltCopy20200711> LeshanRltCopy20200711 { get; set; }
        public virtual DbSet<LeshanRykl> LeshanRykl { get; set; }
        public virtual DbSet<LeshanRykl20200622> LeshanRykl20200622 { get; set; }
        public virtual DbSet<LeshanRyklCopy> LeshanRyklCopy { get; set; }
        public virtual DbSet<LeshanRyklCopy2> LeshanRyklCopy2 { get; set; }
        public virtual DbSet<LeshanRyklCopy20180919qhx真实数据> LeshanRyklCopy20180919qhx真实数据 { get; set; }
        public virtual DbSet<LeshanRyklCopyCopy> LeshanRyklCopyCopy { get; set; }
        public virtual DbSet<LeshanRyklWp> LeshanRyklWp { get; set; }
        public virtual DbSet<LeshanSjdmpsrtj> LeshanSjdmpsrtj { get; set; }
        public virtual DbSet<LeshanSjjc> LeshanSjjc { get; set; }
        public virtual DbSet<LeshanSjjcWt> LeshanSjjcWt { get; set; }
        public virtual DbSet<LeshanSsykl> LeshanSsykl { get; set; }
        public virtual DbSet<LeshanSsykl20200622> LeshanSsykl20200622 { get; set; }
        public virtual DbSet<LeshanSsyklCopy> LeshanSsyklCopy { get; set; }
        public virtual DbSet<LeshanSsyklJcwz> LeshanSsyklJcwz { get; set; }
        public virtual DbSet<LeshanSxjkWdl> LeshanSxjkWdl { get; set; }
        public virtual DbSet<LeshanSxjkWdlBhdcjcgzqkjl> LeshanSxjkWdlBhdcjcgzqkjl { get; set; }
        public virtual DbSet<LeshanTlqqWdl> LeshanTlqqWdl { get; set; }
        public virtual DbSet<LeshanTlqqWdlBhdcjcgzqkjl> LeshanTlqqWdlBhdcjcgzqkjl { get; set; }
        public virtual DbSet<LeshanWswWdl> LeshanWswWdl { get; set; }
        public virtual DbSet<LeshanWswWdlBhdcjcgzqkjl> LeshanWswWdlBhdcjcgzqkjl { get; set; }
        public virtual DbSet<LeshanZwWdl> LeshanZwWdl { get; set; }
        public virtual DbSet<LeshanZwWdlBhdcjcgzqkjl> LeshanZwWdlBhdcjcgzqkjl { get; set; }
        public virtual DbSet<LzjcJcx> LzjcJcx { get; set; }
        public virtual DbSet<MapLayerLayerrelation> MapLayerLayerrelation { get; set; }
        public virtual DbSet<MapLayerTdt> MapLayerTdt { get; set; }
        public virtual DbSet<MapLayerWfs> MapLayerWfs { get; set; }
        public virtual DbSet<MapLayerWms> MapLayerWms { get; set; }
        public virtual DbSet<MapLayerWmts> MapLayerWmts { get; set; }
        public virtual DbSet<MetadataQtlysj> MetadataQtlysj { get; set; }
        public virtual DbSet<MetadataSzlysj> MetadataSzlysj { get; set; }
        public virtual DbSet<MetadataTplysj> MetadataTplysj { get; set; }
        public virtual DbSet<MetadataTzlysj> MetadataTzlysj { get; set; }
        public virtual DbSet<MetadataWdlysj> MetadataWdlysj { get; set; }
        public virtual DbSet<MetadataXgfjwd> MetadataXgfjwd { get; set; }
        public virtual DbSet<MetadataYxlysj> MetadataYxlysj { get; set; }
        public virtual DbSet<MwdZdjcdxWyt> MwdZdjcdxWyt { get; set; }
        public virtual DbSet<MwdZdjcdxWytResultSub> MwdZdjcdxWytResultSub { get; set; }
        public virtual DbSet<OgrPosition> OgrPosition { get; set; }
        public virtual DbSet<OrgDepartment> OrgDepartment { get; set; }
        public virtual DbSet<OrgDepartmentCopy> OrgDepartmentCopy { get; set; }
        public virtual DbSet<OrgLeader> OrgLeader { get; set; }
        public virtual DbSet<OrgUserinfo> OrgUserinfo { get; set; }
        public virtual DbSet<OrgUserinfoCopy> OrgUserinfoCopy { get; set; }
        public virtual DbSet<Oridata> Oridata { get; set; }
        public virtual DbSet<PrivsData> PrivsData { get; set; }
        public virtual DbSet<PrivsDataprivs> PrivsDataprivs { get; set; }
        public virtual DbSet<PrivsDepartment> PrivsDepartment { get; set; }
        public virtual DbSet<PrivsDlsj> PrivsDlsj { get; set; }
        public virtual DbSet<PrivsFunc> PrivsFunc { get; set; }
        public virtual DbSet<PrivsFuncData> PrivsFuncData { get; set; }
        public virtual DbSet<PrivsFuncprivs> PrivsFuncprivs { get; set; }
        public virtual DbSet<PrivsFuncprivsCopy> PrivsFuncprivsCopy { get; set; }
        public virtual DbSet<PrivsFuncprivsCopy0412> PrivsFuncprivsCopy0412 { get; set; }
        public virtual DbSet<PrivsFuncprivsCopy0420> PrivsFuncprivsCopy0420 { get; set; }
        public virtual DbSet<PrivsFuncprivsCopy0504> PrivsFuncprivsCopy0504 { get; set; }
        public virtual DbSet<PrivsFuncprivsCopy0605> PrivsFuncprivsCopy0605 { get; set; }
        public virtual DbSet<PrivsFuncprivsCopy0620> PrivsFuncprivsCopy0620 { get; set; }
        public virtual DbSet<PrivsFuncprivsCopy0726> PrivsFuncprivsCopy0726 { get; set; }
        public virtual DbSet<PrivsFuncprivsCopy0903> PrivsFuncprivsCopy0903 { get; set; }
        public virtual DbSet<PrivsFuncprivsCopy1> PrivsFuncprivsCopy1 { get; set; }
        public virtual DbSet<PrivsFuncprivsCopy20180919> PrivsFuncprivsCopy20180919 { get; set; }
        public virtual DbSet<PrivsFuncprivsCopy20180927监测数据病害列表调整前> PrivsFuncprivsCopy20180927监测数据病害列表调整前 { get; set; }
        public virtual DbSet<PrivsFuncprivsCopy20181012> PrivsFuncprivsCopy20181012 { get; set; }
        public virtual DbSet<PrivsFuncprivsCopy20200713> PrivsFuncprivsCopy20200713 { get; set; }
        public virtual DbSet<PrivsFuncprivsCopy3> PrivsFuncprivsCopy3 { get; set; }
        public virtual DbSet<PrivsFuncprivsTmp> PrivsFuncprivsTmp { get; set; }
        public virtual DbSet<PrivsFunctype> PrivsFunctype { get; set; }
        public virtual DbSet<PrivsLeader> PrivsLeader { get; set; }
        public virtual DbSet<PrivsOldFuncprivs> PrivsOldFuncprivs { get; set; }
        public virtual DbSet<PrivsPosition> PrivsPosition { get; set; }
        public virtual DbSet<PrivsRole> PrivsRole { get; set; }
        public virtual DbSet<PrivsRoleDataprivs> PrivsRoleDataprivs { get; set; }
        public virtual DbSet<PrivsRoleFuncprivs> PrivsRoleFuncprivs { get; set; }
        public virtual DbSet<PrivsSystem> PrivsSystem { get; set; }
        public virtual DbSet<PrivsUser> PrivsUser { get; set; }
        public virtual DbSet<PrivsUserClientid> PrivsUserClientid { get; set; }
        public virtual DbSet<PrivsUserExtend> PrivsUserExtend { get; set; }
        public virtual DbSet<PrivsUserLogininfo> PrivsUserLogininfo { get; set; }
        public virtual DbSet<PrivsUserRole> PrivsUserRole { get; set; }
        public virtual DbSet<SGcGcda> SGcGcda { get; set; }
        public virtual DbSet<SGlyjcJcpz> SGlyjcJcpz { get; set; }
        public virtual DbSet<SGlyjcJcpz2> SGlyjcJcpz2 { get; set; }
        public virtual DbSet<SYcysdtyxtjcsjMetadata> SYcysdtyxtjcsjMetadata { get; set; }
        public virtual DbSet<Sheet1> Sheet1 { get; set; }
        public virtual DbSet<SpatialRefSys> SpatialRefSys { get; set; }
        public virtual DbSet<SystmpTreedata> SystmpTreedata { get; set; }
        public virtual DbSet<TApiuseRecords> TApiuseRecords { get; set; }
        public virtual DbSet<TJcygzbJfdh> TJcygzbJfdh { get; set; }
        public virtual DbSet<TJcygzbJfdhsp> TJcygzbJfdhsp { get; set; }
        public virtual DbSet<TJcygzbJfenum> TJcygzbJfenum { get; set; }
        public virtual DbSet<TJcygzbJfmx> TJcygzbJfmx { get; set; }
        public virtual DbSet<TJcygzbLoginLog> TJcygzbLoginLog { get; set; }
        public virtual DbSet<TJcygzbOnoroffline> TJcygzbOnoroffline { get; set; }
        public virtual DbSet<TJcygzbSs> TJcygzbSs { get; set; }
        public virtual DbSet<TJcygzbSsCopy20200521> TJcygzbSsCopy20200521 { get; set; }
        public virtual DbSet<TJcygzbSsfjb> TJcygzbSsfjb { get; set; }
        public virtual DbSet<TJcygzbStaticfilepath> TJcygzbStaticfilepath { get; set; }
        public virtual DbSet<TJcygzbTjZctj> TJcygzbTjZctj { get; set; }
        public virtual DbSet<TJcygzbWdfx> TJcygzbWdfx { get; set; }
        public virtual DbSet<TJcygzbWdfxDa> TJcygzbWdfxDa { get; set; }
        public virtual DbSet<TJcygzbWdjf> TJcygzbWdjf { get; set; }
        public virtual DbSet<TJcygzbYhzb> TJcygzbYhzb { get; set; }
        public virtual DbSet<TJcygzbZx> TJcygzbZx { get; set; }
        public virtual DbSet<TJcygzbZxcz> TJcygzbZxcz { get; set; }
        public virtual DbSet<TLandcover> TLandcover { get; set; }
        public virtual DbSet<TLandcoverCopy20200702> TLandcoverCopy20200702 { get; set; }
        public virtual DbSet<TLandcoverCopy20200729> TLandcoverCopy20200729 { get; set; }
        public virtual DbSet<TLandcoverType> TLandcoverType { get; set; }
        public virtual DbSet<TPgZrhjysj> TPgZrhjysj { get; set; }
        public virtual DbSet<TPgZrhjysjMx> TPgZrhjysjMx { get; set; }
        public virtual DbSet<TRcxcZbx> TRcxcZbx { get; set; }
        public virtual DbSet<TShhjCl> TShhjCl { get; set; }
        public virtual DbSet<TShhjCz> TShhjCz { get; set; }
        public virtual DbSet<TShhjCzCopy20200707> TShhjCzCopy20200707 { get; set; }
        public virtual DbSet<TShhjCzsj> TShhjCzsj { get; set; }
        public virtual DbSet<TTempCxph> TTempCxph { get; set; }
        public virtual DbSet<TTempFile> TTempFile { get; set; }
        public virtual DbSet<TTempFkhx> TTempFkhx { get; set; }
        public virtual DbSet<TTempFkhxCopy20200715> TTempFkhxCopy20200715 { get; set; }
        public virtual DbSet<TTempGgcl> TTempGgcl { get; set; }
        public virtual DbSet<TTempJcsbxx> TTempJcsbxx { get; set; }
        public virtual DbSet<TTempKyjgcs> TTempKyjgcs { get; set; }
        public virtual DbSet<TTempKyjgcsCopy20200715> TTempKyjgcsCopy20200715 { get; set; }
        public virtual DbSet<TTempKyjgs> TTempKyjgs { get; set; }
        public virtual DbSet<TTempKyjgsCopy20200714> TTempKyjgsCopy20200714 { get; set; }
        public virtual DbSet<TTempKyjgsCopy20200715> TTempKyjgsCopy20200715 { get; set; }
        public virtual DbSet<TTempRkll> TTempRkll { get; set; }
        public virtual DbSet<TTempRkllCopy20200714> TTempRkllCopy20200714 { get; set; }
        public virtual DbSet<TTempYjzh> TTempYjzh { get; set; }
        public virtual DbSet<TTempYkll> TTempYkll { get; set; }
        public virtual DbSet<TTempYqrs> TTempYqrs { get; set; }
        public virtual DbSet<TTempYqrsCopy20200715> TTempYqrsCopy20200715 { get; set; }
        public virtual DbSet<TYcgk> TYcgk { get; set; }
        public virtual DbSet<TYcysqdYsm> TYcysqdYsm { get; set; }
        public virtual DbSet<TZrhjQx> TZrhjQx { get; set; }
        public virtual DbSet<TabCategory> TabCategory { get; set; }
        public virtual DbSet<Temp> Temp { get; set; }
        public virtual DbSet<Temp2018年8月3日> Temp2018年8月3日 { get; set; }
        public virtual DbSet<TempBy34level> TempBy34level { get; set; }
        public virtual DbSet<TempBy34levelgzjc> TempBy34levelgzjc { get; set; }
        public virtual DbSet<Tempjzjc> Tempjzjc { get; set; }
        public virtual DbSet<Temptb> Temptb { get; set; }
        public virtual DbSet<Test> Test { get; set; }
        public virtual DbSet<Testtemp> Testtemp { get; set; }
        public virtual DbSet<Testtemp1> Testtemp1 { get; set; }
        public virtual DbSet<VBhdcWdlysj> VBhdcWdlysj { get; set; }
        public virtual DbSet<VBhdcWdlysjBak> VBhdcWdlysjBak { get; set; }
        public virtual DbSet<VBhfbtjcsjTzlysj> VBhfbtjcsjTzlysj { get; set; }
        public virtual DbSet<VBhjctCzbh> VBhjctCzbh { get; set; }
        public virtual DbSet<VBhqhtjcsjTzlysj> VBhqhtjcsjTzlysj { get; set; }
        public virtual DbSet<VBhxjzNewestinfo> VBhxjzNewestinfo { get; set; }
        public virtual DbSet<VBhxjzNewestupdatetime> VBhxjzNewestupdatetime { get; set; }
        public virtual DbSet<VCljqrLfpoints> VCljqrLfpoints { get; set; }
        public virtual DbSet<VCljqrsj> VCljqrsj { get; set; }
        public virtual DbSet<VDhjyWdlysj> VDhjyWdlysj { get; set; }
        public virtual DbSet<VDqbgWdlysj> VDqbgWdlysj { get; set; }
        public virtual DbSet<VDwlmNewestinfo> VDwlmNewestinfo { get; set; }
        public virtual DbSet<VDwlmNewestupdatetime> VDwlmNewestupdatetime { get; set; }
        public virtual DbSet<VGlyjcBhTotalBhdcjcgzqkjl> VGlyjcBhTotalBhdcjcgzqkjl { get; set; }
        public virtual DbSet<VGlyjcBhgcJcwzJcpz> VGlyjcBhgcJcwzJcpz { get; set; }
        public virtual DbSet<VGlyjcBhgcxfdbhxx> VGlyjcBhgcxfdbhxx { get; set; }
        public virtual DbSet<VGlyjcBhgcxfdbhxxJcpz> VGlyjcBhgcxfdbhxxJcpz { get; set; }
        public virtual DbSet<VGlyjcBhgcxfxggzjc> VGlyjcBhgcxfxggzjc { get; set; }
        public virtual DbSet<VGlyjcBhgljfYflxjf> VGlyjcBhgljfYflxjf { get; set; }
        public virtual DbSet<VGlyjcBhkzztpg> VGlyjcBhkzztpg { get; set; }
        public virtual DbSet<VGlyjcBhxjBcjcdx> VGlyjcBhxjBcjcdx { get; set; }
        public virtual DbSet<VGlyjcBhxjzzpjbhxjzjl> VGlyjcBhxjzzpjbhxjzjl { get; set; }
        public virtual DbSet<VGlyjcBhzsyhjzzgcjl> VGlyjcBhzsyhjzzgcjl { get; set; }
        public virtual DbSet<VGlyjcBhzsyhjzzgcxczp> VGlyjcBhzsyhjzzgcxczp { get; set; }
        public virtual DbSet<VGlyjcBtjhjgycsyx> VGlyjcBtjhjgycsyx { get; set; }
        public virtual DbSet<VGlyjcBxWdlNewestdxsj> VGlyjcBxWdlNewestdxsj { get; set; }
        public virtual DbSet<VGlyjcByWdlNewestdxsj> VGlyjcByWdlNewestdxsj { get; set; }
        public virtual DbSet<VGlyjcByywhgcjlJcpz> VGlyjcByywhgcjlJcpz { get; set; }
        public virtual DbSet<VGlyjcCamera> VGlyjcCamera { get; set; }
        public virtual DbSet<VGlyjcCjNewestdxsj> VGlyjcCjNewestdxsj { get; set; }
        public virtual DbSet<VGlyjcCjqxrzjl> VGlyjcCjqxrzjl { get; set; }
        public virtual DbSet<VGlyjcClfmjiancesj> VGlyjcClfmjiancesj { get; set; }
        public virtual DbSet<VGlyjcDbssz> VGlyjcDbssz { get; set; }
        public virtual DbSet<VGlyjcDwWdl> VGlyjcDwWdl { get; set; }
        public virtual DbSet<VGlyjcDwlmbdxx> VGlyjcDwlmbdxx { get; set; }
        public virtual DbSet<VGlyjcDwlmzp> VGlyjcDwlmzp { get; set; }
        public virtual DbSet<VGlyjcFsWdlNewestdxsj> VGlyjcFsWdlNewestdxsj { get; set; }
        public virtual DbSet<VGlyjcHjyxpg> VGlyjcHjyxpg { get; set; }
        public virtual DbSet<VGlyjcJbhj> VGlyjcJbhj { get; set; }
        public virtual DbSet<VGlyjcJbhjFx> VGlyjcJbhjFx { get; set; }
        public virtual DbSet<VGlyjcJcpzsjg> VGlyjcJcpzsjg { get; set; }
        public virtual DbSet<VGlyjcJcwzdtxx> VGlyjcJcwzdtxx { get; set; }
        public virtual DbSet<VGlyjcJksjjrpzbTrsq> VGlyjcJksjjrpzbTrsq { get; set; }
        public virtual DbSet<VGlyjcJskzClfmjichusj> VGlyjcJskzClfmjichusj { get; set; }
        public virtual DbSet<VGlyjcJskzTjlkxjichusj> VGlyjcJskzTjlkxjichusj { get; set; }
        public virtual DbSet<VGlyjcJskzygzxjc> VGlyjcJskzygzxjc { get; set; }
        public virtual DbSet<VGlyjcJzjc> VGlyjcJzjc { get; set; }
        public virtual DbSet<VGlyjcKgfjJcwzJcpz> VGlyjcKgfjJcwzJcpz { get; set; }
        public virtual DbSet<VGlyjcKgfjctww> VGlyjcKgfjctww { get; set; }
        public virtual DbSet<VGlyjcKgfjjl> VGlyjcKgfjjl { get; set; }
        public virtual DbSet<VGlyjcKgfjjlXm> VGlyjcKgfjjlXm { get; set; }
        public virtual DbSet<VGlyjcKgfjxm> VGlyjcKgfjxm { get; set; }
        public virtual DbSet<VGlyjcLfSzlNewestdxsj> VGlyjcLfSzlNewestdxsj { get; set; }
        public virtual DbSet<VGlyjcLfWdlNewestdxsj> VGlyjcLfWdlNewestdxsj { get; set; }
        public virtual DbSet<VGlyjcLsdljcjl> VGlyjcLsdljcjl { get; set; }
        public virtual DbSet<VGlyjcParaidjcx> VGlyjcParaidjcx { get; set; }
        public virtual DbSet<VGlyjcPgPgjgpgdx> VGlyjcPgPgjgpgdx { get; set; }
        public virtual DbSet<VGlyjcPgPgjlb> VGlyjcPgPgjlb { get; set; }
        public virtual DbSet<VGlyjcPgZjxx> VGlyjcPgZjxx { get; set; }
        public virtual DbSet<VGlyjcQt> VGlyjcQt { get; set; }
        public virtual DbSet<VGlyjcRcxcandycjl> VGlyjcRcxcandycjl { get; set; }
        public virtual DbSet<VGlyjcRcxczycbg> VGlyjcRcxczycbg { get; set; }
        public virtual DbSet<VGlyjcRhwzp> VGlyjcRhwzp { get; set; }
        public virtual DbSet<VGlyjcSbdqJcxZrhj> VGlyjcSbdqJcxZrhj { get; set; }
        public virtual DbSet<VGlyjcSbjcd> VGlyjcSbjcd { get; set; }
        public virtual DbSet<VGlyjcSbqdConfJcjg> VGlyjcSbqdConfJcjg { get; set; }
        public virtual DbSet<VGlyjcSbqdConfig> VGlyjcSbqdConfig { get; set; }
        public virtual DbSet<VGlyjcShuiwei> VGlyjcShuiwei { get; set; }
        public virtual DbSet<VGlyjcSlWdlNewestdxsj> VGlyjcSlWdlNewestdxsj { get; set; }
        public virtual DbSet<VGlyjcSpwySzlNewestdxsj> VGlyjcSpwySzlNewestdxsj { get; set; }
        public virtual DbSet<VGlyjcStlsWdl> VGlyjcStlsWdl { get; set; }
        public virtual DbSet<VGlyjcStyycystjxzpjjl> VGlyjcStyycystjxzpjjl { get; set; }
        public virtual DbSet<VGlyjcTjlkxjichusj> VGlyjcTjlkxjichusj { get; set; }
        public virtual DbSet<VGlyjcTlWdlNewestdxsj> VGlyjcTlWdlNewestdxsj { get; set; }
        public virtual DbSet<VGlyjcTtWdl> VGlyjcTtWdl { get; set; }
        public virtual DbSet<VGlyjcTtblWdl> VGlyjcTtblWdl { get; set; }
        public virtual DbSet<VGlyjcWhj> VGlyjcWhj { get; set; }
        public virtual DbSet<VGlyjcWwbhwxda> VGlyjcWwbhwxda { get; set; }
        public virtual DbSet<VGlyjcXjxmJcwzJcpz> VGlyjcXjxmJcwzJcpz { get; set; }
        public virtual DbSet<VGlyjcXjxmgzjlXjxmjl> VGlyjcXjxmgzjlXjxmjl { get; set; }
        public virtual DbSet<VGlyjcXjxmjl> VGlyjcXjxmjl { get; set; }
        public virtual DbSet<VGlyjcYcyjfkyj> VGlyjcYcyjfkyj { get; set; }
        public virtual DbSet<VGlyjcYcyjzhzs> VGlyjcYcyjzhzs { get; set; }
        public virtual DbSet<VGlyjcYcysdtxztyxtjycysxzjl> VGlyjcYcysdtxztyxtjycysxzjl { get; set; }
        public virtual DbSet<VGlyjcYcysdtxztyxtjycysxzjlYcysqd> VGlyjcYcysdtxztyxtjycysxzjlYcysqd { get; set; }
        public virtual DbSet<VGlyjcYcysdtyxtjcsj> VGlyjcYcysdtyxtjcsj { get; set; }
        public virtual DbSet<VGlyjcYhlmzpjyhlmjcjl> VGlyjcYhlmzpjyhlmjcjl { get; set; }
        public virtual DbSet<VGlyjcYjczgz> VGlyjcYjczgz { get; set; }
        public virtual DbSet<VGlyjcYjjsxx> VGlyjcYjjsxx { get; set; }
        public virtual DbSet<VGlyjcYjsb> VGlyjcYjsb { get; set; }
        public virtual DbSet<VGlyjcYkljcqyKlgfxczpJcwz> VGlyjcYkljcqyKlgfxczpJcwz { get; set; }
        public virtual DbSet<VGlyjcYkljcqyRyklJcwz> VGlyjcYkljcqyRyklJcwz { get; set; }
        public virtual DbSet<VGlyjcYscgWdl> VGlyjcYscgWdl { get; set; }
        public virtual DbSet<VGlyjcYt> VGlyjcYt { get; set; }
        public virtual DbSet<VGlyjcZjrwb> VGlyjcZjrwb { get; set; }
        public virtual DbSet<VGlyjcZjzxfxOrguserinfo> VGlyjcZjzxfxOrguserinfo { get; set; }
        public virtual DbSet<VGlyjcZrhjjcgzqklJcwz> VGlyjcZrhjjcgzqklJcwz { get; set; }
        public virtual DbSet<VGlyjcZs> VGlyjcZs { get; set; }
        public virtual DbSet<VGlyjcZsSs> VGlyjcZsSs { get; set; }
        public virtual DbSet<VGlyjcZwWdlNewestdxsj> VGlyjcZwWdlNewestdxsj { get; set; }
        public virtual DbSet<VGlyjcZxWdlNewestdxsj> VGlyjcZxWdlNewestdxsj { get; set; }
        public virtual DbSet<VGlyjcZz> VGlyjcZz { get; set; }
        public virtual DbSet<VJcRcxcjlRealname> VJcRcxcjlRealname { get; set; }
        public virtual DbSet<VJcRcxcjlRealnameBack> VJcRcxcjlRealnameBack { get; set; }
        public virtual DbSet<VJcRcxcycjlRealname> VJcRcxcycjlRealname { get; set; }
        public virtual DbSet<VJcpzJcsbinfo> VJcpzJcsbinfo { get; set; }
        public virtual DbSet<VJieruTyphoonPath> VJieruTyphoonPath { get; set; }
        public virtual DbSet<VJieruTyphoonPoint> VJieruTyphoonPoint { get; set; }
        public virtual DbSet<VJieruWeatherJyl> VJieruWeatherJyl { get; set; }
        public virtual DbSet<VKgfjjlYcq> VKgfjjlYcq { get; set; }
        public virtual DbSet<VKlgfsdxczpBcjcdx> VKlgfsdxczpBcjcdx { get; set; }
        public virtual DbSet<VLeshanCll30> VLeshanCll30 { get; set; }
        public virtual DbSet<VLeshanJcparking> VLeshanJcparking { get; set; }
        public virtual DbSet<VLeshanParkinfocll> VLeshanParkinfocll { get; set; }
        public virtual DbSet<VLeshanParkingdesc> VLeshanParkingdesc { get; set; }
        public virtual DbSet<VLeshanParkinglatest> VLeshanParkinglatest { get; set; }
        public virtual DbSet<VLeshanRykl> VLeshanRykl { get; set; }
        public virtual DbSet<VLeshanRyklDailymax> VLeshanRyklDailymax { get; set; }
        public virtual DbSet<VLeshanRyklLatestdaily> VLeshanRyklLatestdaily { get; set; }
        public virtual DbSet<VLsdlNewestinfo> VLsdlNewestinfo { get; set; }
        public virtual DbSet<VLsdlNewestupdatetime> VLsdlNewestupdatetime { get; set; }
        public virtual DbSet<VLsdljcjlBcjcdx> VLsdljcjlBcjcdx { get; set; }
        public virtual DbSet<VMapLayerCommon> VMapLayerCommon { get; set; }
        public virtual DbSet<VMetadataSzlysj> VMetadataSzlysj { get; set; }
        public virtual DbSet<VMetadataTplysj> VMetadataTplysj { get; set; }
        public virtual DbSet<VMetadataTzlysj> VMetadataTzlysj { get; set; }
        public virtual DbSet<VMetadataWdlysj> VMetadataWdlysj { get; set; }
        public virtual DbSet<VMetadataYxlysj> VMetadataYxlysj { get; set; }
        public virtual DbSet<VNbexportAfxfqk> VNbexportAfxfqk { get; set; }
        public virtual DbSet<VNbexportBhglghbzqkjlb> VNbexportBhglghbzqkjlb { get; set; }
        public virtual DbSet<VNbexportBhglghzxqk> VNbexportBhglghzxqk { get; set; }
        public virtual DbSet<VNbexportBhgljfqk> VNbexportBhgljfqk { get; set; }
        public virtual DbSet<VNbexportBhgljgqk> VNbexportBhgljgqk { get; set; }
        public virtual DbSet<VNbexportBhglryqk> VNbexportBhglryqk { get; set; }
        public virtual DbSet<VNbexportBhzshjzzgcqk> VNbexportBhzshjzzgcqk { get; set; }
        public virtual DbSet<VNbexportCbzz> VNbexportCbzz { get; set; }
        public virtual DbSet<VNbexportJcjgqk> VNbexportJcjgqk { get; set; }
        public virtual DbSet<VNbexportJskzjcqk> VNbexportJskzjcqk { get; set; }
        public virtual DbSet<VNbexportKgfjqk> VNbexportKgfjqk { get; set; }
        public virtual DbSet<VNbexportKykt> VNbexportKykt { get; set; }
        public virtual DbSet<VNbexportLyxyndjl> VNbexportLyxyndjl { get; set; }
        public virtual DbSet<VNbexportPxynljsqkGljgrycy> VNbexportPxynljsqkGljgrycy { get; set; }
        public virtual DbSet<VNbexportPxynljsqkZbhcb> VNbexportPxynljsqkZbhcb { get; set; }
        public virtual DbSet<VNbexportQtxgghqk> VNbexportQtxgghqk { get; set; }
        public virtual DbSet<VNbexportRwysjcqk> VNbexportRwysjcqk { get; set; }
        public virtual DbSet<VNbexportShhjjc> VNbexportShhjjc { get; set; }
        public virtual DbSet<VNbexportSycnlxqk> VNbexportSycnlxqk { get; set; }
        public virtual DbSet<VNbexportXslw> VNbexportXslw { get; set; }
        public virtual DbSet<VNbexportYkl> VNbexportYkl { get; set; }
        public virtual DbSet<VNbexportZrhjysjc> VNbexportZrhjysjc { get; set; }
        public virtual DbSet<VNbexportZrzhjcqk> VNbexportZrzhjcqk { get; set; }
        public virtual DbSet<VNbexportZxfggzqk> VNbexportZxfggzqk { get; set; }
        public virtual DbSet<VPrivsRoleFunc> VPrivsRoleFunc { get; set; }
        public virtual DbSet<VPrivsUserDepartment> VPrivsUserDepartment { get; set; }
        public virtual DbSet<VPzbTrsqSbqd> VPzbTrsqSbqd { get; set; }
        public virtual DbSet<VQtzpYxlysj> VQtzpYxlysj { get; set; }
        public virtual DbSet<VRcxcRcxcycjl> VRcxcRcxcycjl { get; set; }
        public virtual DbSet<VRcxcqyJcpz> VRcxcqyJcpz { get; set; }
        public virtual DbSet<VRwXgdgljl> VRwXgdgljl { get; set; }
        public virtual DbSet<VRwxfBhgcjcwz> VRwxfBhgcjcwz { get; set; }
        public virtual DbSet<VRwxfBhgcxfjcdx> VRwxfBhgcxfjcdx { get; set; }
        public virtual DbSet<VRwxfBhjcwz> VRwxfBhjcwz { get; set; }
        public virtual DbSet<VRwxfClfmjcdx> VRwxfClfmjcdx { get; set; }
        public virtual DbSet<VRwxfKgfjjcwz> VRwxfKgfjjcwz { get; set; }
        public virtual DbSet<VRwxfRcxcycjcwz> VRwxfRcxcycjcwz { get; set; }
        public virtual DbSet<VRwxfTjlkxjcdx> VRwxfTjlkxjcdx { get; set; }
        public virtual DbSet<VRwxfXgdjcwz> VRwxfXgdjcwz { get; set; }
        public virtual DbSet<VRwxfXjxmjcwz> VRwxfXjxmjcwz { get; set; }
        public virtual DbSet<VRwxfYcysdtxtjcdx> VRwxfYcysdtxtjcdx { get; set; }
        public virtual DbSet<VRyklxzzBcjcdxSzlysj> VRyklxzzBcjcdxSzlysj { get; set; }
        public virtual DbSet<VSouvWdlysj> VSouvWdlysj { get; set; }
        public virtual DbSet<VSsykcdBcjcdx> VSsykcdBcjcdx { get; set; }
        public virtual DbSet<VSsyklxzzBcjcdxSzlysj> VSsyklxzzBcjcdxSzlysj { get; set; }
        public virtual DbSet<VSydaWdlysj> VSydaWdlysj { get; set; }
        public virtual DbSet<VSysPkCurrentpk> VSysPkCurrentpk { get; set; }
        public virtual DbSet<VSywbWdlysj> VSywbWdlysj { get; set; }
        public virtual DbSet<VTJcygzbJfdhmx> VTJcygzbJfdhmx { get; set; }
        public virtual DbSet<VTJcygzbJfenum> VTJcygzbJfenum { get; set; }
        public virtual DbSet<VTTempYjzh> VTTempYjzh { get; set; }
        public virtual DbSet<VTempZdjcsjLasttime> VTempZdjcsjLasttime { get; set; }
        public virtual DbSet<VTjxNewestupdatetime> VTjxNewestupdatetime { get; set; }
        public virtual DbSet<VWwbhwxdaWdlysj> VWwbhwxdaWdlysj { get; set; }
        public virtual DbSet<VWxyxhhpYxlysj> VWxyxhhpYxlysj { get; set; }
        public virtual DbSet<VXgdQyJcpz> VXgdQyJcpz { get; set; }
        public virtual DbSet<VYcbtYcbts> VYcbtYcbts { get; set; }
        public virtual DbSet<VYcsygntjcsjTzlysj> VYcsygntjcsjTzlysj { get; set; }
        public virtual DbSet<VYcysdtyxtJceJc> VYcysdtyxtJceJc { get; set; }
        public virtual DbSet<VYcysdtyxtJceJc2017年6月27日> VYcysdtyxtJceJc2017年6月27日 { get; set; }
        public virtual DbSet<VYcysdtyxtJceJcBak1> VYcysdtyxtJceJcBak1 { get; set; }
        public virtual DbSet<VYcysdtyxtjcsjYcys> VYcysdtyxtjcsjYcys { get; set; }
        public virtual DbSet<VYcysdtyxtjcsjYcys1> VYcysdtyxtjcsjYcys1 { get; set; }
        public virtual DbSet<VYcysfbtjcsjTzlysj> VYcysfbtjcsjTzlysj { get; set; }
        public virtual DbSet<VYcysqdYcdhgjwbdwddygx> VYcysqdYcdhgjwbdwddygx { get; set; }
        public virtual DbSet<VYcystpTplysj> VYcystpTplysj { get; set; }
        public virtual DbSet<VYcystzTzlysj> VYcystzTzlysj { get; set; }
        public virtual DbSet<VYcysxztYcysdtyxt> VYcysxztYcysdtyxt { get; set; }
        public virtual DbSet<VYczcbfBaseinfo> VYczcbfBaseinfo { get; set; }
        public virtual DbSet<VYczcbfEvaluation> VYczcbfEvaluation { get; set; }
        public virtual DbSet<VYcztjcsjTzlysj> VYcztjcsjTzlysj { get; set; }
        public virtual DbSet<VYglyjcYjxxYjczxx> VYglyjcYjxxYjczxx { get; set; }
        public virtual DbSet<VYhlmNewestinfo> VYhlmNewestinfo { get; set; }
        public virtual DbSet<VYhlmNewestupdatetime> VYhlmNewestupdatetime { get; set; }
        public virtual DbSet<VYsjDomainConstraint> VYsjDomainConstraint { get; set; }
        public virtual DbSet<VYsjPkCurrentpk> VYsjPkCurrentpk { get; set; }
        public virtual DbSet<VYsjTableenumitem> VYsjTableenumitem { get; set; }
        public virtual DbSet<VZdjcCjjczd> VZdjcCjjczd { get; set; }
        public virtual DbSet<VZdjcWyjczd> VZdjcWyjczd { get; set; }
        public virtual DbSet<VZdjcZsjc> VZdjcZsjc { get; set; }
        public virtual DbSet<VZdjcZsjczd> VZdjcZsjczd { get; set; }
        public virtual DbSet<VZdjcsjSyjcd> VZdjcsjSyjcd { get; set; }
        public virtual DbSet<VZdjcsjYkqy> VZdjcsjYkqy { get; set; }
        public virtual DbSet<VZrhjJczdConfJcjg> VZrhjJczdConfJcjg { get; set; }
        public virtual DbSet<WaterInfo> WaterInfo { get; set; }
        public virtual DbSet<WmtGeneratorTable> WmtGeneratorTable { get; set; }
        public virtual DbSet<XzqDsj> XzqDsj { get; set; }
        public virtual DbSet<XzqQxj> XzqQxj { get; set; }
        public virtual DbSet<XzqSj> XzqSj { get; set; }
        public virtual DbSet<YcbtDomainEnum> YcbtDomainEnum { get; set; }
        public virtual DbSet<YcbtDomainEnumitem> YcbtDomainEnumitem { get; set; }
        public virtual DbSet<YcbtDomainRange> YcbtDomainRange { get; set; }
        public virtual DbSet<YcbtYcd> YcbtYcd { get; set; }
        public virtual DbSet<YcbtYcdtp> YcbtYcdtp { get; set; }
        public virtual DbSet<YcbtYcqy> YcbtYcqy { get; set; }
        public virtual DbSet<YcbtYcqytp> YcbtYcqytp { get; set; }
        public virtual DbSet<YcbtYcys> YcbtYcys { get; set; }
        public virtual DbSet<YcbtYcystp> YcbtYcystp { get; set; }
        public virtual DbSet<YddRw> YddRw { get; set; }
        public virtual DbSet<YsjDomainConstraint> YsjDomainConstraint { get; set; }
        public virtual DbSet<YsjDomainEnum> YsjDomainEnum { get; set; }
        public virtual DbSet<YsjDomainEnumitem> YsjDomainEnumitem { get; set; }
        public virtual DbSet<YsjDomainRange> YsjDomainRange { get; set; }
        public virtual DbSet<YsjPkConfig> YsjPkConfig { get; set; }
        public virtual DbSet<YsjPkCurrentpk> YsjPkCurrentpk { get; set; }
        public virtual DbSet<YsjSeqConfig> YsjSeqConfig { get; set; }
        public virtual DbSet<YsjSeqCurrentseq> YsjSeqCurrentseq { get; set; }
        public virtual DbSet<YsjTempview> YsjTempview { get; set; }
        public virtual DbSet<YsjWjglxx> YsjWjglxx { get; set; }
        public virtual DbSet<YsjYwbysj> YsjYwbysj { get; set; }
        public virtual DbSet<ZdjcCjjcqy> ZdjcCjjcqy { get; set; }
        public virtual DbSet<ZdjcCjjcsj> ZdjcCjjcsj { get; set; }
        public virtual DbSet<ZdjcCjjczd> ZdjcCjjczd { get; set; }
        public virtual DbSet<ZdjcWyjcsj> ZdjcWyjcsj { get; set; }
        public virtual DbSet<ZdjcWyjczd> ZdjcWyjczd { get; set; }
        public virtual DbSet<ZdjcZsjcsj> ZdjcZsjcsj { get; set; }
        public virtual DbSet<ZdjcZsjczd> ZdjcZsjczd { get; set; }
        public virtual DbSet<ZdjcdxCjjcd> ZdjcdxCjjcd { get; set; }
        public virtual DbSet<ZdjcdxFhqy> ZdjcdxFhqy { get; set; }
        public virtual DbSet<ZdjcdxQxjcd> ZdjcdxQxjcd { get; set; }
        public virtual DbSet<ZdjcdxSsqy> ZdjcdxSsqy { get; set; }
        public virtual DbSet<ZdjcdxSwlsjcd> ZdjcdxSwlsjcd { get; set; }
        public virtual DbSet<ZdjcdxSyjcd> ZdjcdxSyjcd { get; set; }
        public virtual DbSet<ZdjcdxWhjjcd> ZdjcdxWhjjcd { get; set; }
        public virtual DbSet<ZdjcdxWsdjcd> ZdjcdxWsdjcd { get; set; }
        public virtual DbSet<ZdjcdxZwqy> ZdjcdxZwqy { get; set; }
        public virtual DbSet<ZdjcsjCjjcd> ZdjcsjCjjcd { get; set; }
        public virtual DbSet<ZdjcsjFhqy> ZdjcsjFhqy { get; set; }
        public virtual DbSet<ZdjcsjQxjcd> ZdjcsjQxjcd { get; set; }
        public virtual DbSet<ZdjcsjQxjcdJs> ZdjcsjQxjcdJs { get; set; }
        public virtual DbSet<ZdjcsjSsqy> ZdjcsjSsqy { get; set; }
        public virtual DbSet<ZdjcsjSwlsjcd> ZdjcsjSwlsjcd { get; set; }
        public virtual DbSet<ZdjcsjSyjcd> ZdjcsjSyjcd { get; set; }
        public virtual DbSet<ZdjcsjWsdjcd> ZdjcsjWsdjcd { get; set; }
        public virtual DbSet<ZdjcsjYkqy> ZdjcsjYkqy { get; set; }
        public virtual DbSet<ZdjcsjZwqy> ZdjcsjZwqy { get; set; }
        public virtual DbSet<Ѳ> Ѳ { get; set; }
        public virtual DbSet<Ѳ1> Ѳ1 { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. See http://go.microsoft.com/fwlink/?LinkId=723263 for guidance on storing connection strings.
                optionsBuilder.UseMySql("server=60.191.9.82;userid=lzjc;pwd=lzjc@654321;port=36542;database=lzjc", x => x.ServerVersion("5.7.20-mysql"));
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<CfgSpd>(entity =>
            {
                entity.ToTable("cfg_spd");

                entity.HasComment("视频点");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Channel)
                    .HasColumnName("channel")
                    .HasColumnType("varchar(50)")
                    .HasComment("通道")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Idx)
                    .HasColumnName("idx")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Ip)
                    .HasColumnName("ip")
                    .HasColumnType("varchar(50)")
                    .HasComment("主机")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("lx")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Mc)
                    .IsRequired()
                    .HasColumnName("mc")
                    .HasColumnType("varchar(100)")
                    .HasComment("名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Port)
                    .HasColumnName("port")
                    .HasColumnType("varchar(50)")
                    .HasComment("端口")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Pwd)
                    .HasColumnName("pwd")
                    .HasColumnType("varchar(50)")
                    .HasComment("密码")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sm)
                    .HasColumnName("sm")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Userid)
                    .HasColumnName("userid")
                    .HasColumnType("varchar(50)")
                    .HasComment("用户名")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wzsm)
                    .HasColumnName("wzsm")
                    .HasColumnType("varchar(500)")
                    .HasComment("位置说明")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.X).HasColumnName("x");

                entity.Property(e => e.Y).HasColumnName("y");

                entity.Property(e => e.Ywid)
                    .IsRequired()
                    .HasColumnName("ywid")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务编号")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Z).HasColumnName("z");
            });

            modelBuilder.Entity<CljqrJcsj>(entity =>
            {
                entity.ToTable("cljqr_jcsj");

                entity.HasComment("测量机器人检测解算结果");

                entity.HasIndex(e => e.Ptid)
                    .HasName("ptid");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("int(11)");

                entity.Property(e => e.Bhid)
                    .HasColumnName("bhid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ptid)
                    .HasColumnName("ptid")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime");

                entity.Property(e => e.X)
                    .HasColumnName("x")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Y)
                    .HasColumnName("y")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Z)
                    .HasColumnName("z")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<CljqrLfpoints>(entity =>
            {
                entity.ToTable("cljqr_lfpoints");

                entity.HasComment("测量机器人裂缝监测点");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Csjl)
                    .HasColumnName("csjl")
                    .HasColumnType("double(10,4)")
                    .HasComment("两点间初始距离（为性能考虑而缓存中间值）");

                entity.Property(e => e.Pic)
                    .HasColumnName("pic")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测点位置示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pot1)
                    .HasColumnName("pot1")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点1ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pot2)
                    .HasColumnName("pot2")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点2ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("ycysid")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<CljqrPoints>(entity =>
            {
                entity.ToTable("cljqr_points");

                entity.HasComment("测量机器人监测点");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djid)
                    .HasColumnName("djid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jczq)
                    .HasColumnName("jczq")
                    .HasColumnType("decimal(20,0)");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("pid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("px")
                    .HasColumnType("decimal(10,0)");

                entity.Property(e => e.Sbqdid)
                    .HasColumnName("sbqdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备清单ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("decimal(10,0)");

                entity.Property(e => e.Sjdid)
                    .HasColumnName("sjdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wzms)
                    .HasColumnName("wzms")
                    .HasColumnType("varchar(500)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.X)
                    .HasColumnName("x")
                    .HasColumnType("varchar(50)")
                    .HasComment("位置X值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xp)
                    .HasColumnName("xp")
                    .HasColumnType("decimal(12,8)");

                entity.Property(e => e.Y)
                    .HasColumnName("y")
                    .HasColumnType("varchar(50)")
                    .HasComment("位置y值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ybid)
                    .HasColumnName("ybid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("ycysid")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yp)
                    .HasColumnName("yp")
                    .HasColumnType("decimal(12,8)");

                entity.Property(e => e.Z)
                    .HasColumnName("z")
                    .HasColumnType("varchar(50)")
                    .HasComment("位置z值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<CljqrWypoints>(entity =>
            {
                entity.ToTable("cljqr_wypoints");

                entity.HasComment("测量机器人位移监测点");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pic)
                    .HasColumnName("pic")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测点位置示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pot)
                    .HasColumnName("pot")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Potjc)
                    .HasColumnName("potjc")
                    .HasColumnType("varchar(50)")
                    .HasComment("实际监测点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<Composedata>(entity =>
            {
                entity.ToTable("composedata");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("int(11)");

                entity.Property(e => e.CollectTime)
                    .HasColumnName("collectTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.Flag)
                    .HasColumnName("flag")
                    .HasColumnType("int(11)");

                entity.Property(e => e.ParaId)
                    .HasColumnName("paraId")
                    .HasColumnType("varchar(32)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ParaTypeCode)
                    .HasColumnName("paraTypeCode")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ParaValue).HasColumnName("paraValue");

                entity.Property(e => e.RtuCode)
                    .HasColumnName("rtuCode")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.SystemTime)
                    .HasColumnName("systemTime")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<ConJcpzJcd>(entity =>
            {
                entity.ToTable("con_jcpz_jcd");

                entity.HasIndex(e => e.Jcpzfaid)
                    .HasName("JCPZFAID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdid)
                    .HasColumnName("JCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzfaid)
                    .HasColumnName("JCPZFAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置方案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(40)")
                    .HasComment("监测点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Jcpzfa)
                    .WithMany(p => p.ConJcpzJcd)
                    .HasForeignKey(d => d.Jcpzfaid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("con_jcpz_jcd_ibfk_1");
            });

            modelBuilder.Entity<ConJcxJcd>(entity =>
            {
                entity.ToTable("con_jcx_jcd");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdbm)
                    .HasColumnName("JCDBM")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测点表名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcxbm)
                    .HasColumnName("JCXBM")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测项表名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcxid)
                    .HasColumnName("JCXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<DtzyDtJbxx>(entity =>
            {
                entity.ToTable("dtzy_dt_jbxx");

                entity.HasComment("地图_基本信息");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(2000)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fz)
                    .HasColumnName("FZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("分组")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xsblc)
                    .HasColumnName("XSBLC")
                    .HasColumnType("varchar(50)")
                    .HasComment("显示比例尺")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xsfws)
                    .HasColumnName("XSFWS")
                    .HasComment("显示范围上");

                entity.Property(e => e.Xsfwx)
                    .HasColumnName("XSFWX")
                    .HasComment("显示范围下");

                entity.Property(e => e.Xsfwy)
                    .HasColumnName("XSFWY")
                    .HasComment("显示范围右");

                entity.Property(e => e.Xsfwz)
                    .HasColumnName("XSFWZ")
                    .HasComment("显示范围左");

                entity.Property(e => e.Zdxsblc)
                    .HasColumnName("ZDXSBLC")
                    .HasColumnType("varchar(50)")
                    .HasComment("最大显示比例尺")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zxdx)
                    .HasColumnName("ZXDX")
                    .HasComment("中心点X");

                entity.Property(e => e.Zxdy)
                    .HasColumnName("ZXDY")
                    .HasComment("中心点Y");

                entity.Property(e => e.Zxxsblc)
                    .HasColumnName("ZXXSBLC")
                    .HasColumnType("varchar(50)")
                    .HasComment("最小显示比例尺")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<DtzyDtTcxx>(entity =>
            {
                entity.ToTable("dtzy_dt_tcxx");

                entity.HasComment("地图_图层信息");

                entity.HasIndex(e => e.Dtxxid)
                    .HasName("FK_93EBAD2EBB5B46E2");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dtxxid)
                    .HasColumnName("DTXXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("地图信息ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mrkj)
                    .HasColumnName("MRKJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'1'")
                    .HasComment("默认可见");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Tcid)
                    .HasColumnName("TCID")
                    .HasColumnType("varchar(50)")
                    .HasComment("图层ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zdxsjb)
                    .HasColumnName("ZDXSJB")
                    .HasColumnType("int(11)")
                    .HasComment("最大显示级别");

                entity.Property(e => e.Zxxsjb)
                    .HasColumnName("ZXXSJB")
                    .HasColumnType("int(11)")
                    .HasComment("最小显示级别");

                entity.HasOne(d => d.Dtxx)
                    .WithMany(p => p.DtzyDtTcxx)
                    .HasForeignKey(d => d.Dtxxid)
                    .HasConstraintName("dtzy_dt_tcxx_ibfk_1");
            });

            modelBuilder.Entity<DtzyTcTdt>(entity =>
            {
                entity.ToTable("dtzy_tc_tdt");

                entity.HasComment("图层_天地图");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(2000)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tl)
                    .HasColumnName("TL")
                    .HasColumnType("varchar(300)")
                    .HasComment("图例")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbck)
                    .HasColumnName("ZBCK")
                    .HasColumnType("varchar(50)")
                    .HasComment("坐标参考")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<DtzyTcWfs>(entity =>
            {
                entity.ToTable("dtzy_tc_wfs");

                entity.HasComment("图层_WFS");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzsm)
                    .HasColumnName("BZSM")
                    .HasColumnType("varchar(2000)")
                    .HasComment("备注说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tcys)
                    .HasColumnName("TCYS")
                    .HasColumnType("varchar(100)")
                    .HasComment("图层样式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tl)
                    .HasColumnName("TL")
                    .HasColumnType("varchar(300)")
                    .HasComment("图例")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Url)
                    .HasColumnName("URL")
                    .HasColumnType("varchar(300)")
                    .HasComment("Url地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xybb)
                    .HasColumnName("XYBB")
                    .HasColumnType("varchar(50)")
                    .HasComment("协议版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbck)
                    .HasColumnName("ZBCK")
                    .HasColumnType("varchar(50)")
                    .HasComment("坐标参考")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<DtzyTcWms>(entity =>
            {
                entity.ToTable("dtzy_tc_wms");

                entity.HasComment("图层_WMS");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(2000)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfwptc)
                    .HasColumnName("SFWPTC")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否瓦片图层");

                entity.Property(e => e.Tl)
                    .HasColumnName("TL")
                    .HasColumnType("varchar(300)")
                    .HasComment("图例")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Url)
                    .HasColumnName("URL")
                    .HasColumnType("varchar(300)")
                    .HasComment("URL地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wpgd)
                    .HasColumnName("WPGD")
                    .HasColumnType("int(11)")
                    .HasComment("瓦片高度");

                entity.Property(e => e.Wpgs)
                    .HasColumnName("WPGS")
                    .HasColumnType("varchar(50)")
                    .HasComment("瓦片格式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wpkd)
                    .HasColumnName("WPKD")
                    .HasColumnType("int(11)")
                    .HasComment("瓦片宽度");

                entity.Property(e => e.Xybb)
                    .HasColumnName("XYBB")
                    .HasColumnType("varchar(50)")
                    .HasComment("协议版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbck)
                    .HasColumnName("ZBCK")
                    .HasColumnType("varchar(50)")
                    .HasComment("坐标参考")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ztcj)
                    .HasColumnName("ZTCJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("子图层级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<DtzyTcWmts>(entity =>
            {
                entity.ToTable("dtzy_tc_wmts");

                entity.HasComment("图层_WMTS");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(2000)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tl)
                    .HasColumnName("TL")
                    .HasColumnType("varchar(300)")
                    .HasComment("图例")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Url)
                    .HasColumnName("URL")
                    .HasColumnType("varchar(300)")
                    .HasComment("Url地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbck)
                    .HasColumnName("ZBCK")
                    .HasColumnType("varchar(50)")
                    .HasComment("坐标参考")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ztcj)
                    .HasColumnName("ZTCJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("子图层级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zzfs)
                    .HasColumnName("ZZFS")
                    .HasColumnType("varchar(100)")
                    .HasComment("组织方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<Editrecords>(entity =>
            {
                entity.ToTable("editrecords");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("int(11)");

                entity.Property(e => e.Businesskey)
                    .HasColumnName("BUSINESSKEY")
                    .HasColumnType("varchar(40)")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Date).HasColumnName("DATE");

                entity.Property(e => e.Edittype)
                    .HasColumnName("EDITTYPE")
                    .HasColumnType("int(11)");

                entity.Property(e => e.Featurestate)
                    .HasColumnName("FEATURESTATE")
                    .HasColumnType("int(11)");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("int(11)");

                entity.Property(e => e.Operatekey)
                    .HasColumnName("OPERATEKEY")
                    .HasColumnType("varchar(40)")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Ponlyid)
                    .HasColumnName("PONLYID")
                    .HasColumnType("int(11)");

                entity.Property(e => e.Ptablename)
                    .HasColumnName("PTABLENAME")
                    .HasColumnType("varchar(40)")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Tablename)
                    .HasColumnName("TABLENAME")
                    .HasColumnType("varchar(40)")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.User)
                    .HasColumnName("USER")
                    .HasColumnType("varchar(40)")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");
            });

            modelBuilder.Entity<Eeeeeeee>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("eeeeeeee");

                entity.Property(e => e.Lj)
                    .HasColumnName("LJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(255)")
                    .HasComment("类型0-音频，1-图片，2-视频")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(255)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<Fdsfs>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("fdsfs");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<Geodatabase>(entity =>
            {
                entity.ToTable("geodatabase");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("int(11)");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GeometryColumns>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("geometry_columns");

                entity.Property(e => e.CoordDimension)
                    .HasColumnName("COORD_DIMENSION")
                    .HasColumnType("int(11)");

                entity.Property(e => e.FGeometryColumn)
                    .IsRequired()
                    .HasColumnName("F_GEOMETRY_COLUMN")
                    .HasColumnType("varchar(256)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.FTableCatalog)
                    .HasColumnName("F_TABLE_CATALOG")
                    .HasColumnType("varchar(256)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.FTableName)
                    .IsRequired()
                    .HasColumnName("F_TABLE_NAME")
                    .HasColumnType("varchar(256)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.FTableSchema)
                    .HasColumnName("F_TABLE_SCHEMA")
                    .HasColumnType("varchar(256)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Srid)
                    .HasColumnName("SRID")
                    .HasColumnType("int(11)");

                entity.Property(e => e.Type)
                    .IsRequired()
                    .HasColumnName("TYPE")
                    .HasColumnType("varchar(256)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcAqsgjl>(entity =>
            {
                entity.ToTable("glyjc_aqsgjl");

                entity.HasComment("安全事故记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Clqk)
                    .HasColumnName("CLQK")
                    .HasColumnType("varchar(500)")
                    .HasComment("处理情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fssj)
                    .HasColumnName("FSSJ")
                    .HasColumnType("datetime")
                    .HasComment("发生时间");

                entity.Property(e => e.Jb)
                    .HasColumnName("JB")
                    .HasColumnType("varchar(50)")
                    .HasComment("级别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Sglx)
                    .HasColumnName("SGLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("事故类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Ss)
                    .HasColumnName("SS")
                    .HasColumnType("varchar(50)")
                    .HasComment("损失")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcBbhjl>(entity =>
            {
                entity.ToTable("glyjc_bbhjl");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bbh)
                    .HasColumnName("BBH")
                    .HasColumnType("int(10)")
                    .HasComment("版本号");

                entity.Property(e => e.Jcbid)
                    .HasColumnName("JCBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对应监测表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzsj)
                    .HasColumnName("JZSJ")
                    .HasColumnType("datetime")
                    .HasComment("截止时间");

                entity.Property(e => e.Qssj)
                    .HasColumnName("QSSJ")
                    .HasColumnType("datetime")
                    .HasComment("起始时间");
            });

            modelBuilder.Entity<GlyjcBcjcdx>(entity =>
            {
                entity.ToTable("glyjc_bcjcdx");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("精度");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zdmc)
                    .HasColumnName("ZDMC")
                    .HasColumnType("varchar(10)")
                    .HasComment("对应视图的字段名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhdcjcgzqkjl>(entity =>
            {
                entity.ToTable("glyjc_bhdcjcgzqkjl");

                entity.HasComment("病害调查监测工作情况记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bbh)
                    .HasColumnName("BBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("版本号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbha)
                    .HasColumnName("BHBHA")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhczzt)
                    .HasColumnName("BHCZZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害存在状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhgd)
                    .HasColumnName("BHGD")
                    .HasComment("病害高度");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhlx)
                    .HasColumnName("BHLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhqywz)
                    .HasColumnName("BHQYWZ")
                    .HasColumnType("text")
                    .HasComment("病害区域标注（在图片上位置标绘）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhsyt)
                    .HasColumnName("BHSYT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhztt)
                    .HasColumnName("BHZTT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害状态图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dtlx)
                    .HasColumnName("DTLX")
                    .HasColumnType("varchar(4)")
                    .HasDefaultValueSql("''")
                    .HasComment("底图类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcff)
                    .HasColumnName("JCFF")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测方法")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jczq)
                    .HasColumnName("JCZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("面积")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfsb)
                    .HasColumnName("SFSB")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否设备监测(0未监测，1设备监测，2移动端拍照，3=1+2)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tcmc)
                    .HasColumnName("TCMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("对应的图层照片记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xfsj)
                    .HasColumnName("XFSJ")
                    .HasColumnType("datetime")
                    .HasComment("修复时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhdcjcgzqkjl20180907>(entity =>
            {
                entity.ToTable("glyjc_bhdcjcgzqkjl_20180907");

                entity.HasComment("病害调查监测工作情况记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bbh)
                    .HasColumnName("BBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("版本号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbha)
                    .HasColumnName("BHBHA")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhczzt)
                    .HasColumnName("BHCZZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害存在状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhgd)
                    .HasColumnName("BHGD")
                    .HasComment("病害高度");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhlx)
                    .HasColumnName("BHLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhqywz)
                    .HasColumnName("BHQYWZ")
                    .HasColumnType("text")
                    .HasComment("病害区域标注（在图片上位置标绘）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhsyt)
                    .HasColumnName("BHSYT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhztt)
                    .HasColumnName("BHZTT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害状态图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dtlx)
                    .HasColumnName("DTLX")
                    .HasColumnType("varchar(4)")
                    .HasDefaultValueSql("''")
                    .HasComment("底图类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcff)
                    .HasColumnName("JCFF")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测方法")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jczq)
                    .HasColumnName("JCZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("面积")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfsb)
                    .HasColumnName("SFSB")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否设备监测")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tcmc)
                    .HasColumnName("TCMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("对应的图层照片记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xfsj)
                    .HasColumnName("XFSJ")
                    .HasColumnType("datetime")
                    .HasComment("修复时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhdcjcgzqkjl20180917>(entity =>
            {
                entity.ToTable("glyjc_bhdcjcgzqkjl_20180917");

                entity.HasComment("病害调查监测工作情况记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bbh)
                    .HasColumnName("BBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("版本号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbha)
                    .HasColumnName("BHBHA")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhczzt)
                    .HasColumnName("BHCZZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害存在状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhgd)
                    .HasColumnName("BHGD")
                    .HasComment("病害高度");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhlx)
                    .HasColumnName("BHLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhqywz)
                    .HasColumnName("BHQYWZ")
                    .HasColumnType("text")
                    .HasComment("病害区域标注（在图片上位置标绘）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhsyt)
                    .HasColumnName("BHSYT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhztt)
                    .HasColumnName("BHZTT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害状态图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dtlx)
                    .HasColumnName("DTLX")
                    .HasColumnType("varchar(4)")
                    .HasDefaultValueSql("''")
                    .HasComment("底图类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcff)
                    .HasColumnName("JCFF")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测方法")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jczq)
                    .HasColumnName("JCZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("面积")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfsb)
                    .HasColumnName("SFSB")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否设备监测")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tcmc)
                    .HasColumnName("TCMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("对应的图层照片记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xfsj)
                    .HasColumnName("XFSJ")
                    .HasColumnType("datetime")
                    .HasComment("修复时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhdcjcgzqkjl2018年5月30日>(entity =>
            {
                entity.ToTable("glyjc_bhdcjcgzqkjl_2018年5月30日");

                entity.HasComment("病害调查监测工作情况记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bbh)
                    .HasColumnName("BBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("版本号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbha)
                    .HasColumnName("BHBHA")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhczzt)
                    .HasColumnName("BHCZZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害存在状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhgd)
                    .HasColumnName("BHGD")
                    .HasComment("病害高度");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhlx)
                    .HasColumnName("BHLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhqywz)
                    .HasColumnName("BHQYWZ")
                    .HasColumnType("text")
                    .HasComment("病害区域标注（在图片上位置标绘）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhsyt)
                    .HasColumnName("BHSYT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhztt)
                    .HasColumnName("BHZTT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害状态图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dtlx)
                    .HasColumnName("DTLX")
                    .HasColumnType("varchar(4)")
                    .HasDefaultValueSql("''")
                    .HasComment("底图类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcff)
                    .HasColumnName("JCFF")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测方法")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jczq)
                    .HasColumnName("JCZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("面积")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfsb)
                    .HasColumnName("SFSB")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否设备监测")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tcmc)
                    .HasColumnName("TCMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("对应的图层照片记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xfsj)
                    .HasColumnName("XFSJ")
                    .HasColumnType("datetime")
                    .HasComment("修复时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhdcjcgzqkjl20190812>(entity =>
            {
                entity.ToTable("glyjc_bhdcjcgzqkjl_20190812");

                entity.HasComment("病害调查监测工作情况记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bbh)
                    .HasColumnName("BBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("版本号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbha)
                    .HasColumnName("BHBHA")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhczzt)
                    .HasColumnName("BHCZZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害存在状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhgd)
                    .HasColumnName("BHGD")
                    .HasComment("病害高度");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhlx)
                    .HasColumnName("BHLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhqywz)
                    .HasColumnName("BHQYWZ")
                    .HasColumnType("text")
                    .HasComment("病害区域标注（在图片上位置标绘）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhsyt)
                    .HasColumnName("BHSYT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhztt)
                    .HasColumnName("BHZTT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害状态图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dtlx)
                    .HasColumnName("DTLX")
                    .HasColumnType("varchar(4)")
                    .HasDefaultValueSql("''")
                    .HasComment("底图类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcff)
                    .HasColumnName("JCFF")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测方法")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jczq)
                    .HasColumnName("JCZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("面积")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfsb)
                    .HasColumnName("SFSB")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否设备监测")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tcmc)
                    .HasColumnName("TCMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("对应的图层照片记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xfsj)
                    .HasColumnName("XFSJ")
                    .HasColumnType("datetime")
                    .HasComment("修复时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhdcjcgzqkjlCopy20200602>(entity =>
            {
                entity.ToTable("glyjc_bhdcjcgzqkjl_copy20200602");

                entity.HasComment("病害调查监测工作情况记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bbh)
                    .HasColumnName("BBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("版本号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbha)
                    .HasColumnName("BHBHA")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhczzt)
                    .HasColumnName("BHCZZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害存在状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhgd)
                    .HasColumnName("BHGD")
                    .HasComment("病害高度");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhlx)
                    .HasColumnName("BHLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhqywz)
                    .HasColumnName("BHQYWZ")
                    .HasColumnType("text")
                    .HasComment("病害区域标注（在图片上位置标绘）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhsyt)
                    .HasColumnName("BHSYT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhztt)
                    .HasColumnName("BHZTT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害状态图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dtlx)
                    .HasColumnName("DTLX")
                    .HasColumnType("varchar(4)")
                    .HasDefaultValueSql("''")
                    .HasComment("底图类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcff)
                    .HasColumnName("JCFF")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测方法")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jczq)
                    .HasColumnName("JCZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("面积")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfsb)
                    .HasColumnName("SFSB")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否设备监测(0未监测，1设备监测，2移动端拍照，3=1+2)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tcmc)
                    .HasColumnName("TCMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("对应的图层照片记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xfsj)
                    .HasColumnName("XFSJ")
                    .HasColumnType("datetime")
                    .HasComment("修复时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhdtxx>(entity =>
            {
                entity.ToTable("glyjc_bhdtxx");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbxx)
                    .HasColumnName("ZBXX")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhfbtjcsj>(entity =>
            {
                entity.ToTable("glyjc_bhfbtjcsj");

                entity.HasComment("病害分布图基础数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("date")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("date")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("date")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("date")
                    .HasComment("提交时间");

                entity.Property(e => e.Tzfj)
                    .HasColumnName("TZFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("图纸附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytfj)
                    .HasColumnName("YTFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("原图附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhfwjskzdd>(entity =>
            {
                entity.ToTable("glyjc_bhfwjskzdd");

                entity.HasComment("保护范围建设控制地带");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhfwglgd)
                    .HasColumnName("BHFWGLGD")
                    .HasColumnType("text")
                    .HasComment("保护范围管理规定")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhfwjx)
                    .HasColumnName("BHFWJX")
                    .HasColumnType("varchar(500)")
                    .HasComment("保护范围界线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhfwmj)
                    .HasColumnName("BHFWMJ")
                    .HasComment("保护范围面积");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gbdx)
                    .HasColumnName("GBDX")
                    .HasColumnType("varchar(50)")
                    .HasComment("国保对象")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jskzddglgd)
                    .HasColumnName("JSKZDDGLGD")
                    .HasColumnType("text")
                    .HasComment("建设控制地带管理规定")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jskzddjx)
                    .HasColumnName("JSKZDDJX")
                    .HasColumnType("varchar(500)")
                    .HasComment("建设控制地带界线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jskzddmj)
                    .HasColumnName("JSKZDDMJ")
                    .HasComment("建设控制地带面积");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasComment("onlyid")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcBhgcjcwz>(entity =>
            {
                entity.ToTable("glyjc_bhgcjcwz");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzmc)
                    .HasColumnName("JCWZMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzms)
                    .HasColumnName("JCWZMS")
                    .HasColumnType("text")
                    .HasComment("监测位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzsyt)
                    .HasColumnName("JCWZSYT")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(255)")
                    .HasComment("排序");

                entity.Property(e => e.Zb)
                    .HasColumnName("ZB")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbsjid)
                    .HasColumnName("ZBSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主表数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhgcjcwzdtxx>(entity =>
            {
                entity.ToTable("glyjc_bhgcjcwzdtxx");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护工程项目记录位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbxx)
                    .HasColumnName("ZBXX")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhgcxfdbhxx>(entity =>
            {
                entity.ToTable("glyjc_bhgcxfdbhxx");

                entity.HasComment("保护工程修复的病害信息");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhgcxfdbhid)
                    .HasColumnName("BHGCXFDBHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护工程修复的病害ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhxmid)
                    .HasColumnName("BHXMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护项目ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xfhzp)
                    .HasColumnName("XFHZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("修复后照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xfsj)
                    .HasColumnName("XFSJ")
                    .HasColumnType("datetime")
                    .HasComment("修复时间");
            });

            modelBuilder.Entity<GlyjcBhgcxfxggzjc>(entity =>
            {
                entity.ToTable("glyjc_bhgcxfxggzjc");

                entity.HasComment("保护工程修复效果跟踪监测");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(500)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pglx)
                    .HasColumnName("PGLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xfdbhjlid)
                    .HasColumnName("XFDBHJLID")
                    .HasColumnType("varchar(50)")
                    .HasComment("修复的病害记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zp)
                    .HasColumnName("ZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhglghbzjl>(entity =>
            {
                entity.ToTable("glyjc_bhglghbzjl");

                entity.HasComment("保护管理规划编制记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzdw)
                    .HasColumnName("BZDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzhgbzt)
                    .HasColumnName("BZHGBZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("编制和公布状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Ghqx)
                    .HasColumnName("GHQX")
                    .HasColumnType("varchar(50)")
                    .HasComment("规划期限")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xgwd)
                    .HasColumnName("XGWD")
                    .HasColumnType("varchar(500)")
                    .HasComment("相关文档")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zzbzdw)
                    .HasColumnName("ZZBZDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("组织编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhgljf>(entity =>
            {
                entity.ToTable("glyjc_bhgljf");

                entity.HasComment("保护管理经费");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhgljf)
                    .HasColumnName("BHGLJF")
                    .HasComment("保护管理经费");

                entity.Property(e => e.Bhgljflx)
                    .HasColumnName("BHGLJFLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护管理经费类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jfhqrq)
                    .HasColumnName("JFHQRQ")
                    .HasColumnType("datetime")
                    .HasComment("经费获取日期");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcBhgljg>(entity =>
            {
                entity.ToTable("glyjc_bhgljg");

                entity.HasComment("保护管理机构");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzrs)
                    .HasColumnName("BZRS")
                    .HasColumnType("int(11)")
                    .HasComment("编制人数");

                entity.Property(e => e.Cddzr)
                    .HasColumnName("CDDZR")
                    .HasColumnType("text")
                    .HasComment("承担的责任")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dzyx)
                    .HasColumnName("DZYX")
                    .HasColumnType("varchar(50)")
                    .HasComment("电子邮箱")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fddbr)
                    .HasColumnName("FDDBR")
                    .HasColumnType("varchar(50)")
                    .HasComment("法定代表人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gfwz)
                    .HasColumnName("GFWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("官方网站")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glqysm)
                    .HasColumnName("GLQYSM")
                    .HasColumnType("text")
                    .HasComment("管理区域说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glqyzrfwtlj)
                    .HasColumnName("GLQYZRFWTLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理区域责任范围图路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gzryzs)
                    .HasColumnName("GZRYZS")
                    .HasColumnType("int(11)")
                    .HasComment("工作人员总数");

                entity.Property(e => e.Jgclsj)
                    .HasColumnName("JGCLSJ")
                    .HasColumnType("datetime")
                    .HasComment("机构成立时间");

                entity.Property(e => e.Jgcxsj)
                    .HasColumnName("JGCXSJ")
                    .HasColumnType("datetime")
                    .HasComment("机构撤消时间");

                entity.Property(e => e.Jgjb)
                    .HasColumnName("JGJB")
                    .HasColumnType("varchar(50)")
                    .HasComment("机构级别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jgmc)
                    .HasColumnName("JGMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("机构名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lxdh)
                    .HasColumnName("LXDH")
                    .HasColumnType("varchar(50)")
                    .HasComment("联系电话")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lxrxm)
                    .HasColumnName("LXRXM")
                    .HasColumnType("varchar(50)")
                    .HasComment("联系人姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("text")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjgldw)
                    .HasColumnName("SJGLDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("上级管理单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Szxzq)
                    .HasColumnName("SZXZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("所在行政区")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zyjfly)
                    .HasColumnName("ZYJFLY")
                    .HasColumnType("varchar(50)")
                    .HasComment("主要经费来源")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zzjgdm)
                    .HasColumnName("ZZJGDM")
                    .HasColumnType("varchar(50)")
                    .HasComment("组织机构代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhglxgpxjl>(entity =>
            {
                entity.ToTable("glyjc_bhglxgpxjl");

                entity.HasComment("保护管理相关培训记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Pxjzsj)
                    .HasColumnName("PXJZSJ")
                    .HasColumnType("datetime")
                    .HasComment("培训截止时间");

                entity.Property(e => e.Pxkssj)
                    .HasColumnName("PXKSSJ")
                    .HasColumnType("datetime")
                    .HasComment("培训开始时间");

                entity.Property(e => e.Pxxmmc)
                    .HasColumnName("PXXMMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("培训项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pxzcjf)
                    .HasColumnName("PXZCJF")
                    .HasColumnType("int(11)")
                    .HasComment("培训支出经费");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sxrysl)
                    .HasColumnName("SXRYSL")
                    .HasColumnType("int(11)")
                    .HasComment("受训人员数量");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcBhjcsjJcefwt>(entity =>
            {
                entity.ToTable("glyjc_bhjcsj_jcefwt");

                entity.HasComment("病害监测数据监测范围图");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasComment("来源病害数据的BID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbxx)
                    .HasColumnName("ZBXX")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhjct>(entity =>
            {
                entity.ToTable("glyjc_bhjct");

                entity.HasComment("病害监测图");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tcmc)
                    .HasColumnName("TCMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("图层名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhjcwz>(entity =>
            {
                entity.ToTable("glyjc_bhjcwz");

                entity.HasComment("病害监测位置");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzmc)
                    .HasColumnName("JCWZMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzms)
                    .HasColumnName("JCWZMS")
                    .HasColumnType("text")
                    .HasComment("监测位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzsyt)
                    .HasColumnName("JCWZSYT")
                    .HasColumnType("varchar(200)")
                    .HasComment("监测位置示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(255)")
                    .HasComment("排序");

                entity.Property(e => e.Zb)
                    .HasColumnName("ZB")
                    .HasColumnType("text")
                    .HasComment("监测位置坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbsjid)
                    .HasColumnName("ZBSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主表数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhkzztpg>(entity =>
            {
                entity.ToTable("glyjc_bhkzztpg");

                entity.HasComment("病害控制状态评估");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhdid)
                    .HasColumnName("BHDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhkzztpg)
                    .HasColumnName("BHKZZTPG")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害控制状态评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcBhpf>(entity =>
            {
                entity.ToTable("glyjc_bhpf");

                entity.HasComment("病害评分表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzpf)
                    .HasColumnName("JZPF")
                    .HasColumnType("int(11)")
                    .HasComment("基准评分");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("审核不通过说明");

                entity.Property(e => e.Scpf)
                    .HasColumnName("SCPF")
                    .HasColumnType("int(11)")
                    .HasComment("上次评分");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");
            });

            modelBuilder.Entity<GlyjcBhqht>(entity =>
            {
                entity.ToTable("glyjc_bhqht");

                entity.HasComment("保护区划图");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhqhturl)
                    .HasColumnName("BHQHTURL")
                    .HasColumnType("varchar(200)")
                    .HasComment("保护区划图URL")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整形）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcBhqhtjcsj>(entity =>
            {
                entity.ToTable("glyjc_bhqhtjcsj");

                entity.HasComment("保护区划图基础数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("date")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("date")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("date")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("date")
                    .HasComment("提交时间");

                entity.Property(e => e.Tzfj)
                    .HasColumnName("TZFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("图纸附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytfj)
                    .HasColumnName("YTFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("原图附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhwzdtxx>(entity =>
            {
                entity.ToTable("glyjc_bhwzdtxx");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbxx)
                    .HasColumnName("ZBXX")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhxjzzpjbhxjzjl>(entity =>
            {
                entity.ToTable("glyjc_bhxjzzpjbhxjzjl");

                entity.HasComment("不和谐建筑照片及不和谐建筑记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhxysms)
                    .HasColumnName("BHXYSMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("不和谐因素描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fsbd)
                    .HasColumnName("FSBD")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生变动")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jgnd)
                    .HasColumnName("JGND")
                    .HasColumnType("varchar(50)")
                    .HasComment("竣工年代")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzcqr)
                    .HasColumnName("JZCQR")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑产权人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzcs)
                    .HasColumnName("JZCS")
                    .HasColumnType("int(11)")
                    .HasComment("建筑层数");

                entity.Property(e => e.Jzgd)
                    .HasColumnName("JZGD")
                    .HasComment("建筑高度");

                entity.Property(e => e.Jzjg)
                    .HasColumnName("JZJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑结构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzmc)
                    .HasColumnName("JZMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzwx)
                    .HasColumnName("JZWX")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑外形")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzyt)
                    .HasColumnName("JZYT")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑用途")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qtys)
                    .HasColumnName("QTYS")
                    .HasColumnType("varchar(50)")
                    .HasComment("墙体颜色")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrq)
                    .HasColumnName("TXRQ")
                    .HasColumnType("datetime")
                    .HasComment("填写日期");

                entity.Property(e => e.Wdys)
                    .HasColumnName("WDYS")
                    .HasColumnType("varchar(50)")
                    .HasComment("屋顶颜色")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzsffsbd)
                    .HasColumnName("XZSFFSBD")
                    .HasColumnType("tinyint(4)")
                    .HasComment("现状是否发生变动");

                entity.Property(e => e.Zdmj)
                    .HasColumnName("ZDMJ")
                    .HasColumnType("int(11)")
                    .HasComment("占地面积");

                entity.Property(e => e.Zplj)
                    .HasColumnName("ZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhzsyhjzzgcjl>(entity =>
            {
                entity.ToTable("glyjc_bhzsyhjzzgcjl");

                entity.HasComment("保护展示与环境整治工程记录");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhgcjfdfpt)
                    .HasColumnName("bhgcjfdfpt")
                    .HasColumnType("int(11)")
                    .HasComment("保护工程经费-地方配套");

                entity.Property(e => e.Bhgcjfgjbz)
                    .HasColumnName("bhgcjfgjbz")
                    .HasColumnType("int(11)")
                    .HasComment("保护工程经费-国家补助");

                entity.Property(e => e.Bhgcjzqk)
                    .HasColumnName("bhgcjzqk")
                    .HasColumnType("varchar(4)")
                    .HasComment("保护工程进展情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhzsyhjzzgcda)
                    .HasColumnName("bhzsyhjzzgcda")
                    .HasColumnType("varchar(500)")
                    .HasComment("保护展示与环境整治工程档案")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("djrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("djsj")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Ejgcfl)
                    .HasColumnName("ejgcfl")
                    .HasColumnType("varchar(50)")
                    .HasComment("二级工程分类")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Gcfl)
                    .HasColumnName("gcfl")
                    .HasColumnType("varchar(50)")
                    .HasComment("工程分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gjwwjysrq)
                    .HasColumnName("gjwwjysrq")
                    .HasColumnType("datetime")
                    .HasComment("国家文物局验收日期");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Jftrze)
                    .HasColumnName("jftrze")
                    .HasColumnType("int(11)")
                    .HasComment("经费投入总额");

                entity.Property(e => e.Jgysrq)
                    .HasColumnName("jgysrq")
                    .HasColumnType("datetime")
                    .HasComment("竣工验收日期");

                entity.Property(e => e.Jldw)
                    .HasColumnName("jldw")
                    .HasColumnType("varchar(500)")
                    .HasComment("监理单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jssj)
                    .HasColumnName("jssj")
                    .HasColumnType("datetime")
                    .HasComment("结束时间");

                entity.Property(e => e.Kssj)
                    .HasColumnName("kssj")
                    .HasColumnType("datetime")
                    .HasComment("开始时间");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasComment("ONLYID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_bin");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("sfkdj")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Sgdw)
                    .HasColumnName("sgdw")
                    .HasColumnType("varchar(500)")
                    .HasComment("施工单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("shbtgsm")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("shrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Syt)
                    .HasColumnName("syt")
                    .HasColumnType("varchar(500)")
                    .HasComment("示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("tjsj")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wwbmpz)
                    .HasColumnName("wwbmpz")
                    .HasColumnType("varchar(50)")
                    .HasComment("文物部门批准/许可文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmfl)
                    .HasColumnName("xmfl")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmfw)
                    .HasColumnName("XMFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("项目范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmfwturl)
                    .HasColumnName("xmfwturl")
                    .HasColumnType("varchar(200)")
                    .HasComment("项目范围图url")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("xmmc")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zyczjf)
                    .HasColumnName("zyczjf")
                    .HasColumnType("int(11)")
                    .HasComment("中央财政经费");
            });

            modelBuilder.Entity<GlyjcBhzsyhjzzgcjl181112>(entity =>
            {
                entity.ToTable("glyjc_bhzsyhjzzgcjl_18-1112");

                entity.HasComment("保护展示与环境整治工程记录");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhgcjfdfpt)
                    .HasColumnName("bhgcjfdfpt")
                    .HasColumnType("int(11)")
                    .HasComment("保护工程经费-地方配套");

                entity.Property(e => e.Bhgcjfgjbz)
                    .HasColumnName("bhgcjfgjbz")
                    .HasColumnType("int(11)")
                    .HasComment("保护工程经费-国家补助");

                entity.Property(e => e.Bhgcjzqk)
                    .HasColumnName("bhgcjzqk")
                    .HasColumnType("varchar(4)")
                    .HasComment("保护工程进展情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhzsyhjzzgcda)
                    .HasColumnName("bhzsyhjzzgcda")
                    .HasColumnType("varchar(500)")
                    .HasComment("保护展示与环境整治工程档案")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("djrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("djsj")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Ejgcfl)
                    .HasColumnName("ejgcfl")
                    .HasColumnType("varchar(50)")
                    .HasComment("二级工程分类")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Gcfl)
                    .HasColumnName("gcfl")
                    .HasColumnType("varchar(50)")
                    .HasComment("工程分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gjwwjysrq)
                    .HasColumnName("gjwwjysrq")
                    .HasColumnType("datetime")
                    .HasComment("国家文物局验收日期");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Jftrze)
                    .HasColumnName("jftrze")
                    .HasColumnType("int(11)")
                    .HasComment("经费投入总额");

                entity.Property(e => e.Jgysrq)
                    .HasColumnName("jgysrq")
                    .HasColumnType("datetime")
                    .HasComment("竣工验收日期");

                entity.Property(e => e.Jldw)
                    .HasColumnName("jldw")
                    .HasColumnType("varchar(500)")
                    .HasComment("监理单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jssj)
                    .HasColumnName("jssj")
                    .HasColumnType("datetime")
                    .HasComment("结束时间");

                entity.Property(e => e.Kssj)
                    .HasColumnName("kssj")
                    .HasColumnType("datetime")
                    .HasComment("开始时间");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasComment("ONLYID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_bin");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("sfkdj")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Sgdw)
                    .HasColumnName("sgdw")
                    .HasColumnType("varchar(500)")
                    .HasComment("施工单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("shbtgsm")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("shrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Syt)
                    .HasColumnName("syt")
                    .HasColumnType("varchar(500)")
                    .HasComment("示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("tjsj")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wwbmpz)
                    .HasColumnName("wwbmpz")
                    .HasColumnType("varchar(50)")
                    .HasComment("文物部门批准/许可文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmfl)
                    .HasColumnName("xmfl")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmfw)
                    .HasColumnName("XMFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("项目范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmfwturl)
                    .HasColumnName("xmfwturl")
                    .HasColumnType("varchar(200)")
                    .HasComment("项目范围图url")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("xmmc")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zyczjf)
                    .HasColumnName("zyczjf")
                    .HasColumnType("int(11)")
                    .HasComment("中央财政经费");
            });

            modelBuilder.Entity<GlyjcBhzsyhjzzgcjlCopy>(entity =>
            {
                entity.ToTable("glyjc_bhzsyhjzzgcjl_copy");

                entity.HasComment("保护展示与环境整治工程记录");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhgcjfdfpt)
                    .HasColumnName("bhgcjfdfpt")
                    .HasColumnType("int(11)")
                    .HasComment("保护工程经费-地方配套");

                entity.Property(e => e.Bhgcjfgjbz)
                    .HasColumnName("bhgcjfgjbz")
                    .HasColumnType("int(11)")
                    .HasComment("保护工程经费-国家补助");

                entity.Property(e => e.Bhgcjzqk)
                    .HasColumnName("bhgcjzqk")
                    .HasColumnType("varchar(4)")
                    .HasComment("保护工程进展情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhzsyhjzzgcda)
                    .HasColumnName("bhzsyhjzzgcda")
                    .HasColumnType("varchar(500)")
                    .HasComment("保护展示与环境整治工程档案")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("djrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("djsj")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Ejgcfl)
                    .HasColumnName("ejgcfl")
                    .HasColumnType("varchar(50)")
                    .HasComment("二级工程分类")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Gcfl)
                    .HasColumnName("gcfl")
                    .HasColumnType("varchar(50)")
                    .HasComment("工程分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gjwwjysrq)
                    .HasColumnName("gjwwjysrq")
                    .HasColumnType("datetime")
                    .HasComment("国家文物局验收日期");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Jftrze)
                    .HasColumnName("jftrze")
                    .HasColumnType("int(11)")
                    .HasComment("经费投入总额");

                entity.Property(e => e.Jgysrq)
                    .HasColumnName("jgysrq")
                    .HasColumnType("datetime")
                    .HasComment("竣工验收日期");

                entity.Property(e => e.Jldw)
                    .HasColumnName("jldw")
                    .HasColumnType("varchar(500)")
                    .HasComment("监理单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jssj)
                    .HasColumnName("jssj")
                    .HasColumnType("datetime")
                    .HasComment("结束时间");

                entity.Property(e => e.Kssj)
                    .HasColumnName("kssj")
                    .HasColumnType("datetime")
                    .HasComment("开始时间");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasComment("ONLYID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_bin");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("sfkdj")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Sgdw)
                    .HasColumnName("sgdw")
                    .HasColumnType("varchar(500)")
                    .HasComment("施工单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("shbtgsm")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("shrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Syt)
                    .HasColumnName("syt")
                    .HasColumnType("varchar(500)")
                    .HasComment("示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("tjsj")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wwbmpz)
                    .HasColumnName("wwbmpz")
                    .HasColumnType("varchar(50)")
                    .HasComment("文物部门批准/许可文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmfl)
                    .HasColumnName("xmfl")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmfw)
                    .HasColumnName("XMFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("项目范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmfwturl)
                    .HasColumnName("xmfwturl")
                    .HasColumnType("varchar(200)")
                    .HasComment("项目范围图url")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("xmmc")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zyczjf)
                    .HasColumnName("zyczjf")
                    .HasColumnType("int(11)")
                    .HasComment("中央财政经费");
            });

            modelBuilder.Entity<GlyjcBhzsyhjzzgcjlCopy1>(entity =>
            {
                entity.ToTable("glyjc_bhzsyhjzzgcjl_copy1");

                entity.HasComment("保护展示与环境整治工程记录");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhgcjfdfpt)
                    .HasColumnName("bhgcjfdfpt")
                    .HasColumnType("int(11)")
                    .HasComment("保护工程经费-地方配套");

                entity.Property(e => e.Bhgcjfgjbz)
                    .HasColumnName("bhgcjfgjbz")
                    .HasColumnType("int(11)")
                    .HasComment("保护工程经费-国家补助");

                entity.Property(e => e.Bhgcjzqk)
                    .HasColumnName("bhgcjzqk")
                    .HasColumnType("varchar(4)")
                    .HasComment("保护工程进展情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhzsyhjzzgcda)
                    .HasColumnName("bhzsyhjzzgcda")
                    .HasColumnType("varchar(500)")
                    .HasComment("保护展示与环境整治工程档案")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("djrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("djsj")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Ejgcfl)
                    .HasColumnName("ejgcfl")
                    .HasColumnType("varchar(50)")
                    .HasComment("二级工程分类")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Gcfl)
                    .HasColumnName("gcfl")
                    .HasColumnType("varchar(50)")
                    .HasComment("工程分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gjwwjysrq)
                    .HasColumnName("gjwwjysrq")
                    .HasColumnType("datetime")
                    .HasComment("国家文物局验收日期");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Jftrze)
                    .HasColumnName("jftrze")
                    .HasColumnType("int(11)")
                    .HasComment("经费投入总额");

                entity.Property(e => e.Jgysrq)
                    .HasColumnName("jgysrq")
                    .HasColumnType("datetime")
                    .HasComment("竣工验收日期");

                entity.Property(e => e.Jldw)
                    .HasColumnName("jldw")
                    .HasColumnType("varchar(500)")
                    .HasComment("监理单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jssj)
                    .HasColumnName("jssj")
                    .HasColumnType("datetime")
                    .HasComment("结束时间");

                entity.Property(e => e.Kssj)
                    .HasColumnName("kssj")
                    .HasColumnType("datetime")
                    .HasComment("开始时间");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasComment("ONLYID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_bin");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("sfkdj")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Sgdw)
                    .HasColumnName("sgdw")
                    .HasColumnType("varchar(500)")
                    .HasComment("施工单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("shbtgsm")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("shrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Syt)
                    .HasColumnName("syt")
                    .HasColumnType("varchar(500)")
                    .HasComment("示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("tjsj")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wwbmpz)
                    .HasColumnName("wwbmpz")
                    .HasColumnType("varchar(50)")
                    .HasComment("文物部门批准/许可文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmfl)
                    .HasColumnName("xmfl")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmfw)
                    .HasColumnName("XMFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("项目范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmfwturl)
                    .HasColumnName("xmfwturl")
                    .HasColumnType("varchar(200)")
                    .HasComment("项目范围图url")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("xmmc")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zyczjf)
                    .HasColumnName("zyczjf")
                    .HasColumnType("int(11)")
                    .HasComment("中央财政经费");
            });

            modelBuilder.Entity<GlyjcBhzsyhjzzgcjldtxx>(entity =>
            {
                entity.ToTable("glyjc_bhzsyhjzzgcjldtxx");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护工程项目记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbxx)
                    .HasColumnName("ZBXX")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhzsyhjzzgcjldtxxCopy>(entity =>
            {
                entity.ToTable("glyjc_bhzsyhjzzgcjldtxx_copy");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护工程项目记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbxx)
                    .HasColumnName("ZBXX")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhzsyhjzzgcxczp>(entity =>
            {
                entity.ToTable("glyjc_bhzsyhjzzgcxczp");

                entity.HasComment("保护展示与环境整治工程现场照片");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhzsyhjzzxmid)
                    .HasColumnName("BHZSYHJZZXMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护展示与环境整治项目ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfwg)
                    .HasColumnName("SFWG")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否完工")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjwgsj)
                    .HasColumnName("SJWGSJ")
                    .HasColumnType("datetime")
                    .HasComment("实际完工时间");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xmms)
                    .HasColumnName("XMMS")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBhzsyhjzzgcxczpCopy>(entity =>
            {
                entity.ToTable("glyjc_bhzsyhjzzgcxczp_copy");

                entity.HasComment("保护展示与环境整治工程现场照片");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhzsyhjzzxmid)
                    .HasColumnName("BHZSYHJZZXMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护展示与环境整治项目ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfwg)
                    .HasColumnName("SFWG")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否完工")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjwgsj)
                    .HasColumnName("SJWGSJ")
                    .HasColumnType("datetime")
                    .HasComment("实际完工时间");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xmms)
                    .HasColumnName("XMMS")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBtWdl>(entity =>
            {
                entity.ToTable("glyjc_bt_wdl");

                entity.HasComment("崩塌文档数据规则");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBtjhjgycsyx>(entity =>
            {
                entity.ToTable("glyjc_btjhjgycsyx");

                entity.HasComment("本体及环境干预措施影响");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gcid)
                    .HasColumnName("GCID")
                    .HasColumnType("varchar(50)")
                    .HasComment("工程ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(20)")
                    .HasComment("年份(2017）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yxcd)
                    .HasColumnName("YXCD")
                    .HasColumnType("text")
                    .HasComment("影响程度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBxWdl>(entity =>
            {
                entity.ToTable("glyjc_bx_wdl");

                entity.HasComment("变形(文档类)");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhid)
                    .HasColumnName("bhid")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("bz")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("pg")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("rwid")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBxWdlBhdcjcgzqkjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("glyjc_bx_wdl_bhdcjcgzqkjl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhid)
                    .HasColumnName("bhid")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bz)
                    .HasColumnName("bz")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcrmc)
                    .HasColumnName("DCRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzmc)
                    .HasColumnName("JCWZMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("pg")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("rwid")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcBy>(entity =>
            {
                entity.ToTable("glyjc_by");

                entity.HasComment("暴雨 ");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cxsj)
                    .HasColumnName("CXSJ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("持续时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment(" 对接人ID ")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment(" 对接时间 ");

                entity.Property(e => e.Fssj)
                    .HasColumnName("FSSJ")
                    .HasColumnType("datetime")
                    .HasComment("发生时间");

                entity.Property(e => e.Hscsyxpg)
                    .HasColumnName("HSCSYXPG")
                    .HasColumnType("varchar(50)")
                    .HasComment("洪水产生影响评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment(" 是否可对接 ");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment(" 是否已对接 ");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment(" 审核游程（记录审核的过程） ")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment(" 提交时间 ");

                entity.Property(e => e._24xsnjyl)
                    .HasColumnName("24XSNJYL")
                    .HasColumnType("int(11)")
                    .HasComment("24小时内降雨量");
            });

            modelBuilder.Entity<GlyjcByWdl>(entity =>
            {
                entity.ToTable("glyjc_by_wdl");

                entity.HasComment("白蚁病害(文档类)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gjsbyyxmj)
                    .HasColumnName("GJSBYYXMJ")
                    .HasComment("构件受白蚁影响面积");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scjysj)
                    .HasColumnName("SCJYSJ")
                    .HasColumnType("datetime")
                    .HasComment("上次降雨时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcByszjl>(entity =>
            {
                entity.ToTable("glyjc_byszjl");

                entity.HasComment("暴雨受灾记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cxsj)
                    .HasColumnName("CXSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("持续时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间(发生时间)");

                entity.Property(e => e.Jyl)
                    .HasColumnName("JYL")
                    .HasColumnType("double(11,0)")
                    .HasComment("24小时降雨量");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(4)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcByywhgcjl>(entity =>
            {
                entity.ToTable("glyjc_byywhgcjl");

                entity.HasComment("保养与维护工程记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Byywhdx)
                    .HasColumnName("BYYWHDX")
                    .HasColumnType("varchar(50)")
                    .HasComment("保养与维护对象")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Byywhnr)
                    .HasColumnName("BYYWHNR")
                    .HasColumnType("varchar(500)")
                    .HasComment("保养与维护内容")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Byywhrq)
                    .HasColumnName("BYYWHRQ")
                    .HasColumnType("datetime")
                    .HasComment("保养与维护日期");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(50)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rcbyzp)
                    .HasColumnName("RCBYZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("日常保养照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Ssz)
                    .HasColumnName("SSZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yf)
                    .HasColumnName("YF")
                    .HasColumnType("varchar(50)")
                    .HasComment("月份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcByywhgcjlYcysqd>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("glyjc_byywhgcjl_ycysqd");

                entity.Property(e => e.Byywhdx)
                    .HasColumnName("BYYWHDX")
                    .HasColumnType("varchar(50)")
                    .HasComment("保养与维护对象")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Byywhnr)
                    .HasColumnName("BYYWHNR")
                    .HasColumnType("varchar(500)")
                    .HasComment("保养与维护内容")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Byywhrq)
                    .HasColumnName("BYYWHRQ")
                    .HasColumnType("datetime")
                    .HasComment("保养与维护日期");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(50)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rcbyzp)
                    .HasColumnName("RCBYZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("日常保养照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Ssz)
                    .HasColumnName("SSZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yf)
                    .HasColumnName("YF")
                    .HasColumnType("varchar(50)")
                    .HasComment("月份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcCamera>(entity =>
            {
                entity.ToTable("glyjc_camera");

                entity.HasComment("视频设备表");

                entity.HasIndex(e => e.Sourceid)
                    .HasName("fk_asldkfalsdk");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cameraid)
                    .HasColumnName("cameraid")
                    .HasColumnType("varchar(50)")
                    .HasComment("视频ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cancontrol)
                    .HasColumnName("cancontrol")
                    .HasColumnType("int(2)")
                    .HasComment("是否为可控制姿态的球机");

                entity.Property(e => e.Channel)
                    .HasColumnName("channel")
                    .HasColumnType("varchar(50)")
                    .HasComment("管道")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dll)
                    .HasColumnName("dll")
                    .HasColumnType("varchar(50)")
                    .HasComment("厂商驱动")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ip)
                    .HasColumnName("ip")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lat)
                    .HasColumnName("lat")
                    .HasComment("纬度");

                entity.Property(e => e.Locadesc)
                    .HasColumnName("locadesc")
                    .HasColumnType("varchar(200)")
                    .HasComment("位置说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lon)
                    .HasColumnName("lon")
                    .HasComment("经度");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Param)
                    .HasColumnName("param")
                    .HasColumnType("varchar(50)")
                    .HasComment("参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Password)
                    .HasColumnName("password")
                    .HasColumnType("varchar(50)")
                    .HasComment("密码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Port)
                    .HasColumnName("port")
                    .HasColumnType("varchar(50)")
                    .HasComment("端口")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("remark")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sourceid)
                    .HasColumnName("sourceid")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备清单ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Statedesc)
                    .HasColumnName("statedesc")
                    .HasColumnType("varchar(200)")
                    .HasComment("状态说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Username)
                    .HasColumnName("username")
                    .HasColumnType("varchar(50)")
                    .HasComment("用户名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Videourl)
                    .HasColumnName("videourl")
                    .HasColumnType("varchar(200)")
                    .HasComment("实时视频URL地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Source)
                    .WithMany(p => p.GlyjcCamera)
                    .HasForeignKey(d => d.Sourceid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("glyjc_camera_ibfk_1");
            });

            modelBuilder.Entity<GlyjcCj>(entity =>
            {
                entity.ToTable("glyjc_cj");

                entity.HasComment("沉降");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcrq)
                    .HasColumnName("DCRQ")
                    .HasColumnType("datetime")
                    .HasComment("调查日期");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gcz)
                    .HasColumnName("GCZ")
                    .HasColumnType("int(11)")
                    .HasComment("高程值(mm)");

                entity.Property(e => e.Jcdsbid)
                    .HasColumnName("JCDSBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点设备ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzfaid)
                    .HasColumnName("JCPZFAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置方案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否可对接")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcCjqxrzjl>(entity =>
            {
                entity.ToTable("glyjc_cjqxrzjl");

                entity.HasComment("超级权限日志记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasComment("表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Yssjid)
                    .HasColumnName("YSSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("原始数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zxlb)
                    .HasColumnName("ZXLB")
                    .HasColumnType("varchar(50)")
                    .HasComment("执行类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zxnr)
                    .HasColumnName("ZXNR")
                    .HasColumnType("text")
                    .HasComment("执行内容")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcClfmjiancesj>(entity =>
            {
                entity.ToTable("glyjc_clfmjiancesj");

                entity.HasComment("村落风貌监测数据【建设控制】");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdqkms)
                    .HasColumnName("BDQKMS")
                    .HasColumnType("varchar(50)")
                    .HasComment("变动情况描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdyxcd)
                    .HasColumnName("BDYXCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("变动影响程度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Clfmid)
                    .IsRequired()
                    .HasColumnName("CLFMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("村落风貌ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("XMMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzsffsbd)
                    .HasColumnName("XZSFFSBD")
                    .HasColumnType("varchar(50)")
                    .HasComment("现状是否发生变动")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcClfmjichusj>(entity =>
            {
                entity.ToTable("glyjc_clfmjichusj");

                entity.HasComment("村落风貌基础数据【建设控制】");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fmms)
                    .HasColumnName("FMMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("风貌描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasColumnType("varchar(255)")
                    .HasComment("经度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pzwzms)
                    .HasColumnName("PZWZMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("拍照位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pzwzzb)
                    .HasColumnName("PZWZZB")
                    .HasColumnType("varchar(200)")
                    .HasComment("拍照位置坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasColumnType("varchar(255)")
                    .HasComment("纬度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zp)
                    .HasColumnName("ZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcCllzlsglz>(entity =>
            {
                entity.ToTable("glyjc_cllzlsglz");

                entity.HasComment("CL离子硫酸根离子");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cllznd)
                    .HasColumnName("CLLZND")
                    .HasComment("CL离子浓度");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Lsglznd)
                    .HasColumnName("LSGLZND")
                    .HasComment("硫酸根离子浓度");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sj)
                    .HasColumnName("SJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcCnsx>(entity =>
            {
                entity.ToTable("glyjc_cnsx");

                entity.HasComment("承诺事项");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cnsxly)
                    .HasColumnName("CNSXLY")
                    .HasColumnType("varchar(50)")
                    .HasComment("承诺事项来源")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.CnsxnrYw)
                    .HasColumnName("CNSXNR_YW")
                    .HasColumnType("text")
                    .HasComment("承诺事项内容_英文")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.CnsxnrZw)
                    .HasColumnName("CNSXNR_ZW")
                    .HasColumnType("text")
                    .HasComment("承诺事项内容_中文")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cnwcsj)
                    .HasColumnName("CNWCSJ")
                    .HasColumnType("datetime")
                    .HasComment("承诺完成时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sm)
                    .HasColumnName("SM")
                    .HasColumnType("text")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcCnsxCopy20200727>(entity =>
            {
                entity.ToTable("glyjc_cnsx_copy20200727");

                entity.HasComment("承诺事项");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cnsxly)
                    .HasColumnName("CNSXLY")
                    .HasColumnType("varchar(50)")
                    .HasComment("承诺事项来源")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.CnsxnrYw)
                    .HasColumnName("CNSXNR_YW")
                    .HasColumnType("text")
                    .HasComment("承诺事项内容_英文")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.CnsxnrZw)
                    .HasColumnName("CNSXNR_ZW")
                    .HasColumnType("text")
                    .HasComment("承诺事项内容_中文")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cnwcsj)
                    .HasColumnName("CNWCSJ")
                    .HasColumnType("datetime")
                    .HasComment("承诺完成时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sm)
                    .HasColumnName("SM")
                    .HasColumnType("text")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcCnsxjz>(entity =>
            {
                entity.ToTable("glyjc_cnsxjz");

                entity.HasComment("承诺事项进展");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cnsxid)
                    .HasColumnName("CNSXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("承诺事项ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cnsxly)
                    .HasColumnName("CNSXLY")
                    .HasColumnType("varchar(50)")
                    .HasComment("承诺事项来源")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.CnsxnrYw)
                    .HasColumnName("CNSXNR_YW")
                    .HasColumnType("text")
                    .HasComment("承诺事项内容_英文")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.CnsxnrZw)
                    .HasColumnName("CNSXNR_ZW")
                    .HasColumnType("text")
                    .HasComment("承诺事项内容_中文")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cnwcsj)
                    .HasColumnName("CNWCSJ")
                    .HasColumnType("datetime")
                    .HasComment("承诺完成时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dwcqkdbysm)
                    .HasColumnName("DWCQKDBYSM")
                    .HasColumnType("text")
                    .HasComment("对完成情况的必要说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mqjz)
                    .HasColumnName("MQJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("目前进展")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(10)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xgwd)
                    .HasColumnName("XGWD")
                    .HasColumnType("varchar(200)")
                    .HasComment("相关文档")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcCnsxjzCopy20200727>(entity =>
            {
                entity.ToTable("glyjc_cnsxjz_copy20200727");

                entity.HasComment("承诺事项进展");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cnsxid)
                    .HasColumnName("CNSXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("承诺事项ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cnsxly)
                    .HasColumnName("CNSXLY")
                    .HasColumnType("varchar(50)")
                    .HasComment("承诺事项来源")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.CnsxnrYw)
                    .HasColumnName("CNSXNR_YW")
                    .HasColumnType("text")
                    .HasComment("承诺事项内容_英文")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.CnsxnrZw)
                    .HasColumnName("CNSXNR_ZW")
                    .HasColumnType("text")
                    .HasComment("承诺事项内容_中文")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cnwcsj)
                    .HasColumnName("CNWCSJ")
                    .HasColumnType("datetime")
                    .HasComment("承诺完成时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dwcqkdbysm)
                    .HasColumnName("DWCQKDBYSM")
                    .HasColumnType("text")
                    .HasComment("对完成情况的必要说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mqjz)
                    .HasColumnName("MQJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("目前进展")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(10)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xgwd)
                    .HasColumnName("XGWD")
                    .HasColumnType("varchar(200)")
                    .HasComment("相关文档")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcCqqkjl>(entity =>
            {
                entity.ToTable("glyjc_cqqkjl");

                entity.HasComment("产权情况记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .IsRequired()
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cqbgrq)
                    .HasColumnName("CQBGRQ")
                    .HasColumnType("datetime")
                    .HasComment("产权变更日期");

                entity.Property(e => e.Cqlx)
                    .HasColumnName("CQLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("产权类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fwzl)
                    .HasColumnName("FWZL")
                    .HasColumnType("varchar(50)")
                    .HasComment("房屋座落")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzmj)
                    .HasColumnName("JZMJ")
                    .HasColumnType("decimal(8,2)")
                    .HasComment("建筑面积（㎡）");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Syr)
                    .HasColumnName("SYR")
                    .HasColumnType("varchar(50)")
                    .HasComment("使用人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrq)
                    .HasColumnName("TXRQ")
                    .HasColumnType("datetime")
                    .HasComment("填写日期");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yt)
                    .HasColumnName("YT")
                    .HasColumnType("varchar(50)")
                    .HasComment("用途")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yzdlr)
                    .HasColumnName("YZDLR")
                    .HasColumnType("varchar(50)")
                    .HasComment("业主代理人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zdmj)
                    .HasColumnName("ZDMJ")
                    .HasColumnType("decimal(8,2)")
                    .HasComment("占地面积（㎡）");
            });

            modelBuilder.Entity<GlyjcDbssz>(entity =>
            {
                entity.ToTable("glyjc_dbssz");

                entity.HasComment("地表水水质");

                entity.HasIndex(e => new { e.Jcdid, e.Jcsj })
                    .HasName("JCDID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键标识")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ddl)
                    .HasColumnName("DDL")
                    .HasColumnType("double(6,2)")
                    .HasComment("电导率");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcdid)
                    .HasColumnName("JCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Ph)
                    .HasColumnName("PH")
                    .HasColumnType("double(6,2)")
                    .HasComment("PH值");

                entity.Property(e => e.Rjy)
                    .HasColumnName("RJY")
                    .HasColumnType("double(6,2)")
                    .HasComment("溶解氧");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(255)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Zd)
                    .HasColumnName("ZD")
                    .HasColumnType("double(6,2)")
                    .HasComment("浊度");
            });

            modelBuilder.Entity<GlyjcDhjy>(entity =>
            {
                entity.ToTable("glyjc_dhjy");

                entity.HasComment("大会决议");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gbsj)
                    .HasColumnName("GBSJ")
                    .HasColumnType("datetime")
                    .HasComment("公布时间");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcDqbg>(entity =>
            {
                entity.ToTable("glyjc_dqbg");

                entity.HasComment("定期报告");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcDqzl>(entity =>
            {
                entity.ToTable("glyjc_dqzl");

                entity.HasComment("大气质量");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Co).HasColumnName("CO");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.No2).HasColumnName("NO2");

                entity.Property(e => e.Pm10).HasColumnName("PM10");

                entity.Property(e => e.Pm25).HasColumnName("PM2_5");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.So2)
                    .HasColumnName("SO2")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcDrszjl>(entity =>
            {
                entity.ToTable("glyjc_drszjl");

                entity.HasComment("冻融受灾记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cxsj)
                    .HasColumnName("CXSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("持续时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间(发生时间)");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(4)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcDttp>(entity =>
            {
                entity.ToTable("glyjc_dttp");

                entity.HasComment("底图图片");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcDwWdl>(entity =>
            {
                entity.ToTable("glyjc_dw_wdl");

                entity.HasComment("动物文档类");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dwlx)
                    .HasColumnName("DWLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("动物类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Phfs)
                    .HasColumnName("PHFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("破坏方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Phfw)
                    .HasColumnName("PHFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("破坏范围（cm2）（人工估算填写）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcDwlmbdxx>(entity =>
            {
                entity.ToTable("glyjc_dwlmbdxx");

                entity.HasComment("第五立面变动信息");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdhzp)
                    .HasColumnName("BDHZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("变动后照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdjzdz)
                    .HasColumnName("BDJZDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("变动建筑地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdqkms)
                    .HasColumnName("BDQKMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("变动情况描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdqzp)
                    .HasColumnName("BDQZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("变动前照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dwlmzp)
                    .HasColumnName("DWLMZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("第五立面照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("smallint(6)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("smallint(6)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(500)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(50)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("XMMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpqy)
                    .HasColumnName("ZPQY")
                    .HasColumnType("varchar(50)")
                    .HasComment("照片区域")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcDwlmzp>(entity =>
            {
                entity.ToTable("glyjc_dwlmzp");

                entity.HasComment("第五立面照片");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dwlmzp)
                    .HasColumnName("DWLMZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("第五立面照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pzsj)
                    .HasColumnName("PZSJ")
                    .HasColumnType("datetime")
                    .HasComment("拍照时间");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("smallint(6)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("smallint(6)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(500)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(50)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpqy)
                    .HasColumnName("ZPQY")
                    .HasColumnType("varchar(50)")
                    .HasComment("照片区域")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcDz>(entity =>
            {
                entity.ToTable("glyjc_dz");

                entity.HasComment("地震");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dzdj)
                    .HasColumnName("DZDJ")
                    .HasComment("地震等级");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sj)
                    .HasColumnName("SJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcFjb>(entity =>
            {
                entity.ToTable("glyjc_fjb");

                entity.HasIndex(e => new { e.Bid, e.Sjid, e.Fjdyzdm })
                    .HasName("Idx_BID_SJID+FJDYZDM");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务表id对应元数据表")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ccmc)
                    .HasColumnName("CCMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件存储在目标文件夹下的存储名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fjdyzdm)
                    .HasColumnName("FJDYZDM")
                    .HasColumnType("varchar(50)")
                    .HasComment("附件对应字段名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mlmc)
                    .HasColumnName("MLMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("文件夹目录名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("附件对应数据的主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wjmc)
                    .HasColumnName("WJMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件的真实名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcFjb1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_fjb1");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务表id对应元数据表")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ccmc)
                    .HasColumnName("CCMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件存储在目标文件夹下的存储名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fjdyzdm)
                    .HasColumnName("FJDYZDM")
                    .HasColumnType("varchar(50)")
                    .HasComment("附件对应字段名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("附件对应数据的主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wjmc)
                    .HasColumnName("WJMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件的真实名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcFjbCopy>(entity =>
            {
                entity.ToTable("glyjc_fjb_copy");

                entity.HasIndex(e => new { e.Bid, e.Sjid, e.Fjdyzdm })
                    .HasName("Idx_BID_SJID+FJDYZDM");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务表id对应元数据表")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ccmc)
                    .HasColumnName("CCMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件存储在目标文件夹下的存储名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fjdyzdm)
                    .HasColumnName("FJDYZDM")
                    .HasColumnType("varchar(50)")
                    .HasComment("附件对应字段名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mlmc)
                    .HasColumnName("MLMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("文件夹目录名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("附件对应数据的主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wjmc)
                    .HasColumnName("WJMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件的真实名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcFjbCopy0428>(entity =>
            {
                entity.ToTable("glyjc_fjb_copy0428");

                entity.HasIndex(e => new { e.Bid, e.Sjid, e.Fjdyzdm })
                    .HasName("Idx_BID_SJID+FJDYZDM");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务表id对应元数据表")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ccmc)
                    .HasColumnName("CCMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件存储在目标文件夹下的存储名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fjdyzdm)
                    .HasColumnName("FJDYZDM")
                    .HasColumnType("varchar(50)")
                    .HasComment("附件对应字段名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mlmc)
                    .HasColumnName("MLMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("文件夹目录名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("附件对应数据的主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wjmc)
                    .HasColumnName("WJMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件的真实名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcFjbCopy1>(entity =>
            {
                entity.ToTable("glyjc_fjb_copy1");

                entity.HasIndex(e => new { e.Bid, e.Sjid, e.Fjdyzdm })
                    .HasName("Idx_BID_SJID+FJDYZDM");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务表id对应元数据表")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ccmc)
                    .HasColumnName("CCMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件存储在目标文件夹下的存储名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fjdyzdm)
                    .HasColumnName("FJDYZDM")
                    .HasColumnType("varchar(50)")
                    .HasComment("附件对应字段名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mlmc)
                    .HasColumnName("MLMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("文件夹目录名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("附件对应数据的主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wjmc)
                    .HasColumnName("WJMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件的真实名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcFjbCopy20180509>(entity =>
            {
                entity.ToTable("glyjc_fjb_copy20180509");

                entity.HasIndex(e => new { e.Bid, e.Sjid, e.Fjdyzdm })
                    .HasName("Idx_BID_SJID+FJDYZDM");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务表id对应元数据表")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ccmc)
                    .HasColumnName("CCMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件存储在目标文件夹下的存储名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fjdyzdm)
                    .HasColumnName("FJDYZDM")
                    .HasColumnType("varchar(50)")
                    .HasComment("附件对应字段名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mlmc)
                    .HasColumnName("MLMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("文件夹目录名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("附件对应数据的主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wjmc)
                    .HasColumnName("WJMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件的真实名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcFjbCopy2018年5月9日154452>(entity =>
            {
                entity.ToTable("glyjc_fjb_copy2018年5月9日154452");

                entity.HasIndex(e => new { e.Bid, e.Sjid, e.Fjdyzdm })
                    .HasName("Idx_BID_SJID+FJDYZDM");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务表id对应元数据表")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ccmc)
                    .HasColumnName("CCMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件存储在目标文件夹下的存储名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fjdyzdm)
                    .HasColumnName("FJDYZDM")
                    .HasColumnType("varchar(50)")
                    .HasComment("附件对应字段名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mlmc)
                    .HasColumnName("MLMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("文件夹目录名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("附件对应数据的主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wjmc)
                    .HasColumnName("WJMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件的真实名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcFsWdl>(entity =>
            {
                entity.ToTable("glyjc_fs_wdl");

                entity.HasComment("腐蚀病害(文档类)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gjfsmj)
                    .HasColumnName("GJFSMJ")
                    .HasComment("构件腐蚀面积");

                entity.Property(e => e.Gjscmj)
                    .HasColumnName("GJSCMJ")
                    .HasComment("构件受潮面积");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scjysj)
                    .HasColumnName("SCJYSJ")
                    .HasColumnType("datetime")
                    .HasComment("上次降雨时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcGhxmlb>(entity =>
            {
                entity.ToTable("glyjc_ghxmlb");

                entity.HasComment("规划项目类别");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fid)
                    .HasColumnName("FID")
                    .HasColumnType("varchar(50)")
                    .HasComment("根级ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lbmc)
                    .HasColumnName("LBMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("类别名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcGljg>(entity =>
            {
                entity.ToTable("glyjc_gljg");

                entity.HasComment("管理制度【机构与能力建设】");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Glzdfj)
                    .HasColumnName("GLZDFJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("管理制度附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzdwscd)
                    .HasColumnName("GLZDWSCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("管理制度完善程度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcGls>(entity =>
            {
                entity.ToTable("glyjc_gls");

                entity.HasComment("公里数表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gls)
                    .HasColumnName("GLS")
                    .HasColumnType("varchar(50)")
                    .HasComment("公里数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间（最近一次新增或修改时间）");

                entity.Property(e => e.Rq)
                    .HasColumnName("rq")
                    .HasColumnType("date")
                    .HasComment("日期");

                entity.Property(e => e.Ryid)
                    .HasColumnName("RYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("人员id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfzx)
                    .HasColumnName("SFZX")
                    .HasColumnType("varchar(3)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否在线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcgj)
                    .HasColumnName("XCGJ")
                    .HasColumnType("mediumtext")
                    .HasComment("巡查轨迹")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcGlsCopy20200610>(entity =>
            {
                entity.ToTable("glyjc_gls_copy20200610");

                entity.HasComment("公里数表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gls)
                    .HasColumnName("GLS")
                    .HasColumnType("varchar(50)")
                    .HasComment("公里数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间（最近一次新增或修改时间）");

                entity.Property(e => e.Rq)
                    .HasColumnName("rq")
                    .HasColumnType("date")
                    .HasComment("日期");

                entity.Property(e => e.Ryid)
                    .HasColumnName("RYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("人员id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfzx)
                    .HasColumnName("SFZX")
                    .HasColumnType("varchar(3)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否在线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcgj)
                    .HasColumnName("XCGJ")
                    .HasColumnType("mediumtext")
                    .HasComment("巡查轨迹")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcGlzdhyjyajl>(entity =>
            {
                entity.ToTable("glyjc_glzdhyjyajl");

                entity.HasComment("管理制度和应急预案记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gbsj)
                    .HasColumnName("GBSJ")
                    .HasColumnType("datetime")
                    .HasComment("公布时间");

                entity.Property(e => e.Gbwh)
                    .HasColumnName("GBWH")
                    .HasColumnType("varchar(50)")
                    .HasComment("公布文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lb)
                    .HasColumnName("LB")
                    .HasColumnType("varchar(50)")
                    .HasComment("类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sssj)
                    .HasColumnName("SSSJ")
                    .HasColumnType("datetime")
                    .HasComment("实施时间");

                entity.Property(e => e.Sxhfzzt)
                    .HasColumnName("SXHFZZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("生效或废止状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wjlj)
                    .HasColumnName("WJLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("文件路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wjnr)
                    .HasColumnName("WJNR")
                    .HasColumnType("varchar(500)")
                    .HasComment("文件内容")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcHjyxpg>(entity =>
            {
                entity.ToTable("glyjc_hjyxpg");

                entity.HasComment("环境影响评估");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcdwid)
                    .HasColumnName("JCDWID")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测点位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pglx)
                    .HasColumnName("PGLX")
                    .HasColumnType("varchar(255)")
                    .HasComment("评估类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgsm)
                    .HasColumnName("PGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("评估说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yf)
                    .HasColumnName("YF")
                    .HasColumnType("varchar(255)")
                    .HasComment("月份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcHjyxpgCopy>(entity =>
            {
                entity.ToTable("glyjc_hjyxpg_copy");

                entity.HasComment("环境影响评估");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcdwid)
                    .HasColumnName("JCDWID")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测点位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pglx)
                    .HasColumnName("PGLX")
                    .HasColumnType("varchar(255)")
                    .HasComment("评估类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgsm)
                    .HasColumnName("PGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("评估说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yf)
                    .HasColumnName("YF")
                    .HasColumnType("varchar(255)")
                    .HasComment("月份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcHsszjl>(entity =>
            {
                entity.ToTable("glyjc_hsszjl");

                entity.HasComment("洪水受灾记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cxsj)
                    .HasColumnName("CXSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("持续时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间(发生时间)");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(4)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zgsw)
                    .HasColumnName("ZGSW")
                    .HasColumnType("double(11,0)")
                    .HasComment("最高水位");
            });

            modelBuilder.Entity<GlyjcJbhj>(entity =>
            {
                entity.ToTable("glyjc_jbhj");

                entity.HasComment("局部环境表，原来的微环境表(glyjc_whj)");

                entity.HasIndex(e => e.Jcdid)
                    .HasName("JCDID");

                entity.HasIndex(e => e.Jcsj)
                    .HasName("JCSJ");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Co2)
                    .HasColumnName("CO2")
                    .HasColumnType("int(6)")
                    .HasComment("二氧化碳");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dqsd)
                    .HasColumnName("DQSD")
                    .HasColumnType("double(6,2)")
                    .HasComment("大气湿度");

                entity.Property(e => e.Dqwd)
                    .HasColumnName("DQWD")
                    .HasColumnType("double(6,2)")
                    .HasComment("大气温度");

                entity.Property(e => e.Fs)
                    .HasColumnName("FS")
                    .HasColumnType("double(6,2)")
                    .HasComment("风速");

                entity.Property(e => e.Fx)
                    .HasColumnName("FX")
                    .HasColumnType("double(6,2)")
                    .HasComment("风向");

                entity.Property(e => e.Fylz)
                    .HasColumnName("FYLZ")
                    .HasColumnType("double(6,2)")
                    .HasComment("负氧离子");

                entity.Property(e => e.Gzd)
                    .HasColumnName("GZD")
                    .HasColumnType("int(8)")
                    .HasComment("光照度");

                entity.Property(e => e.Jcdid)
                    .HasColumnName("JCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Jyzfs)
                    .HasColumnName("JYZFS")
                    .HasColumnType("double(6,2)")
                    .HasComment("简易总辐射");

                entity.Property(e => e.Ph)
                    .HasColumnName("PH")
                    .HasColumnType("double(6,2)")
                    .HasComment("pH值");

                entity.Property(e => e.Pm25)
                    .HasColumnName("PM25")
                    .HasColumnType("double(6,2)")
                    .HasComment("PM2.5");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(1) unsigned zerofill")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shtbgsm)
                    .HasColumnName("SHTBGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(255)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(5)");

                entity.Property(e => e.Szqy)
                    .HasColumnName("SZQY")
                    .HasColumnType("double(6,2)")
                    .HasComment("数字气压");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Trsd)
                    .HasColumnName("TRSD")
                    .HasColumnType("double(6,2)")
                    .HasComment("土壤湿度");

                entity.Property(e => e.Trwd)
                    .HasColumnName("TRWD")
                    .HasColumnType("double(6,2)")
                    .HasComment("土壤温度");

                entity.Property(e => e.Yf)
                    .HasColumnName("YF")
                    .HasColumnType("double(8,2)")
                    .HasComment("盐分");

                entity.Property(e => e.Yl)
                    .HasColumnName("YL")
                    .HasColumnType("double(6,2)")
                    .HasComment("雨量mm/min");

                entity.Property(e => e.Yllj)
                    .HasColumnName("YLLJ")
                    .HasColumnType("double(6,2)")
                    .HasComment("雨量累计mm");

                entity.Property(e => e.Zs)
                    .HasColumnName("ZS")
                    .HasColumnType("double(6,2)")
                    .HasComment("噪声");
            });

            modelBuilder.Entity<GlyjcJbhj20200407>(entity =>
            {
                entity.ToTable("glyjc_jbhj_20200407");

                entity.HasComment("局部环境表，原来的微环境表(glyjc_whj)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Co2)
                    .HasColumnName("CO2")
                    .HasColumnType("int(6)")
                    .HasComment("二氧化碳");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dqsd)
                    .HasColumnName("DQSD")
                    .HasColumnType("double(6,2)")
                    .HasComment("大气湿度");

                entity.Property(e => e.Dqwd)
                    .HasColumnName("DQWD")
                    .HasColumnType("double(6,2)")
                    .HasComment("大气温度");

                entity.Property(e => e.Fs)
                    .HasColumnName("FS")
                    .HasColumnType("double(6,2)")
                    .HasComment("风速");

                entity.Property(e => e.Fx)
                    .HasColumnName("FX")
                    .HasColumnType("double(6,2)")
                    .HasComment("风向");

                entity.Property(e => e.Fylz)
                    .HasColumnName("FYLZ")
                    .HasColumnType("double(6,2)")
                    .HasComment("负氧离子");

                entity.Property(e => e.Gzd)
                    .HasColumnName("GZD")
                    .HasColumnType("int(8)")
                    .HasComment("光照度");

                entity.Property(e => e.Jcdid)
                    .HasColumnName("JCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Jyzfs)
                    .HasColumnName("JYZFS")
                    .HasColumnType("double(6,2)")
                    .HasComment("简易总辐射");

                entity.Property(e => e.Ph)
                    .HasColumnName("PH")
                    .HasColumnType("double(6,2)")
                    .HasComment("pH值");

                entity.Property(e => e.Pm25)
                    .HasColumnName("PM25")
                    .HasColumnType("double(6,2)")
                    .HasComment("PM2.5");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(1) unsigned zerofill")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shtbgsm)
                    .HasColumnName("SHTBGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(255)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(5)");

                entity.Property(e => e.Szqy)
                    .HasColumnName("SZQY")
                    .HasColumnType("double(6,2)")
                    .HasComment("数字气压");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Trsd)
                    .HasColumnName("TRSD")
                    .HasColumnType("double(6,2)")
                    .HasComment("土壤湿度");

                entity.Property(e => e.Trwd)
                    .HasColumnName("TRWD")
                    .HasColumnType("double(6,2)")
                    .HasComment("土壤温度");

                entity.Property(e => e.Yf)
                    .HasColumnName("YF")
                    .HasColumnType("double(8,2)")
                    .HasComment("盐分");

                entity.Property(e => e.Yl)
                    .HasColumnName("YL")
                    .HasColumnType("double(6,2)")
                    .HasComment("雨量mm/min");

                entity.Property(e => e.Yllj)
                    .HasColumnName("YLLJ")
                    .HasColumnType("double(6,2)")
                    .HasComment("雨量累计mm");

                entity.Property(e => e.Zs)
                    .HasColumnName("ZS")
                    .HasColumnType("double(6,2)")
                    .HasComment("噪声");
            });

            modelBuilder.Entity<GlyjcJbhjCopy20181227qhx>(entity =>
            {
                entity.ToTable("glyjc_jbhj_copy20181227qhx");

                entity.HasComment("局部环境表，原来的微环境表(glyjc_whj)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Co2)
                    .HasColumnName("CO2")
                    .HasColumnType("int(6)")
                    .HasComment("二氧化碳");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dqsd)
                    .HasColumnName("DQSD")
                    .HasColumnType("double(6,2)")
                    .HasComment("大气湿度");

                entity.Property(e => e.Dqwd)
                    .HasColumnName("DQWD")
                    .HasColumnType("double(6,2)")
                    .HasComment("大气温度");

                entity.Property(e => e.Fs)
                    .HasColumnName("FS")
                    .HasColumnType("double(6,2)")
                    .HasComment("风速");

                entity.Property(e => e.Fx)
                    .HasColumnName("FX")
                    .HasColumnType("double(6,2)")
                    .HasComment("风向");

                entity.Property(e => e.Fylz)
                    .HasColumnName("FYLZ")
                    .HasColumnType("double(6,2)")
                    .HasComment("负氧离子");

                entity.Property(e => e.Gzd)
                    .HasColumnName("GZD")
                    .HasColumnType("int(8)")
                    .HasComment("光照度");

                entity.Property(e => e.Jcdid)
                    .HasColumnName("JCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Jyzfs)
                    .HasColumnName("JYZFS")
                    .HasColumnType("double(6,2)")
                    .HasComment("简易总辐射");

                entity.Property(e => e.Ph)
                    .HasColumnName("PH")
                    .HasColumnType("double(6,2)")
                    .HasComment("pH值");

                entity.Property(e => e.Pm25)
                    .HasColumnName("PM25")
                    .HasColumnType("double(6,2)")
                    .HasComment("PM2.5");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(1) unsigned zerofill")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shtbgsm)
                    .HasColumnName("SHTBGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(255)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(5)");

                entity.Property(e => e.Szqy)
                    .HasColumnName("SZQY")
                    .HasColumnType("double(6,2)")
                    .HasComment("数字气压");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Trsd)
                    .HasColumnName("TRSD")
                    .HasColumnType("double(6,2)")
                    .HasComment("土壤湿度");

                entity.Property(e => e.Trwd)
                    .HasColumnName("TRWD")
                    .HasColumnType("double(6,2)")
                    .HasComment("土壤温度");

                entity.Property(e => e.Yf)
                    .HasColumnName("YF")
                    .HasColumnType("double(8,2)")
                    .HasComment("盐分");

                entity.Property(e => e.Yl)
                    .HasColumnName("YL")
                    .HasColumnType("double(6,2)")
                    .HasComment("雨量mm/min");

                entity.Property(e => e.Yllj)
                    .HasColumnName("YLLJ")
                    .HasColumnType("double(6,2)")
                    .HasComment("雨量累计mm");

                entity.Property(e => e.Zs)
                    .HasColumnName("ZS")
                    .HasColumnType("double(6,2)")
                    .HasComment("噪声");
            });

            modelBuilder.Entity<GlyjcJbhjWp>(entity =>
            {
                entity.ToTable("glyjc_jbhj_wp");

                entity.HasComment("局部环境表，原来的微环境表(glyjc_whj)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Co2)
                    .HasColumnName("CO2")
                    .HasColumnType("int(6)")
                    .HasComment("二氧化碳");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dqsd)
                    .HasColumnName("DQSD")
                    .HasColumnType("double(6,2)")
                    .HasComment("大气湿度");

                entity.Property(e => e.Dqwd)
                    .HasColumnName("DQWD")
                    .HasColumnType("double(6,2)")
                    .HasComment("大气温度");

                entity.Property(e => e.Fs)
                    .HasColumnName("FS")
                    .HasColumnType("double(6,2)")
                    .HasComment("风速");

                entity.Property(e => e.Fx)
                    .HasColumnName("FX")
                    .HasColumnType("double(6,2)")
                    .HasComment("风向");

                entity.Property(e => e.Fylz)
                    .HasColumnName("FYLZ")
                    .HasColumnType("double(6,2)")
                    .HasComment("负氧离子");

                entity.Property(e => e.Gzd)
                    .HasColumnName("GZD")
                    .HasColumnType("int(8)")
                    .HasComment("光照度");

                entity.Property(e => e.Jcdid)
                    .HasColumnName("JCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Jyzfs)
                    .HasColumnName("JYZFS")
                    .HasColumnType("double(6,2)")
                    .HasComment("简易总辐射");

                entity.Property(e => e.Ph)
                    .HasColumnName("PH")
                    .HasColumnType("double(6,2)")
                    .HasComment("pH值");

                entity.Property(e => e.Pm25)
                    .HasColumnName("PM25")
                    .HasColumnType("double(6,2)")
                    .HasComment("PM2.5");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(1) unsigned zerofill")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shtbgsm)
                    .HasColumnName("SHTBGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(255)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(5)");

                entity.Property(e => e.Szqy)
                    .HasColumnName("SZQY")
                    .HasColumnType("double(6,2)")
                    .HasComment("数字气压");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Trsd)
                    .HasColumnName("TRSD")
                    .HasColumnType("double(6,2)")
                    .HasComment("土壤湿度");

                entity.Property(e => e.Trwd)
                    .HasColumnName("TRWD")
                    .HasColumnType("double(6,2)")
                    .HasComment("土壤温度");

                entity.Property(e => e.Yf)
                    .HasColumnName("YF")
                    .HasColumnType("double(8,2)")
                    .HasComment("盐分");

                entity.Property(e => e.Yl)
                    .HasColumnName("YL")
                    .HasColumnType("double(6,2)")
                    .HasComment("雨量mm/min");

                entity.Property(e => e.Yllj)
                    .HasColumnName("YLLJ")
                    .HasColumnType("double(6,2)")
                    .HasComment("雨量累计mm");

                entity.Property(e => e.Zs)
                    .HasColumnName("ZS")
                    .HasColumnType("double(6,2)")
                    .HasComment("噪声");
            });

            modelBuilder.Entity<GlyjcJcbg>(entity =>
            {
                entity.ToTable("glyjc_jcbg");

                entity.HasComment("监测报告");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bgfj)
                    .HasColumnName("BGFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("报告附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bgmc)
                    .HasColumnName("BGMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("报告名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bszt)
                    .HasColumnName("BSZT")
                    .HasComment("报送状态");

                entity.Property(e => e.Bznf)
                    .HasColumnName("BZNF")
                    .HasColumnType("varchar(50)")
                    .HasComment("编制年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gysm)
                    .HasColumnName("GYSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("概要说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcJcbgyd>(entity =>
            {
                entity.ToTable("glyjc_jcbgyd");

                entity.HasComment("监测报告");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bgfj)
                    .HasColumnName("BGFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("报告附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bgmc)
                    .HasColumnName("BGMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("报告名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bszt)
                    .HasColumnName("BSZT")
                    .HasComment("报送状态");

                entity.Property(e => e.Bznf)
                    .HasColumnName("BZNF")
                    .HasColumnType("varchar(50)")
                    .HasComment("编制年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzyf)
                    .HasColumnName("BZYF")
                    .HasColumnType("varchar(50)")
                    .HasComment("编制月份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gysm)
                    .HasColumnName("GYSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("概要说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcJcfa>(entity =>
            {
                entity.ToTable("glyjc_jcfa");

                entity.HasComment("监测方案");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzdw)
                    .HasColumnName("BZDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Famc)
                    .HasColumnName("FAMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pzwh)
                    .HasColumnName("PZWH")
                    .HasColumnType("varchar(50)")
                    .HasComment("批准文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcjg>(entity =>
            {
                entity.ToTable("glyjc_jcjg");

                entity.HasComment("监测机构");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cddzr)
                    .HasColumnName("CDDZR")
                    .HasColumnType("varchar(500)")
                    .HasComment("承担的责任")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dzyx)
                    .HasColumnName("DZYX")
                    .HasColumnType("varchar(50)")
                    .HasComment("电子邮箱")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fzr)
                    .HasColumnName("FZR")
                    .HasColumnType("varchar(50)")
                    .HasComment("负责人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fzrlxdh)
                    .HasColumnName("FZRLXDH")
                    .HasColumnType("varchar(50)")
                    .HasComment("负责人联系电话")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcgzwz)
                    .HasColumnName("JCGZWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测工作网站")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjgmc)
                    .HasColumnName("JCJGMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测机构名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jgclsj)
                    .HasColumnName("JGCLSJ")
                    .HasColumnType("datetime")
                    .HasComment("机构成立时间");

                entity.Property(e => e.Jgcxsj)
                    .HasColumnName("JGCXSJ")
                    .HasColumnType("datetime")
                    .HasComment("机构撤消时间");

                entity.Property(e => e.Lxdh)
                    .HasColumnName("LXDH")
                    .HasColumnType("varchar(50)")
                    .HasComment("联系电话")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lxrxm)
                    .HasColumnName("LXRXM")
                    .HasColumnType("varchar(50)")
                    .HasComment("联系人姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ryzs)
                    .HasColumnName("RYZS")
                    .HasColumnType("int(11)")
                    .HasComment("人员总数");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjgldw)
                    .HasColumnName("SJGLDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("上级管理单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zzjgdm)
                    .HasColumnName("ZZJGDM")
                    .HasColumnType("varchar(50)")
                    .HasComment("组织机构代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcpt>(entity =>
            {
                entity.ToTable("glyjc_jcpt");

                entity.HasComment("监测平台");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdw)
                    .HasColumnName("CJDW")
                    .HasColumnType("varchar(500)")
                    .HasComment("承建单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jssj)
                    .HasColumnName("JSSJ")
                    .HasColumnType("datetime")
                    .HasComment("建设时间");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Xtxz)
                    .HasColumnName("XTXZ")
                    .HasColumnType("varchar(100)")
                    .HasComment("系统性质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcpz>(entity =>
            {
                entity.ToTable("glyjc_jcpz");

                entity.HasComment("监测配置");

                entity.HasIndex(e => new { e.Sjcjfzrid, e.Lrfs })
                    .HasName("index_sjcjfzrid_lrfs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxbid)
                    .HasColumnName("JCDXBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzbid)
                    .HasColumnName("JCWZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzdtxxbid)
                    .HasColumnName("JCWZDTXXBID")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置地图信息表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rcxcqyid)
                    .HasColumnName("RCXCQYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("日常巡查区域ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbids)
                    .HasColumnName("SBIDS")
                    .HasColumnType("varchar(500)")
                    .HasComment("设备ID集（以“，”隔开）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasComment("监测周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcpz0925改周期>(entity =>
            {
                entity.ToTable("glyjc_jcpz_0925改周期");

                entity.HasComment("监测配置");

                entity.HasIndex(e => new { e.Sjcjfzrid, e.Lrfs })
                    .HasName("index_sjcjfzrid_lrfs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxbid)
                    .HasColumnName("JCDXBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzbid)
                    .HasColumnName("JCWZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzdtxxbid)
                    .HasColumnName("JCWZDTXXBID")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置地图信息表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbids)
                    .HasColumnName("SBIDS")
                    .HasColumnType("varchar(500)")
                    .HasComment("设备ID集（以“，”隔开）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasComment("监测周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcpzCopy>(entity =>
            {
                entity.ToTable("glyjc_jcpz_copy");

                entity.HasComment("监测配置");

                entity.HasIndex(e => new { e.Sjcjfzrid, e.Lrfs })
                    .HasName("index_sjcjfzrid_lrfs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxbid)
                    .HasColumnName("JCDXBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzbid)
                    .HasColumnName("JCWZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzdtxxbid)
                    .HasColumnName("JCWZDTXXBID")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置地图信息表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbids)
                    .HasColumnName("SBIDS")
                    .HasColumnType("varchar(500)")
                    .HasComment("设备ID集（以“，”隔开）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasComment("监测周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcpzCopy1>(entity =>
            {
                entity.ToTable("glyjc_jcpz_copy1");

                entity.HasComment("监测配置");

                entity.HasIndex(e => new { e.Sjcjfzrid, e.Lrfs })
                    .HasName("index_sjcjfzrid_lrfs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxbid)
                    .HasColumnName("JCDXBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzbid)
                    .HasColumnName("JCWZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzdtxxbid)
                    .HasColumnName("JCWZDTXXBID")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置地图信息表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbids)
                    .HasColumnName("SBIDS")
                    .HasColumnType("varchar(500)")
                    .HasComment("设备ID集（以“，”隔开）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasComment("监测周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcpzCopy2>(entity =>
            {
                entity.ToTable("glyjc_jcpz_copy2");

                entity.HasComment("监测配置");

                entity.HasIndex(e => new { e.Sjcjfzrid, e.Lrfs })
                    .HasName("index_sjcjfzrid_lrfs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxbid)
                    .HasColumnName("JCDXBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzbid)
                    .HasColumnName("JCWZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzdtxxbid)
                    .HasColumnName("JCWZDTXXBID")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置地图信息表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbids)
                    .HasColumnName("SBIDS")
                    .HasColumnType("varchar(500)")
                    .HasComment("设备ID集（以“，”隔开）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasComment("监测周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcpzCopy20180827>(entity =>
            {
                entity.ToTable("glyjc_jcpz_copy20180827");

                entity.HasComment("监测配置");

                entity.HasIndex(e => new { e.Sjcjfzrid, e.Lrfs })
                    .HasName("index_sjcjfzrid_lrfs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxbid)
                    .HasColumnName("JCDXBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzbid)
                    .HasColumnName("JCWZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzdtxxbid)
                    .HasColumnName("JCWZDTXXBID")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置地图信息表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbids)
                    .HasColumnName("SBIDS")
                    .HasColumnType("varchar(500)")
                    .HasComment("设备ID集（以“，”隔开）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasComment("监测周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcpzCopy20181129Qhx>(entity =>
            {
                entity.ToTable("glyjc_jcpz_copy20181129_qhx");

                entity.HasComment("监测配置");

                entity.HasIndex(e => new { e.Sjcjfzrid, e.Lrfs })
                    .HasName("index_sjcjfzrid_lrfs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxbid)
                    .HasColumnName("JCDXBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzbid)
                    .HasColumnName("JCWZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzdtxxbid)
                    .HasColumnName("JCWZDTXXBID")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置地图信息表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbids)
                    .HasColumnName("SBIDS")
                    .HasColumnType("varchar(500)")
                    .HasComment("设备ID集（以“，”隔开）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasComment("监测周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcpzCopy20181220qhx>(entity =>
            {
                entity.ToTable("glyjc_jcpz_copy20181220qhx");

                entity.HasComment("监测配置");

                entity.HasIndex(e => new { e.Sjcjfzrid, e.Lrfs })
                    .HasName("index_sjcjfzrid_lrfs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxbid)
                    .HasColumnName("JCDXBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzbid)
                    .HasColumnName("JCWZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzdtxxbid)
                    .HasColumnName("JCWZDTXXBID")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置地图信息表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbids)
                    .HasColumnName("SBIDS")
                    .HasColumnType("varchar(500)")
                    .HasComment("设备ID集（以“，”隔开）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasComment("监测周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcpzCopy20200511>(entity =>
            {
                entity.ToTable("glyjc_jcpz_copy20200511");

                entity.HasComment("监测配置");

                entity.HasIndex(e => new { e.Sjcjfzrid, e.Lrfs })
                    .HasName("index_sjcjfzrid_lrfs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxbid)
                    .HasColumnName("JCDXBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzbid)
                    .HasColumnName("JCWZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzdtxxbid)
                    .HasColumnName("JCWZDTXXBID")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置地图信息表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbids)
                    .HasColumnName("SBIDS")
                    .HasColumnType("varchar(500)")
                    .HasComment("设备ID集（以“，”隔开）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasComment("监测周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcpzCopy20200513>(entity =>
            {
                entity.ToTable("glyjc_jcpz_copy20200513");

                entity.HasComment("监测配置");

                entity.HasIndex(e => new { e.Sjcjfzrid, e.Lrfs })
                    .HasName("index_sjcjfzrid_lrfs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxbid)
                    .HasColumnName("JCDXBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzbid)
                    .HasColumnName("JCWZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzdtxxbid)
                    .HasColumnName("JCWZDTXXBID")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置地图信息表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rcxcqyid)
                    .HasColumnName("RCXCQYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("日常巡查区域ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbids)
                    .HasColumnName("SBIDS")
                    .HasColumnType("varchar(500)")
                    .HasComment("设备ID集（以“，”隔开）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasComment("监测周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcpzCopy20200520>(entity =>
            {
                entity.ToTable("glyjc_jcpz_copy20200520");

                entity.HasComment("监测配置");

                entity.HasIndex(e => new { e.Sjcjfzrid, e.Lrfs })
                    .HasName("index_sjcjfzrid_lrfs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxbid)
                    .HasColumnName("JCDXBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzbid)
                    .HasColumnName("JCWZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzdtxxbid)
                    .HasColumnName("JCWZDTXXBID")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置地图信息表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rcxcqyid)
                    .HasColumnName("RCXCQYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("日常巡查区域ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbids)
                    .HasColumnName("SBIDS")
                    .HasColumnType("varchar(500)")
                    .HasComment("设备ID集（以“，”隔开）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasComment("监测周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcpzCopy20200527>(entity =>
            {
                entity.ToTable("glyjc_jcpz_copy20200527");

                entity.HasComment("监测配置");

                entity.HasIndex(e => new { e.Sjcjfzrid, e.Lrfs })
                    .HasName("index_sjcjfzrid_lrfs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxbid)
                    .HasColumnName("JCDXBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzbid)
                    .HasColumnName("JCWZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzdtxxbid)
                    .HasColumnName("JCWZDTXXBID")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置地图信息表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rcxcqyid)
                    .HasColumnName("RCXCQYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("日常巡查区域ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbids)
                    .HasColumnName("SBIDS")
                    .HasColumnType("varchar(500)")
                    .HasComment("设备ID集（以“，”隔开）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasComment("监测周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcpzRwscsj>(entity =>
            {
                entity.ToTable("glyjc_jcpz_rwscsj");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(255)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzid)
                    .HasColumnName("JCPZID")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测配置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scrwsj)
                    .HasColumnName("SCRWSJ")
                    .HasColumnType("datetime")
                    .HasComment("上次生成任务的时间");
            });

            modelBuilder.Entity<GlyjcJcpzrybb>(entity =>
            {
                entity.ToTable("glyjc_jcpzrybb");

                entity.HasComment("监测配置人员版本");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzid)
                    .HasColumnName("JCPZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcxid)
                    .HasColumnName("JCXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jssj)
                    .HasColumnName("JSSJ")
                    .HasColumnType("datetime")
                    .HasComment("结束时间");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qssj)
                    .HasColumnName("QSSJ")
                    .HasColumnType("datetime")
                    .HasComment("起始时间");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcpzsjg>(entity =>
            {
                entity.ToTable("glyjc_jcpzsjg");

                entity.HasComment("监测配置树结构");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fid)
                    .HasColumnName("FID")
                    .HasColumnType("varchar(50)")
                    .HasComment("一级目录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("树结构展示名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("PID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(11)")
                    .HasComment("排序(1XX)");
            });

            modelBuilder.Entity<GlyjcJcpzsjg20181012100400>(entity =>
            {
                entity.ToTable("glyjc_jcpzsjg_2018-10-12 10:04:00");

                entity.HasComment("监测配置树结构");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fid)
                    .HasColumnName("FID")
                    .HasColumnType("varchar(50)")
                    .HasComment("一级目录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("树结构展示名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("PID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(11)")
                    .HasComment("排序(1XX)");
            });

            modelBuilder.Entity<GlyjcJcpzsjg2018321110926>(entity =>
            {
                entity.ToTable("glyjc_jcpzsjg_2018-3-21 11:09:26");

                entity.HasComment("监测配置树结构");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fid)
                    .HasColumnName("FID")
                    .HasColumnType("varchar(50)")
                    .HasComment("一级目录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("树结构展示名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("PID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(11)")
                    .HasComment("排序(1XX)");
            });

            modelBuilder.Entity<GlyjcJcpzsjg2018327142211>(entity =>
            {
                entity.ToTable("glyjc_jcpzsjg_2018-3-27 14:22:11");

                entity.HasComment("监测配置树结构");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fid)
                    .HasColumnName("FID")
                    .HasColumnType("varchar(50)")
                    .HasComment("一级目录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("树结构展示名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("PID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(11)")
                    .HasComment("排序(1XX)");
            });

            modelBuilder.Entity<GlyjcJcpzysj>(entity =>
            {
                entity.ToTable("glyjc_jcpzysj");

                entity.HasComment("监测配置元数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxbid)
                    .HasColumnName("JCDXBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxdtxxbid)
                    .HasColumnName("JCDXDTXXBID")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测对象地图信息表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxdtxxbmc)
                    .HasColumnName("JCDXDTXXBMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象地图信息表名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxlmzbzd)
                    .HasColumnName("JCDXLMZBZD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象立面坐标字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxsytzd)
                    .HasColumnName("JCDXSYTZD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象示意图字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxyjcwz)
                    .HasColumnName("JCDXYJCWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象在监测位置表中的字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxzbzd)
                    .HasColumnName("JCDXZBZD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象坐标字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxzd)
                    .HasColumnName("JCDXZD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象展示字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzbid)
                    .HasColumnName("JCWZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzdtxxbid)
                    .HasColumnName("JCWZDTXXBID")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置地图信息表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzdtxxbmc)
                    .HasColumnName("JCWZDTXXBMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置地图信息表名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzdtzd)
                    .HasColumnName("JCWZDTZD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置底图字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzmsyjcdxmszd)
                    .HasColumnName("JCWZMSYJCDXMSZD")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置描述与监测对象描述字段（从对象中的哪个字段拷贝到监测位置）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysbid)
                    .HasColumnName("YCYSBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysyjcdx)
                    .HasColumnName("YCYSYJCDX")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素在监测对象表中字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycyszd)
                    .HasColumnName("YCYSZD")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素展示字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yddcjsjbid)
                    .HasColumnName("YDDCJSJBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("移动端采集数据表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJcyjzd>(entity =>
            {
                entity.ToTable("glyjc_jcyjzd");

                entity.HasComment("监测预警制度");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sssj)
                    .HasColumnName("SSSJ")
                    .HasColumnType("datetime")
                    .HasComment("实施时间");

                entity.Property(e => e.Zdmc)
                    .HasColumnName("ZDMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("制度名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJghjjlWdl>(entity =>
            {
                entity.ToTable("glyjc_jghjjl_wdl");

                entity.HasComment("景观环境记录文档数据规则");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdjzdz)
                    .HasColumnName("BDJZDZ")
                    .HasColumnType("varchar(0)")
                    .HasComment("变动建筑地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdqkms)
                    .HasColumnName("BDQKMS")
                    .HasColumnType("varchar(255)")
                    .HasComment("变动情况描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("XMMC")
                    .HasColumnType("varchar(0)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzsffsbd)
                    .HasColumnName("XZSFFSBD")
                    .HasColumnType("tinyint(50)")
                    .HasComment("现状是否发生变动");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJksjjrpzb>(entity =>
            {
                entity.HasKey(e => e.Paraid)
                    .HasName("PRIMARY");

                entity.ToTable("glyjc_jksjjrpzb");

                entity.HasComment("基康数据接入配置表");

                entity.Property(e => e.Paraid)
                    .HasColumnName("PARAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("参数编码ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dw)
                    .HasColumnName("DW")
                    .HasColumnType("varchar(255)")
                    .HasComment("单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcfx)
                    .HasColumnName("JCFX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测方向")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsd)
                    .HasColumnName("JCSD")
                    .HasColumnType("double(10,2)")
                    .HasComment("监测深度（单位：cm）");

                entity.Property(e => e.Jczbmc)
                    .HasColumnName("JCZBMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测指标名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbid)
                    .HasColumnName("SBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfsx)
                    .HasColumnName("SFSX")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否生效(0-未生效,1-生效)");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");
            });

            modelBuilder.Entity<GlyjcJrjcjg>(entity =>
            {
                entity.ToTable("glyjc_jrjcjg");

                entity.HasComment("接入检查结果");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("检查结束时间");

                entity.Property(e => e.Jckssj)
                    .HasColumnName("JCKSSJ")
                    .HasColumnType("datetime")
                    .HasComment("检查开始时间");

                entity.Property(e => e.Jcpc)
                    .HasColumnName("JCPC")
                    .HasColumnType("int(11)")
                    .HasComment("检查批次");

                entity.Property(e => e.Jrjg)
                    .HasColumnName("JRJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("接入结果-正常或异常")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jrjglxid)
                    .HasColumnName("JRJGLXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("接入结果类型ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jrpzid)
                    .HasColumnName("JRPZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("接入配置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJrjcjl>(entity =>
            {
                entity.ToTable("glyjc_jrjcjl");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("检测时间");

                entity.Property(e => e.Sfyyc)
                    .HasColumnName("SFYYC")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否有异常（0无，1有）");

                entity.Property(e => e.Sjlxid)
                    .HasColumnName("SJLXID")
                    .HasColumnType("int(10)")
                    .HasComment("数据类型ID");

                entity.Property(e => e.Sjlxname)
                    .HasColumnName("SJLXNAME")
                    .HasColumnType("varchar(200)")
                    .HasComment("数据类型名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Thzdz)
                    .HasColumnName("THZDZ")
                    .HasColumnType("varchar(100)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjzdmc)
                    .HasColumnName("TJZDMC")
                    .HasColumnType("varchar(100)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJrjglx>(entity =>
            {
                entity.ToTable("glyjc_jrjglx");

                entity.HasComment("接入结果类型");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Jyfa)
                    .HasColumnName("JYFA")
                    .HasColumnType("text")
                    .HasComment("建议方案")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yclx)
                    .HasColumnName("YCLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("异常类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycnr)
                    .HasColumnName("YCNR")
                    .HasColumnType("text")
                    .HasComment("异常内容")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJrjl>(entity =>
            {
                entity.ToTable("glyjc_jrjl");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdid)
                    .HasColumnName("JCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzfaid)
                    .HasColumnName("JCPZFAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置方案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jrjssj)
                    .HasColumnName("JRJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("接入结束时间");

                entity.Property(e => e.Jrkssj)
                    .HasColumnName("JRKSSJ")
                    .HasColumnType("datetime")
                    .HasComment("接入开始时间");

                entity.Property(e => e.Jrsj)
                    .HasColumnName("JRSJ")
                    .HasColumnType("datetime")
                    .HasComment("接入时间");

                entity.Property(e => e.Jrzt)
                    .HasColumnName("JRZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("接入状态");
            });

            modelBuilder.Entity<GlyjcJrycjl>(entity =>
            {
                entity.ToTable("glyjc_jrycjl");

                entity.HasIndex(e => e.Jcjlid)
                    .HasName("JCJLID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlid)
                    .HasColumnName("JCJLID")
                    .HasColumnType("varchar(50)")
                    .HasComment("检测记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("检测时间");

                entity.Property(e => e.Jrycsj)
                    .HasColumnName("JRYCSJ")
                    .HasColumnType("datetime")
                    .HasComment("接入异常时间");

                entity.Property(e => e.Jrzq)
                    .HasColumnName("JRZQ")
                    .HasColumnType("int(10)")
                    .HasComment("接入周期（秒）");

                entity.HasOne(d => d.Jcjl)
                    .WithMany(p => p.GlyjcJrycjl)
                    .HasForeignKey(d => d.Jcjlid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("glyjc_jrycjl_ibfk_1");
            });

            modelBuilder.Entity<GlyjcJskzygzxjc>(entity =>
            {
                entity.ToTable("glyjc_jskzygzxjc");

                entity.HasComment("建设控制遥感专项监测");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dbt)
                    .HasColumnName("DBT")
                    .HasColumnType("varchar(255)")
                    .HasComment("对比图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jzt)
                    .HasColumnName("JZT")
                    .HasColumnType("varchar(255)")
                    .HasComment("基准图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ms)
                    .HasColumnName("MS")
                    .HasColumnType("varchar(255)")
                    .HasComment("描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估(正面影响、负面影响、不确定影响)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjfw)
                    .HasColumnName("SJFW")
                    .HasColumnType("varchar(255)")
                    .HasComment("时间范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tbmj)
                    .HasColumnName("TBMJ")
                    .HasColumnType("double(10,4)")
                    .HasComment("图斑面积");

                entity.Property(e => e.Zhhdl)
                    .HasColumnName("ZHHDL")
                    .HasColumnType("varchar(255)")
                    .HasComment("转换后地类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zhqdl)
                    .HasColumnName("ZHQDL")
                    .HasColumnType("varchar(255)")
                    .HasComment("转换前地类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zhqk)
                    .HasColumnName("ZHQK")
                    .HasColumnType("varchar(255)")
                    .HasComment("转换情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJskzygzxjcdtxx>(entity =>
            {
                entity.ToTable("glyjc_jskzygzxjcdtxx");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("总体格局变化图及变化记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbxx)
                    .HasColumnName("ZBXX")
                    .HasColumnType("varchar(500)")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcJzjc>(entity =>
            {
                entity.ToTable("glyjc_jzjc");

                entity.HasComment("界桩监测");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bczt)
                    .IsRequired()
                    .HasColumnName("BCZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("保存状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bh)
                    .HasColumnName("BH")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bjsx)
                    .HasColumnName("BJSX")
                    .HasColumnType("tinyint(4)")
                    .HasComment("边界属性");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Czlx)
                    .HasColumnName("CZLX")
                    .HasColumnType("tinyint(4)")
                    .HasComment("材质类型");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Ssys)
                    .HasColumnName("SSYS")
                    .HasColumnType("varchar(50)")
                    .HasComment("所属要素")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zbx)
                    .HasColumnName("ZBX")
                    .HasColumnType("varchar(50)")
                    .HasComment("坐标x")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zby)
                    .HasColumnName("ZBY")
                    .HasColumnType("varchar(50)")
                    .HasComment("坐标y")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zp)
                    .HasColumnName("ZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcKgbgxx>(entity =>
            {
                entity.ToTable("glyjc_kgbgxx");

                entity.HasComment("考古报告信息");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bxry)
                    .HasColumnName("BXRY")
                    .HasColumnType("varchar(50)")
                    .HasComment("编写人员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzdw)
                    .HasColumnName("BZDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cbdw)
                    .HasColumnName("CBDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("出版单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cbsj)
                    .HasColumnName("CBSJ")
                    .HasColumnType("datetime")
                    .HasComment("出版时间");

                entity.Property(e => e.Cbzt)
                    .HasColumnName("CBZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("出版状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Kgbgmc)
                    .HasColumnName("KGBGMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("考古报告名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xgwd)
                    .HasColumnName("XGWD")
                    .HasColumnType("varchar(500)")
                    .HasComment("相关文档")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcKgfjctww>(entity =>
            {
                entity.ToTable("glyjc_kgfjctww");

                entity.HasComment("考古发掘出土文物表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ctsj)
                    .HasColumnName("CTSJ")
                    .HasColumnType("datetime")
                    .HasComment("出土时间");

                entity.Property(e => e.Kgfjjlid)
                    .HasColumnName("KGFJJLID")
                    .HasColumnType("varchar(50)")
                    .HasComment("考古发掘记录id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kgfjxmid)
                    .HasColumnName("KGFJXMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("考古发掘项目id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wwmc)
                    .HasColumnName("WWMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("文物名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wwms)
                    .HasColumnName("WWMS")
                    .HasColumnType("varchar(255)")
                    .HasComment("文物描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wwzp)
                    .HasColumnName("WWZP")
                    .HasColumnType("varchar(255)")
                    .HasComment("文物照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcKgfjctwwCopy>(entity =>
            {
                entity.ToTable("glyjc_kgfjctww_copy");

                entity.HasComment("考古发掘出土文物表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ctsj)
                    .HasColumnName("CTSJ")
                    .HasColumnType("datetime")
                    .HasComment("出土时间");

                entity.Property(e => e.Kgfjjlid)
                    .HasColumnName("KGFJJLID")
                    .HasColumnType("varchar(50)")
                    .HasComment("考古发掘记录id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kgfjxmid)
                    .HasColumnName("KGFJXMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("考古发掘项目id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wwmc)
                    .HasColumnName("WWMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("文物名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wwms)
                    .HasColumnName("WWMS")
                    .HasColumnType("varchar(255)")
                    .HasComment("文物描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wwzp)
                    .HasColumnName("WWZP")
                    .HasColumnType("varchar(255)")
                    .HasComment("文物照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcKgfjdt>(entity =>
            {
                entity.ToTable("glyjc_kgfjdt");

                entity.HasComment("考古发掘底图");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhgcjfdfpt)
                    .HasColumnName("bhgcjfdfpt")
                    .HasColumnType("int(11)")
                    .HasComment("保护工程经费-地方配套");

                entity.Property(e => e.Bhgcjfgjbz)
                    .HasColumnName("bhgcjfgjbz")
                    .HasColumnType("int(11)")
                    .HasComment("保护工程经费-国家补助");

                entity.Property(e => e.Bhgcjzqk)
                    .HasColumnName("bhgcjzqk")
                    .HasColumnType("varchar(4)")
                    .HasComment("保护工程进展情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhzsyhjzzgcda)
                    .HasColumnName("bhzsyhjzzgcda")
                    .HasColumnType("varchar(500)")
                    .HasComment("保护展示与环境整治工程档案")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("djrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("djsj")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Ejgcfl)
                    .HasColumnName("ejgcfl")
                    .HasColumnType("varchar(50)")
                    .HasComment("二级工程分类")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Gcfl)
                    .HasColumnName("gcfl")
                    .HasColumnType("varchar(50)")
                    .HasComment("工程分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gjwwjysrq)
                    .HasColumnName("gjwwjysrq")
                    .HasColumnType("datetime")
                    .HasComment("国家文物局验收日期");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Jftrze)
                    .HasColumnName("jftrze")
                    .HasColumnType("int(11)")
                    .HasComment("经费投入总额");

                entity.Property(e => e.Jgysrq)
                    .HasColumnName("jgysrq")
                    .HasColumnType("datetime")
                    .HasComment("竣工验收日期");

                entity.Property(e => e.Jldw)
                    .HasColumnName("jldw")
                    .HasColumnType("varchar(500)")
                    .HasComment("监理单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jssj)
                    .HasColumnName("jssj")
                    .HasColumnType("datetime")
                    .HasComment("结束时间");

                entity.Property(e => e.Kssj)
                    .HasColumnName("kssj")
                    .HasColumnType("datetime")
                    .HasComment("开始时间");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasComment("ONLYID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_bin");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(10)")
                    .HasComment("排序");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("sfkdj")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Sgdw)
                    .HasColumnName("sgdw")
                    .HasColumnType("varchar(500)")
                    .HasComment("施工单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("shbtgsm")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("shrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Syt)
                    .HasColumnName("syt")
                    .HasColumnType("varchar(500)")
                    .HasComment("示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("tjsj")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wwbmpz)
                    .HasColumnName("wwbmpz")
                    .HasColumnType("varchar(50)")
                    .HasComment("文物部门批准/许可文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmfl)
                    .HasColumnName("xmfl")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmfw)
                    .HasColumnName("XMFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("项目范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmfwturl)
                    .HasColumnName("xmfwturl")
                    .HasColumnType("varchar(200)")
                    .HasComment("项目范围图url")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("xmmc")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zyczjf)
                    .HasColumnName("zyczjf")
                    .HasColumnType("int(11)")
                    .HasComment("中央财政经费");
            });

            modelBuilder.Entity<GlyjcKgfjdtdtxx>(entity =>
            {
                entity.ToTable("glyjc_kgfjdtdtxx");

                entity.HasComment("考古发掘底图地图信息");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护工程项目记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbxx)
                    .HasColumnName("ZBXX")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcKgfjjcwz>(entity =>
            {
                entity.ToTable("glyjc_kgfjjcwz");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzmc)
                    .HasColumnName("JCWZMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzms)
                    .HasColumnName("JCWZMS")
                    .HasColumnType("text")
                    .HasComment("监测位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzsyt)
                    .HasColumnName("JCWZSYT")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(255)")
                    .HasComment("排序");

                entity.Property(e => e.Zb)
                    .HasColumnName("ZB")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbsjid)
                    .HasColumnName("ZBSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主表数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcKgfjjcwzdtxx>(entity =>
            {
                entity.ToTable("glyjc_kgfjjcwzdtxx");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("考古发掘项目位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbxx)
                    .HasColumnName("ZBXX")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcKgfjjl>(entity =>
            {
                entity.ToTable("glyjc_kgfjjl");

                entity.HasComment("考古发掘记录");

                entity.HasIndex(e => e.Id)
                    .HasName("ID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djcfj)
                    .HasColumnName("DJCFJ")
                    .HasColumnType("int(11)")
                    .HasComment("第几次发掘");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fjmj)
                    .HasColumnName("FJMJ")
                    .HasColumnType("double(20,4)")
                    .HasComment("发掘面积（平方米）");

                entity.Property(e => e.Htmj)
                    .HasColumnName("HTMJ")
                    .HasColumnType("double(20,4)")
                    .HasComment("回填面积（平方米）");

                entity.Property(e => e.Htqk)
                    .HasColumnName("HTQK")
                    .HasColumnType("varchar(255)")
                    .HasComment("回填情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jlmc)
                    .HasColumnName("JLMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("考古发掘记录记录名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jssj)
                    .HasColumnName("JSSJ")
                    .HasColumnType("datetime")
                    .HasComment("结束时间");

                entity.Property(e => e.Kgfjjlmc)
                    .HasColumnName("KGFJJLMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("考古发掘记录名称（没有时间）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kgfjxmid)
                    .HasColumnName("KGFJXMID")
                    .HasColumnType("varchar(255)")
                    .HasComment("考古发掘项目id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kssj)
                    .HasColumnName("KSSJ")
                    .HasColumnType("datetime")
                    .HasComment("开始时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfwg)
                    .HasColumnName("SFWG")
                    .HasColumnType("varchar(255)")
                    .HasComment("是否完工")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(255)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcKgfjjldtxx>(entity =>
            {
                entity.ToTable("glyjc_kgfjjldtxx");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qylx)
                    .HasColumnName("QYLX")
                    .HasColumnType("varchar(255)")
                    .HasComment("区域类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("考古发掘记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tfmj)
                    .HasColumnName("TFMJ")
                    .HasColumnType("varchar(255)")
                    .HasComment("探方面积")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbxx)
                    .HasColumnName("ZBXX")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcKgfjxczp>(entity =>
            {
                entity.ToTable("glyjc_kgfjxczp");

                entity.HasComment("考古发掘现场照片");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrq)
                    .HasColumnName("CJRQ")
                    .HasColumnType("datetime")
                    .HasComment("采集日期");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfwg)
                    .HasColumnName("SFWG")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否完工")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjwgsj)
                    .HasColumnName("SJWGSJ")
                    .HasColumnType("datetime")
                    .HasComment("实际完工时间");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xmid)
                    .HasColumnName("XMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmms)
                    .HasColumnName("XMMS")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zplj)
                    .HasColumnName("ZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcKgfjxczpKgfjjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("glyjc_kgfjxczp_kgfjjl");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrq)
                    .HasColumnName("CJRQ")
                    .HasColumnType("datetime")
                    .HasComment("采集日期");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jlmc)
                    .HasColumnName("JLMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("考古发掘记录记录名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfwg)
                    .HasColumnName("SFWG")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否完工")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjwgsj)
                    .HasColumnName("SJWGSJ")
                    .HasColumnType("datetime")
                    .HasComment("实际完工时间");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xmid)
                    .HasColumnName("XMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("XMMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zplj)
                    .HasColumnName("ZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcKgfjxm>(entity =>
            {
                entity.ToTable("glyjc_kgfjxm");

                entity.HasComment("考古发掘项目表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(255)")
                    .HasComment("对接人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fjdw)
                    .HasColumnName("FJDW")
                    .HasColumnType("varchar(255)")
                    .HasComment("发掘单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jftrze)
                    .HasColumnName("JFTRZE")
                    .HasComment("经费投入总额（单位：万元）");

                entity.Property(e => e.Jssj)
                    .HasColumnName("JSSJ")
                    .HasColumnType("varchar(100)")
                    .HasComment("结束时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kssj)
                    .HasColumnName("KSSJ")
                    .HasColumnType("varchar(100)")
                    .HasComment("开始时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pzfjmj)
                    .HasColumnName("PZFJMJ")
                    .HasComment("批准发掘面积(单位：平方米）");

                entity.Property(e => e.Pzwh)
                    .HasColumnName("PZWH")
                    .HasColumnType("varchar(255)")
                    .HasComment("批准文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("varchar(255)")
                    .HasComment("是否可对接")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("varchar(255)")
                    .HasComment("是否已对接")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("varchar(255)")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("XMMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zszp)
                    .HasColumnName("ZSZP")
                    .HasColumnType("varchar(255)")
                    .HasComment("证书照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcKlgfsdxczp>(entity =>
            {
                entity.ToTable("glyjc_klgfsdxczp");

                entity.HasComment("客流高峰时段现场照片");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Lyjd)
                    .HasColumnName("LYJD")
                    .HasColumnType("varchar(50)")
                    .HasComment("旅游景点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zplj)
                    .HasColumnName("ZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcKlgfxczpJcwz>(entity =>
            {
                entity.ToTable("glyjc_klgfxczp_jcwz");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzmc)
                    .HasColumnName("JCWZMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzms)
                    .HasColumnName("JCWZMS")
                    .HasColumnType("text")
                    .HasComment("监测位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzsyt)
                    .HasColumnName("JCWZSYT")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(255)")
                    .HasComment("排序");

                entity.Property(e => e.Zb)
                    .HasColumnName("ZB")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbsjid)
                    .HasColumnName("ZBSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主表数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcKlgfxczpJcwzdtxx>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_klgfxczp_jcwzdtxx");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbxx)
                    .HasColumnName("ZBXX")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcKqzl>(entity =>
            {
                entity.ToTable("glyjc_kqzl");

                entity.HasComment("空气质量");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aqi).HasColumnName("AQI");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sj)
                    .HasColumnName("SJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Sywrw)
                    .HasColumnName("SYWRW")
                    .HasColumnType("varchar(50)")
                    .HasComment("首要污染物")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcLdt>(entity =>
            {
                entity.ToTable("glyjc_ldt");

                entity.HasComment("雷达图");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(20)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Ldttp)
                    .HasColumnName("LDTTP")
                    .HasColumnType("varchar(200)")
                    .HasComment("雷达图图片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sj)
                    .HasColumnName("SJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcLeader>(entity =>
            {
                entity.ToTable("glyjc_leader");

                entity.HasComment("领导表（主要用于存意见）");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Userid)
                    .HasColumnName("userid")
                    .HasColumnType("varchar(50)")
                    .HasComment("人员id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yj)
                    .HasColumnName("yj")
                    .HasColumnType("text")
                    .HasComment("意见")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxxid)
                    .HasColumnName("yjxxid")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警信息id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcLeshanRyklJcwz>(entity =>
            {
                entity.ToTable("glyjc_leshan_rykl_jcwz");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzmc)
                    .HasColumnName("JCWZMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzms)
                    .HasColumnName("JCWZMS")
                    .HasColumnType("text")
                    .HasComment("监测位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzsyt)
                    .HasColumnName("JCWZSYT")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(255)")
                    .HasComment("排序");

                entity.Property(e => e.Zb)
                    .HasColumnName("ZB")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbsjid)
                    .HasColumnName("ZBSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主表数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcLfSzl>(entity =>
            {
                entity.ToTable("glyjc_lf_szl");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Kd)
                    .HasColumnName("KD")
                    .HasColumnType("int(11)")
                    .HasComment("宽度(单位mm)");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcLfSzlBhdcjcgzqkjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("glyjc_lf_szl_bhdcjcgzqkjl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhmc)
                    .HasColumnName("BHMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kd)
                    .HasColumnName("KD")
                    .HasColumnType("int(11)")
                    .HasComment("宽度(单位mm)");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");
            });

            modelBuilder.Entity<GlyjcLfWdl>(entity =>
            {
                entity.ToTable("glyjc_lf_wdl");

                entity.HasComment("裂缝");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(1000)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lfcd)
                    .HasColumnName("LFCD")
                    .HasComment("裂缝长度");

                entity.Property(e => e.Lfkd)
                    .HasColumnName("LFKD")
                    .HasColumnType("varchar(50)")
                    .HasComment("裂缝宽度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lfkkfw)
                    .HasColumnName("LFKKFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("裂缝开口方位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lfmxt)
                    .HasColumnName("LFMXT")
                    .HasColumnType("varchar(50)")
                    .HasComment("裂缝面形态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lfsd)
                    .HasColumnName("LFSD")
                    .HasComment("裂缝深度");

                entity.Property(e => e.Lxctqk)
                    .HasColumnName("LXCTQK")
                    .HasColumnType("varchar(500)")
                    .HasComment("裂隙充填情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pfzj)
                    .HasColumnName("PFZJ")
                    .HasColumnType("int(11)")
                    .HasComment("评分增减");

                entity.Property(e => e.Pfzz)
                    .HasColumnName("PFZZ")
                    .HasColumnType("int(11)")
                    .HasComment("评分终值");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcLfWdlBhdcjcgzqkjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("glyjc_lf_wdl_bhdcjcgzqkjl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(1000)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcrmc)
                    .HasColumnName("DCRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzmc)
                    .HasColumnName("JCWZMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lfcd)
                    .HasColumnName("LFCD")
                    .HasComment("裂缝长度");

                entity.Property(e => e.Lfkd)
                    .HasColumnName("LFKD")
                    .HasColumnType("varchar(50)")
                    .HasComment("裂缝宽度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lfkkfw)
                    .HasColumnName("LFKKFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("裂缝开口方位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lfmxt)
                    .HasColumnName("LFMXT")
                    .HasColumnType("varchar(50)")
                    .HasComment("裂缝面形态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lfsd)
                    .HasColumnName("LFSD")
                    .HasComment("裂缝深度");

                entity.Property(e => e.Lxctqk)
                    .HasColumnName("LXCTQK")
                    .HasColumnType("varchar(500)")
                    .HasComment("裂隙充填情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcLsdljcjl>(entity =>
            {
                entity.ToTable("glyjc_lsdljcjl");

                entity.HasComment("历史道路监测记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlkdbhqk)
                    .HasColumnName("DLKDBHQK")
                    .HasColumnType("varchar(50)")
                    .HasComment("道路宽度变化情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlpz)
                    .HasColumnName("DLPZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("道路铺装")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlzplj)
                    .HasColumnName("DLZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("道路照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlzpmc)
                    .HasColumnName("DLZPMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("道路照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ldmc)
                    .HasColumnName("LDMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("路段名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qtcz)
                    .HasColumnName("QTCZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("墙体材质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qtys)
                    .HasColumnName("QTYS")
                    .HasColumnType("varchar(50)")
                    .HasComment("墙体颜色")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Szdl)
                    .HasColumnName("SZDL")
                    .HasColumnType("varchar(50)")
                    .HasComment("所在道路")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Szhx)
                    .HasColumnName("SZHX")
                    .HasColumnType("varchar(50)")
                    .HasComment("所在环线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrq)
                    .HasColumnName("TXRQ")
                    .HasColumnType("datetime")
                    .HasComment("填写日期");

                entity.Property(e => e.Wqcd)
                    .HasColumnName("WQCD")
                    .HasComment("围墙长度");

                entity.Property(e => e.Wqcdbhqk)
                    .HasColumnName("WQCDBHQK")
                    .HasColumnType("varchar(50)")
                    .HasComment("围墙长度变化情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wqgd)
                    .HasColumnName("WQGD")
                    .HasComment("围墙高度");

                entity.Property(e => e.Wqgdbhqk)
                    .HasColumnName("WQGDBHQK")
                    .HasColumnType("varchar(50)")
                    .HasComment("围墙高度变化情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wqwzbh)
                    .HasColumnName("WQWZBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("围墙位置变化")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wqydlgkb)
                    .HasColumnName("WQYDLGKB")
                    .HasColumnType("varchar(50)")
                    .HasComment("围墙与道路高宽比")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcLzjcdaduijie>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_lzjcdaduijie");

                entity.HasComment("监测档案系统对接");

                entity.Property(e => e.Bid)
                    .HasColumnName("bid")
                    .HasColumnType("int(11)")
                    .HasComment("bid");

                entity.Property(e => e.Bmc)
                    .HasColumnName("bmc")
                    .HasColumnType("varchar(255)")
                    .HasComment("表名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djx)
                    .HasColumnName("djx")
                    .HasColumnType("varchar(255)")
                    .HasComment("对接项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fjzd)
                    .HasColumnName("fjzd")
                    .HasColumnType("varchar(255)")
                    .HasComment("附件字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfdj)
                    .HasColumnName("sfdj")
                    .HasColumnType("varchar(255)")
                    .HasComment("是否对接（0—不对接，1—对接）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjdjsj)
                    .HasColumnName("sjdjsj")
                    .HasColumnType("datetime")
                    .HasComment("上次对接时间");
            });

            modelBuilder.Entity<GlyjcMjlyjyzsz>(entity =>
            {
                entity.ToTable("glyjc_mjlyjyzsz");

                entity.HasComment("枚举类预警阈值设置");

                entity.HasIndex(e => e.Yjpzfaid)
                    .HasName("FK_YJPZFAID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Mjz)
                    .HasColumnName("MJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("枚举值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yjdj)
                    .HasColumnName("YJDJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjpzfaid)
                    .HasColumnName("YJPZFAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警配置方案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Yjpzfa)
                    .WithMany(p => p.GlyjcMjlyjyzsz)
                    .HasForeignKey(d => d.Yjpzfaid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("glyjc_mjlyjyzsz_ibfk_1");
            });

            modelBuilder.Entity<GlyjcMjzb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_mjzb");

                entity.HasComment("枚举值表");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(50)")
                    .HasComment("编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.BmcYw)
                    .HasColumnName("BMC_YW")
                    .HasColumnType("varchar(50)")
                    .HasComment("表名称（英文）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.BmcZw)
                    .HasColumnName("BMC_ZW")
                    .HasColumnType("varchar(50)")
                    .HasComment("表名称（中文）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mjx)
                    .HasColumnName("MJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("枚举项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pxbm)
                    .HasColumnName("PXBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("排序编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ZdYw)
                    .HasColumnName("ZD_YW")
                    .HasColumnType("varchar(50)")
                    .HasComment("字段（英文）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ZdZw)
                    .HasColumnName("ZD_ZW")
                    .HasColumnType("varchar(50)")
                    .HasComment("字段（中文）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcMxfwqd>(entity =>
            {
                entity.ToTable("glyjc_mxfwqd");

                entity.HasComment("模型服务清单");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwmc)
                    .HasColumnName("FWMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("服务名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcPgDllb>(entity =>
            {
                entity.ToTable("glyjc_pg_dllb");

                entity.HasComment("大类类别表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("创建时间");

                entity.Property(e => e.Dlmc)
                    .HasColumnName("DLMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("大类名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcPgJcdxlx>(entity =>
            {
                entity.ToTable("glyjc_pg_jcdxlx");

                entity.HasComment("监测对象类型表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcdxlxmc)
                    .HasColumnName("JCDXLXMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象类型名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");
            });

            modelBuilder.Entity<GlyjcPgPgjg>(entity =>
            {
                entity.ToTable("glyjc_pg_pgjg");

                entity.HasComment("评估结果");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Pgbg)
                    .HasColumnName("PGBG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估报告")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgjg)
                    .HasColumnName("PGJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估结果")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgjlid)
                    .HasColumnName("PGJLID")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbsjjgbid)
                    .HasColumnName("ZBSJJGBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("指标数据结果表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbsjjgid)
                    .HasColumnName("ZBSJJGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("指标数据结果ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcPgPgjlb>(entity =>
            {
                entity.ToTable("glyjc_pg_pgjlb");

                entity.HasComment("评估记录表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID（指派人）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间（指派时间）");

                entity.Property(e => e.Pgbgmb)
                    .HasColumnName("PGBGMB")
                    .HasColumnType("varchar(500)")
                    .HasComment("评估报告模板")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgdxid)
                    .HasColumnName("PGDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgfs)
                    .HasColumnName("PGFS")
                    .HasColumnType("tinyint(4)")
                    .HasComment("评估方式（0—自动评估，1—专家评估）");

                entity.Property(e => e.Pgjlmc)
                    .HasColumnName("PGJLMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估记录名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgjlsm)
                    .HasColumnName("PGJLSM")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估记录说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgjssj)
                    .HasColumnName("PGJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("评估结束时间");

                entity.Property(e => e.Pgmxid)
                    .HasColumnName("PGMXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估模型ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgqssj)
                    .HasColumnName("PGQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("评估起始时间");

                entity.Property(e => e.Zjid)
                    .HasColumnName("ZJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("专家ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("状态(0-暂停，1-进行中，2-已完成)");
            });

            modelBuilder.Entity<GlyjcPgPgjlzbdx>(entity =>
            {
                entity.ToTable("glyjc_pg_pgjlzbdx");

                entity.HasComment(@"评估记录指标对象表（指标和评估共用一张表）
");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxbid)
                    .HasColumnName("JCDXBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxlx)
                    .HasColumnName("JCDXLX")
                    .HasColumnType("tinyint(4)")
                    .HasComment("监测对象类型");

                entity.Property(e => e.Jcdxmc)
                    .HasColumnName("JCDXMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasColumnType("double(20,14)")
                    .HasComment("经度");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasColumnType("double(20,14)")
                    .HasComment("纬度");
            });

            modelBuilder.Entity<GlyjcPgPgmx>(entity =>
            {
                entity.ToTable("glyjc_pg_pgmx");

                entity.HasComment("评估模型");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dlid)
                    .HasColumnName("DLID")
                    .HasColumnType("varchar(50)")
                    .HasComment("大类ID(所属专题)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mxmc)
                    .HasColumnName("MXMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("模型名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgszyzdw)
                    .HasColumnName("PGSZYZDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估设置阈值单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcPgPgmxjgysb>(entity =>
            {
                entity.ToTable("glyjc_pg_pgmxjgysb");

                entity.HasComment("评估模型结果预设表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Mxid)
                    .HasColumnName("MXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("模型ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysjgmc)
                    .HasColumnName("YSJGMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("预设结果名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcPgPgsz>(entity =>
            {
                entity.ToTable("glyjc_pg_pgsz");

                entity.HasComment("评估设置");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mxid)
                    .HasColumnName("MXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("模型ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysjgid)
                    .HasColumnName("YSJGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预设结果ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yzdz)
                    .HasColumnName("YZDZ")
                    .HasColumnType("double(10,2)")
                    .HasComment("阈值大值");

                entity.Property(e => e.Yzxz)
                    .HasColumnName("YZXZ")
                    .HasColumnType("double(10,2)")
                    .HasComment("阈值小值");
            });

            modelBuilder.Entity<GlyjcPgPgzb>(entity =>
            {
                entity.ToTable("glyjc_pg_pgzb");

                entity.HasComment("评估指标表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("创建时间");

                entity.Property(e => e.Dlid)
                    .HasColumnName("DLID")
                    .HasColumnType("varchar(50)")
                    .HasComment("大类ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbmc)
                    .HasColumnName("ZBMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("指标名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcPgPgzbdx>(entity =>
            {
                entity.ToTable("glyjc_pg_pgzbdx");

                entity.HasComment("评估指标对象表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("创建时间");

                entity.Property(e => e.Dxbid)
                    .HasColumnName("DXBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对象表ID（存储相应的病害或位置、区域等对象的表ID）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dxid)
                    .HasColumnName("DXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对象ID（存储相应的病害或位置、区域等对象的记录ID或者区域ID）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dxmc)
                    .HasColumnName("DXMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("对象名称（存储处理后的对象名称，如病害名称、位置名称、区域名称等）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxlx)
                    .HasColumnName("JCDXLX")
                    .HasColumnType("varchar(4)")
                    .HasComment("监测对象类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcxbid)
                    .HasColumnName("JCXBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项ID（原始数据保存的表ID）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wjzd)
                    .HasColumnName("WJZD")
                    .HasColumnType("varchar(50)")
                    .HasComment("外键字段（存储数据表中的搜索字段）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcPgXzfxsjb>(entity =>
            {
                entity.ToTable("glyjc_pg_xzfxsjb");

                entity.HasComment("选择分析数据表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgjlid)
                    .HasColumnName("PGJLID")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjjssj)
                    .HasColumnName("SJJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("选择数据的结束时间");

                entity.Property(e => e.Sjqssj)
                    .HasColumnName("SJQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("选择数据的起始时间");

                entity.Property(e => e.Zbdxglid)
                    .HasColumnName("ZBDXGLID")
                    .HasColumnType("varchar(50)")
                    .HasComment("指标对象关联ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcPgXzyssjb>(entity =>
            {
                entity.ToTable("glyjc_pg_xzyssjb");

                entity.HasComment("选择原始数据表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cclj)
                    .HasColumnName("CCLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("存储路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("选择原始数据名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgjlid)
                    .HasColumnName("PGJLID")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcPgZbdxglb>(entity =>
            {
                entity.ToTable("glyjc_pg_zbdxglb");

                entity.HasComment("指标对象关联表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("创建时间");

                entity.Property(e => e.Dygslmc)
                    .HasColumnName("DYGSLMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("对应公式类名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgdxid)
                    .HasColumnName("PGDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scjssj)
                    .HasColumnName("SCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("上次计算时间");

                entity.Property(e => e.Sjzdsj)
                    .HasColumnName("SJZDSJ")
                    .HasColumnType("datetime")
                    .HasComment("指标结果表中数据最大时间");

                entity.Property(e => e.Sjzxsj)
                    .HasColumnName("SJZXSJ")
                    .HasColumnType("datetime")
                    .HasComment("指标结果表中数据最小时间");

                entity.Property(e => e.Zbid)
                    .HasColumnName("ZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("指标ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbsjjgbid)
                    .HasColumnName("ZBSJJGBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("指标数据结果表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zsdxmc)
                    .HasColumnName("ZSDXMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("展示对象名称（在评估全景中展示的最终对象名称=对象名称+指标名称）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcPgZbsjjgb>(entity =>
            {
                entity.ToTable("glyjc_pg_zbsjjgb");

                entity.HasComment("指标数据结果表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Glid)
                    .HasColumnName("GLID")
                    .HasColumnType("varchar(50)")
                    .HasComment("关联ID（指标对象关联表中的ID）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjsj)
                    .HasColumnName("SJSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据时间（描述数据的有意义的时间）");

                entity.Property(e => e.Zbz)
                    .HasColumnName("ZBZ")
                    .HasColumnType("double(10,2)")
                    .HasComment("指标值");
            });

            modelBuilder.Entity<GlyjcPgZjxx>(entity =>
            {
                entity.ToTable("glyjc_pg_zjxx");

                entity.HasComment("专家信息表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Byyx)
                    .HasColumnName("BYYX")
                    .HasColumnType("varchar(50)")
                    .HasComment("毕业院校")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gj)
                    .HasColumnName("GJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("国籍")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gzdw)
                    .HasColumnName("GZDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("工作单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lxdh)
                    .HasColumnName("LXDH")
                    .HasColumnType("varchar(50)")
                    .HasComment("联系电话")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mz)
                    .HasColumnName("MZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("民族")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sxzy)
                    .HasColumnName("SXZY")
                    .HasColumnType("varchar(50)")
                    .HasComment("所学专业")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xb)
                    .HasColumnName("XB")
                    .HasColumnType("tinyint(4)")
                    .HasComment("性别");

                entity.Property(e => e.Yhid)
                    .HasColumnName("YHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("用户ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yx)
                    .HasColumnName("YX")
                    .HasColumnType("varchar(50)")
                    .HasComment("邮箱")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zc)
                    .HasColumnName("ZC")
                    .HasColumnType("varchar(50)")
                    .HasComment("职称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zjfl)
                    .HasColumnName("ZJFL")
                    .HasColumnType("varchar(50)")
                    .HasComment("专家分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcPgztjl>(entity =>
            {
                entity.ToTable("glyjc_pgztjl");

                entity.HasComment("评估状态记录表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估枚举")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcQnsw>(entity =>
            {
                entity.ToTable("glyjc_qnsw");

                entity.HasComment("去年水位平均值");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键标识")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdid)
                    .HasColumnName("JCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(50)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pjz)
                    .HasColumnName("PJZ")
                    .HasColumnType("double(10,2)")
                    .HasComment("平均值");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");
            });

            modelBuilder.Entity<GlyjcQt>(entity =>
            {
                entity.ToTable("glyjc_qt");

                entity.HasComment("其他");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcQtxggh>(entity =>
            {
                entity.ToTable("glyjc_qtxggh");

                entity.HasComment("其他相关规划");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzdw)
                    .HasColumnName("BZDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Ghqx)
                    .HasColumnName("GHQX")
                    .HasColumnType("varchar(50)")
                    .HasComment("规划期限")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zzbzdw)
                    .HasColumnName("ZZBZDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("组织编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcQtzp>(entity =>
            {
                entity.ToTable("glyjc_qtzp");

                entity.HasComment("其他照片");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yxfj)
                    .HasColumnName("YXFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("影像附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcQx>(entity =>
            {
                entity.ToTable("glyjc_qx");

                entity.HasComment("气象");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fl)
                    .HasColumnName("FL")
                    .HasColumnType("double(11,0)")
                    .HasComment("风力");

                entity.Property(e => e.Fs)
                    .HasColumnName("FS")
                    .HasComment("风速");

                entity.Property(e => e.Fx)
                    .HasColumnName("FX")
                    .HasColumnType("double(11,0)")
                    .HasComment("风向");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jyl)
                    .HasColumnName("JYL")
                    .HasColumnType("double(11,0)")
                    .HasComment("降雨量");

                entity.Property(e => e.Qw)
                    .HasColumnName("QW")
                    .HasColumnType("double(11,0)")
                    .HasComment("气温");

                entity.Property(e => e.Sd)
                    .HasColumnName("SD")
                    .HasColumnType("double(11,0)")
                    .HasComment("湿度");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcQyhj>(entity =>
            {
                entity.ToTable("glyjc_qyhj");

                entity.HasComment("区域环境");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fs)
                    .HasColumnName("FS")
                    .HasComment("风速");

                entity.Property(e => e.Fx)
                    .HasColumnName("FX")
                    .HasColumnType("double(11,0)")
                    .HasComment("风向");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jyl)
                    .HasColumnName("JYL")
                    .HasColumnType("double(11,0)")
                    .HasComment("降雨量");

                entity.Property(e => e.Qw)
                    .HasColumnName("QW")
                    .HasColumnType("double(11,0)")
                    .HasComment("气温");

                entity.Property(e => e.Qy)
                    .HasColumnName("QY")
                    .HasColumnType("double(11,0)")
                    .HasComment("气压");

                entity.Property(e => e.Qyu)
                    .HasColumnName("QYU")
                    .HasColumnType("varchar(50)")
                    .HasComment("区域")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sd)
                    .HasColumnName("SD")
                    .HasColumnType("double(11,0)")
                    .HasComment("湿度");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tyfs)
                    .HasColumnName("TYFS")
                    .HasColumnType("double(11,0)")
                    .HasComment("太阳辐射");

                entity.Property(e => e.Xdsd)
                    .HasColumnName("XDSD")
                    .HasColumnType("double(11,0)")
                    .HasComment("相对湿度");
            });

            modelBuilder.Entity<GlyjcQyhjzd>(entity =>
            {
                entity.ToTable("glyjc_qyhjzd");

                entity.HasComment("景观环境记录文档数据规则");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fs)
                    .HasColumnName("FS")
                    .HasColumnType("varchar(50)")
                    .HasComment("风速")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fx)
                    .HasColumnName("FX")
                    .HasColumnType("varchar(0)")
                    .HasComment("风向")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qw)
                    .HasColumnName("QW")
                    .HasColumnType("varchar(0)")
                    .HasComment("气温")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qy)
                    .HasColumnName("QY")
                    .HasColumnType("varchar(200)")
                    .HasComment("气压")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tyfu)
                    .HasColumnName("TYFU")
                    .HasColumnType("varchar(50)")
                    .HasComment("太阳辐射")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xdsd)
                    .HasColumnName("XDSD")
                    .HasColumnType("varchar(200)")
                    .HasComment("相对湿度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yl)
                    .HasColumnName("YL")
                    .HasColumnType("varchar(255)")
                    .HasComment("雨量")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcRcxcjl>(entity =>
            {
                entity.ToTable("glyjc_rcxcjl");

                entity.HasComment("日常巡查记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfyc)
                    .HasColumnName("SFYC")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否异常")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xcddwz)
                    .HasColumnName("XCDDWZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("巡查地点（位置）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcddycd)
                    .HasColumnName("XCDDYCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查地点（遗产点）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcqkmsfsycqkms)
                    .HasColumnName("XCQKMSFSYCQKMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("巡查情况描述-情况描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcqkmsxclx)
                    .HasColumnName("XCQKMSXCLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查情况描述-巡查路线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcsj)
                    .HasColumnName("XCSJ")
                    .HasColumnType("datetime")
                    .HasComment("巡查时间");

                entity.Property(e => e.Xcy)
                    .HasColumnName("XCY")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xgjlid)
                    .HasColumnName("XGJLID")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡更记录id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yczplj)
                    .HasColumnName("YCZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("异常照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yczpmc)
                    .HasColumnName("YCZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("异常照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcRcxcjlCopy20181220>(entity =>
            {
                entity.ToTable("glyjc_rcxcjl_copy20181220");

                entity.HasComment("日常巡查记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfyc)
                    .HasColumnName("SFYC")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否异常")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xcddwz)
                    .HasColumnName("XCDDWZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("巡查地点（位置）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcddycd)
                    .HasColumnName("XCDDYCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查地点（遗产点）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcqkmsfsycqkms)
                    .HasColumnName("XCQKMSFSYCQKMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("巡查情况描述-情况描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcqkmsxclx)
                    .HasColumnName("XCQKMSXCLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查情况描述-巡查路线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcsj)
                    .HasColumnName("XCSJ")
                    .HasColumnType("datetime")
                    .HasComment("巡查时间");

                entity.Property(e => e.Xcy)
                    .HasColumnName("XCY")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xgjlid)
                    .HasColumnName("XGJLID")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡更记录id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yczplj)
                    .HasColumnName("YCZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("异常照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yczpmc)
                    .HasColumnName("YCZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("异常照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcRcxcjlCopy20200511>(entity =>
            {
                entity.ToTable("glyjc_rcxcjl_copy20200511");

                entity.HasComment("日常巡查记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfyc)
                    .HasColumnName("SFYC")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否异常")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xcddwz)
                    .HasColumnName("XCDDWZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("巡查地点（位置）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcddycd)
                    .HasColumnName("XCDDYCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查地点（遗产点）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcqkmsfsycqkms)
                    .HasColumnName("XCQKMSFSYCQKMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("巡查情况描述-情况描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcqkmsxclx)
                    .HasColumnName("XCQKMSXCLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查情况描述-巡查路线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcsj)
                    .HasColumnName("XCSJ")
                    .HasColumnType("datetime")
                    .HasComment("巡查时间");

                entity.Property(e => e.Xcy)
                    .HasColumnName("XCY")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xgjlid)
                    .HasColumnName("XGJLID")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡更记录id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yczplj)
                    .HasColumnName("YCZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("异常照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yczpmc)
                    .HasColumnName("YCZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("异常照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcRcxcqdjlb>(entity =>
            {
                entity.ToTable("glyjc_rcxcqdjlb");

                entity.HasComment("日常巡查签到记录表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("创建时间");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwjssj)
                    .HasColumnName("RWJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("任务结束时间");

                entity.Property(e => e.Rwkssj)
                    .HasColumnName("RWKSSJ")
                    .HasColumnType("datetime")
                    .HasComment("任务开始时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Xgdglid)
                    .HasColumnName("XGDGLID")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡更点管理ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcRcxcqy>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_rcxcqy");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(255)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(255)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dqymc)
                    .HasColumnName("DQYMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("大区域名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fzrid)
                    .HasColumnName("FZRID")
                    .HasColumnType("varchar(255)")
                    .HasComment("负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qymc)
                    .HasColumnName("QYMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("区域名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qyzb)
                    .HasColumnName("QYZB")
                    .HasColumnType("longtext")
                    .HasComment("区域坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sx)
                    .HasColumnName("SX")
                    .HasColumnType("varchar(50)")
                    .HasComment("属性（遗产区/缓冲区）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycqid)
                    .HasColumnName("YCQID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产区ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcRcxcqyCopy20200511>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_rcxcqy_copy20200511");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(255)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(255)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dqymc)
                    .HasColumnName("DQYMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("大区域名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fzrid)
                    .HasColumnName("FZRID")
                    .HasColumnType("varchar(255)")
                    .HasComment("负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qymc)
                    .HasColumnName("QYMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("区域名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qyzb)
                    .HasColumnName("QYZB")
                    .HasColumnType("longtext")
                    .HasComment("区域坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sx)
                    .HasColumnName("SX")
                    .HasColumnType("varchar(50)")
                    .HasComment("属性（遗产区/缓冲区）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycqid)
                    .HasColumnName("YCQID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产区ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcRcxcqyTest>(entity =>
            {
                entity.ToTable("glyjc_rcxcqy_test");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(255)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(255)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fzrid)
                    .HasColumnName("FZRID")
                    .HasColumnType("varchar(255)")
                    .HasComment("负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qymc)
                    .HasColumnName("QYMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("区域名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcRcxcqytest1>(entity =>
            {
                entity.ToTable("glyjc_rcxcqytest");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(255)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(255)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fzrid)
                    .HasColumnName("FZRID")
                    .HasColumnType("varchar(255)")
                    .HasComment("负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qymc)
                    .HasColumnName("QYMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("区域名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcRcxcycjl>(entity =>
            {
                entity.ToTable("glyjc_rcxcycjl");

                entity.HasComment("日常巡查异常记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dscqdcs)
                    .HasColumnName("DSCQDCS")
                    .HasColumnType("varchar(500)")
                    .HasComment("当时采取的措施")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dycdyxcd)
                    .HasColumnName("DYCDYXCD")
                    .HasColumnType("varchar(10)")
                    .HasComment("对遗产的影响程度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fswzwz)
                    .HasColumnName("FSWZWZ")
                    .HasColumnType("varchar(255)")
                    .HasComment("发生地点（位置）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jchzp)
                    .HasColumnName("JCHZP")
                    .HasColumnType("varchar(255)")
                    .HasComment("解除后照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("解除时间");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qyid)
                    .HasColumnName("QYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("区域ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rcxcjlid)
                    .HasColumnName("RCXCJLID")
                    .HasColumnType("varchar(50)")
                    .HasComment("日常记录id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfbj)
                    .HasColumnName("SFBJ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否报警")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjcjfs)
                    .HasColumnName("SJCJFS")
                    .HasColumnType("varchar(255)")
                    .HasComment("数据采集方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjms)
                    .HasColumnName("SJMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("事件描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(255)")
                    .HasDefaultValueSql("'999999'")
                    .HasComment("排序");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Xcdid)
                    .HasColumnName("XCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcrq)
                    .HasColumnName("XCRQ")
                    .HasColumnType("datetime")
                    .HasComment("巡查日期");

                entity.Property(e => e.Xcy)
                    .HasColumnName("XCY")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xgjlid)
                    .HasColumnName("XGJLID")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡更记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycjcrid)
                    .HasColumnName("YCJCRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("异常解除人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yclx)
                    .HasColumnName("YCLX")
                    .HasColumnType("varchar(255)")
                    .HasComment("异常类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycsfjc)
                    .HasColumnName("YCSFJC")
                    .HasColumnType("varchar(255)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("异常是否解除")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycsj)
                    .HasColumnName("YCSJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("异常事件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生地点（遗产点）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yczb)
                    .HasColumnName("YCZB")
                    .HasColumnType("varchar(255)")
                    .HasComment("异常指标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysclzp)
                    .HasColumnName("YSCLZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("原始材料照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("异常记录照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcRcxcycjlCopy20200511>(entity =>
            {
                entity.ToTable("glyjc_rcxcycjl_copy20200511");

                entity.HasComment("日常巡查异常记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dscqdcs)
                    .HasColumnName("DSCQDCS")
                    .HasColumnType("varchar(500)")
                    .HasComment("当时采取的措施")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dycdyxcd)
                    .HasColumnName("DYCDYXCD")
                    .HasColumnType("varchar(10)")
                    .HasComment("对遗产的影响程度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fswzwz)
                    .HasColumnName("FSWZWZ")
                    .HasColumnType("varchar(255)")
                    .HasComment("发生地点（位置）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jchzp)
                    .HasColumnName("JCHZP")
                    .HasColumnType("varchar(255)")
                    .HasComment("解除后照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("解除时间");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qyid)
                    .HasColumnName("QYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("区域ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rcxcjlid)
                    .HasColumnName("RCXCJLID")
                    .HasColumnType("varchar(50)")
                    .HasComment("日常记录id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfbj)
                    .HasColumnName("SFBJ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否报警")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjcjfs)
                    .HasColumnName("SJCJFS")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjms)
                    .HasColumnName("SJMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("事件描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(255)")
                    .HasDefaultValueSql("'999999'")
                    .HasComment("排序");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Xcrq)
                    .HasColumnName("XCRQ")
                    .HasColumnType("datetime")
                    .HasComment("巡查日期");

                entity.Property(e => e.Xcy)
                    .HasColumnName("XCY")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xgjlid)
                    .HasColumnName("XGJLID")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡更记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycjcrid)
                    .HasColumnName("YCJCRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("异常解除人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yclx)
                    .HasColumnName("YCLX")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycsfjc)
                    .HasColumnName("YCSFJC")
                    .HasColumnType("varchar(255)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycsj)
                    .HasColumnName("YCSJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("异常事件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生地点（遗产点）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yczb)
                    .HasColumnName("YCZB")
                    .HasColumnType("varchar(255)")
                    .HasComment("异常指标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysclzp)
                    .HasColumnName("YSCLZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("原始材料照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("异常记录照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcRcxcycjlHep20191125150914>(entity =>
            {
                entity.ToTable("glyjc_rcxcycjl_hep20191125150914");

                entity.HasComment("日常巡查异常记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dscqdcs)
                    .HasColumnName("DSCQDCS")
                    .HasColumnType("varchar(500)")
                    .HasComment("当时采取的措施")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dycdyxcd)
                    .HasColumnName("DYCDYXCD")
                    .HasColumnType("varchar(10)")
                    .HasComment("对遗产的影响程度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fswzwz)
                    .HasColumnName("FSWZWZ")
                    .HasColumnType("varchar(255)")
                    .HasComment("发生地点（位置）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jchzp)
                    .HasColumnName("JCHZP")
                    .HasColumnType("varchar(255)")
                    .HasComment("解除后照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("解除时间");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qyid)
                    .HasColumnName("QYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("区域ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rcxcjlid)
                    .HasColumnName("RCXCJLID")
                    .HasColumnType("varchar(50)")
                    .HasComment("日常记录id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfbj)
                    .HasColumnName("SFBJ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否报警")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjcjfs)
                    .HasColumnName("SJCJFS")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjms)
                    .HasColumnName("SJMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("事件描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(255)")
                    .HasDefaultValueSql("'999999'")
                    .HasComment("排序");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Xcrq)
                    .HasColumnName("XCRQ")
                    .HasColumnType("datetime")
                    .HasComment("巡查日期");

                entity.Property(e => e.Xcy)
                    .HasColumnName("XCY")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xgjlid)
                    .HasColumnName("XGJLID")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡更记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycjcrid)
                    .HasColumnName("YCJCRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("异常解除人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yclx)
                    .HasColumnName("YCLX")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycsfjc)
                    .HasColumnName("YCSFJC")
                    .HasColumnType("varchar(255)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycsj)
                    .HasColumnName("YCSJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("异常事件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生地点（遗产点）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yczb)
                    .HasColumnName("YCZB")
                    .HasColumnType("varchar(255)")
                    .HasComment("异常指标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysclzp)
                    .HasColumnName("YSCLZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("原始材料照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("异常记录照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcRcxcyctj>(entity =>
            {
                entity.ToTable("glyjc_rcxcyctj");

                entity.HasComment("日常巡查异常统计");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xxl)
                    .HasColumnName("xxl")
                    .HasComment("巡查量");

                entity.Property(e => e.Ycsl)
                    .HasColumnName("ycsl")
                    .HasComment("异常数量");

                entity.Property(e => e.Year)
                    .HasColumnName("year")
                    .HasColumnType("double(255,0)")
                    .HasComment("年份");

                entity.Property(e => e.Zcsl)
                    .HasColumnName("zcsl")
                    .HasComment("正常数量");
            });

            modelBuilder.Entity<GlyjcRcxczycbg>(entity =>
            {
                entity.ToTable("glyjc_rcxczycbg");

                entity.HasComment("日常巡查正、异常报告表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Jssj)
                    .HasColumnName("JSSJ")
                    .HasColumnType("datetime")
                    .HasComment("结束时间");

                entity.Property(e => e.Kssj)
                    .HasColumnName("KSSJ")
                    .HasColumnType("datetime")
                    .HasComment("开始时间");

                entity.Property(e => e.Ms)
                    .HasColumnName("MS")
                    .HasColumnType("varchar(255)")
                    .HasComment("正异常情况描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qyid)
                    .HasColumnName("QYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("区域ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcdd)
                    .HasColumnName("XCDD")
                    .HasColumnType("varchar(500)")
                    .HasComment("巡查地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcyid)
                    .HasColumnName("XCYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcymc)
                    .HasColumnName("XCYMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcRcxczycbgscjl>(entity =>
            {
                entity.ToTable("glyjc_rcxczycbgscjl");

                entity.HasComment("日常巡查正、异常报告生成记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzid)
                    .HasColumnName("JCPZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scscsj)
                    .HasColumnName("SCSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("上次生成时间");
            });

            modelBuilder.Entity<GlyjcRhwzp>(entity =>
            {
                entity.ToTable("glyjc_rhwzp");

                entity.HasComment("热红外照片路径表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(255)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fhblmjpg)
                    .HasColumnName("FHBLMJPG")
                    .HasColumnType("varchar(10)")
                    .HasComment("风化剥落面积评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Kjg)
                    .HasColumnName("KJG")
                    .HasColumnType("varchar(500)")
                    .HasComment("可见光路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rhw)
                    .HasColumnName("RHW")
                    .HasColumnType("varchar(500)")
                    .HasComment("热红外路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbid)
                    .HasColumnName("SBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(255)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Ssdgspg)
                    .HasColumnName("SSDGSPG")
                    .HasColumnType("varchar(10)")
                    .HasComment("渗水点个数评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssmjpg)
                    .HasColumnName("SSMJPG")
                    .HasColumnType("varchar(10)")
                    .HasComment("渗水面积评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcRhwzpCopy20180920csz>(entity =>
            {
                entity.ToTable("glyjc_rhwzp_copy20180920csz");

                entity.HasComment("热红外照片路径表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(255)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fhblmjpg)
                    .HasColumnName("FHBLMJPG")
                    .HasColumnType("varchar(10)")
                    .HasComment("风化剥落面积评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Kjg)
                    .HasColumnName("KJG")
                    .HasColumnType("varchar(500)")
                    .HasComment("可见光路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rhw)
                    .HasColumnName("RHW")
                    .HasColumnType("varchar(500)")
                    .HasComment("热红外路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbid)
                    .HasColumnName("SBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(255)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Ssdgspg)
                    .HasColumnName("SSDGSPG")
                    .HasColumnType("varchar(10)")
                    .HasComment("渗水点个数评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssmjpg)
                    .HasColumnName("SSMJPG")
                    .HasColumnType("varchar(10)")
                    .HasComment("渗水面积评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcRwb>(entity =>
            {
                entity.ToTable("glyjc_rwb");

                entity.HasComment("任务表");

                entity.HasIndex(e => e.Cjsj)
                    .HasName("index_rwb");

                entity.HasIndex(e => e.Jcpzfaid)
                    .HasName("FK_GLYJC_RWB");

                entity.HasIndex(e => e.Rwkssj)
                    .HasName("index_rwkssj");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Jcpzfaid)
                    .HasColumnName("JCPZFAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置方案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwjssj)
                    .HasColumnName("RWJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("任务结束时间");

                entity.Property(e => e.Rwkssj)
                    .HasColumnName("RWKSSJ")
                    .HasColumnType("datetime")
                    .HasComment("任务开始时间");

                entity.Property(e => e.Rwmc)
                    .HasColumnName("RWMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("任务名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwwcsj)
                    .HasColumnName("RWWCSJ")
                    .HasColumnType("datetime")
                    .HasComment("任务完成时间");

                entity.Property(e => e.Rwzt)
                    .HasColumnName("RWZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzt)
                    .HasColumnName("SJZT")
                    .HasColumnType("varchar(20)")
                    .HasComment("数据状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Jcpzfa)
                    .WithMany(p => p.GlyjcRwb)
                    .HasForeignKey(d => d.Jcpzfaid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("glyjc_rwb_ibfk_1");
            });

            modelBuilder.Entity<GlyjcRwb032615>(entity =>
            {
                entity.ToTable("glyjc_rwb_032615");

                entity.HasComment("任务表");

                entity.HasIndex(e => e.Cjsj)
                    .HasName("index_rwb");

                entity.HasIndex(e => e.Jcpzfaid)
                    .HasName("FK_GLYJC_RWB");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Jcpzfaid)
                    .HasColumnName("JCPZFAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置方案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwjssj)
                    .HasColumnName("RWJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("任务结束时间");

                entity.Property(e => e.Rwkssj)
                    .HasColumnName("RWKSSJ")
                    .HasColumnType("datetime")
                    .HasComment("任务开始时间");

                entity.Property(e => e.Rwmc)
                    .HasColumnName("RWMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("任务名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwzt)
                    .HasColumnName("RWZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzt)
                    .HasColumnName("SJZT")
                    .HasColumnType("varchar(20)")
                    .HasComment("数据状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Jcpzfa)
                    .WithMany(p => p.GlyjcRwb032615)
                    .HasForeignKey(d => d.Jcpzfaid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("glyjc_rwb_032615_ibfk_1");
            });

            modelBuilder.Entity<GlyjcRwbCopy20190125>(entity =>
            {
                entity.ToTable("glyjc_rwb_copy20190125");

                entity.HasComment("任务表");

                entity.HasIndex(e => e.Cjsj)
                    .HasName("index_rwb");

                entity.HasIndex(e => e.Jcpzfaid)
                    .HasName("FK_GLYJC_RWB");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Jcpzfaid)
                    .HasColumnName("JCPZFAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置方案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwjssj)
                    .HasColumnName("RWJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("任务结束时间");

                entity.Property(e => e.Rwkssj)
                    .HasColumnName("RWKSSJ")
                    .HasColumnType("datetime")
                    .HasComment("任务开始时间");

                entity.Property(e => e.Rwmc)
                    .HasColumnName("RWMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("任务名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwzt)
                    .HasColumnName("RWZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzt)
                    .HasColumnName("SJZT")
                    .HasColumnType("varchar(20)")
                    .HasComment("数据状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Jcpzfa)
                    .WithMany(p => p.GlyjcRwbCopy20190125)
                    .HasForeignKey(d => d.Jcpzfaid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("glyjc_rwb_copy20190125_ibfk_1");
            });

            modelBuilder.Entity<GlyjcRwbCopy20200611>(entity =>
            {
                entity.ToTable("glyjc_rwb_copy20200611");

                entity.HasComment("任务表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Jcpzfaid)
                    .HasColumnName("JCPZFAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置方案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwjssj)
                    .HasColumnName("RWJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("任务结束时间");

                entity.Property(e => e.Rwkssj)
                    .HasColumnName("RWKSSJ")
                    .HasColumnType("datetime")
                    .HasComment("任务开始时间");

                entity.Property(e => e.Rwmc)
                    .HasColumnName("RWMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("任务名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwwcsj)
                    .HasColumnName("RWWCSJ")
                    .HasColumnType("datetime")
                    .HasComment("任务完成时间");

                entity.Property(e => e.Rwzt)
                    .HasColumnName("RWZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzt)
                    .HasColumnName("SJZT")
                    .HasColumnType("varchar(20)")
                    .HasComment("数据状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcRwbCopy20200612>(entity =>
            {
                entity.ToTable("glyjc_rwb_copy20200612");

                entity.HasComment("任务表");

                entity.HasIndex(e => e.Cjsj)
                    .HasName("index_rwb");

                entity.HasIndex(e => e.Jcpzfaid)
                    .HasName("FK_GLYJC_RWB");

                entity.HasIndex(e => e.Rwkssj)
                    .HasName("index_rwkssj");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Jcpzfaid)
                    .HasColumnName("JCPZFAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置方案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwjssj)
                    .HasColumnName("RWJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("任务结束时间");

                entity.Property(e => e.Rwkssj)
                    .HasColumnName("RWKSSJ")
                    .HasColumnType("datetime")
                    .HasComment("任务开始时间");

                entity.Property(e => e.Rwmc)
                    .HasColumnName("RWMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("任务名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwwcsj)
                    .HasColumnName("RWWCSJ")
                    .HasColumnType("datetime")
                    .HasComment("任务完成时间");

                entity.Property(e => e.Rwzt)
                    .HasColumnName("RWZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzt)
                    .HasColumnName("SJZT")
                    .HasColumnType("varchar(20)")
                    .HasComment("数据状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Jcpzfa)
                    .WithMany(p => p.GlyjcRwbCopy20200612)
                    .HasForeignKey(d => d.Jcpzfaid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("glyjc_rwb_copy20200612_ibfk_1");
            });

            modelBuilder.Entity<GlyjcRypftj>(entity =>
            {
                entity.ToTable("glyjc_rypftj");

                entity.HasComment("人员评分统计表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dwcshsjl)
                    .HasColumnName("DWCSHSJL")
                    .HasColumnType("int(11)")
                    .HasComment("待完成审核数据量");

                entity.Property(e => e.Fzqy)
                    .HasColumnName("FZQY")
                    .HasColumnType("varchar(50)")
                    .HasComment("负责区域")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gls)
                    .HasColumnName("GLS")
                    .HasColumnType("double(10,2)")
                    .HasComment("公里数");

                entity.Property(e => e.Pf)
                    .HasColumnName("PF")
                    .HasColumnType("double(10,2)");

                entity.Property(e => e.Pflb)
                    .HasColumnName("PFLB")
                    .HasColumnType("varchar(10)")
                    .HasComment("评分类别（0—按月插入，1—按周插入）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgyf)
                    .HasColumnName("PGYF")
                    .HasColumnType("datetime")
                    .HasComment("评估时间（指的是评估的月份）");

                entity.Property(e => e.Qyqddsl)
                    .HasColumnName("QYQDDSL")
                    .HasColumnType("int(11)")
                    .HasComment("区域签到点数量");

                entity.Property(e => e.Qyxcdsl)
                    .HasColumnName("QYXCDSL")
                    .HasColumnType("int(11)")
                    .HasComment("区域巡查点数量");

                entity.Property(e => e.Qyyjjcsl)
                    .HasColumnName("QYYJJCSL")
                    .HasColumnType("int(11)")
                    .HasComment("区域预警解除数量");

                entity.Property(e => e.Qyyjsl)
                    .HasColumnName("QYYJSL")
                    .HasColumnType("int(11)")
                    .HasComment("区域预警数量");

                entity.Property(e => e.Rwsl)
                    .HasColumnName("RWSL")
                    .HasColumnType("int(11)")
                    .HasComment("任务数量");

                entity.Property(e => e.Ryid)
                    .HasColumnName("RYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("人员ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rylb)
                    .HasColumnName("RYLB")
                    .HasColumnType("int(11)")
                    .HasComment("人员类别");

                entity.Property(e => e.Shbtgsjl)
                    .HasColumnName("SHBTGSJL")
                    .HasColumnType("int(11)")
                    .HasComment("审核不通过数据量");

                entity.Property(e => e.Shtgsjl)
                    .HasColumnName("SHTGSJL")
                    .HasColumnType("int(11)")
                    .HasComment("审核通过数据量");

                entity.Property(e => e.Sjtjsl)
                    .HasColumnName("SJTJSL")
                    .HasColumnType("int(11)")
                    .HasComment("数据提交数量");

                entity.Property(e => e.Xshsjzl)
                    .HasColumnName("XSHSJZL")
                    .HasColumnType("int(11)")
                    .HasComment("需审核数据总量");

                entity.Property(e => e.Ycjcsl)
                    .HasColumnName("YCJCSL")
                    .HasColumnType("int(11)")
                    .HasComment("异常解除数量");

                entity.Property(e => e.Yctjsl)
                    .HasColumnName("YCTJSL")
                    .HasColumnType("int(11)")
                    .HasComment("异常提交数量");

                entity.Property(e => e.Ygqrws)
                    .HasColumnName("YGQRWS")
                    .HasColumnType("int(11)")
                    .HasComment("已过期任务数量");

                entity.Property(e => e.Ygqshsjl)
                    .HasColumnName("YGQSHSJL")
                    .HasColumnType("int(11)")
                    .HasComment("已过期审核数据量");

                entity.Property(e => e.Ywcrws)
                    .HasColumnName("YWCRWS")
                    .HasColumnType("int(11)")
                    .HasComment("已完成任务数量");

                entity.Property(e => e.Ywcshsjl)
                    .HasColumnName("YWCSHSJL")
                    .HasColumnType("int(11)")
                    .HasComment("已完成审核数据量");
            });

            modelBuilder.Entity<GlyjcRypftjCopy20181107qhx>(entity =>
            {
                entity.ToTable("glyjc_rypftj_copy20181107qhx");

                entity.HasComment("人员评分统计表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dwcshsjl)
                    .HasColumnName("DWCSHSJL")
                    .HasColumnType("int(11)")
                    .HasComment("待完成审核数据量");

                entity.Property(e => e.Fzqy)
                    .HasColumnName("FZQY")
                    .HasColumnType("varchar(50)")
                    .HasComment("负责区域")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gls)
                    .HasColumnName("GLS")
                    .HasColumnType("double(10,2)")
                    .HasComment("公里数");

                entity.Property(e => e.Pf)
                    .HasColumnName("PF")
                    .HasColumnType("double(10,2)");

                entity.Property(e => e.Pgyf)
                    .HasColumnName("PGYF")
                    .HasColumnType("datetime")
                    .HasComment("评估时间（指的是评估的月份）");

                entity.Property(e => e.Qyqddsl)
                    .HasColumnName("QYQDDSL")
                    .HasColumnType("int(11)")
                    .HasComment("区域签到点数量");

                entity.Property(e => e.Qyxcdsl)
                    .HasColumnName("QYXCDSL")
                    .HasColumnType("int(11)")
                    .HasComment("区域巡查点数量");

                entity.Property(e => e.Qyyjjcsl)
                    .HasColumnName("QYYJJCSL")
                    .HasColumnType("int(11)")
                    .HasComment("区域预警解除数量");

                entity.Property(e => e.Qyyjsl)
                    .HasColumnName("QYYJSL")
                    .HasColumnType("int(11)")
                    .HasComment("区域预警数量");

                entity.Property(e => e.Rwsl)
                    .HasColumnName("RWSL")
                    .HasColumnType("int(11)")
                    .HasComment("任务数量");

                entity.Property(e => e.Ryid)
                    .HasColumnName("RYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("人员ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rylb)
                    .HasColumnName("RYLB")
                    .HasColumnType("int(11)")
                    .HasComment("人员类别");

                entity.Property(e => e.Shbtgsjl)
                    .HasColumnName("SHBTGSJL")
                    .HasColumnType("int(11)")
                    .HasComment("审核不通过数据量");

                entity.Property(e => e.Shtgsjl)
                    .HasColumnName("SHTGSJL")
                    .HasColumnType("int(11)")
                    .HasComment("审核通过数据量");

                entity.Property(e => e.Sjtjsl)
                    .HasColumnName("SJTJSL")
                    .HasColumnType("int(11)")
                    .HasComment("数据提交数量");

                entity.Property(e => e.Xshsjzl)
                    .HasColumnName("XSHSJZL")
                    .HasColumnType("int(11)")
                    .HasComment("需审核数据总量");

                entity.Property(e => e.Ycjcsl)
                    .HasColumnName("YCJCSL")
                    .HasColumnType("int(11)")
                    .HasComment("异常解除数量");

                entity.Property(e => e.Yctjsl)
                    .HasColumnName("YCTJSL")
                    .HasColumnType("int(11)")
                    .HasComment("异常提交数量");

                entity.Property(e => e.Ygqrws)
                    .HasColumnName("YGQRWS")
                    .HasColumnType("int(11)")
                    .HasComment("已过期任务数量");

                entity.Property(e => e.Ygqshsjl)
                    .HasColumnName("YGQSHSJL")
                    .HasColumnType("int(11)")
                    .HasComment("已过期审核数据量");

                entity.Property(e => e.Ywcrws)
                    .HasColumnName("YWCRWS")
                    .HasColumnType("int(11)")
                    .HasComment("已完成任务数量");

                entity.Property(e => e.Ywcshsjl)
                    .HasColumnName("YWCSHSJL")
                    .HasColumnType("int(11)")
                    .HasComment("已完成审核数据量");
            });

            modelBuilder.Entity<GlyjcSbjcd>(entity =>
            {
                entity.ToTable("glyjc_sbjcd");

                entity.HasComment("设备监测点");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dtid)
                    .HasColumnName("DTID")
                    .HasColumnType("varchar(50)")
                    .HasComment("底图ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dtlx)
                    .HasColumnName("DTLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("底图类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdmc)
                    .HasColumnName("JCDMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbid)
                    .HasColumnName("SBID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(50)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.X)
                    .HasColumnType("double(10,2)")
                    .HasComment("初始坐标X");

                entity.Property(e => e.Y)
                    .HasColumnType("double(10,2)")
                    .HasComment("初始坐标Y");

                entity.Property(e => e.Z)
                    .HasColumnType("double(10,2)")
                    .HasComment("初始坐标Z");

                entity.Property(e => e.Zb)
                    .HasColumnName("ZB")
                    .HasColumnType("text")
                    .HasComment("坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcSbjcdJcpz>(entity =>
            {
                entity.ToTable("glyjc_sbjcd_jcpz");

                entity.HasComment("设备监测点（采集方式-设备采集）_监测配置");

                entity.HasIndex(e => e.Jcpzid)
                    .HasName("IXFK_glyjc_sbjcd_glyjc_jcpz");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Csjl)
                    .HasColumnName("CSJL")
                    .HasColumnType("double(10,4)")
                    .HasComment(@"初始距离-两点间初始距离（为性能考虑而缓存中间值）
");

                entity.Property(e => e.Jcdbid)
                    .HasColumnName("JCDBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdid)
                    .HasColumnName("JCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzid)
                    .HasColumnName("JCPZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjbid)
                    .HasColumnName("JCSJBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbid)
                    .HasColumnName("SBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysjcdid1)
                    .HasColumnName("YSJCDID1")
                    .HasColumnType("varchar(50)")
                    .HasComment(@"原始监测点ID1
")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysjcdid2)
                    .HasColumnName("YSJCDID2")
                    .HasColumnType("varchar(50)")
                    .HasComment(@"原始监测点ID2
")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Jcpz)
                    .WithMany(p => p.GlyjcSbjcdJcpz)
                    .HasForeignKey(d => d.Jcpzid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_glyjc_sbjcd_glyjc_jcpz");
            });

            modelBuilder.Entity<GlyjcSblx>(entity =>
            {
                entity.ToTable("glyjc_sblx");

                entity.HasComment("设备类型");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzsm)
                    .HasColumnName("BZSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("创建时间");

                entity.Property(e => e.Fl)
                    .HasColumnName("FL")
                    .HasColumnType("varchar(50)")
                    .HasComment("分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gg)
                    .HasColumnName("GG")
                    .HasColumnType("varchar(50)")
                    .HasComment("规格")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jksm)
                    .HasColumnName("JKSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("接口说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbcs)
                    .HasColumnName("SBCS")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备厂商")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbsjcdx)
                    .HasColumnName("SBSJCDX")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备所监测对象")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbtp)
                    .HasColumnName("SBTP")
                    .HasColumnType("varchar(200)")
                    .HasComment("设备图片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yljj)
                    .HasColumnName("YLJJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("原理简介")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcSblxCopy>(entity =>
            {
                entity.ToTable("glyjc_sblx_copy");

                entity.HasComment("设备类型");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzsm)
                    .HasColumnName("BZSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("创建时间");

                entity.Property(e => e.Fl)
                    .HasColumnName("FL")
                    .HasColumnType("varchar(50)")
                    .HasComment("分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gg)
                    .HasColumnName("GG")
                    .HasColumnType("varchar(50)")
                    .HasComment("规格")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jksm)
                    .HasColumnName("JKSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("接口说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbcs)
                    .HasColumnName("SBCS")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备厂商")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbsjcdx)
                    .HasColumnName("SBSJCDX")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备所监测对象")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbtp)
                    .HasColumnName("SBTP")
                    .HasColumnType("varchar(200)")
                    .HasComment("设备图片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yljj)
                    .HasColumnName("YLJJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("原理简介")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcSblxjcx>(entity =>
            {
                entity.ToTable("glyjc_sblxjcx");

                entity.HasIndex(e => e.Sblxid)
                    .HasName("sblxID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzsjgid)
                    .HasColumnName("JCPZSJGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置树结构ID（该监测项顶级父级，用于设备归类）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcxid)
                    .HasColumnName("JCXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sblxid)
                    .HasColumnName("SBLXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备类型ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Sblx)
                    .WithMany(p => p.GlyjcSblxjcx)
                    .HasForeignKey(d => d.Sblxid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("glyjc_sblxjcx_ibfk_1");
            });

            modelBuilder.Entity<GlyjcSblxyjcdbdygx>(entity =>
            {
                entity.ToTable("glyjc_sblxyjcdbdygx");

                entity.HasComment("设备类型与监测点表对应关系");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdbid)
                    .HasColumnName("JCDBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjbid)
                    .HasColumnName("JCSJBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sblxid)
                    .HasColumnName("SBLXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备类型ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcSbqd>(entity =>
            {
                entity.ToTable("glyjc_sbqd");

                entity.HasComment("设备清单");

                entity.HasIndex(e => e.Lx)
                    .HasName("glyjc_sbqd_ibfk_1");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Azdjd)
                    .HasColumnName("AZDJD")
                    .HasComment("安装点经度");

                entity.Property(e => e.Azdszycdid)
                    .HasColumnName("AZDSZYCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("安装点所在遗产点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Azdwd)
                    .HasColumnName("AZDWD")
                    .HasComment("安装点纬度");

                entity.Property(e => e.Azdwzms)
                    .HasColumnName("AZDWZMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("安装点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bcjcdxid)
                    .HasColumnName("BCJCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("补充监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzsm)
                    .HasColumnName("BZSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cgrq)
                    .HasColumnName("CGRQ")
                    .HasColumnType("datetime")
                    .HasComment("采购日期");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dmgc)
                    .HasColumnName("DMGC")
                    .HasColumnType("varchar(50)")
                    .HasComment("地面高程(m)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fzr)
                    .HasColumnName("FZR")
                    .HasColumnType("varchar(50)")
                    .HasComment("负责人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbbh)
                    .HasColumnName("SBBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbmc)
                    .HasColumnName("SBMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkkzq)
                    .HasColumnName("SFKKZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否可控周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssqy)
                    .HasColumnName("SSQY")
                    .HasColumnType("varchar(50)")
                    .HasComment("所属区域")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tpfj)
                    .HasColumnName("TPFJ")
                    .HasColumnType("varchar(255)")
                    .HasDefaultValueSql("''")
                    .HasComment("图片附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasComment("周期");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqlb)
                    .HasColumnName("ZQLB")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.LxNavigation)
                    .WithMany(p => p.GlyjcSbqd)
                    .HasForeignKey(d => d.Lx)
                    .HasConstraintName("glyjc_sbqd_ibfk_1");
            });

            modelBuilder.Entity<GlyjcSbqd0716>(entity =>
            {
                entity.ToTable("glyjc_sbqd_0716");

                entity.HasComment("设备清单");

                entity.HasIndex(e => e.Lx)
                    .HasName("glyjc_sbqd_ibfk_1");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Azdjd)
                    .HasColumnName("AZDJD")
                    .HasComment("安装点经度");

                entity.Property(e => e.Azdszycdid)
                    .HasColumnName("AZDSZYCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("安装点所在遗产点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Azdwd)
                    .HasColumnName("AZDWD")
                    .HasComment("安装点纬度");

                entity.Property(e => e.Azdwzms)
                    .HasColumnName("AZDWZMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("安装点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bcjcdxid)
                    .HasColumnName("BCJCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("补充监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzsm)
                    .HasColumnName("BZSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cgrq)
                    .HasColumnName("CGRQ")
                    .HasColumnType("datetime")
                    .HasComment("采购日期");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fzr)
                    .HasColumnName("FZR")
                    .HasColumnType("varchar(50)")
                    .HasComment("负责人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbbh)
                    .HasColumnName("SBBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbmc)
                    .HasColumnName("SBMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkkzq)
                    .HasColumnName("SFKKZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否可控周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssqy)
                    .HasColumnName("SSQY")
                    .HasColumnType("varchar(50)")
                    .HasComment("所属区域")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tpfj)
                    .HasColumnName("TPFJ")
                    .HasColumnType("varchar(255)")
                    .HasDefaultValueSql("''")
                    .HasComment("图片附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasComment("周期");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqlb)
                    .HasColumnName("ZQLB")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.LxNavigation)
                    .WithMany(p => p.GlyjcSbqd0716)
                    .HasForeignKey(d => d.Lx)
                    .HasConstraintName("glyjc_sbqd_0716_ibfk_1");
            });

            modelBuilder.Entity<GlyjcSbqdCopy>(entity =>
            {
                entity.ToTable("glyjc_sbqd_copy");

                entity.HasComment("设备清单");

                entity.HasIndex(e => e.Lx)
                    .HasName("FK_glyjc_sbqd");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Azdjd)
                    .HasColumnName("AZDJD")
                    .HasComment("安装点经度");

                entity.Property(e => e.Azdszycdid)
                    .HasColumnName("AZDSZYCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("安装点所在遗产点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Azdwd)
                    .HasColumnName("AZDWD")
                    .HasComment("安装点纬度");

                entity.Property(e => e.Azdwzms)
                    .HasColumnName("AZDWZMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("安装点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bcjcdxid)
                    .HasColumnName("BCJCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("补充监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzsm)
                    .HasColumnName("BZSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cgrq)
                    .HasColumnName("CGRQ")
                    .HasColumnType("datetime")
                    .HasComment("采购日期");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fzr)
                    .HasColumnName("FZR")
                    .HasColumnType("varchar(50)")
                    .HasComment("负责人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbbh)
                    .HasColumnName("SBBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbmc)
                    .HasColumnName("SBMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkkzq)
                    .HasColumnName("SFKKZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否可控周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tpfj)
                    .HasColumnName("TPFJ")
                    .HasColumnType("varchar(255)")
                    .HasDefaultValueSql("''")
                    .HasComment("图片附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasComment("周期");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqlb)
                    .HasColumnName("ZQLB")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.LxNavigation)
                    .WithMany(p => p.GlyjcSbqdCopy)
                    .HasForeignKey(d => d.Lx)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("glyjc_sbqd_copy_ibfk_1");
            });

            modelBuilder.Entity<GlyjcSbqdCopy1>(entity =>
            {
                entity.ToTable("glyjc_sbqd_copy1");

                entity.HasComment("设备清单");

                entity.HasIndex(e => e.Lx)
                    .HasName("glyjc_sbqd_ibfk_1");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Azdjd)
                    .HasColumnName("AZDJD")
                    .HasComment("安装点经度");

                entity.Property(e => e.Azdszycdid)
                    .HasColumnName("AZDSZYCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("安装点所在遗产点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Azdwd)
                    .HasColumnName("AZDWD")
                    .HasComment("安装点纬度");

                entity.Property(e => e.Azdwzms)
                    .HasColumnName("AZDWZMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("安装点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bcjcdxid)
                    .HasColumnName("BCJCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("补充监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzsm)
                    .HasColumnName("BZSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cgrq)
                    .HasColumnName("CGRQ")
                    .HasColumnType("datetime")
                    .HasComment("采购日期");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fzr)
                    .HasColumnName("FZR")
                    .HasColumnType("varchar(50)")
                    .HasComment("负责人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbbh)
                    .HasColumnName("SBBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbmc)
                    .HasColumnName("SBMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkkzq)
                    .HasColumnName("SFKKZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否可控周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssqy)
                    .HasColumnName("SSQY")
                    .HasColumnType("varchar(50)")
                    .HasComment("所属区域")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tpfj)
                    .HasColumnName("TPFJ")
                    .HasColumnType("varchar(255)")
                    .HasDefaultValueSql("''")
                    .HasComment("图片附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasComment("周期");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqlb)
                    .HasColumnName("ZQLB")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.LxNavigation)
                    .WithMany(p => p.GlyjcSbqdCopy1)
                    .HasForeignKey(d => d.Lx)
                    .HasConstraintName("glyjc_sbqd_copy1_ibfk_1");
            });

            modelBuilder.Entity<GlyjcSbqdCopy20181203Qhx>(entity =>
            {
                entity.ToTable("glyjc_sbqd_copy20181203_qhx");

                entity.HasComment("设备清单");

                entity.HasIndex(e => e.Lx)
                    .HasName("glyjc_sbqd_ibfk_1");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Azdjd)
                    .HasColumnName("AZDJD")
                    .HasComment("安装点经度");

                entity.Property(e => e.Azdszycdid)
                    .HasColumnName("AZDSZYCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("安装点所在遗产点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Azdwd)
                    .HasColumnName("AZDWD")
                    .HasComment("安装点纬度");

                entity.Property(e => e.Azdwzms)
                    .HasColumnName("AZDWZMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("安装点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bcjcdxid)
                    .HasColumnName("BCJCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("补充监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzsm)
                    .HasColumnName("BZSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cgrq)
                    .HasColumnName("CGRQ")
                    .HasColumnType("datetime")
                    .HasComment("采购日期");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dmgc)
                    .HasColumnName("DMGC")
                    .HasColumnType("varchar(50)")
                    .HasComment("地面高程(m)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fzr)
                    .HasColumnName("FZR")
                    .HasColumnType("varchar(50)")
                    .HasComment("负责人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbbh)
                    .HasColumnName("SBBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbmc)
                    .HasColumnName("SBMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkkzq)
                    .HasColumnName("SFKKZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否可控周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssqy)
                    .HasColumnName("SSQY")
                    .HasColumnType("varchar(50)")
                    .HasComment("所属区域")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tpfj)
                    .HasColumnName("TPFJ")
                    .HasColumnType("varchar(255)")
                    .HasDefaultValueSql("''")
                    .HasComment("图片附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasComment("周期");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqlb)
                    .HasColumnName("ZQLB")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.LxNavigation)
                    .WithMany(p => p.GlyjcSbqdCopy20181203Qhx)
                    .HasForeignKey(d => d.Lx)
                    .HasConstraintName("glyjc_sbqd_copy20181203_qhx_ibfk_1");
            });

            modelBuilder.Entity<GlyjcSbqdSxtbflj>(entity =>
            {
                entity.ToTable("glyjc_sbqd_sxtbflj");

                entity.HasComment("摄像头播放路径");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Devid)
                    .HasColumnName("DEVID")
                    .HasColumnType("varchar(10)")
                    .HasComment("设备唯一标识ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dtjcsjid)
                    .HasColumnName("DTJCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素单体基础数据id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Filename)
                    .HasColumnName("FILENAME")
                    .HasColumnType("varchar(255)")
                    .HasComment("Red5服务器下的文件名（只要文件名，前面路径不要。不区分格式：mp4，flv都放这里面。例如：xxx.flv）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Flv)
                    .HasColumnName("FLV")
                    .HasColumnType("varchar(255)")
                    .HasComment("FLV路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ip)
                    .HasColumnName("IP")
                    .HasColumnType("varchar(255)")
                    .HasComment("视频流IP")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Islive)
                    .HasColumnName("ISLIVE")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否是直播")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.M3u8)
                    .HasColumnName("M3U8")
                    .HasColumnType("varchar(255)")
                    .HasComment("M3U8路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mp4)
                    .HasColumnName("MP4")
                    .HasColumnType("varchar(255)")
                    .HasComment("MP4路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Resid)
                    .IsRequired()
                    .HasColumnName("RESID")
                    .HasColumnType("varchar(50)")
                    .HasComment("资源id，关联硬件设备")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rtmp)
                    .HasColumnName("RTMP")
                    .HasColumnType("varchar(255)")
                    .HasComment("RTMP路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbid)
                    .HasColumnName("SBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备清单表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfjt)
                    .HasColumnName("SFJT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否接通(0-否，1-是)");
            });

            modelBuilder.Entity<GlyjcShrzb>(entity =>
            {
                entity.ToTable("glyjc_shrzb");

                entity.HasComment("审核日志表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.BmcYw)
                    .HasColumnName("BMC_YW")
                    .HasColumnType("varchar(50)")
                    .HasComment("表名称（英文）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Shrz)
                    .HasColumnName("SHRZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核日志")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzjid)
                    .HasColumnName("SJZJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcShstatic>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_shstatic");

                entity.HasComment("审核工作监管数据统计表");

                entity.Property(e => e.Bmc)
                    .HasColumnName("bmc")
                    .HasColumnType("varchar(50)")
                    .HasComment("表名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjnum)
                    .HasColumnName("cjnum")
                    .HasColumnType("varchar(10)")
                    .HasComment("总数量")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Date)
                    .HasColumnName("date")
                    .HasColumnType("varchar(20)")
                    .HasComment("数据更新时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fid)
                    .HasColumnName("fid")
                    .HasColumnType("varchar(10)")
                    .HasComment("一级目录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzfaid)
                    .HasColumnName("jcpzfaid")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置方案id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("jcx")
                    .HasColumnType("varchar(10)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(10)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwjssj)
                    .HasColumnName("rwjssj")
                    .HasColumnType("varchar(20)")
                    .HasComment("任务截止时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("sfszqxjc")
                    .HasColumnType("varchar(10)")
                    .HasComment("周期监测类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shuser)
                    .HasColumnName("shuser")
                    .HasColumnType("varchar(50)")
                    .HasComment("用户角色")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjnum)
                    .HasColumnName("tjnum")
                    .HasColumnType("varchar(10)")
                    .HasComment("需审核条数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wshnum)
                    .HasColumnName("wshnum")
                    .HasColumnType("varchar(10)")
                    .HasComment("未审核条数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ygqnum)
                    .HasColumnName("ygqnum")
                    .HasColumnType("varchar(10)")
                    .HasComment("已过期条数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytgnum)
                    .HasColumnName("ytgnum")
                    .HasColumnType("varchar(10)")
                    .HasComment("已通过条数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcShstaticCopy1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_shstatic_copy1");

                entity.HasComment("审核工作监管数据统计表");

                entity.Property(e => e.Bmc)
                    .HasColumnName("bmc")
                    .HasColumnType("varchar(50)")
                    .HasComment("表名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjnum)
                    .HasColumnName("cjnum")
                    .HasColumnType("varchar(10)")
                    .HasComment("总数量")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Date)
                    .HasColumnName("date")
                    .HasColumnType("varchar(20)")
                    .HasComment("数据更新时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fid)
                    .HasColumnName("fid")
                    .HasColumnType("varchar(10)")
                    .HasComment("一级目录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzfaid)
                    .HasColumnName("jcpzfaid")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置方案id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("jcx")
                    .HasColumnType("varchar(10)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(10)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwjssj)
                    .HasColumnName("rwjssj")
                    .HasColumnType("varchar(20)")
                    .HasComment("任务截止时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("sfszqxjc")
                    .HasColumnType("varchar(10)")
                    .HasComment("周期监测类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shuser)
                    .HasColumnName("shuser")
                    .HasColumnType("varchar(50)")
                    .HasComment("用户角色")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjnum)
                    .HasColumnName("tjnum")
                    .HasColumnType("varchar(10)")
                    .HasComment("需审核条数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wshnum)
                    .HasColumnName("wshnum")
                    .HasColumnType("varchar(10)")
                    .HasComment("未审核条数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ygqnum)
                    .HasColumnName("ygqnum")
                    .HasColumnType("varchar(10)")
                    .HasComment("已过期条数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytgnum)
                    .HasColumnName("ytgnum")
                    .HasColumnType("varchar(10)")
                    .HasComment("已通过条数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcShuiwei>(entity =>
            {
                entity.ToTable("glyjc_shuiwei");

                entity.HasComment("云平台-水位");

                entity.HasIndex(e => e.Jcsj)
                    .HasName("JCSJ");

                entity.HasIndex(e => e.Paraid)
                    .HasName("PARAID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(0)")
                    .HasComment("对接人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jcz)
                    .HasColumnName("JCZ")
                    .HasColumnType("double(10,2)")
                    .HasComment("监测值，单位:m");

                entity.Property(e => e.Jssj)
                    .HasColumnName("JSSJ")
                    .HasColumnType("datetime")
                    .HasComment("接收时间");

                entity.Property(e => e.Paraid)
                    .HasColumnName("PARAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("参数编码ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Yssjid)
                    .HasColumnName("YSSJID")
                    .HasColumnType("int(11)")
                    .HasComment("原始数据ID");
            });

            modelBuilder.Entity<GlyjcShuiwei0823>(entity =>
            {
                entity.ToTable("glyjc_shuiwei_0823");

                entity.HasComment("云平台-水位");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jcz)
                    .HasColumnName("JCZ")
                    .HasColumnType("double(10,2)")
                    .HasComment("监测值");

                entity.Property(e => e.Jssj)
                    .HasColumnName("JSSJ")
                    .HasColumnType("datetime")
                    .HasComment("接收时间");

                entity.Property(e => e.Paraid)
                    .HasColumnName("PARAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("参数编码ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Yssjid)
                    .HasColumnName("YSSJID")
                    .HasColumnType("int(11)")
                    .HasComment("原始数据ID");
            });

            modelBuilder.Entity<GlyjcShuiweihistorydata>(entity =>
            {
                entity.ToTable("glyjc_shuiweihistorydata");

                entity.HasComment("水位历史数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(50)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Npjsw)
                    .HasColumnName("NPJSW")
                    .HasColumnType("double(10,2)")
                    .HasComment("年平均水位(m)");

                entity.Property(e => e.Nzdsw)
                    .HasColumnName("NZDSW")
                    .HasColumnType("double(10,2)")
                    .HasComment("年最低水位(m)");

                entity.Property(e => e.Nzgsw)
                    .HasColumnName("NZGSW")
                    .HasColumnType("double(10,2)")
                    .HasComment("年最高水位(m)");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Xh)
                    .HasColumnName("XH")
                    .HasColumnType("int(4)")
                    .HasComment("序号");
            });

            modelBuilder.Entity<GlyjcSjjcxb>(entity =>
            {
                entity.ToTable("glyjc_sjjcxb");

                entity.HasComment("实际监测项表(线下维护，前端维护)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjfs)
                    .HasColumnName("CJFS")
                    .HasColumnType("tinyint(4)")
                    .HasComment("采集方式");

                entity.Property(e => e.Dw)
                    .HasColumnName("DW")
                    .HasColumnType("varchar(50)")
                    .HasComment("单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcxid)
                    .HasColumnName("JCXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcxmc)
                    .HasColumnName("JCXMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("tinyint(4)")
                    .HasComment("类型");

                entity.Property(e => e.Lxzd)
                    .HasColumnName("LXZD")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjzd)
                    .HasColumnName("YJZD")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjzdlx)
                    .HasColumnName("YJZDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警字段类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpzd)
                    .HasColumnName("ZPZD")
                    .HasColumnType("varchar(255)")
                    .HasComment("照片字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcSjztjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_sjztjl");

                entity.HasComment("数据状态记录表");

                entity.Property(e => e.Bid)
                    .HasColumnName("bid")
                    .HasColumnType("varchar(50)")
                    .HasComment("表id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("rwid")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("shrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("shyc")
                    .HasColumnType("varchar(1000)")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("sjid")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcSlSzl>(entity =>
            {
                entity.ToTable("glyjc_sl_szl");

                entity.HasComment("设备接入-渗漏");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(0)")
                    .HasComment("对接人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcdid)
                    .HasColumnName("JCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcz)
                    .HasColumnName("JCZ")
                    .HasColumnType("double(10,2)")
                    .HasComment("监测值");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");
            });

            modelBuilder.Entity<GlyjcSlWdl>(entity =>
            {
                entity.ToTable("glyjc_sl_wdl");

                entity.HasComment("渗水/积水病害文档数据规则");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jssd)
                    .HasColumnName("JSSD")
                    .HasColumnType("varchar(50)")
                    .HasComment("积水深度（人工估算填写）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pfzj)
                    .HasColumnName("PFZJ")
                    .HasColumnType("int(11)")
                    .HasComment("评分增减");

                entity.Property(e => e.Pfzz)
                    .HasColumnName("PFZZ")
                    .HasColumnType("int(11)")
                    .HasComment("评分终值");

                entity.Property(e => e.Rhw)
                    .HasColumnName("RHW")
                    .HasColumnType("varchar(100)")
                    .HasComment("热红外照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scjysj)
                    .HasColumnName("SCJYSJ")
                    .HasColumnType("datetime")
                    .HasComment("上次降雨时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjly)
                    .HasColumnName("SJLY")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'2'")
                    .HasComment("数据来源（1,热红外设备；2，移动采集系统）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Slmj)
                    .HasColumnName("SLMJ")
                    .HasComment("渗水面积(cm2)");

                entity.Property(e => e.Slmjpg)
                    .HasColumnName("SLMJPG")
                    .HasColumnType("varchar(50)")
                    .HasComment("渗水面积评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssdge)
                    .HasColumnName("SSDGE")
                    .HasColumnType("int(20)")
                    .HasComment("渗水个数（个）");

                entity.Property(e => e.Ssdgepg)
                    .HasColumnName("SSDGEPG")
                    .HasColumnType("varchar(200)")
                    .HasComment("渗水点个数评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tq)
                    .HasColumnName("TQ")
                    .HasColumnType("varchar(300)")
                    .HasComment("天气")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称（移动端采集照片和设备可见光照片）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcSlWdlBhdcjcgzqkjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("glyjc_sl_wdl_bhdcjcgzqkjl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzmc)
                    .HasColumnName("JCWZMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jssd)
                    .HasColumnName("JSSD")
                    .HasColumnType("varchar(50)")
                    .HasComment("积水深度（人工估算填写）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rhw)
                    .HasColumnName("RHW")
                    .HasColumnType("varchar(100)")
                    .HasComment("热红外照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scjysj)
                    .HasColumnName("SCJYSJ")
                    .HasColumnType("datetime")
                    .HasComment("上次降雨时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjly)
                    .HasColumnName("SJLY")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'2'")
                    .HasComment("数据来源（1,热红外设备；2，移动采集系统）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Slmj)
                    .HasColumnName("SLMJ")
                    .HasComment("渗水面积(cm2)");

                entity.Property(e => e.Slmjpg)
                    .HasColumnName("SLMJPG")
                    .HasColumnType("varchar(50)")
                    .HasComment("渗水面积评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssdge)
                    .HasColumnName("SSDGE")
                    .HasColumnType("int(20)")
                    .HasComment("渗水个数（个）");

                entity.Property(e => e.Ssdgepg)
                    .HasColumnName("SSDGEPG")
                    .HasColumnType("varchar(200)")
                    .HasComment("渗水点个数评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zbxx)
                    .HasColumnName("ZBXX")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称（移动端采集照片和设备可见光照片）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcSlWdlCopy20181025>(entity =>
            {
                entity.ToTable("glyjc_sl_wdl_copy20181025");

                entity.HasComment("渗水/积水病害文档数据规则");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jssd)
                    .HasColumnName("JSSD")
                    .HasColumnType("varchar(50)")
                    .HasComment("积水深度（人工估算填写）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rhw)
                    .HasColumnName("RHW")
                    .HasColumnType("varchar(100)")
                    .HasComment("热红外照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scjysj)
                    .HasColumnName("SCJYSJ")
                    .HasColumnType("datetime")
                    .HasComment("上次降雨时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjly)
                    .HasColumnName("SJLY")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'2'")
                    .HasComment("数据来源（1,热红外设备；2，移动采集系统）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Slmj)
                    .HasColumnName("SLMJ")
                    .HasComment("渗水面积(cm2)");

                entity.Property(e => e.Slmjpg)
                    .HasColumnName("SLMJPG")
                    .HasColumnType("varchar(50)")
                    .HasComment("渗水面积评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssdge)
                    .HasColumnName("SSDGE")
                    .HasColumnType("int(20)")
                    .HasComment("渗水个数（个）");

                entity.Property(e => e.Ssdgepg)
                    .HasColumnName("SSDGEPG")
                    .HasColumnType("varchar(200)")
                    .HasComment("渗水点个数评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tq)
                    .HasColumnName("TQ")
                    .HasColumnType("varchar(300)")
                    .HasComment("天气")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称（移动端采集照片和设备可见光照片）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcSlWdlCopy20190121>(entity =>
            {
                entity.ToTable("glyjc_sl_wdl_copy20190121");

                entity.HasComment("渗水/积水病害文档数据规则");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jssd)
                    .HasColumnName("JSSD")
                    .HasColumnType("varchar(50)")
                    .HasComment("积水深度（人工估算填写）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rhw)
                    .HasColumnName("RHW")
                    .HasColumnType("varchar(100)")
                    .HasComment("热红外照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scjysj)
                    .HasColumnName("SCJYSJ")
                    .HasColumnType("datetime")
                    .HasComment("上次降雨时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjly)
                    .HasColumnName("SJLY")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'2'")
                    .HasComment("数据来源（1,热红外设备；2，移动采集系统）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Slmj)
                    .HasColumnName("SLMJ")
                    .HasComment("渗水面积(cm2)");

                entity.Property(e => e.Slmjpg)
                    .HasColumnName("SLMJPG")
                    .HasColumnType("varchar(50)")
                    .HasComment("渗水面积评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssdge)
                    .HasColumnName("SSDGE")
                    .HasColumnType("int(20)")
                    .HasComment("渗水个数（个）");

                entity.Property(e => e.Ssdgepg)
                    .HasColumnName("SSDGEPG")
                    .HasColumnType("varchar(200)")
                    .HasComment("渗水点个数评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tq)
                    .HasColumnName("TQ")
                    .HasColumnType("varchar(300)")
                    .HasComment("天气")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称（移动端采集照片和设备可见光照片）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcSlWdlCopy20200604>(entity =>
            {
                entity.ToTable("glyjc_sl_wdl_copy20200604");

                entity.HasComment("渗水/积水病害文档数据规则");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jssd)
                    .HasColumnName("JSSD")
                    .HasColumnType("varchar(50)")
                    .HasComment("积水深度（人工估算填写）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rhw)
                    .HasColumnName("RHW")
                    .HasColumnType("varchar(100)")
                    .HasComment("热红外照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scjysj)
                    .HasColumnName("SCJYSJ")
                    .HasColumnType("datetime")
                    .HasComment("上次降雨时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjly)
                    .HasColumnName("SJLY")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'2'")
                    .HasComment("数据来源（1,热红外设备；2，移动采集系统）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Slmj)
                    .HasColumnName("SLMJ")
                    .HasComment("渗水面积(cm2)");

                entity.Property(e => e.Slmjpg)
                    .HasColumnName("SLMJPG")
                    .HasColumnType("varchar(50)")
                    .HasComment("渗水面积评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssdge)
                    .HasColumnName("SSDGE")
                    .HasColumnType("int(20)")
                    .HasComment("渗水个数（个）");

                entity.Property(e => e.Ssdgepg)
                    .HasColumnName("SSDGEPG")
                    .HasColumnType("varchar(200)")
                    .HasComment("渗水点个数评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tq)
                    .HasColumnName("TQ")
                    .HasColumnType("varchar(300)")
                    .HasComment("天气")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称（移动端采集照片和设备可见光照片）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcSlxx>(entity =>
            {
                entity.ToTable("glyjc_slxx");

                entity.HasComment("水利信息");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Hsycsj)
                    .HasColumnName("HSYCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("海水异常数据")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Phz)
                    .HasColumnName("PHZ")
                    .HasComment("PH值");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Swei)
                    .HasColumnName("SWEI")
                    .HasComment("水位");

                entity.Property(e => e.Swen)
                    .HasColumnName("SWEN")
                    .HasColumnType("int(11)")
                    .HasComment("水温");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yd)
                    .HasColumnName("YD")
                    .HasComment("盐度");
            });

            modelBuilder.Entity<GlyjcSpwySzl>(entity =>
            {
                entity.ToTable("glyjc_spwy_szl");

                entity.HasComment("水平位移数值类");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcrq)
                    .HasColumnName("DCRQ")
                    .HasColumnType("datetime")
                    .HasComment("调查日期");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcpzfaid)
                    .HasColumnName("JCPZFAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置方案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Spwyz)
                    .HasColumnName("SPWYZ")
                    .HasComment("水平位移值");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcSsykcd>(entity =>
            {
                entity.ToTable("glyjc_ssykcd");

                entity.HasComment("瞬时游客程度");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jdmc)
                    .HasColumnName("JDMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("景点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("审核状态");

                entity.Property(e => e.Ssykcd)
                    .HasColumnName("SSYKCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("瞬时游客程度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcStbczk>(entity =>
            {
                entity.ToTable("glyjc_stbczk");

                entity.HasComment("山体保存状况");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcdx)
                    .HasColumnName("JCDX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sj)
                    .HasColumnName("SJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Stbhqk)
                    .HasColumnName("STBHQK")
                    .HasColumnType("varchar(50)")
                    .HasComment("山体变化情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tp)
                    .HasColumnName("TP")
                    .HasColumnType("varchar(200)")
                    .HasComment("图片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcStlsWdl>(entity =>
            {
                entity.ToTable("glyjc_stls_wdl");

                entity.HasComment("水土流失【土地流失】文档数据规则");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Clz1)
                    .HasColumnName("CLZ1")
                    .HasColumnType("varchar(50)")
                    .HasComment("测量值1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Clz2)
                    .HasColumnName("CLZ2")
                    .HasColumnType("varchar(50)")
                    .HasComment("测量值2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Clz3)
                    .HasColumnName("CLZ3")
                    .HasColumnType("varchar(50)")
                    .HasComment("测量值3")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Clz4)
                    .HasColumnName("CLZ4")
                    .HasColumnType("varchar(50)")
                    .HasComment("测量值4")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Clz5)
                    .HasColumnName("CLZ5")
                    .HasColumnType("varchar(50)")
                    .HasComment("测量值5")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pfzj)
                    .HasColumnName("PFZJ")
                    .HasColumnType("int(11)")
                    .HasComment("评分增减");

                entity.Property(e => e.Pfzz)
                    .HasColumnName("PFZZ")
                    .HasColumnType("int(11)")
                    .HasComment("评分终值");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Stlswzsd)
                    .HasColumnName("STLSWZSD")
                    .HasColumnType("double(15,2)")
                    .HasComment("水土流失位置深度（mm，估算）");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcStyycystjxzpjjl>(entity =>
            {
                entity.ToTable("glyjc_styycystjxzpjjl");

                entity.HasComment("天际轮廓线监测数据【建设控制】");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdlx)
                    .HasColumnName("BDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("变动类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdqkms)
                    .HasColumnName("BDQKMS")
                    .HasColumnType("varchar(50)")
                    .HasComment("变动情况描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdyxcd)
                    .HasColumnName("BDYXCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Lkxid)
                    .IsRequired()
                    .HasColumnName("LKXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("轮廓线ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("XMMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzsffsbd)
                    .HasColumnName("XZSFFSBD")
                    .HasColumnType("varchar(50)")
                    .HasComment("现状是否发生变动")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcSwWdl>(entity =>
            {
                entity.ToTable("glyjc_sw_wdl");

                entity.HasComment("生物病害(文档类)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cd)
                    .HasColumnName("CD")
                    .HasComment("长度");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Kd)
                    .HasColumnName("KD")
                    .HasComment("宽度");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Swbhmj)
                    .HasColumnName("SWBHMJ")
                    .HasComment("生物病害面积");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcSyda>(entity =>
            {
                entity.ToTable("glyjc_syda");

                entity.HasComment("四有档案");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dajlsj)
                    .HasColumnName("DAJLSJ")
                    .HasColumnType("datetime")
                    .HasComment("档案建立时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Lb)
                    .HasColumnName("LB")
                    .HasColumnType("varchar(50)")
                    .HasComment("类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcSygnbhjltjbhjl>(entity =>
            {
                entity.ToTable("glyjc_sygnbhjltjbhjl");

                entity.HasComment("使用功能变化记录图及变化记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasComment("ONLYID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qksm)
                    .HasColumnName("QKSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("情况说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(50)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sygnbhturl)
                    .HasColumnName("SYGNBHTURL")
                    .HasColumnType("varchar(200)")
                    .HasComment("使用功能变化图URL")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcSygnjzt>(entity =>
            {
                entity.ToTable("glyjc_sygnjzt");

                entity.HasComment("使用功能基准图");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhsj)
                    .HasColumnName("BHSJ")
                    .HasColumnType("datetime")
                    .HasComment("变化时间");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Code)
                    .HasColumnName("Code_")
                    .HasColumnType("varchar(6)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dbt)
                    .HasColumnName("DBT")
                    .HasColumnType("varchar(255)")
                    .HasComment("对比图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.FuncPrest)
                    .HasColumnName("Func_Prest")
                    .HasColumnType("varchar(12)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Health)
                    .HasColumnType("varchar(8)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzt)
                    .HasColumnName("JZT")
                    .HasColumnType("varchar(255)")
                    .HasComment("基准图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.NameCn)
                    .HasColumnName("Name_cn")
                    .HasColumnType("varchar(16)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.OnlyId)
                    .HasColumnName("OnlyID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qksm)
                    .HasColumnName("QKSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("情况说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(200)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sygnjzturl)
                    .HasColumnName("SYGNJZTURL")
                    .HasColumnType("varchar(200)")
                    .HasComment("使用功能基准图URL")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ywid)
                    .HasColumnName("YWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcSygnjztdtxx>(entity =>
            {
                entity.ToTable("glyjc_sygnjztdtxx");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("使用功能基准图ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbxx)
                    .HasColumnName("ZBXX")
                    .HasColumnType("varchar(500)")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcSystem>(entity =>
            {
                entity.ToTable("glyjc_system");

                entity.HasComment("系统功能模块表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Index)
                    .HasColumnName("INDEX")
                    .HasColumnType("tinyint(4)")
                    .HasComment("当前系统的顺序");

                entity.Property(e => e.Sysname)
                    .HasColumnName("SYSNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统模块名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcSystem20200526>(entity =>
            {
                entity.ToTable("glyjc_system_20200526");

                entity.HasComment("系统功能模块表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Index)
                    .HasColumnName("INDEX")
                    .HasColumnType("tinyint(4)")
                    .HasComment("当前系统的顺序");

                entity.Property(e => e.Sysname)
                    .HasColumnName("SYSNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统模块名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcSywb>(entity =>
            {
                entity.ToTable("glyjc_sywb");

                entity.HasComment("申遗文本");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcSz>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_sz");

                entity.HasComment("水质");

                entity.Property(e => e.Bod).HasColumnName("BOD");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cod).HasColumnName("COD");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sj)
                    .HasColumnName("SJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcSzjl>(entity =>
            {
                entity.ToTable("glyjc_szjl");

                entity.HasComment("受灾记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fssj)
                    .HasColumnName("FSSJ")
                    .HasColumnType("datetime")
                    .HasComment("发生时间");

                entity.Property(e => e.Jzjftrze)
                    .HasColumnName("JZJFTRZE")
                    .HasColumnType("int(20)")
                    .HasComment("救灾经费投入总额");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Szqkms)
                    .HasColumnName("SZQKMS")
                    .HasColumnType("varchar(1000)")
                    .HasComment("受灾情况描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wwzscd)
                    .HasColumnName("WWZSCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("文物灾损程度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zhlx)
                    .HasColumnName("ZHLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("灾害类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqcqdffcs)
                    .HasColumnName("ZQCQDFFCS")
                    .HasColumnType("varchar(500)")
                    .HasComment("灾前采取的防范措施")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zrhjjcjlbh)
                    .HasColumnName("ZRHJJCJLBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("自然环境监测记录编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcSzlyjyzsz>(entity =>
            {
                entity.ToTable("glyjc_szlyjyzsz");

                entity.HasComment("数值类预警阈值设置");

                entity.HasIndex(e => e.Yjpzfaid)
                    .HasName("FK_szlyjyzsz_YJPZFAID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ljyjlx)
                    .HasColumnName("LJYJLX")
                    .HasColumnType("varchar(200)")
                    .HasComment("预警阈值类型（沉降）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yjdj)
                    .HasColumnName("YJDJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjpzfaid)
                    .HasColumnName("YJPZFAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警配置方案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxxsm)
                    .HasColumnName("YJXXSM")
                    .HasColumnType("varchar(1000)")
                    .HasComment("预警信息说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yzdz)
                    .HasColumnName("YZDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("阈值大值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yzxz)
                    .HasColumnName("YZXZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("阈值小值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcTcpbjzSouvSmcl>(entity =>
            {
                entity.ToTable("glyjc_tcpbjz_souv_smcl");

                entity.HasComment("突出普遍价值（SOUV）声明材料");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.CnsmcldsjNf)
                    .HasColumnName("CNSMCLDSJ_NF")
                    .HasColumnType("datetime")
                    .HasComment("采纳声明材料的时间（年份）");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcTdlyght>(entity =>
            {
                entity.ToTable("glyjc_tdlyght");

                entity.HasComment("土地利用规划图");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tdlyghturl)
                    .HasColumnName("TDLYGHTURL")
                    .HasColumnType("varchar(299)")
                    .HasComment("土地利用规划图URL")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcTdlyxzt>(entity =>
            {
                entity.ToTable("glyjc_tdlyxzt");

                entity.HasComment("土地利用现状图");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Area)
                    .HasColumnName("AREA")
                    .HasColumnType("double(100,0)")
                    .HasComment("面积");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nd)
                    .HasColumnName("ND")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tdlyxz)
                    .HasColumnName("TDLYXZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("土地利用性质 ")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tdlyxzturl)
                    .HasColumnName("TDLYXZTURL")
                    .HasColumnType("varchar(200)")
                    .HasComment("土地利用现状图URL")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ydlx)
                    .HasColumnName("YDLX")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcTdlyxztbhjl>(entity =>
            {
                entity.ToTable("glyjc_tdlyxztbhjl");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(40)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("text")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Year)
                    .HasColumnName("YEAR")
                    .HasColumnType("varchar(20)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcTdlyxztndjl>(entity =>
            {
                entity.ToTable("glyjc_tdlyxztndjl");

                entity.HasComment("土地利用现状图年度记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(0)")
                    .HasComment("对接入ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(200)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Url)
                    .HasColumnName("URL")
                    .HasColumnType("varchar(299)")
                    .HasComment("土地利用现状图URL")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcTf>(entity =>
            {
                entity.ToTable("glyjc_tf");

                entity.HasComment("台风");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bh)
                    .HasColumnName("BH")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dldd)
                    .HasColumnName("DLDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("登陆地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fqbj)
                    .HasColumnName("FQBJ")
                    .HasColumnType("int(11)")
                    .HasComment("风圈半径");

                entity.Property(e => e.Fssj)
                    .HasColumnName("FSSJ")
                    .HasColumnType("datetime")
                    .HasComment("发生时间");

                entity.Property(e => e.Lj)
                    .HasColumnName("LJ")
                    .HasColumnType("varchar(2000)")
                    .HasComment("路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qd)
                    .HasColumnName("QD")
                    .HasColumnType("varchar(50)")
                    .HasComment("强度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qy)
                    .HasColumnName("QY")
                    .HasColumnType("int(11)")
                    .HasComment("气压");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sj)
                    .HasColumnName("SJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ydfx)
                    .HasColumnName("YDFX")
                    .HasColumnType("varchar(50)")
                    .HasComment("移动方向")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydfxyc)
                    .HasColumnName("YDFXYC")
                    .HasColumnType("varchar(50)")
                    .HasComment("移动方向预测")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydsd)
                    .HasColumnName("YDSD")
                    .HasColumnType("int(11)")
                    .HasComment("移动速度");

                entity.Property(e => e.Ywmc)
                    .HasColumnName("YWMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("英文名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zwmc)
                    .HasColumnName("ZWMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("中文名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zxfl)
                    .HasColumnName("ZXFL")
                    .HasComment("中心风力");

                entity.Property(e => e.Zxwzjd)
                    .HasColumnName("ZXWZJD")
                    .HasComment("中心位置经度");

                entity.Property(e => e.Zxwzwd)
                    .HasColumnName("ZXWZWD")
                    .HasComment("中心位置纬度");
            });

            modelBuilder.Entity<GlyjcTfszjl>(entity =>
            {
                entity.ToTable("glyjc_tfszjl");

                entity.HasComment("台风受灾记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cxsj)
                    .HasColumnName("CXSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("持续时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间(发生时间)");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(4)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tfdj)
                    .HasColumnName("TFDJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("台风等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcTjlkxjichusj>(entity =>
            {
                entity.ToTable("glyjc_tjlkxjichusj");

                entity.HasComment("天际轮廓线基础数据【建设控制】");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fx)
                    .HasColumnName("FX")
                    .HasColumnType("tinyint(4)")
                    .HasComment("方向0-3：东南西北");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Lkxms)
                    .HasColumnName("LKXMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("轮廓线描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pzwzms)
                    .HasColumnName("PZWZMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("拍照位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Zp)
                    .HasColumnName("ZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcTlWdl>(entity =>
            {
                entity.ToTable("glyjc_tl_wdl");

                entity.HasComment("脱落病害(文档类)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tlcd)
                    .HasColumnName("TLCD")
                    .HasComment("脱落长度");

                entity.Property(e => e.Tlkd)
                    .HasColumnName("TLKD")
                    .HasComment("脱落宽度");

                entity.Property(e => e.Tlmj)
                    .HasColumnName("TLMJ")
                    .HasComment("脱落面积");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcTrsq>(entity =>
            {
                entity.ToTable("glyjc_trsq");

                entity.HasComment("土壤墒情");

                entity.HasIndex(e => e.Jcsj)
                    .HasName("JCSJ");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jcz)
                    .HasColumnName("JCZ")
                    .HasColumnType("double(10,2)")
                    .HasComment("监测值");

                entity.Property(e => e.Jssj)
                    .HasColumnName("JSSJ")
                    .HasColumnType("datetime")
                    .HasComment("接收时间");

                entity.Property(e => e.Paraid)
                    .HasColumnName("PARAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("参数编码ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Yssjid)
                    .HasColumnName("YSSJID")
                    .HasColumnType("int(11)")
                    .HasComment("原始数据ID");
            });

            modelBuilder.Entity<GlyjcTrsqCopy>(entity =>
            {
                entity.ToTable("glyjc_trsq_copy");

                entity.HasComment("土壤墒情");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jcz)
                    .HasColumnName("JCZ")
                    .HasColumnType("double(10,2)")
                    .HasComment("监测值");

                entity.Property(e => e.Jssj)
                    .HasColumnName("JSSJ")
                    .HasColumnType("datetime")
                    .HasComment("接收时间");

                entity.Property(e => e.Paraid)
                    .HasColumnName("PARAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("参数编码ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Yssjid)
                    .HasColumnName("YSSJID")
                    .HasColumnType("int(11)")
                    .HasComment("原始数据ID");
            });

            modelBuilder.Entity<GlyjcTrsqCsz0812>(entity =>
            {
                entity.ToTable("glyjc_trsq_csz-0812");

                entity.HasComment("土壤墒情");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jcz)
                    .HasColumnName("JCZ")
                    .HasColumnType("double(10,2)")
                    .HasComment("监测值");

                entity.Property(e => e.Jssj)
                    .HasColumnName("JSSJ")
                    .HasColumnType("datetime")
                    .HasComment("接收时间");

                entity.Property(e => e.Paraid)
                    .HasColumnName("PARAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("参数编码ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Yssjid)
                    .HasColumnName("YSSJID")
                    .HasColumnType("int(11)")
                    .HasComment("原始数据ID");
            });

            modelBuilder.Entity<GlyjcTsWdl>(entity =>
            {
                entity.ToTable("glyjc_ts_wdl");

                entity.HasComment("褪色病害(文档类)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tscd)
                    .HasColumnName("TSCD")
                    .HasComment("褪色长度");

                entity.Property(e => e.Tskd)
                    .HasColumnName("TSKD")
                    .HasComment("褪色宽度");

                entity.Property(e => e.Tsmj)
                    .HasColumnName("TSMJ")
                    .HasComment("褪色面积");
            });

            modelBuilder.Entity<GlyjcTtWdl>(entity =>
            {
                entity.ToTable("glyjc_tt_wdl");

                entity.HasComment("坍塌文档数据规则");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Pfzj)
                    .HasColumnName("PFZJ")
                    .HasColumnType("int(11)")
                    .HasComment("评分增减");

                entity.Property(e => e.Pfzz)
                    .HasColumnName("PFZZ")
                    .HasColumnType("int(11)")
                    .HasComment("评分终值");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(255)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ttmj)
                    .HasColumnName("TTMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("土体坍塌面积（cm2）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcTtblWdl>(entity =>
            {
                entity.ToTable("glyjc_ttbl_wdl");

                entity.HasComment("土体剥落文档数据规则");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(255)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ttblmj)
                    .HasColumnName("TTBLMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("土体剥落面积（㎡人工估算填写）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ttblsd)
                    .HasColumnName("TTBLSD")
                    .HasColumnType("varchar(50)")
                    .HasComment("土体剥落深度（cm人工估算填写）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcWhj>(entity =>
            {
                entity.ToTable("glyjc_whj");

                entity.HasComment("新微环境表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dqsd)
                    .HasColumnName("DQSD")
                    .HasColumnType("double(6,2)")
                    .HasComment("大气湿度");

                entity.Property(e => e.Dqwd)
                    .HasColumnName("DQWD")
                    .HasColumnType("double(6,2)")
                    .HasComment("大气温度");

                entity.Property(e => e.Fs)
                    .HasColumnName("FS")
                    .HasColumnType("double(6,2)")
                    .HasComment("风速");

                entity.Property(e => e.Fx)
                    .HasColumnName("FX")
                    .HasColumnType("double(6,2)")
                    .HasComment("风向");

                entity.Property(e => e.Jcdid)
                    .HasColumnName("JCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(255)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(5)")
                    .HasComment("审核状态");
            });

            modelBuilder.Entity<GlyjcWrj>(entity =>
            {
                entity.ToTable("glyjc_wrj");

                entity.HasComment("无人机数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Date)
                    .HasColumnName("DATE")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasColumnType("varchar(50)")
                    .HasComment("经度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(100)")
                    .HasComment("视频名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasColumnType("varchar(50)")
                    .HasComment("纬度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcWwbhgcfa>(entity =>
            {
                entity.ToTable("glyjc_wwbhgcfa");

                entity.HasComment("文物保护工程方案");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Btywj)
                    .HasColumnName("BTYWJ")
                    .HasColumnType("varchar(255)")
                    .HasComment("不同意及其他文件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzdw)
                    .HasColumnName("BZDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dfpt)
                    .HasColumnName("DFPT")
                    .HasColumnType("varchar(255)")
                    .HasComment("方案设计经费-地方配套")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Famc)
                    .HasColumnName("FAMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gcid)
                    .HasColumnName("GCID")
                    .HasColumnType("varchar(200)")
                    .HasComment("保护工程id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gjbz)
                    .HasColumnName("GJBZ")
                    .HasColumnType("varchar(255)")
                    .HasComment("方案设计经费-国家补助")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kssj)
                    .HasColumnName("KSSJ")
                    .HasColumnType("datetime")
                    .HasComment("方案开始时间");

                entity.Property(e => e.Pfnf)
                    .HasColumnName("PFNF")
                    .HasColumnType("varchar(255)")
                    .HasComment("方案批复年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pfwjmc)
                    .HasColumnName("PFWJMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("方案批复文件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pzwh)
                    .HasColumnName("PZWH")
                    .HasColumnType("varchar(50)")
                    .HasComment("批准文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfsb)
                    .HasColumnName("SFSB")
                    .HasColumnType("varchar(255)")
                    .HasComment("是否上报世界遗产中心")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcWwbhgcfaBhzsyhjzzgcjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("glyjc_wwbhgcfa_bhzsyhjzzgcjl");

                entity.Property(e => e.Btywj)
                    .HasColumnName("BTYWJ")
                    .HasColumnType("varchar(255)")
                    .HasComment("不同意及其他文件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzdw)
                    .HasColumnName("BZDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dfpt)
                    .HasColumnName("DFPT")
                    .HasColumnType("varchar(255)")
                    .HasComment("方案设计经费-地方配套")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Famc)
                    .HasColumnName("FAMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gcid)
                    .HasColumnName("GCID")
                    .HasColumnType("varchar(200)")
                    .HasComment("保护工程id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gjbz)
                    .HasColumnName("GJBZ")
                    .HasColumnType("varchar(255)")
                    .HasComment("方案设计经费-国家补助")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kssj)
                    .HasColumnName("KSSJ")
                    .HasColumnType("datetime")
                    .HasComment("方案开始时间");

                entity.Property(e => e.Pfnf)
                    .HasColumnName("PFNF")
                    .HasColumnType("varchar(255)")
                    .HasComment("方案批复年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pfwjmc)
                    .HasColumnName("PFWJMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("方案批复文件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pzwh)
                    .HasColumnName("PZWH")
                    .HasColumnType("varchar(50)")
                    .HasComment("批准文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfsb)
                    .HasColumnName("SFSB")
                    .HasColumnType("varchar(255)")
                    .HasComment("是否上报世界遗产中心")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("XMMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcWwbhwxda>(entity =>
            {
                entity.ToTable("glyjc_wwbhwxda");

                entity.HasComment("文物保护维修档案");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dalx)
                    .HasColumnName("DALX")
                    .HasColumnType("varchar(50)")
                    .HasComment("档案类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gcid)
                    .HasColumnName("GCID")
                    .HasColumnType("varchar(200)")
                    .HasComment("工程id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcWxyt>(entity =>
            {
                entity.ToTable("glyjc_wxyt");

                entity.HasComment("卫星云图");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sj)
                    .HasColumnName("SJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yttp)
                    .HasColumnName("YTTP")
                    .HasColumnType("varchar(200)")
                    .HasComment("云图图片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcWxyxhhp>(entity =>
            {
                entity.ToTable("glyjc_wxyxhhp");

                entity.HasComment("卫星影像或航片");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fbl)
                    .HasColumnName("FBL")
                    .HasColumnType("varchar(255)")
                    .HasComment("分辨率")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(10)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(255)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(20)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("date")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Syt)
                    .HasColumnName("SYT")
                    .HasColumnType("varchar(500)")
                    .HasComment("示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Url)
                    .HasColumnName("URL")
                    .HasColumnType("varchar(255)")
                    .HasComment("影像URL")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wxyxlfj)
                    .HasColumnName("WXYXLFJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("卫星影像类附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcWxyxhhpCopy>(entity =>
            {
                entity.ToTable("glyjc_wxyxhhp_copy");

                entity.HasComment("卫星影像或航片");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fbl)
                    .HasColumnName("FBL")
                    .HasColumnType("varchar(255)")
                    .HasComment("分辨率")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(10)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(255)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(20)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("date")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Syt)
                    .HasColumnName("SYT")
                    .HasColumnType("varchar(500)")
                    .HasComment("示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Url)
                    .HasColumnName("URL")
                    .HasColumnType("varchar(255)")
                    .HasComment("影像URL")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wxyxlfj)
                    .HasColumnName("WXYXLFJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("卫星影像类附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcXcgj>(entity =>
            {
                entity.ToTable("glyjc_xcgj");

                entity.HasComment("巡查轨迹表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("经度");

                entity.Property(e => e.Ryid)
                    .HasColumnName("RYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("人员ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("纬度");

                entity.Property(e => e.Xcrq)
                    .HasColumnName("XCRQ")
                    .HasColumnType("datetime")
                    .HasComment("巡查日期");
            });

            modelBuilder.Entity<GlyjcXcyb>(entity =>
            {
                entity.ToTable("glyjc_xcyb");

                entity.HasComment("巡查月报");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("djrid")
                    .HasColumnType("varchar(0)")
                    .HasComment("对接人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("djsj")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Month)
                    .HasColumnName("month")
                    .HasColumnType("varchar(10)")
                    .HasComment("月")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasColumnType("varchar(100)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("sfkdj")
                    .HasColumnType("tinyint(255)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(255)")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("shbtgsm")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("shrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("shyc")
                    .HasColumnType("varchar(255)")
                    .HasComment("审核流程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("tinyint(255)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("tjsj")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Year)
                    .HasColumnName("year")
                    .HasColumnType("varchar(10)")
                    .HasComment("年")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcXgdgljl>(entity =>
            {
                entity.ToTable("glyjc_xgdgljl");

                entity.HasComment("巡更点管理记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Ewm)
                    .HasColumnName("EWM")
                    .HasColumnType("varchar(200)")
                    .HasComment("二维码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fjyc)
                    .HasColumnName("FJYC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附近遗产")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(255)")
                    .HasComment("点类型（0-遗址打卡点，1-设备打卡点）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Point)
                    .HasColumnName("POINT")
                    .HasColumnType("varchar(255)")
                    .HasComment("点坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Point25d)
                    .HasColumnName("POINT25D")
                    .HasColumnType("varchar(255)")
                    .HasComment("2.5纬坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qyid)
                    .HasColumnName("QYID")
                    .HasColumnType("varchar(255)")
                    .HasComment("区域ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sx)
                    .HasColumnName("SX")
                    .HasColumnType("varchar(50)")
                    .HasComment("属性（遗产区/缓冲区）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Szfw)
                    .HasColumnName("SZFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("所在范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcXgdgljlCopy20200511>(entity =>
            {
                entity.ToTable("glyjc_xgdgljl_copy20200511");

                entity.HasComment("巡更点管理记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Ewm)
                    .HasColumnName("EWM")
                    .HasColumnType("varchar(200)")
                    .HasComment("二维码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fjyc)
                    .HasColumnName("FJYC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附近遗产")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(255)")
                    .HasComment("点类型（巡查点，签到点）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Point)
                    .HasColumnName("POINT")
                    .HasColumnType("varchar(255)")
                    .HasComment("点坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qyid)
                    .HasColumnName("QYID")
                    .HasColumnType("varchar(255)")
                    .HasComment("区域ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sx)
                    .HasColumnName("SX")
                    .HasColumnType("varchar(50)")
                    .HasComment("属性（遗产区/缓冲区）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Szfw)
                    .HasColumnName("SZFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("所在范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcXgjlb>(entity =>
            {
                entity.ToTable("glyjc_xgjlb");

                entity.HasComment("巡更记录表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdid)
                    .HasColumnName("CJDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dqjd)
                    .HasColumnName("DQJD")
                    .HasComment("当前经度");

                entity.Property(e => e.Dqwd)
                    .HasColumnName("DQWD")
                    .HasComment("当前纬度");

                entity.Property(e => e.Qkms)
                    .HasColumnName("QKMS")
                    .HasColumnType("varchar(100)")
                    .HasComment("情况描述")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xgdid)
                    .HasColumnName("XGDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡更点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xgr)
                    .HasColumnName("XGR")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡更人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xgsj)
                    .HasColumnName("XGSJ")
                    .HasColumnType("datetime")
                    .HasComment("巡更时间");
            });

            modelBuilder.Entity<GlyjcXgxfxBhZrhj>(entity =>
            {
                entity.ToTable("glyjc_xgxfx_bh_zrhj");

                entity.HasComment("相关性分析_病害自然环境关联表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhqdid)
                    .HasColumnName("BHQDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害清单ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("创建时间");

                entity.Property(e => e.Zrhjqdid)
                    .HasColumnName("ZRHJQDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("自然环境清单ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcXgxfxBhwzqd>(entity =>
            {
                entity.ToTable("glyjc_xgxfx_bhwzqd");

                entity.HasComment("相关性分析_病害位置清单");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwzid)
                    .HasColumnName("BHWZID")
                    .HasColumnType("varchar(255)")
                    .HasComment("病害位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwzmc)
                    .HasColumnName("BHWZMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("病害位置名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dw)
                    .HasColumnName("DW")
                    .HasColumnType("varchar(255)")
                    .HasComment("数据对应的单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcxdatafield)
                    .HasColumnName("JCXDATAFIELD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项数据字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcxid)
                    .HasColumnName("JCXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcxpointfield)
                    .HasColumnName("JCXPOINTFIELD")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测项点位字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcxtimefield)
                    .HasColumnName("JCXTIMEFIELD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项时间字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcXgxfxZrhjqd>(entity =>
            {
                entity.ToTable("glyjc_xgxfx_zrhjqd");

                entity.HasComment("相关性分析_自然环境清单");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dw)
                    .HasColumnName("DW")
                    .HasColumnType("varchar(255)")
                    .HasComment("数据对应的单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcxdatafield)
                    .HasColumnName("JCXDATAFIELD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项数据字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcxid)
                    .HasColumnName("JCXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcxpointfield)
                    .HasColumnName("JCXPOINTFIELD")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测项点位字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcxtimefield)
                    .HasColumnName("JCXTIMEFIELD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项时间字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zrhjmc)
                    .HasColumnName("ZRHJMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("自然环境名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcXjxmgzjl>(entity =>
            {
                entity.ToTable("glyjc_xjxmgzjl");

                entity.HasComment("新建项目跟踪记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfwg)
                    .HasColumnName("SFWG")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否完工")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjwgsj)
                    .HasColumnName("SJWGSJ")
                    .HasColumnType("datetime")
                    .HasComment("实际完工时间");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Xchjzplj)
                    .HasColumnName("XCHJZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("现场环境照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xjxmid)
                    .HasColumnName("XJXMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("新建项目ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xjxmjskzqk)
                    .HasColumnName("XJXMJSKZQK")
                    .HasColumnType("varchar(50)")
                    .HasComment(" 新建项目建设控制情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("XMMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmms)
                    .HasColumnName("XMMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("项目描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcXjxmgzjlBfhfafmjl>(entity =>
            {
                entity.ToTable("glyjc_xjxmgzjl_bfhfafmjl");

                entity.HasComment("新建项目跟踪_不符合方案方面记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bfhfafm)
                    .HasColumnName("BFHFAFM")
                    .HasColumnType("varchar(10)")
                    .HasComment("不符合方案方面枚举")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bfhfafmjtms)
                    .HasColumnName("BFHFAFMJTMS")
                    .HasColumnType("varchar(255)")
                    .HasComment("不符合方案方面具体描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Xjxmgzjlid)
                    .HasColumnName("XJXMGZJLID")
                    .HasColumnType("varchar(50)")
                    .HasComment("新建项目跟踪记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcXjxmjcwz>(entity =>
            {
                entity.ToTable("glyjc_xjxmjcwz");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzmc)
                    .HasColumnName("JCWZMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzms)
                    .HasColumnName("JCWZMS")
                    .HasColumnType("text")
                    .HasComment("监测位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzsyt)
                    .HasColumnName("JCWZSYT")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(255)")
                    .HasComment("排序");

                entity.Property(e => e.Zb)
                    .HasColumnName("ZB")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbsjid)
                    .HasColumnName("ZBSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主表数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcXjxmjl>(entity =>
            {
                entity.ToTable("glyjc_xjxmjl");

                entity.HasComment("新建项目记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Csjzz)
                    .HasColumnName("CSJZZ")
                    .HasColumnType("varchar(255)")
                    .HasComment("层数基准值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gd)
                    .HasColumnName("GD")
                    .HasComment("高度");

                entity.Property(e => e.Gdjzz)
                    .HasColumnName("GDJZZ")
                    .HasColumnType("varchar(255)")
                    .HasComment("高度基准值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Jgsj)
                    .HasColumnName("JGSJ")
                    .HasColumnType("datetime")
                    .HasComment("竣工时间");

                entity.Property(e => e.Jsdd)
                    .HasColumnName("JSDD")
                    .HasColumnType("varchar(200)")
                    .HasComment("建设地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jsmd)
                    .HasColumnName("JSMD")
                    .HasColumnType("varchar(500)")
                    .HasComment("建设目的")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kgsj)
                    .HasColumnName("KGSJ")
                    .HasColumnType("datetime")
                    .HasComment("开工时间");

                entity.Property(e => e.Lb)
                    .HasColumnName("LB")
                    .HasColumnType("varchar(10)")
                    .HasComment("类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mjjzz)
                    .HasColumnName("MJJZZ")
                    .HasColumnType("varchar(255)")
                    .HasComment("面积基准值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qtjzz)
                    .HasColumnName("QTJZZ")
                    .HasColumnType("varchar(255)")
                    .HasComment("其他基准值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scjzz)
                    .HasColumnName("SCJZZ")
                    .HasColumnType("varchar(255)")
                    .HasComment("色彩基准值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfazjsxkdfajx)
                    .HasColumnName("SFAZJSXKDFAJX")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否按照建设许可的方案进行");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Sfzdwwbmty)
                    .HasColumnName("SFZDWWBMTY")
                    .HasColumnType("varchar(200)")
                    .HasComment("是否征得文物部门同意")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Spyq)
                    .HasColumnName("SPYQ")
                    .HasColumnType("text")
                    .HasComment("审批要求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Syt)
                    .HasColumnName("SYT")
                    .HasColumnType("varchar(500)")
                    .HasComment("示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wjhqff)
                    .HasColumnName("WJHQFF")
                    .HasColumnType("varchar(4)")
                    .HasComment("违建获取方法")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wwbmpzxkwh)
                    .HasColumnName("WWBMPZXKWH")
                    .HasColumnType("varchar(50)")
                    .HasComment("文物部门批准许可文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xjxmbh)
                    .HasColumnName("XJXMBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("新建项目编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xjxmgcfa)
                    .HasColumnName("XJXMGCFA")
                    .HasColumnType("varchar(200)")
                    .HasComment("新建项目工程方案")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmjswztlj)
                    .HasColumnName("XMJSWZTLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("项目建设位置图路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmlb)
                    .HasColumnName("XMLB")
                    .HasColumnType("varchar(4)")
                    .HasComment("项目类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("XMMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmwz)
                    .HasColumnName("XMWZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("项目位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xsjzz)
                    .HasColumnName("XSJZZ")
                    .HasColumnType("varchar(255)")
                    .HasComment("形式基准值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zdmj)
                    .HasColumnName("ZDMJ")
                    .HasComment("占地面积");
            });

            modelBuilder.Entity<GlyjcXjxmjldtxx>(entity =>
            {
                entity.ToTable("glyjc_xjxmjldtxx");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("新建项目ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbxx)
                    .HasColumnName("ZBXX")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcXjxmjlwzdtxx>(entity =>
            {
                entity.ToTable("glyjc_xjxmjlwzdtxx");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("新建项目位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbxx)
                    .HasColumnName("ZBXX")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcXxghzxqkjl>(entity =>
            {
                entity.ToTable("glyjc_xxghzxqkjl");

                entity.HasComment("现行规划执行情况记录");

                entity.HasIndex(e => e.Bhglghbzid)
                    .HasName("fk_alkdfjaisjoei");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhglghbzid)
                    .HasColumnName("BHGLGHBZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护管理规划编制")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Ghxmlb)
                    .HasColumnName("GHXMLB")
                    .HasColumnType("varchar(50)")
                    .HasComment("规划项目类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jqghxm)
                    .HasColumnName("JQGHXM")
                    .HasColumnType("varchar(500)")
                    .HasComment("近期规划项目")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sm)
                    .HasColumnName("SM")
                    .HasColumnType("text")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sszt)
                    .HasColumnName("SSZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wssyy)
                    .HasColumnName("WSSYY")
                    .HasColumnType("varchar(500)")
                    .HasComment("未实施原因")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zxqkzhpj)
                    .HasColumnName("ZXQKZHPJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("执行情况综合评价")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Bhglghbz)
                    .WithMany(p => p.GlyjcXxghzxqkjl)
                    .HasForeignKey(d => d.Bhglghbzid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("glyjc_xxghzxqkjl_ibfk_1");
            });

            modelBuilder.Entity<GlyjcXxghzxqkjlBhglghbzjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("glyjc_xxghzxqkjl_bhglghbzjl");

                entity.Property(e => e.Bhglghbzid)
                    .HasColumnName("BHGLGHBZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护管理规划编制")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Ghxmlb)
                    .HasColumnName("GHXMLB")
                    .HasColumnType("varchar(50)")
                    .HasComment("规划项目类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.GhxmlbDesc)
                    .HasColumnName("GHXMLB_DESC")
                    .HasColumnType("varchar(255)")
                    .HasComment("类别名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jqghxm)
                    .HasColumnName("JQGHXM")
                    .HasColumnType("varchar(500)")
                    .HasComment("近期规划项目")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sm)
                    .HasColumnName("SM")
                    .HasColumnType("text")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sszt)
                    .HasColumnName("SSZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wssyy)
                    .HasColumnName("WSSYY")
                    .HasColumnType("varchar(500)")
                    .HasComment("未实施原因")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zxqkzhpj)
                    .HasColumnName("ZXQKZHPJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("执行情况综合评价")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcXxjlb>(entity =>
            {
                entity.ToTable("glyjc_xxjlb");

                entity.HasComment("消息记录表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fromuser)
                    .HasColumnName("FROMUSER")
                    .HasColumnType("varchar(50)")
                    .HasComment("FROMUSER")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Isread)
                    .HasColumnName("ISREAD")
                    .HasColumnType("tinyint(4)")
                    .HasComment("READ");

                entity.Property(e => e.Msg)
                    .HasColumnName("MSG")
                    .HasColumnType("varchar(1000)")
                    .HasComment("CONTENT")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sendtime)
                    .HasColumnName("SENDTIME")
                    .HasColumnType("datetime")
                    .HasComment("TIME");

                entity.Property(e => e.Touser)
                    .HasColumnName("TOUSER")
                    .HasColumnType("varchar(50)")
                    .HasComment("TOUSER")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcXxjlbCopy1>(entity =>
            {
                entity.ToTable("glyjc_xxjlb_copy1");

                entity.HasComment("消息记录表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fromuser)
                    .HasColumnName("FROMUSER")
                    .HasColumnType("varchar(50)")
                    .HasComment("FROMUSER")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Isread)
                    .HasColumnName("ISREAD")
                    .HasColumnType("tinyint(4)")
                    .HasComment("READ");

                entity.Property(e => e.Msg)
                    .HasColumnName("MSG")
                    .HasColumnType("varchar(1000)")
                    .HasComment("CONTENT")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sendtime)
                    .HasColumnName("SENDTIME")
                    .HasColumnType("datetime")
                    .HasComment("TIME");

                entity.Property(e => e.Touser)
                    .HasColumnName("TOUSER")
                    .HasColumnType("varchar(50)")
                    .HasComment("TOUSER")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcXyaxfxtyjxx>(entity =>
            {
                entity.ToTable("glyjc_xyaxfxtyjxx");

                entity.HasComment("现有安消防系统硬件信息");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jkttsl)
                    .HasColumnName("JKTTSL")
                    .HasColumnType("int(11)")
                    .HasComment("监控探头数量");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tzje)
                    .HasColumnName("TZJE")
                    .HasComment("投资金额");

                entity.Property(e => e.Xfxtmc)
                    .HasColumnName("XFXTMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("消防系统名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xtgcms)
                    .HasColumnName("XTGCMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("系统构成描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjssjcsj)
                    .HasColumnName("YJSSJCSJ")
                    .HasColumnType("datetime")
                    .HasComment("硬件设施建成时间");

                entity.Property(e => e.Ytfl)
                    .HasColumnName("YTFL")
                    .HasColumnType("varchar(50)")
                    .HasComment("用途分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcdhgjwbdwddygx>(entity =>
            {
                entity.ToTable("glyjc_ycdhgjwbdwddygx");

                entity.HasComment("遗产地和各级文保单位的对应关系");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjb)
                    .HasColumnName("BHJB")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护级别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gbpc)
                    .HasColumnName("GBPC")
                    .HasColumnType("varchar(50)")
                    .HasComment("公布批次")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gbsj)
                    .HasColumnName("GBSJ")
                    .HasColumnType("datetime")
                    .HasComment("公布时间");

                entity.Property(e => e.Gbwh)
                    .HasColumnName("GBWH")
                    .HasColumnType("varchar(50)")
                    .HasComment("公布文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wwbhdwlx)
                    .HasColumnName("WWBHDWLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文物保护单位类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wwbhdwmc)
                    .HasColumnName("WWBHDWMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("文物保护单位名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcgzjl>(entity =>
            {
                entity.ToTable("glyjc_ycgzjl");

                entity.HasComment("异常跟踪记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Dscqdcs)
                    .HasColumnName("DSCQDCS")
                    .HasColumnType("varchar(255)")
                    .HasComment("当时采取的措施")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ms)
                    .HasColumnName("MS")
                    .HasColumnType("varchar(50)")
                    .HasComment("现场描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfbj)
                    .HasColumnName("SFBJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否报警")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycid)
                    .HasColumnName("YCID")
                    .HasColumnType("varchar(50)")
                    .HasComment("异常记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcgzjl0716>(entity =>
            {
                entity.ToTable("glyjc_ycgzjl_0716");

                entity.HasComment("异常跟踪记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Dscqdcs)
                    .HasColumnName("DSCQDCS")
                    .HasColumnType("varchar(255)")
                    .HasComment("当时采取的措施")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ms)
                    .HasColumnName("MS")
                    .HasColumnType("varchar(50)")
                    .HasComment("现场描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfbj)
                    .HasColumnName("SFBJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否报警")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycid)
                    .HasColumnName("YCID")
                    .HasColumnType("varchar(50)")
                    .HasComment("异常记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcgzjlCopy>(entity =>
            {
                entity.ToTable("glyjc_ycgzjl_copy");

                entity.HasComment("异常跟踪记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Dscqdcs)
                    .HasColumnName("DSCQDCS")
                    .HasColumnType("varchar(255)")
                    .HasComment("当时采取的措施")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ms)
                    .HasColumnName("MS")
                    .HasColumnType("varchar(50)")
                    .HasComment("现场描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfbj)
                    .HasColumnName("SFBJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否报警")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycid)
                    .HasColumnName("YCID")
                    .HasColumnType("varchar(50)")
                    .HasComment("异常记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcq>(entity =>
            {
                entity.ToTable("glyjc_ycq");

                entity.HasComment("遗产区");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dbxsp)
                    .HasColumnName("DBXSP")
                    .HasColumnType("varchar(50)")
                    .HasComment("代表性视频")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dbxtp)
                    .HasColumnName("DBXTP")
                    .HasColumnType("varchar(50)")
                    .HasComment("代表性图片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dtdj)
                    .HasColumnName("DTDJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("地图缩放级别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Jd25d)
                    .HasColumnName("JD25D")
                    .HasComment("经度2.5D");

                entity.Property(e => e.Lmt)
                    .HasColumnName("LMT")
                    .HasColumnType("varchar(50)")
                    .HasComment("立面图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("面积");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wd25d)
                    .HasColumnName("WD25D")
                    .HasComment("纬度2.5D");
            });

            modelBuilder.Entity<GlyjcYcqCopy20200513>(entity =>
            {
                entity.ToTable("glyjc_ycq_copy20200513");

                entity.HasComment("遗产区");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dtdj)
                    .HasColumnName("DTDJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("地图缩放级别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");
            });

            modelBuilder.Entity<GlyjcYcqej>(entity =>
            {
                entity.ToTable("glyjc_ycqej");

                entity.HasComment("遗产区二级");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dtdj)
                    .HasColumnName("DTDJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("地图缩放级别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Ycjz)
                    .HasColumnName("YCJZ")
                    .HasColumnType("text")
                    .HasComment("遗产价值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjycqid)
                    .HasColumnName("YJYCQID")
                    .HasColumnType("varchar(50)")
                    .HasComment("一级遗产区ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcqhcq>(entity =>
            {
                entity.ToTable("glyjc_ycqhcq");

                entity.HasComment("遗产区缓冲区");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Hcqglgd)
                    .HasColumnName("HCQGLGD")
                    .HasColumnType("mediumtext")
                    .HasComment("缓冲区管理规定")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Hcqjx)
                    .HasColumnName("HCQJX")
                    .HasColumnType("varchar(4000)")
                    .HasComment("缓冲区界线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Hcqmj)
                    .HasColumnName("HCQMJ")
                    .HasComment("缓冲区面积");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycqglgd)
                    .HasColumnName("YCQGLGD")
                    .HasColumnType("mediumtext")
                    .HasComment("遗产区管理规定")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycqjx)
                    .HasColumnName("YCQJX")
                    .HasColumnType("varchar(4000)")
                    .HasComment("遗产区界线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycqmj)
                    .HasColumnName("YCQMJ")
                    .HasComment("遗产区面积");
            });

            modelBuilder.Entity<GlyjcYcqhhcqshhjndjcjl>(entity =>
            {
                entity.ToTable("glyjc_ycqhhcqshhjndjcjl");

                entity.HasComment("遗产区和缓冲区社会环境年度监测记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dqdhcqjmhs)
                    .HasColumnName("DQDHCQJMHS")
                    .HasColumnType("int(11)")
                    .HasComment("当前的缓冲区居民户数");

                entity.Property(e => e.Dqdhcqrksl)
                    .HasColumnName("DQDHCQRKSL")
                    .HasColumnType("int(11)")
                    .HasComment("当前的缓冲区人口数量");

                entity.Property(e => e.Dqdycqjmhs)
                    .HasColumnName("DQDYCQJMHS")
                    .HasColumnType("int(11)")
                    .HasComment("当前的遗产区居民户数");

                entity.Property(e => e.Dqdycqrksl)
                    .HasColumnName("DQDYCQRKSL")
                    .HasColumnType("int(11)")
                    .HasComment("当前的遗产区人口数量");

                entity.Property(e => e.Fmyxfw)
                    .HasColumnName("FMYXFW")
                    .HasColumnType("int(11)")
                    .HasComment("负面影响范围");

                entity.Property(e => e.Fwyzz)
                    .HasColumnName("FWYZZ")
                    .HasComment("服务业总值（万元）");

                entity.Property(e => e.Gyzz)
                    .HasColumnName("GYZZ")
                    .HasComment("工业总值（万元）");

                entity.Property(e => e.Lrmlsdhcqrk)
                    .HasColumnName("LRMLSDHCQRK")
                    .HasColumnType("int(11)")
                    .HasComment("列入名录时的缓冲区人口");

                entity.Property(e => e.Lrmlsdycqrksl)
                    .HasColumnName("LRMLSDYCQRKSL")
                    .HasColumnType("int(11)")
                    .HasComment("列入名录时的遗产区人口数量");

                entity.Property(e => e.Nd)
                    .HasColumnName("ND")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nyzz)
                    .HasColumnName("NYZZ")
                    .HasComment("农业总值（万元）");

                entity.Property(e => e.Rkssxq)
                    .HasColumnName("RKSSXQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("人口疏散需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sdcybl)
                    .HasColumnName("SDCYBL")
                    .HasColumnType("varchar(255)")
                    .HasComment("三大产业比例")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycqrkmdsyd)
                    .HasColumnName("YCQRKMDSYD")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产区人口密度适宜度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yzwrgyqysl)
                    .HasColumnName("YZWRGYQYSL")
                    .HasColumnType("int(11)")
                    .HasComment("严重污染工业企业数量");

                entity.Property(e => e.Zykcdsl)
                    .HasColumnName("ZYKCDSL")
                    .HasColumnType("int(11)")
                    .HasComment("资源开采点数量");
            });

            modelBuilder.Entity<GlyjcYcsygntjcsj>(entity =>
            {
                entity.ToTable("glyjc_ycsygntjcsj");

                entity.HasComment("遗产使用功能图基础数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tzfj)
                    .HasColumnName("TZFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("图纸附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Url)
                    .HasColumnName("URL")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytfj)
                    .HasColumnName("YTFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("原图附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcszdshhjndjcjl>(entity =>
            {
                entity.ToTable("glyjc_ycszdshhjndjcjl");

                entity.HasComment("遗产所在地社会环境年度监测记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gjbhdzwzl)
                    .HasColumnName("GJBHDZWZL")
                    .HasColumnType("int(11)")
                    .HasComment("国家保护动植物种类");

                entity.Property(e => e.Nd)
                    .HasColumnName("ND")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rjgdp)
                    .HasColumnName("RJGDP")
                    .HasComment("人均GDP");

                entity.Property(e => e.Rkmd)
                    .HasColumnName("RKMD")
                    .HasComment("人口密度");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycszdyzwrgyqysl)
                    .HasColumnName("YCSZDYZWRGYQYSL")
                    .HasColumnType("int(11)")
                    .HasComment("遗产所在地严重污染工业企业数量");

                entity.Property(e => e.Zbfgl)
                    .HasColumnName("ZBFGL")
                    .HasComment("植被覆盖率");
            });

            modelBuilder.Entity<GlyjcYcyjfkyj>(entity =>
            {
                entity.ToTable("glyjc_ycyjfkyj");

                entity.HasComment("日常预警反馈意见表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对应数据表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dw)
                    .HasColumnName("DW")
                    .HasColumnType("varchar(255)")
                    .HasComment("单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fkr)
                    .HasColumnName("FKR")
                    .HasColumnType("varchar(255)")
                    .HasComment("反馈人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fkwj)
                    .HasColumnName("FKWJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("反馈文件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jlr)
                    .HasColumnName("JLR")
                    .HasColumnType("varchar(50)")
                    .HasComment("记录人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jlsj)
                    .HasColumnName("JLSJ")
                    .HasColumnType("datetime")
                    .HasComment("记录时间");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID ")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Yj)
                    .HasColumnName("YJ")
                    .HasColumnType("text")
                    .HasComment("意见")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcyjfkyjCopy>(entity =>
            {
                entity.ToTable("glyjc_ycyjfkyj_copy");

                entity.HasComment("日常预警反馈意见表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对应数据表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dw)
                    .HasColumnName("DW")
                    .HasColumnType("varchar(255)")
                    .HasComment("单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fkr)
                    .HasColumnName("FKR")
                    .HasColumnType("varchar(255)")
                    .HasComment("反馈人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fkwj)
                    .HasColumnName("FKWJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("反馈文件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jlr)
                    .HasColumnName("JLR")
                    .HasColumnType("varchar(50)")
                    .HasComment("记录人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jlsj)
                    .HasColumnName("JLSJ")
                    .HasColumnType("datetime")
                    .HasComment("记录时间");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID ")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Yj)
                    .HasColumnName("YJ")
                    .HasColumnType("text")
                    .HasComment("意见")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcyjfkyjCopy1>(entity =>
            {
                entity.ToTable("glyjc_ycyjfkyj_copy1");

                entity.HasComment("日常预警反馈意见表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对应数据表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dw)
                    .HasColumnName("DW")
                    .HasColumnType("varchar(255)")
                    .HasComment("单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fkr)
                    .HasColumnName("FKR")
                    .HasColumnType("varchar(255)")
                    .HasComment("反馈人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fkwj)
                    .HasColumnName("FKWJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("反馈文件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jlr)
                    .HasColumnName("JLR")
                    .HasColumnType("varchar(50)")
                    .HasComment("记录人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jlsj)
                    .HasColumnName("JLSJ")
                    .HasColumnType("datetime")
                    .HasComment("记录时间");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID ")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Yj)
                    .HasColumnName("YJ")
                    .HasColumnType("text")
                    .HasComment("意见")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcysdtxx>(entity =>
            {
                entity.ToTable("glyjc_ycysdtxx");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qylx)
                    .HasColumnName("QYLX")
                    .HasColumnType("varchar(255)")
                    .HasComment("区域类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tfmj)
                    .HasColumnName("TFMJ")
                    .HasColumnType("varchar(255)")
                    .HasComment("探方面积")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbxx)
                    .HasColumnName("ZBXX")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcysdtxxCopy20200529>(entity =>
            {
                entity.ToTable("glyjc_ycysdtxx_copy20200529");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qylx)
                    .HasColumnName("QYLX")
                    .HasColumnType("varchar(255)")
                    .HasComment("区域类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tfmj)
                    .HasColumnName("TFMJ")
                    .HasColumnType("varchar(255)")
                    .HasComment("探方面积")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbxx)
                    .HasColumnName("ZBXX")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcysdtxztyxtjycysxzjl>(entity =>
            {
                entity.ToTable("glyjc_ycysdtxztyxtjycysxzjl");

                entity.HasComment("遗产要素单体现状图及遗产要素现状记录_图纸");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qksm)
                    .HasColumnName("QKSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("情况说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tzlj)
                    .HasColumnName("TZLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("图纸路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysbczt)
                    .HasColumnName("YCYSBCZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素保存状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ylt)
                    .HasColumnName("YLT")
                    .HasColumnType("varchar(200)")
                    .HasComment("预览图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcysdtyxtjcesj>(entity =>
            {
                entity.ToTable("glyjc_ycysdtyxtjcesj");

                entity.HasComment("遗产要素单体影像图监测数据");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhms)
                    .HasColumnName("BHMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("变化描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Geos)
                    .HasColumnName("GEOS")
                    .HasColumnType("text")
                    .HasComment("标绘注记")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Leftbottom)
                    .HasColumnName("LEFTBOTTOM")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("pg")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qksm)
                    .HasColumnName("qksm")
                    .HasColumnType("varchar(50)")
                    .HasComment("情况说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Righttop)
                    .HasColumnName("RIGHTTOP")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("rwid")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sffsbh)
                    .HasColumnName("SFFSBH")
                    .HasColumnType("varchar(10)")
                    .HasComment("是否发生变化")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjly)
                    .HasColumnName("SJLY")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'2'")
                    .HasComment("数据来源（1,摄像头；2，移动采集系统）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysbczt)
                    .HasColumnName("ycysbczt")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素保存状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysdtid)
                    .HasColumnName("ysdtid")
                    .HasColumnType("varchar(50)")
                    .HasComment("要素单体ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yszplj)
                    .HasColumnName("yszplj")
                    .HasColumnType("varchar(200)")
                    .HasComment("要素照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcysdtyxtjcesjCopy12018年5月9日104016贺鹏备份>(entity =>
            {
                entity.ToTable("glyjc_ycysdtyxtjcesj_copy12018年5月9日104016贺鹏备份");

                entity.HasComment("遗产要素单体影像图监测数据");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhms)
                    .HasColumnName("BHMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("变化描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Geos)
                    .HasColumnName("GEOS")
                    .HasColumnType("text")
                    .HasComment("标绘注记")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime");

                entity.Property(e => e.Leftbottom)
                    .HasColumnName("LEFTBOTTOM")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("pg")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qksm)
                    .HasColumnName("qksm")
                    .HasColumnType("varchar(50)")
                    .HasComment("情况说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Righttop)
                    .HasColumnName("RIGHTTOP")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("rwid")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysbczt)
                    .HasColumnName("ycysbczt")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素保存状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysdtid)
                    .HasColumnName("ysdtid")
                    .HasColumnType("varchar(50)")
                    .HasComment("要素单体ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yszplj)
                    .HasColumnName("yszplj")
                    .HasColumnType("varchar(200)")
                    .HasComment("要素照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcysdtyxtjcesjCopy20180902qhx>(entity =>
            {
                entity.ToTable("glyjc_ycysdtyxtjcesj_copy20180902qhx");

                entity.HasComment("遗产要素单体影像图监测数据");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhms)
                    .HasColumnName("BHMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("变化描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Geos)
                    .HasColumnName("GEOS")
                    .HasColumnType("text")
                    .HasComment("标绘注记")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime");

                entity.Property(e => e.Leftbottom)
                    .HasColumnName("LEFTBOTTOM")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("pg")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qksm)
                    .HasColumnName("qksm")
                    .HasColumnType("varchar(50)")
                    .HasComment("情况说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Righttop)
                    .HasColumnName("RIGHTTOP")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("rwid")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysbczt)
                    .HasColumnName("ycysbczt")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素保存状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysdtid)
                    .HasColumnName("ysdtid")
                    .HasColumnType("varchar(50)")
                    .HasComment("要素单体ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yszplj)
                    .HasColumnName("yszplj")
                    .HasColumnType("varchar(200)")
                    .HasComment("要素照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcysdtyxtjcesjCopy20180921>(entity =>
            {
                entity.ToTable("glyjc_ycysdtyxtjcesj_copy20180921");

                entity.HasComment("遗产要素单体影像图监测数据");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhms)
                    .HasColumnName("BHMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("变化描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Geos)
                    .HasColumnName("GEOS")
                    .HasColumnType("text")
                    .HasComment("标绘注记")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Leftbottom)
                    .HasColumnName("LEFTBOTTOM")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("pg")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qksm)
                    .HasColumnName("qksm")
                    .HasColumnType("varchar(50)")
                    .HasComment("情况说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Righttop)
                    .HasColumnName("RIGHTTOP")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("rwid")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sffsbh)
                    .HasColumnName("SFFSBH")
                    .HasColumnType("varchar(10)")
                    .HasComment("是否发生变化")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysbczt)
                    .HasColumnName("ycysbczt")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素保存状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysdtid)
                    .HasColumnName("ysdtid")
                    .HasColumnType("varchar(50)")
                    .HasComment("要素单体ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yszplj)
                    .HasColumnName("yszplj")
                    .HasColumnType("varchar(200)")
                    .HasComment("要素照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcysdtyxtjcsj>(entity =>
            {
                entity.ToTable("glyjc_ycysdtyxtjcsj");

                entity.HasComment("遗产要素单体影像图基础数据");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdjd)
                    .HasColumnName("cjdjd")
                    .HasComment("采集点经度");

                entity.Property(e => e.Cjdsyt)
                    .HasColumnName("cjdsyt")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集点示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdwd)
                    .HasColumnName("cjdwd")
                    .HasComment("采集点纬度");

                entity.Property(e => e.Cjdwzms)
                    .HasColumnName("cjdwzms")
                    .HasColumnType("varchar(100)")
                    .HasComment("采集点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjfs)
                    .HasColumnName("CJFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集方式（航拍、摄像头、移动APP等）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasColumnType("varchar(50)")
                    .HasComment("单体经度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzzp)
                    .HasColumnName("JZZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("基准照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasColumnType("varchar(50)")
                    .HasComment("单体纬度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcysdtyxtjcsjCopy12018年5月9日104016贺鹏备份>(entity =>
            {
                entity.ToTable("glyjc_ycysdtyxtjcsj_copy12018年5月9日104016贺鹏备份");

                entity.HasComment("遗产要素单体影像图基础数据");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdjd)
                    .HasColumnName("cjdjd")
                    .HasComment("采集点经度");

                entity.Property(e => e.Cjdsyt)
                    .HasColumnName("cjdsyt")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集点示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdwd)
                    .HasColumnName("cjdwd")
                    .HasComment("采集点纬度");

                entity.Property(e => e.Cjdwzms)
                    .HasColumnName("cjdwzms")
                    .HasColumnType("varchar(100)")
                    .HasComment("采集点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasColumnType("varchar(50)")
                    .HasComment("单体经度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzzp)
                    .HasColumnName("JZZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("基准照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasColumnType("varchar(50)")
                    .HasComment("单体纬度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcysdtyxtjcsjCopy20181130qhx>(entity =>
            {
                entity.ToTable("glyjc_ycysdtyxtjcsj_copy20181130qhx");

                entity.HasComment("遗产要素单体影像图基础数据");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdjd)
                    .HasColumnName("cjdjd")
                    .HasComment("采集点经度");

                entity.Property(e => e.Cjdsyt)
                    .HasColumnName("cjdsyt")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集点示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdwd)
                    .HasColumnName("cjdwd")
                    .HasComment("采集点纬度");

                entity.Property(e => e.Cjdwzms)
                    .HasColumnName("cjdwzms")
                    .HasColumnType("varchar(100)")
                    .HasComment("采集点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasColumnType("varchar(50)")
                    .HasComment("单体经度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzzp)
                    .HasColumnName("JZZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("基准照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasColumnType("varchar(50)")
                    .HasComment("单体纬度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcysfbt>(entity =>
            {
                entity.ToTable("glyjc_ycysfbt");

                entity.HasComment("遗产要素分布图");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysfbturl)
                    .HasColumnName("YCYSFBTURL")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素分布图URL")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcysfbtjcsj>(entity =>
            {
                entity.ToTable("glyjc_ycysfbtjcsj");

                entity.HasComment("遗产要素分布图基础数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("date")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("date")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("date")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("date")
                    .HasComment("提交时间");

                entity.Property(e => e.Tzfj)
                    .HasColumnName("TZFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("图纸附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytfj)
                    .HasColumnName("YTFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("原图附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcysqd>(entity =>
            {
                entity.ToTable("glyjc_ycysqd");

                entity.HasComment("遗产要素清单");

                entity.HasIndex(e => e.Wbdwid)
                    .HasName("WBDWID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gc)
                    .HasColumnName("GC")
                    .HasComment("高程");

                entity.Property(e => e.Gm)
                    .HasColumnName("GM")
                    .HasColumnType("varchar(50)")
                    .HasComment("规模")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(10)")
                    .HasComment("排序");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wbdwid)
                    .HasColumnName("WBDWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("文保单位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycqid)
                    .HasColumnName("YCQID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产区ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycyslx)
                    .HasColumnName("YCYSLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycyslxdl)
                    .HasColumnName("YCYSLXDL")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素类型大类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.YcysmcEn)
                    .HasColumnName("YCYSMC_EN")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称（英文）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysms)
                    .HasColumnName("YCYSMS")
                    .HasColumnType("varchar(1000)")
                    .HasComment("遗产要素描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.YcysmsEn)
                    .HasColumnName("YCYSMS_EN")
                    .HasColumnType("varchar(1000)")
                    .HasComment("遗产要素描述（英文）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysbm)
                    .HasColumnName("YSBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("要素编码（总平台要求的标准编码）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zszp)
                    .HasColumnName("ZSZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("展示照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Wbdw)
                    .WithMany(p => p.GlyjcYcysqd)
                    .HasForeignKey(d => d.Wbdwid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("glyjc_ycysqd_ibfk_1");
            });

            modelBuilder.Entity<GlyjcYcysqdCopy>(entity =>
            {
                entity.ToTable("glyjc_ycysqd_copy");

                entity.HasComment("遗产要素清单");

                entity.HasIndex(e => e.Wbdwid)
                    .HasName("WBDWID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gc)
                    .HasColumnName("GC")
                    .HasComment("高程");

                entity.Property(e => e.Gm)
                    .HasColumnName("GM")
                    .HasColumnType("varchar(50)")
                    .HasComment("规模")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wbdwid)
                    .HasColumnName("WBDWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("文保单位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycyslx)
                    .HasColumnName("YCYSLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycyslxdl)
                    .HasColumnName("YCYSLXDL")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素类型大类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.YcysmcEn)
                    .HasColumnName("YCYSMC_EN")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称（英文）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysms)
                    .HasColumnName("YCYSMS")
                    .HasColumnType("varchar(1000)")
                    .HasComment("遗产要素描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.YcysmsEn)
                    .HasColumnName("YCYSMS_EN")
                    .HasColumnType("varchar(1000)")
                    .HasComment("遗产要素描述（英文）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysbm)
                    .HasColumnName("YSBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("要素编码（总平台要求的标准编码）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zszp)
                    .HasColumnName("ZSZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("展示照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Wbdw)
                    .WithMany(p => p.GlyjcYcysqdCopy)
                    .HasForeignKey(d => d.Wbdwid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("glyjc_ycysqd_copy_ibfk_1");
            });

            modelBuilder.Entity<GlyjcYcysqdCopy1>(entity =>
            {
                entity.ToTable("glyjc_ycysqd_copy1");

                entity.HasComment("遗产要素清单");

                entity.HasIndex(e => e.Wbdwid)
                    .HasName("WBDWID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gc)
                    .HasColumnName("GC")
                    .HasComment("高程");

                entity.Property(e => e.Gm)
                    .HasColumnName("GM")
                    .HasColumnType("varchar(50)")
                    .HasComment("规模")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wbdwid)
                    .HasColumnName("WBDWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("文保单位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycyslx)
                    .HasColumnName("YCYSLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycyslxdl)
                    .HasColumnName("YCYSLXDL")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素类型大类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.YcysmcEn)
                    .HasColumnName("YCYSMC_EN")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称（英文）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysms)
                    .HasColumnName("YCYSMS")
                    .HasColumnType("varchar(1000)")
                    .HasComment("遗产要素描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.YcysmsEn)
                    .HasColumnName("YCYSMS_EN")
                    .HasColumnType("varchar(1000)")
                    .HasComment("遗产要素描述（英文）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysbm)
                    .HasColumnName("YSBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("要素编码（总平台要求的标准编码）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zszp)
                    .HasColumnName("ZSZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("展示照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Wbdw)
                    .WithMany(p => p.GlyjcYcysqdCopy1)
                    .HasForeignKey(d => d.Wbdwid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("glyjc_ycysqd_copy1_ibfk_1");
            });

            modelBuilder.Entity<GlyjcYcysqdCopy2>(entity =>
            {
                entity.ToTable("glyjc_ycysqd_copy2");

                entity.HasComment("遗产要素清单");

                entity.HasIndex(e => e.Wbdwid)
                    .HasName("WBDWID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gc)
                    .HasColumnName("GC")
                    .HasComment("高程");

                entity.Property(e => e.Gm)
                    .HasColumnName("GM")
                    .HasColumnType("varchar(50)")
                    .HasComment("规模")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wbdwid)
                    .HasColumnName("WBDWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("文保单位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycyslx)
                    .HasColumnName("YCYSLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycyslxdl)
                    .HasColumnName("YCYSLXDL")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素类型大类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.YcysmcEn)
                    .HasColumnName("YCYSMC_EN")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称（英文）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysms)
                    .HasColumnName("YCYSMS")
                    .HasColumnType("varchar(1000)")
                    .HasComment("遗产要素描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.YcysmsEn)
                    .HasColumnName("YCYSMS_EN")
                    .HasColumnType("varchar(1000)")
                    .HasComment("遗产要素描述（英文）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysbm)
                    .HasColumnName("YSBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("要素编码（总平台要求的标准编码）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zszp)
                    .HasColumnName("ZSZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("展示照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Wbdw)
                    .WithMany(p => p.GlyjcYcysqdCopy2)
                    .HasForeignKey(d => d.Wbdwid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("glyjc_ycysqd_copy2_ibfk_1");
            });

            modelBuilder.Entity<GlyjcYcysqdCopy20181015qhx>(entity =>
            {
                entity.ToTable("glyjc_ycysqd_copy20181015qhx");

                entity.HasComment("遗产要素清单");

                entity.HasIndex(e => e.Wbdwid)
                    .HasName("WBDWID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gc)
                    .HasColumnName("GC")
                    .HasComment("高程");

                entity.Property(e => e.Gm)
                    .HasColumnName("GM")
                    .HasColumnType("varchar(50)")
                    .HasComment("规模")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(10)")
                    .HasComment("排序");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wbdwid)
                    .HasColumnName("WBDWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("文保单位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycqid)
                    .HasColumnName("YCQID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产区ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycyslx)
                    .HasColumnName("YCYSLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycyslxdl)
                    .HasColumnName("YCYSLXDL")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素类型大类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.YcysmcEn)
                    .HasColumnName("YCYSMC_EN")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称（英文）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysms)
                    .HasColumnName("YCYSMS")
                    .HasColumnType("varchar(1000)")
                    .HasComment("遗产要素描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.YcysmsEn)
                    .HasColumnName("YCYSMS_EN")
                    .HasColumnType("varchar(1000)")
                    .HasComment("遗产要素描述（英文）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysbm)
                    .HasColumnName("YSBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("要素编码（总平台要求的标准编码）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zszp)
                    .HasColumnName("ZSZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("展示照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Wbdw)
                    .WithMany(p => p.GlyjcYcysqdCopy20181015qhx)
                    .HasForeignKey(d => d.Wbdwid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("glyjc_ycysqd_copy20181015qhx_ibfk_1");
            });

            modelBuilder.Entity<GlyjcYcysqdCopy20200513>(entity =>
            {
                entity.ToTable("glyjc_ycysqd_copy20200513");

                entity.HasComment("遗产要素清单");

                entity.HasIndex(e => e.Wbdwid)
                    .HasName("WBDWID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gc)
                    .HasColumnName("GC")
                    .HasComment("高程");

                entity.Property(e => e.Gm)
                    .HasColumnName("GM")
                    .HasColumnType("varchar(50)")
                    .HasComment("规模")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(10)")
                    .HasComment("排序");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wbdwid)
                    .HasColumnName("WBDWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("文保单位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycqid)
                    .HasColumnName("YCQID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产区ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycyslx)
                    .HasColumnName("YCYSLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycyslxdl)
                    .HasColumnName("YCYSLXDL")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素类型大类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.YcysmcEn)
                    .HasColumnName("YCYSMC_EN")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称（英文）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysms)
                    .HasColumnName("YCYSMS")
                    .HasColumnType("varchar(1000)")
                    .HasComment("遗产要素描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.YcysmsEn)
                    .HasColumnName("YCYSMS_EN")
                    .HasColumnType("varchar(1000)")
                    .HasComment("遗产要素描述（英文）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysbm)
                    .HasColumnName("YSBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("要素编码（总平台要求的标准编码）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zszp)
                    .HasColumnName("ZSZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("展示照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Wbdw)
                    .WithMany(p => p.GlyjcYcysqdCopy20200513)
                    .HasForeignKey(d => d.Wbdwid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("glyjc_ycysqd_copy20200513_ibfk_1");
            });

            modelBuilder.Entity<GlyjcYczbb>(entity =>
            {
                entity.ToTable("glyjc_yczbb");

                entity.HasComment("异常指标表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("bigint(20)");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zb)
                    .HasColumnName("ZB")
                    .HasColumnType("varchar(50)")
                    .HasComment("指标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYczt>(entity =>
            {
                entity.ToTable("glyjc_yczt");

                entity.HasComment("遗产总图");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcxxwscd)
                    .HasColumnName("JCXXWSCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("基础信息完善程度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(500)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Sfzt)
                    .HasColumnName("SFZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Url)
                    .HasColumnName("URL")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产总图URL")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcztjcsj>(entity =>
            {
                entity.ToTable("glyjc_ycztjcsj");

                entity.HasComment("遗产总图基础数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("date")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("date")
                    .HasComment("对接时间");

                entity.Property(e => e.Fbl)
                    .HasColumnName("FBL")
                    .HasColumnType("varchar(255)")
                    .HasComment("分辨率")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(255)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(20)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("date")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("date")
                    .HasComment("提交时间");

                entity.Property(e => e.Tzfj)
                    .HasColumnName("TZFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("图纸附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Url)
                    .HasColumnName("URL")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytfj)
                    .HasColumnName("YTFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("原图附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYcztjcsjCopy20181024qhx>(entity =>
            {
                entity.ToTable("glyjc_ycztjcsj_copy20181024qhx");

                entity.HasComment("遗产总图基础数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("date")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("date")
                    .HasComment("对接时间");

                entity.Property(e => e.Fbl)
                    .HasColumnName("FBL")
                    .HasColumnType("varchar(255)")
                    .HasComment("分辨率")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(255)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(20)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("date")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("date")
                    .HasComment("提交时间");

                entity.Property(e => e.Tzfj)
                    .HasColumnName("TZFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("图纸附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Url)
                    .HasColumnName("URL")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytfj)
                    .HasColumnName("YTFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("原图附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYddcjd>(entity =>
            {
                entity.ToTable("glyjc_yddcjd");

                entity.HasComment("移动端采集点（采集方式-移动采集系统）");

                entity.HasIndex(e => e.Jcpzid)
                    .HasName("FK_glyjc_yddcjd_glyjc_jcpz");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdmc)
                    .HasColumnName("CJDMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdms)
                    .HasColumnName("CJDMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("采集点描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdsyt)
                    .HasColumnName("CJDSYT")
                    .HasColumnType("varchar(200)")
                    .HasComment("采集点示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdzb)
                    .HasColumnName("CJDZB")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集点坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzid)
                    .HasColumnName("JCPZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Jcpz)
                    .WithMany(p => p.GlyjcYddcjd)
                    .HasForeignKey(d => d.Jcpzid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_glyjc_yddcjd_glyjc_jcpz");
            });

            modelBuilder.Entity<GlyjcYhlmzpjyhlmjcjl>(entity =>
            {
                entity.ToTable("glyjc_yhlmzpjyhlmjcjl");

                entity.HasComment("沿海立面照片及沿海立面监测记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhxys)
                    .HasColumnName("BHXYS")
                    .HasColumnType("varchar(50)")
                    .HasComment("不和谐因素")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhxysfswz)
                    .HasColumnName("BHXYSFSWZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("不和谐因素发生位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhxysms)
                    .HasColumnName("BHXYSMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("不和谐因素描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jzmc)
                    .HasColumnName("JZMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrq)
                    .HasColumnName("TXRQ")
                    .HasColumnType("datetime")
                    .HasComment("填写日期");

                entity.Property(e => e.Zplj)
                    .HasColumnName("ZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYjczgz>(entity =>
            {
                entity.ToTable("glyjc_yjczgz");

                entity.HasComment("预警处置跟踪表");

                entity.HasIndex(e => e.Userid)
                    .HasName("fk_yjczgz_userid");

                entity.HasIndex(e => e.Yjxxid)
                    .HasName("fk_yjczgz_yjxxid");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("处置跟踪ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("处置跟踪时间");

                entity.Property(e => e.Czjz)
                    .HasColumnName("czjz")
                    .HasColumnType("tinyint(4)")
                    .HasComment("处置进展");

                entity.Property(e => e.Czsm)
                    .HasColumnName("czsm")
                    .HasColumnType("varchar(500)")
                    .HasComment("处置跟踪说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasColumnType("varchar(255)")
                    .HasComment("附件名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Picname)
                    .HasColumnName("picname")
                    .HasColumnType("varchar(255)")
                    .HasComment("附图名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("remark")
                    .HasColumnType("varchar(255)")
                    .HasComment("备注信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("tjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Userid)
                    .HasColumnName("userid")
                    .HasColumnType("varchar(50)")
                    .HasComment("用户ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjsfjc)
                    .HasColumnName("yjsfjc")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警是否解除")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxxid)
                    .IsRequired()
                    .HasColumnName("yjxxid")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警信息ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.GlyjcYjczgz)
                    .HasForeignKey(d => d.Userid)
                    .HasConstraintName("glyjc_yjczgz_ibfk_1");

                entity.HasOne(d => d.Yjxx)
                    .WithMany(p => p.GlyjcYjczgz)
                    .HasForeignKey(d => d.Yjxxid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("glyjc_yjczgz_ibfk_2");
            });

            modelBuilder.Entity<GlyjcYjczxx>(entity =>
            {
                entity.ToTable("glyjc_yjczxx");

                entity.HasComment("预警处置信息");

                entity.HasIndex(e => e.Yjxxid)
                    .HasName("fk_yjczxx_id");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Czgzcyr)
                    .HasColumnName("czgzcyr")
                    .HasColumnType("varchar(50)")
                    .HasComment("处置工作参与人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Czr)
                    .HasColumnName("czr")
                    .HasColumnType("varchar(50)")
                    .HasComment("处置负责人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Czsj)
                    .HasColumnName("czsj")
                    .HasColumnType("datetime")
                    .HasComment("处置时间");

                entity.Property(e => e.Czsm)
                    .HasColumnName("czsm")
                    .HasColumnType("varchar(50)")
                    .HasComment("处置说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("djrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("djsj")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("sfkdj")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxxid)
                    .HasColumnName("yjxxid")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警信息ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zplj)
                    .HasColumnName("zplj")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Yjxx)
                    .WithMany(p => p.GlyjcYjczxx)
                    .HasForeignKey(d => d.Yjxxid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("glyjc_yjczxx_ibfk_1");
            });

            modelBuilder.Entity<GlyjcYjgzjc>(entity =>
            {
                entity.ToTable("glyjc_yjgzjc");

                entity.HasComment("预警跟踪监测表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fkbm)
                    .HasColumnName("FKBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("反馈部门（所要巡查的反馈部门（单位））")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Xcjgms)
                    .HasColumnName("XCJGMS")
                    .HasColumnType("varchar(5000)")
                    .HasComment("巡查结果描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcsj)
                    .HasColumnName("XCSJ")
                    .HasColumnType("datetime")
                    .HasComment("巡查时间");

                entity.Property(e => e.Xcy)
                    .HasColumnName("XCY")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxxid)
                    .HasColumnName("YJXXID")
                    .HasColumnType("varchar(500)")
                    .HasComment("预警信息ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYjgzjcCopy>(entity =>
            {
                entity.ToTable("glyjc_yjgzjc_copy");

                entity.HasComment("预警上报表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fkbm)
                    .HasColumnName("FKBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("反馈部门（所要巡查的反馈部门（单位））")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Xcjgms)
                    .HasColumnName("XCJGMS")
                    .HasColumnType("varchar(5000)")
                    .HasComment("巡查结果描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcsj)
                    .HasColumnName("XCSJ")
                    .HasColumnType("datetime")
                    .HasComment("巡查时间");

                entity.Property(e => e.Xcy)
                    .HasColumnName("XCY")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxxid)
                    .HasColumnName("YJXXID")
                    .HasColumnType("varchar(500)")
                    .HasComment("预警信息ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYjgzjcCopy1>(entity =>
            {
                entity.ToTable("glyjc_yjgzjc_copy1");

                entity.HasComment("预警跟踪监测表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fkbm)
                    .HasColumnName("FKBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("反馈部门（所要巡查的反馈部门（单位））")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Xcjgms)
                    .HasColumnName("XCJGMS")
                    .HasColumnType("varchar(5000)")
                    .HasComment("巡查结果描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcsj)
                    .HasColumnName("XCSJ")
                    .HasColumnType("datetime")
                    .HasComment("巡查时间");

                entity.Property(e => e.Xcy)
                    .HasColumnName("XCY")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxxid)
                    .HasColumnName("YJXXID")
                    .HasColumnType("varchar(500)")
                    .HasComment("预警信息ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYjgzjl>(entity =>
            {
                entity.ToTable("glyjc_yjgzjl");

                entity.HasComment("预警跟踪记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Dscqdcs)
                    .HasColumnName("DSCQDCS")
                    .HasColumnType("varchar(255)")
                    .HasComment("当时采取的措施")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ms)
                    .HasColumnName("MS")
                    .HasColumnType("varchar(50)")
                    .HasComment("现场描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjid)
                    .HasColumnName("YJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYjjsxx>(entity =>
            {
                entity.ToTable("glyjc_yjjsxx");

                entity.HasIndex(e => e.Yjszid)
                    .HasName("FK_glyjc_yjjsxx");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tel)
                    .HasColumnName("TEL")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警信息接收人电话")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjdj)
                    .HasColumnName("YJDJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjjsrid)
                    .HasColumnName("YJJSRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警信息接收人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjjsrname)
                    .HasColumnName("YJJSRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警信息接收人姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjszid)
                    .HasColumnName("YJSZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警设置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Yjsz)
                    .WithMany(p => p.GlyjcYjjsxx)
                    .HasForeignKey(d => d.Yjszid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("glyjc_yjjsxx_ibfk_1");
            });

            modelBuilder.Entity<GlyjcYjpzysxxb>(entity =>
            {
                entity.ToTable("glyjc_yjpzysxxb");

                entity.HasComment("预警配置预设信息表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.BmcYw)
                    .HasColumnName("BMC_YW")
                    .HasColumnType("varchar(50)")
                    .HasComment("表名称（英文）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.BmcZw)
                    .HasColumnName("BMC_ZW")
                    .HasColumnType("varchar(50)")
                    .HasComment("表名称（中文）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dw)
                    .HasColumnName("DW")
                    .HasColumnType("varchar(50)")
                    .HasComment("单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dyzd)
                    .HasColumnName("DYZD")
                    .HasColumnType("varchar(255)")
                    .HasComment("对应字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdx)
                    .HasColumnName("JCDX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(11)")
                    .HasComment("类型（116，设备类,设备清单表；920，第三方接入，自然环境监测点）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Paraid)
                    .HasColumnName("PARAID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbid)
                    .HasColumnName("SBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备ID/监测点ID/外键ID（lx表里，字段为dyzd的值，字段值为该字段值）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.YjzdYw)
                    .HasColumnName("YJZD_YW")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警字段（英文）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.YjzdZw)
                    .HasColumnName("YJZD_ZW")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警字段（中文）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjzdlx)
                    .HasColumnName("YJZDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警字段类型（0：枚举，1：数值）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYjsb>(entity =>
            {
                entity.ToTable("glyjc_yjsb");

                entity.HasComment("预警上报表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fjmc)
                    .HasColumnName("FJMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jsr)
                    .HasColumnName("JSR")
                    .HasColumnType("varchar(50)")
                    .HasComment("接收人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jsrbmid)
                    .HasColumnName("JSRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("接收人部门ID（接收部门（单位））")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbfs)
                    .HasColumnName("SBFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("上报方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbr)
                    .HasColumnName("SBR")
                    .HasColumnType("varchar(50)")
                    .HasComment("上报人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbsj)
                    .HasColumnName("SBSJ")
                    .HasColumnType("datetime")
                    .HasComment("上报时间");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Yjxxid)
                    .HasColumnName("YJXXID")
                    .HasColumnType("varchar(500)")
                    .HasComment("预警信息ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYjsbCopy>(entity =>
            {
                entity.ToTable("glyjc_yjsb_copy");

                entity.HasComment("预警上报表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fjmc)
                    .HasColumnName("FJMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jsr)
                    .HasColumnName("JSR")
                    .HasColumnType("varchar(50)")
                    .HasComment("接收人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jsrbmid)
                    .HasColumnName("JSRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("接收人部门ID（接收部门（单位））")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbfs)
                    .HasColumnName("SBFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("上报方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbr)
                    .HasColumnName("SBR")
                    .HasColumnType("varchar(50)")
                    .HasComment("上报人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbsj)
                    .HasColumnName("SBSJ")
                    .HasColumnType("datetime")
                    .HasComment("上报时间");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Yjxxid)
                    .HasColumnName("YJXXID")
                    .HasColumnType("varchar(500)")
                    .HasComment("预警信息ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYjszzb>(entity =>
            {
                entity.ToTable("glyjc_yjszzb");

                entity.HasComment("预警设置主表");

                entity.HasIndex(e => e.Jcpzid)
                    .HasName("fk_yjszzb");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Czfzrid)
                    .HasColumnName("CZFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("处置负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ejyjyaid)
                    .HasColumnName("EJYJYAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("二级预警预案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzid)
                    .HasColumnName("JCPZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sijyjyaid)
                    .HasColumnName("SIJYJYAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("四级预警预案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjyjyaid)
                    .HasColumnName("SJYJYAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("三级预警预案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yj1jjsrbm)
                    .HasColumnName("YJ1JJSRBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("一级预警信息接收人部门")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yj1jjsrzw)
                    .HasColumnName("YJ1JJSRZW")
                    .HasColumnType("varchar(50)")
                    .HasComment("一级预警信息接收人职务")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yj2jjsrbm)
                    .HasColumnName("YJ2JJSRBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("二级预警信息接收人部门")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yj2jjsrzw)
                    .HasColumnName("YJ2JJSRZW")
                    .HasColumnType("varchar(50)")
                    .HasComment("二级预警信息接收人职务")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yj3jjsrbm)
                    .HasColumnName("YJ3JJSRBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("三级预警信息接收人部门")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yj3jjsrzw)
                    .HasColumnName("YJ3JJSRZW")
                    .HasColumnType("varchar(50)")
                    .HasComment("三级预警信息接收人职务")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yj4jjsrbm)
                    .HasColumnName("YJ4JJSRBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("四级预警信息接收人部门")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yj4jjsrzw)
                    .HasColumnName("YJ4JJSRZW")
                    .HasColumnType("varchar(50)")
                    .HasComment("四级预警信息接收人职务")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjpzfamc)
                    .HasColumnName("YJPZFAMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxxsm)
                    .HasColumnName("YJXXSM")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警信息说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjyaid)
                    .HasColumnName("YJYAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警预案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjyjyaid)
                    .HasColumnName("YJYJYAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("一级预警预案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjzd)
                    .HasColumnName("YJZD")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Jcpz)
                    .WithMany(p => p.GlyjcYjszzb)
                    .HasForeignKey(d => d.Jcpzid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("glyjc_yjszzb_ibfk_1");
            });

            modelBuilder.Entity<GlyjcYjwz>(entity =>
            {
                entity.ToTable("glyjc_yjwz");

                entity.HasComment("预警位置表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qyid)
                    .HasColumnName("QYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("区域ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxxid)
                    .HasColumnName("YJXXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警信息ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbxx)
                    .HasColumnName("ZBXX")
                    .HasColumnType("varchar(50)")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYjxx>(entity =>
            {
                entity.ToTable("glyjc_yjxx");

                entity.HasComment("预警信息");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cjsjbid)
                    .HasColumnName("CJSJBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("触警数据表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsjid)
                    .HasColumnName("CJSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("触警数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fbsj)
                    .HasColumnName("FBSJ")
                    .HasColumnType("datetime")
                    .HasComment("发布时间");

                entity.Property(e => e.Fl)
                    .HasColumnName("FL")
                    .HasColumnType("varchar(4)")
                    .HasComment("分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fzrmc)
                    .HasColumnName("FZRMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("负责人名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("tinyint(4)")
                    .HasComment("类型");

                entity.Property(e => e.Ly)
                    .HasColumnName("LY")
                    .HasColumnType("tinyint(4)")
                    .HasComment("来源");

                entity.Property(e => e.Ms)
                    .HasColumnName("MS")
                    .HasColumnType("varchar(200)")
                    .HasComment("描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qyid)
                    .HasColumnName("QYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("区域ID，用于9999的任务下发")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Slsj)
                    .HasColumnName("SLSJ")
                    .HasColumnType("datetime")
                    .HasComment("受理时间");

                entity.Property(e => e.Slsm)
                    .HasColumnName("SLSM")
                    .HasColumnType("varchar(50)")
                    .HasComment("受理说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(255)")
                    .HasDefaultValueSql("'999999'")
                    .HasComment("排序");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Yjbz)
                    .HasColumnName("YJBZ")
                    .HasColumnType("varchar(255)")
                    .HasDefaultValueSql("'1'")
                    .HasComment("预警流程步骤1-5：第一步-第五步")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjdj)
                    .HasColumnName("YJDJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjdx)
                    .HasColumnName("YJDX")
                    .HasColumnType("varchar(100)")
                    .HasComment("预警对象")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjfswz)
                    .HasColumnName("YJFSWZ")
                    .HasColumnType("varchar(255)")
                    .HasComment("预警发生位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjjcrid)
                    .HasColumnName("YJJCRID")
                    .HasColumnType("varchar(11)")
                    .HasComment("预警解除人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjjcsj)
                    .HasColumnName("YJJCSJ")
                    .HasColumnType("datetime")
                    .HasComment("预警解除时间");

                entity.Property(e => e.Yjpzfaid)
                    .HasColumnName("YJPZFAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警配置方案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjsfjc)
                    .HasColumnName("YJSFJC")
                    .HasColumnType("char(1)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("预警是否解除")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjslrid)
                    .HasColumnName("YJSLRID")
                    .HasColumnType("varchar(255)")
                    .HasComment("预警受理人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjslzt)
                    .HasColumnName("YJSLZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("预警受理状态，默认为“0”")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxxsm)
                    .HasColumnName("YJXXSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("预警信息说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjyaid)
                    .HasColumnName("YJYAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警预案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjzt)
                    .HasColumnName("YJZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("预警状态");

                entity.Property(e => e.Zpdw)
                    .HasColumnName("ZPDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("指派单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYjxxCopy>(entity =>
            {
                entity.ToTable("glyjc_yjxx_copy");

                entity.HasComment("预警信息");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cjsjbid)
                    .HasColumnName("CJSJBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("触警数据表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsjid)
                    .HasColumnName("CJSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("触警数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fbsj)
                    .HasColumnName("FBSJ")
                    .HasColumnType("datetime")
                    .HasComment("发布时间");

                entity.Property(e => e.Fzrmc)
                    .HasColumnName("FZRMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("负责人名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Qyid)
                    .HasColumnName("QYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("区域ID，用于9999的任务下发")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Slsj)
                    .HasColumnName("SLSJ")
                    .HasColumnType("datetime")
                    .HasComment("受理时间");

                entity.Property(e => e.Slsm)
                    .HasColumnName("SLSM")
                    .HasColumnType("varchar(50)")
                    .HasComment("受理说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Yjdj)
                    .HasColumnName("YJDJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjdx)
                    .HasColumnName("YJDX")
                    .HasColumnType("varchar(100)")
                    .HasComment("预警对象")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjfswz)
                    .HasColumnName("YJFSWZ")
                    .HasColumnType("varchar(255)")
                    .HasComment("预警发生位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjjcsj)
                    .HasColumnName("YJJCSJ")
                    .HasColumnType("datetime")
                    .HasComment("预警解除时间");

                entity.Property(e => e.Yjlx)
                    .HasColumnName("YJLX")
                    .HasColumnType("varchar(255)")
                    .HasComment("预警类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjpzfaid)
                    .HasColumnName("YJPZFAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警配置方案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjsfjc)
                    .HasColumnName("YJSFJC")
                    .HasColumnType("char(1)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("预警是否解除")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjslrid)
                    .HasColumnName("YJSLRID")
                    .HasColumnType("varchar(255)")
                    .HasComment("预警受理人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjslzt)
                    .HasColumnName("YJSLZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("预警受理状态，默认为“0”")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxxsm)
                    .HasColumnName("YJXXSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("预警信息说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjyaid)
                    .HasColumnName("YJYAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警预案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpdw)
                    .HasColumnName("ZPDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("指派单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYjxxCopy1>(entity =>
            {
                entity.ToTable("glyjc_yjxx_copy1");

                entity.HasComment("预警信息");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cjsjbid)
                    .HasColumnName("CJSJBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("触警数据表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsjid)
                    .HasColumnName("CJSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("触警数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fbsj)
                    .HasColumnName("FBSJ")
                    .HasColumnType("datetime")
                    .HasComment("发布时间");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Slsj)
                    .HasColumnName("SLSJ")
                    .HasColumnType("datetime")
                    .HasComment("受理时间");

                entity.Property(e => e.Slsm)
                    .HasColumnName("SLSM")
                    .HasColumnType("varchar(50)")
                    .HasComment("受理说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjdj)
                    .HasColumnName("YJDJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjdx)
                    .HasColumnName("YJDX")
                    .HasColumnType("varchar(100)")
                    .HasComment("预警对象")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjpzfaid)
                    .HasColumnName("YJPZFAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警配置方案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjsfjc)
                    .HasColumnName("YJSFJC")
                    .HasColumnType("char(1)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("预警是否解除")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjslzt)
                    .HasColumnName("YJSLZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("预警受理状态，默认为“0”")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxxsm)
                    .HasColumnName("YJXXSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("预警信息说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjyaid)
                    .HasColumnName("YJYAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警预案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYjxxfl>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_yjxxfl");

                entity.HasComment("预警信息分类表");

                entity.Property(e => e.Ejfl)
                    .HasColumnName("EJFL")
                    .HasColumnType("varchar(20)")
                    .HasComment("二级分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fid)
                    .HasColumnName("FID")
                    .HasColumnType("varchar(20)")
                    .HasComment("父级id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(20)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjfl)
                    .HasColumnName("YJFL")
                    .HasColumnType("varchar(20)")
                    .HasComment("一级分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYjxxfl0716改>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("glyjc_yjxxfl_0716改");

                entity.HasComment("预警信息分类表");

                entity.Property(e => e.Ejfl)
                    .HasColumnName("EJFL")
                    .HasColumnType("varchar(20)")
                    .HasComment("二级分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fid)
                    .HasColumnName("FID")
                    .HasColumnType("varchar(20)")
                    .HasComment("父级id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(20)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjfl)
                    .HasColumnName("YJFL")
                    .HasColumnType("varchar(20)")
                    .HasComment("一级分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYjya>(entity =>
            {
                entity.ToTable("glyjc_yjya");

                entity.HasComment("预警预案");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bxsj)
                    .HasColumnName("BXSJ")
                    .HasColumnType("datetime")
                    .HasComment("编写时间");

                entity.Property(e => e.Bzsm)
                    .HasColumnName("BZSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yamc)
                    .HasColumnName("YAMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("预案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yawdfj)
                    .HasColumnName("YAWDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("预案文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYkfmyxjl>(entity =>
            {
                entity.ToTable("glyjc_ykfmyxjl");

                entity.HasComment("游客负面影响记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dd)
                    .HasColumnName("DD")
                    .HasColumnType("varchar(200)")
                    .HasComment("地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dyczcdfmyx)
                    .HasColumnName("DYCZCDFMYX")
                    .HasColumnType("varchar(500)")
                    .HasComment("对遗产造成的负面影响")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shijian)
                    .HasColumnName("SHIJIAN")
                    .HasColumnType("varchar(500)")
                    .HasComment("事件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sj)
                    .HasColumnName("SJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcYkglydjl>(entity =>
            {
                entity.ToTable("glyjc_ykglydjl");

                entity.HasComment("游客管理月度记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gwykrcs)
                    .HasColumnName("GWYKRCS")
                    .HasColumnType("int(11)")
                    .HasComment("国外游客人次数");

                entity.Property(e => e.Jjyjjcs)
                    .HasColumnName("JJYJJCS")
                    .HasColumnType("int(11)")
                    .HasComment("讲解员讲解次数");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(50)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Spxdwbdycs)
                    .HasColumnName("SPXDWBDYCS")
                    .HasColumnType("int(11)")
                    .HasComment("受培训的外部导游次数");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wbdycs)
                    .HasColumnName("WBDYCS")
                    .HasColumnType("int(11)")
                    .HasComment("外部导游次数");

                entity.Property(e => e.Yf)
                    .HasColumnName("YF")
                    .HasColumnType("varchar(50)")
                    .HasComment("月份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ykzrcs)
                    .HasColumnName("YKZRCS")
                    .HasColumnType("int(11)")
                    .HasComment("游客总人次数");

                entity.Property(e => e.Yyykrcs)
                    .HasColumnName("YYYKRCS")
                    .HasColumnType("int(11)")
                    .HasComment("预约游客人次数");
            });

            modelBuilder.Entity<GlyjcYkljcqy>(entity =>
            {
                entity.ToTable("glyjc_ykljcqy");

                entity.HasComment("游客量监测区域");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(500)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(500)")
                    .HasComment("创建人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fw)
                    .HasColumnName("FW")
                    .HasColumnType("varchar(5000)")
                    .HasComment("范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasColumnType("varchar(50)")
                    .HasComment("经度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lscgfwrs)
                    .HasColumnName("LSCGFWRS")
                    .HasColumnType("int(10)")
                    .HasComment("历史参观访问人数");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(500)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(500)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ryklxxz)
                    .HasColumnName("RYKLXXZ")
                    .HasColumnType("int(11)")
                    .HasComment("日游客量限制值");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Ssjd)
                    .HasColumnName("SSJD")
                    .HasColumnType("varchar(500)")
                    .HasComment("所属景点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjdmc)
                    .HasColumnName("SSJDMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("所属景点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssyklxzz)
                    .HasColumnName("SSYKLXZZ")
                    .HasColumnType("int(11)")
                    .HasComment("瞬时游客量限制值");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasColumnType("varchar(50)")
                    .HasComment("纬度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(1000)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycqid)
                    .HasColumnName("YCQID")
                    .HasColumnType("varchar(500)")
                    .HasComment("遗产区ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYkljcqyCopy>(entity =>
            {
                entity.ToTable("glyjc_ykljcqy_copy");

                entity.HasComment("游客量监测区域");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(500)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(500)")
                    .HasComment("创建人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fw)
                    .HasColumnName("FW")
                    .HasColumnType("varchar(5000)")
                    .HasComment("范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasColumnType("varchar(50)")
                    .HasComment("经度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(500)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(500)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ryklxxz)
                    .HasColumnName("RYKLXXZ")
                    .HasColumnType("int(11)")
                    .HasComment("日游客量限制值");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Ssjd)
                    .HasColumnName("SSJD")
                    .HasColumnType("varchar(500)")
                    .HasComment("所属景点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjdmc)
                    .HasColumnName("SSJDMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("所属景点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssyklxzz)
                    .HasColumnName("SSYKLXZZ")
                    .HasColumnType("int(11)")
                    .HasComment("瞬时游客量限制值");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasColumnType("varchar(50)")
                    .HasComment("纬度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(1000)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYkqydtxx>(entity =>
            {
                entity.ToTable("glyjc_ykqydtxx");

                entity.HasComment("游客区域地图信息");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("游客区域ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbxx)
                    .HasColumnName("ZBXX")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYkxyndjl>(entity =>
            {
                entity.ToTable("glyjc_ykxyndjl");

                entity.HasComment("游客效益年度记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Csxggzhjydjmsl)
                    .HasColumnName("CSXGGZHJYDJMSL")
                    .HasColumnType("int(11)")
                    .HasComment("从事相关工作和经营的居民数量");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Glbmjyyfwsr)
                    .HasColumnName("GLBMJYYFWSR")
                    .HasComment("管理部门经营与服务收入");

                entity.Property(e => e.Mpsr)
                    .HasColumnName("MPSR")
                    .HasComment("门票收入");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(50)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcYkyxpg>(entity =>
            {
                entity.ToTable("glyjc_ykyxpg");

                entity.HasComment("游客影响评估");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(50)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgr)
                    .HasColumnName("PGR")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgsm)
                    .HasColumnName("PGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("评估说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yf)
                    .HasColumnName("YF")
                    .HasColumnType("varchar(50)")
                    .HasComment("月份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYscgWdl>(entity =>
            {
                entity.ToTable("glyjc_yscg_wdl");

                entity.HasComment("雨水冲沟文档数据规则");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cgmj)
                    .HasColumnName("CGMJ")
                    .HasColumnType("varchar(255)")
                    .HasComment("风化剥落面积（cm2）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pfzj)
                    .HasColumnName("PFZJ")
                    .HasColumnType("int(11)")
                    .HasComment("评分增减");

                entity.Property(e => e.Pfzz)
                    .HasColumnName("PFZZ")
                    .HasColumnType("int(11)")
                    .HasComment("评分终值");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjly)
                    .HasColumnName("SJLY")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'2'")
                    .HasComment("数据来源（1,热红外设备；2，移动采集系统）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tq)
                    .HasColumnName("TQ")
                    .HasColumnType("varchar(255)")
                    .HasComment("天气")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYscgWdlCopy20181023qhx>(entity =>
            {
                entity.ToTable("glyjc_yscg_wdl_copy20181023qhx");

                entity.HasComment("雨水冲沟文档数据规则");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cgmj)
                    .HasColumnName("CGMJ")
                    .HasColumnType("varchar(255)")
                    .HasComment("风化剥落面积（cm2）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjly)
                    .HasColumnName("SJLY")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'2'")
                    .HasComment("数据来源（1,热红外设备；2，移动采集系统）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tq)
                    .HasColumnName("TQ")
                    .HasColumnType("varchar(255)")
                    .HasComment("天气")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYt>(entity =>
            {
                entity.ToTable("glyjc_yt");

                entity.HasComment("舆图");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxfj)
                    .HasColumnName("YXFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("影像附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcYtbhqk>(entity =>
            {
                entity.ToTable("glyjc_ytbhqk");

                entity.HasIndex(e => e.Year)
                    .HasName("index_year");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(100)")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Area)
                    .HasColumnName("AREA")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("占地/建筑面积");

                entity.Property(e => e.Buildtype)
                    .HasColumnName("BUILDTYPE")
                    .HasColumnType("varchar(100)")
                    .HasComment("建筑类型")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Changeres)
                    .HasColumnName("CHANGERES")
                    .HasColumnType("varchar(200)")
                    .HasComment("新增/改变原因")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Hycontent)
                    .HasColumnName("HYCONTENT")
                    .HasColumnType("varchar(50)")
                    .HasComment("行业代码内容")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.HytypeEj)
                    .HasColumnName("HYTYPE_EJ")
                    .HasColumnType("varchar(20)")
                    .HasComment("行业类型(二级)")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.HytypeYj)
                    .HasColumnName("HYTYPE_YJ")
                    .HasColumnType("varchar(10)")
                    .HasComment("行业类型(一级)")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Lrnf)
                    .HasColumnName("LRNF")
                    .HasColumnType("char(4)")
                    .HasComment("录入年份")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(20)")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Place)
                    .HasColumnName("PLACE")
                    .HasColumnType("varchar(100)")
                    .HasComment("位置/住所")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("REMARK")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(100)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Type)
                    .HasColumnName("TYPE")
                    .HasColumnType("varchar(10)")
                    .HasComment("改变类型")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Year)
                    .HasColumnName("YEAR")
                    .HasColumnType("char(4)")
                    .HasComment("公布年代")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.YttypeLy)
                    .HasColumnName("YTTYPE_LY")
                    .HasColumnType("varchar(100)")
                    .HasComment("业态类型（旅游商业态）")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.YttypeSq)
                    .HasColumnName("YTTYPE_SQ")
                    .HasColumnType("varchar(100)")
                    .HasComment("业态类型（社区商业态）")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");

                entity.Property(e => e.Zttype)
                    .HasColumnName("ZTTYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("个体/主体类型")
                    .HasCharSet("gbk")
                    .HasCollation("gbk_chinese_ci");
            });

            modelBuilder.Entity<GlyjcYulianghistorydata>(entity =>
            {
                entity.ToTable("glyjc_yulianghistorydata");

                entity.HasComment("雨量历史数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(50)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nyl)
                    .HasColumnName("NYL")
                    .HasColumnType("double(10,2)")
                    .HasComment("年雨量(mm)");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Xh)
                    .HasColumnName("XH")
                    .HasColumnType("int(4)")
                    .HasComment("序号");
            });

            modelBuilder.Entity<GlyjcZbfg>(entity =>
            {
                entity.ToTable("glyjc_zbfg");

                entity.HasComment("植被覆盖");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(40)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhevent)
                    .HasColumnName("BHEVENT")
                    .HasColumnType("varchar(200)")
                    .HasComment("变化事件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhsj)
                    .HasColumnName("BHSJ")
                    .HasColumnType("datetime")
                    .HasComment("变化时间");

                entity.Property(e => e.Bhyy)
                    .HasColumnName("BHYY")
                    .HasColumnType("text")
                    .HasComment("变化原因")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dbt)
                    .HasColumnName("DBT")
                    .HasColumnType("varchar(255)")
                    .HasComment("对比图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jzt)
                    .HasColumnName("JZT")
                    .HasColumnType("varchar(255)")
                    .HasComment("基准图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(1000)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qksm)
                    .HasColumnName("QKSM")
                    .HasColumnType("varchar(255)")
                    .HasComment("情况说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(40)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfbh)
                    .HasColumnName("SFBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否变化")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xwzt)
                    .HasColumnName("XWZT")
                    .HasColumnType("varchar(200)")
                    .HasComment("行为主体")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Year)
                    .HasColumnName("YEAR")
                    .HasColumnType("varchar(20)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcZbfgdtxx>(entity =>
            {
                entity.ToTable("glyjc_zbfgdtxx");

                entity.HasComment("植被覆盖地图信息");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("植被覆盖记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbxx)
                    .HasColumnName("ZBXX")
                    .HasColumnType("varchar(500)")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcZjrwb>(entity =>
            {
                entity.ToTable("glyjc_zjrwb");

                entity.HasComment("专家任务表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcdx)
                    .HasColumnName("JCDX")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测对象")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcesjhzfj)
                    .HasColumnName("JCESJHZFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测数据汇总附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jckssj)
                    .HasColumnName("JCKSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测开始时间");

                entity.Property(e => e.Jcnrid)
                    .HasColumnName("JCNRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测内容ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsb)
                    .HasColumnName("JCSB")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测设备")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcxid)
                    .HasColumnName("JCXID")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测项ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jczq)
                    .HasColumnName("JCZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jljjy)
                    .HasColumnName("JLJJY")
                    .HasColumnType("varchar(50)")
                    .HasComment("结论及建议")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jljjyfj)
                    .HasColumnName("JLJJYFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("结论及建议附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jtbw)
                    .HasColumnName("JTBW")
                    .HasColumnType("varchar(50)")
                    .HasComment("具体部位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qtxgfj)
                    .HasColumnName("QTXGFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("其他相关附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwcjr)
                    .HasColumnName("RWCJR")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务创建人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwfhsj)
                    .HasColumnName("RWFHSJ")
                    .HasColumnType("datetime")
                    .HasComment("任务返回时间");

                entity.Property(e => e.Rwmc)
                    .HasColumnName("RWMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("任务名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwscsj)
                    .HasColumnName("RWSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("任务生成时间");

                entity.Property(e => e.Rwyxjb)
                    .HasColumnName("RWYXJB")
                    .HasColumnType("varchar(255)")
                    .HasComment("任务优先级别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwzt)
                    .HasColumnName("RWZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("任务状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfpg)
                    .HasColumnName("SFPG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否评估");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Ssbm)
                    .HasColumnName("SSBM")
                    .HasColumnType("varchar(255)")
                    .HasComment("所属部门")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yssjfj)
                    .HasColumnName("YSSJFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("原始数据附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zjdwid)
                    .HasColumnName("ZJDWID")
                    .HasColumnType("varchar(255)")
                    .HasComment("专家单位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zjid)
                    .HasColumnName("ZJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("专家ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcZjzxfx>(entity =>
            {
                entity.ToTable("glyjc_zjzxfx");

                entity.HasComment("专家在线分析");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bgfjmc)
                    .HasColumnName("BGFJMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("报告附件名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bgnrjj)
                    .HasColumnName("BGNRJJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("报告内容简介")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fxbgmc)
                    .HasColumnName("FXBGMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("分析报告名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fxsj)
                    .HasColumnName("FXSJ")
                    .HasColumnType("datetime")
                    .HasComment("分析时间");

                entity.Property(e => e.Scr)
                    .HasColumnName("SCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("上传人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scsj)
                    .HasColumnName("SCSJ")
                    .HasColumnType("datetime")
                    .HasComment("上传时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<GlyjcZqwc>(entity =>
            {
                entity.ToTable("glyjc_zqwc");

                entity.HasComment("周期误差表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wc)
                    .HasColumnName("WC")
                    .HasColumnType("int(11)")
                    .HasComment("误差(单位为秒)");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("int(11)")
                    .HasComment("周期单位（枚举）");
            });

            modelBuilder.Entity<GlyjcZrhjjcgzqkjl>(entity =>
            {
                entity.ToTable("glyjc_zrhjjcgzqkjl");

                entity.HasComment("自然环境监测工作情况记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcdxlx)
                    .HasColumnName("JCDXLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcff)
                    .HasColumnName("JCFF")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测方法")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jczq)
                    .HasColumnName("JCZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(100)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zrhjjcxmbh)
                    .HasColumnName("ZRHJJCXMBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("自然环境监测项目编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zrhjjcxmnr)
                    .HasColumnName("ZRHJJCXMNR")
                    .HasColumnType("varchar(200)")
                    .HasComment("自然环境监测项目内容")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcZrhjjcwz>(entity =>
            {
                entity.ToTable("glyjc_zrhjjcwz");

                entity.HasComment("自然环境监测位置");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzmc)
                    .HasColumnName("JCWZMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzms)
                    .HasColumnName("JCWZMS")
                    .HasColumnType("text")
                    .HasComment("监测位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzsyt)
                    .HasColumnName("JCWZSYT")
                    .HasColumnType("varchar(200)")
                    .HasComment("监测位置示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(255)")
                    .HasComment("排序");

                entity.Property(e => e.Zb)
                    .HasColumnName("ZB")
                    .HasColumnType("text")
                    .HasComment("监测位置坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbsjid)
                    .HasColumnName("ZBSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主表数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zcdxlx)
                    .HasColumnName("ZCDXLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcZs>(entity =>
            {
                entity.ToTable("glyjc_zs");

                entity.HasComment("噪声");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcd)
                    .HasColumnName("JCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sj)
                    .HasColumnName("SJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zs)
                    .HasColumnName("ZS")
                    .HasColumnType("varchar(50)")
                    .HasComment("噪声")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcZsSs>(entity =>
            {
                entity.ToTable("glyjc_zs_ss");

                entity.HasComment("志书、史书");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcZtgjbhtjbhjl>(entity =>
            {
                entity.ToTable("glyjc_ztgjbhtjbhjl");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(40)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhevent)
                    .HasColumnName("BHEVENT")
                    .HasColumnType("varchar(200)")
                    .HasComment("变化事件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhsj)
                    .HasColumnName("BHSJ")
                    .HasColumnType("datetime")
                    .HasComment("变化时间");

                entity.Property(e => e.Bhyy)
                    .HasColumnName("BHYY")
                    .HasColumnType("text")
                    .HasComment("变化原因")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dbt)
                    .HasColumnName("DBT")
                    .HasColumnType("varchar(255)")
                    .HasComment("对比图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jzt)
                    .HasColumnName("JZT")
                    .HasColumnType("varchar(255)")
                    .HasComment("基准图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qksm)
                    .HasColumnName("QKSM")
                    .HasColumnType("varchar(255)")
                    .HasComment("情况说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(40)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xwzt)
                    .HasColumnName("XWZT")
                    .HasColumnType("varchar(200)")
                    .HasComment("行为主体")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Year)
                    .HasColumnName("YEAR")
                    .HasColumnType("varchar(20)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcZtgjbhtjbhjldtxx>(entity =>
            {
                entity.ToTable("glyjc_ztgjbhtjbhjldtxx");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("总体格局变化图及变化记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbxx)
                    .HasColumnName("ZBXX")
                    .HasColumnType("varchar(500)")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcZtgjbhtndjl>(entity =>
            {
                entity.ToTable("glyjc_ztgjbhtndjl");

                entity.HasComment("遗产总图年度记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(200)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Url)
                    .HasColumnName("URL")
                    .HasColumnType("varchar(500)")
                    .HasComment("遗产总图URL")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcZwWdl>(entity =>
            {
                entity.ToTable("glyjc_zw_wdl");

                entity.HasComment("植物病害(文档类)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gxyxmj)
                    .HasColumnName("GXYXMJ")
                    .HasComment("根系影响面积");

                entity.Property(e => e.Gxyxsd)
                    .HasColumnName("GXYXSD")
                    .HasComment("根系影响深度");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pfzj)
                    .HasColumnName("PFZJ")
                    .HasColumnType("int(11)")
                    .HasComment("评分增减");

                entity.Property(e => e.Pfzz)
                    .HasColumnName("PFZZ")
                    .HasColumnType("int(11)")
                    .HasComment("评分最终");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zwzl)
                    .HasColumnName("ZWZL")
                    .HasColumnType("varchar(50)")
                    .HasComment("植物种类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcZwWdlBhdcjcgzqkjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("glyjc_zw_wdl_bhdcjcgzqkjl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcrmc)
                    .HasColumnName("DCRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gxyxmj)
                    .HasColumnName("GXYXMJ")
                    .HasComment("根系影响面积");

                entity.Property(e => e.Gxyxsd)
                    .HasColumnName("GXYXSD")
                    .HasComment("根系影响深度");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzmc)
                    .HasColumnName("JCWZMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zbxx)
                    .HasColumnName("ZBXX")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zwzl)
                    .HasColumnName("ZWZL")
                    .HasColumnType("varchar(50)")
                    .HasComment("植物种类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcZwzz>(entity =>
            {
                entity.ToTable("glyjc_zwzz");

                entity.HasComment("职务职责");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zqsm)
                    .HasColumnName("ZQSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("职权说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zryq)
                    .HasColumnName("ZRYQ")
                    .HasColumnType("varchar(500)")
                    .HasComment("责任要求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zwfw)
                    .HasColumnName("ZWFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("职务范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zwmc)
                    .HasColumnName("ZWMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("职务名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zzjgid)
                    .HasColumnName("ZZJGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("组织机构ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcZxWdl>(entity =>
            {
                entity.ToTable("glyjc_zx_wdl");

                entity.HasComment("糟朽病害(文档类)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gjscmj)
                    .HasColumnName("GJSCMJ")
                    .HasComment("构件受潮面积");

                entity.Property(e => e.Gjzxmj)
                    .HasColumnName("GJZXMJ")
                    .HasComment("构件糟朽面积");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scjysj)
                    .HasColumnName("SCJYSJ")
                    .HasColumnType("datetime")
                    .HasComment("上次降雨时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcZxbhglfggz>(entity =>
            {
                entity.ToTable("glyjc_zxbhglfggz");

                entity.HasComment("专项保护管理法规规章");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gbsj)
                    .HasColumnName("GBSJ")
                    .HasColumnType("datetime")
                    .HasComment("公布时间");

                entity.Property(e => e.Gbwh)
                    .HasColumnName("GBWH")
                    .HasColumnType("varchar(50)")
                    .HasComment("公布文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lb)
                    .HasColumnName("LB")
                    .HasColumnType("varchar(50)")
                    .HasComment("类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sssj)
                    .HasColumnName("SSSJ")
                    .HasColumnType("datetime")
                    .HasComment("实施时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wjnr)
                    .HasColumnName("WJNR")
                    .HasColumnType("varchar(4000)")
                    .HasComment("文件内容")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcZz>(entity =>
            {
                entity.ToTable("glyjc_zz");

                entity.HasComment("专著");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<GlyjcZzjg>(entity =>
            {
                entity.ToTable("glyjc_zzjg");

                entity.HasComment("组织机构");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cxrq)
                    .HasColumnName("CXRQ")
                    .HasColumnType("datetime")
                    .HasComment("撤消日期");

                entity.Property(e => e.Dz)
                    .HasColumnName("DZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fjjgid)
                    .HasColumnName("FJJGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级机构ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sm)
                    .HasColumnName("SM")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wz)
                    .HasColumnName("WZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("网址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.X)
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzqbm)
                    .HasColumnName("XZQBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("行政区编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Y)
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zzjgdm)
                    .HasColumnName("ZZJGDM")
                    .HasColumnType("varchar(50)")
                    .HasComment("组织机构代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zzjgmc)
                    .HasColumnName("ZZJGMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("组织机构名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zzjgzz)
                    .HasColumnName("ZZJGZZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("组织机构职责")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<HepengTempDtzb>(entity =>
            {
                entity.ToTable("hepeng_temp_dtzb");

                entity.HasComment("贺鹏用来导入单体的坐标值的临时表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdjd)
                    .HasColumnName("CJDJD")
                    .HasColumnType("double(20,14)");

                entity.Property(e => e.Cjdwd)
                    .HasColumnName("CJDWD")
                    .HasColumnType("double(20,14)");

                entity.Property(e => e.Dtjd)
                    .HasColumnName("DTJD")
                    .HasColumnType("double(20,14)");

                entity.Property(e => e.Dtwd)
                    .HasColumnName("DTWD")
                    .HasColumnType("double(20,14)");
            });

            modelBuilder.Entity<HltBhzsyhjzzgcjlYcysqd>(entity =>
            {
                entity.ToTable("hlt_bhzsyhjzzgcjl_ycysqd");

                entity.HasIndex(e => e.Bhzsyhjzzgcjlid)
                    .HasName("BHZSYHJZZGCJLID");

                entity.HasIndex(e => e.Ycysid)
                    .HasName("YCYSID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhzsyhjzzgcjlid)
                    .HasColumnName("BHZSYHJZZGCJLID")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护展示与环境整治工程记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("timestamp")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("创建时间")
                    .ValueGeneratedOnAddOrUpdate();

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Bhzsyhjzzgcjl)
                    .WithMany(p => p.HltBhzsyhjzzgcjlYcysqd)
                    .HasForeignKey(d => d.Bhzsyhjzzgcjlid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("hlt_bhzsyhjzzgcjl_ycysqd_ibfk_1");

                entity.HasOne(d => d.Ycys)
                    .WithMany(p => p.HltBhzsyhjzzgcjlYcysqd)
                    .HasForeignKey(d => d.Ycysid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("hlt_bhzsyhjzzgcjl_ycysqd_ibfk_2");
            });

            modelBuilder.Entity<HltKgfjYcys>(entity =>
            {
                entity.ToTable("hlt_kgfj_ycys");

                entity.HasIndex(e => e.Kgfjid)
                    .HasName("KGFJID");

                entity.HasIndex(e => e.Ycysid)
                    .HasName("YCYSID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("timestamp")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .ValueGeneratedOnAddOrUpdate();

                entity.Property(e => e.Kgfjid)
                    .HasColumnName("KGFJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("考古发掘ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Kgfj)
                    .WithMany(p => p.HltKgfjYcys)
                    .HasForeignKey(d => d.Kgfjid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("hlt_kgfj_ycys_ibfk_1");

                entity.HasOne(d => d.Ycys)
                    .WithMany(p => p.HltKgfjYcys)
                    .HasForeignKey(d => d.Ycysid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("hlt_kgfj_ycys_ibfk_2");
            });

            modelBuilder.Entity<HltXgdYcys>(entity =>
            {
                entity.ToTable("hlt_xgd_ycys");

                entity.HasIndex(e => e.Xgdid)
                    .HasName("XGDID");

                entity.HasIndex(e => e.Ycysid)
                    .HasName("YCYSID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Xgdid)
                    .HasColumnName("XGDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡更点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Xgd)
                    .WithMany(p => p.HltXgdYcys)
                    .HasForeignKey(d => d.Xgdid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("hlt_xgd_ycys_ibfk_1");

                entity.HasOne(d => d.Ycys)
                    .WithMany(p => p.HltXgdYcys)
                    .HasForeignKey(d => d.Ycysid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("hlt_xgd_ycys_ibfk_2");
            });

            modelBuilder.Entity<HpfJcbg>(entity =>
            {
                entity.ToTable("hpf_jcbg");

                entity.HasComment("监测报告");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Clsj)
                    .HasColumnName("CLSJ")
                    .HasColumnType("datetime")
                    .HasComment("处理时间");

                entity.Property(e => e.Clzt)
                    .HasColumnName("CLZT")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("处理状态（0-未处理，1-处理中，2-已处理）");

                entity.Property(e => e.Filename)
                    .HasColumnName("FILENAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("文件名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Filepath)
                    .HasColumnName("FILEPATH")
                    .HasColumnType("varchar(500)")
                    .HasComment("路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.HtgNewreport)
                    .HasColumnName("HTG_NEWREPORT")
                    .HasColumnType("char(1)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Iffc)
                    .HasColumnName("IFFC")
                    .HasColumnType("bit(1)")
                    .HasDefaultValueSql("b'1'");

                entity.Property(e => e.Kzm)
                    .HasColumnName("KZM")
                    .HasColumnType("varchar(10)")
                    .HasComment("扩展名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测报告所属年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.RptCode)
                    .HasColumnName("RPT_CODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产地编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.RptIsnew)
                    .HasColumnName("RPT_ISNEW")
                    .HasColumnType("char(1)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.RptType)
                    .HasColumnName("RPT_TYPE")
                    .HasColumnType("char(1)")
                    .HasComment("1国家2遗产地")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scr)
                    .HasColumnName("SCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("上传人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'1'")
                    .HasComment("审核状态（1-已填未提交,2-提交未审核,3-审核不通过,4-审核通过）");

                entity.Property(e => e.Timestamp)
                    .HasColumnName("TIMESTAMP")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Tjzt)
                    .HasColumnName("TJZT")
                    .HasColumnType("varchar(255)")
                    .HasComment("提交状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zzjgbm)
                    .HasColumnName("ZZJGBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("组织机构编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<HpfJcbgYj>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("hpf_jcbg_yj");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(40)")
                    .HasComment("11")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sj)
                    .HasColumnName("sj")
                    .HasColumnType("timestamp");

                entity.Property(e => e.Ybid)
                    .HasColumnName("YBID")
                    .HasColumnType("varchar(40)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Yj)
                    .HasColumnName("YJ")
                    .HasColumnType("varchar(800)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<HpfNbAqsgjl>(entity =>
            {
                entity.ToTable("hpf_nb_aqsgjl");

                entity.HasComment("年报_安全事故记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Aqsgjlvalue)
                    .HasColumnName("AQSGJLVALUE")
                    .HasColumnType("text")
                    .HasComment("安全事故记录")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Isavailable)
                    .HasColumnName("ISAVAILABLE")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'1'")
                    .HasComment("是否可用（0不可用，1可用）");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<HpfNbAxfxtyjssxx>(entity =>
            {
                entity.ToTable("hpf_nb_axfxtyjssxx");

                entity.HasComment("年报_安消防系统硬件设施信息");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Axfxtnrvalue)
                    .HasColumnName("AXFXTNRVALUE")
                    .HasColumnType("text")
                    .HasComment("安消防系统内容")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Jcsjvalue)
                    .HasColumnName("JCSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("建成时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jftrzevalue)
                    .HasColumnName("JFTRZEVALUE")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("经费投入总额(元)");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Zyczjfvalue)
                    .HasColumnName("ZYCZJFVALUE")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("中央财政经费（元）");
            });

            modelBuilder.Entity<HpfNbBhdcqk>(entity =>
            {
                entity.ToTable("hpf_nb_bhdcqk");

                entity.HasComment("年报_病害调查情况");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bhlxvalue)
                    .HasColumnName("BHLXVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害类型")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bhmsvalue)
                    .HasColumnName("BHMSVALUE")
                    .HasColumnType("text")
                    .HasComment("病害描述")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fxsjvalue)
                    .HasColumnName("FXSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("发现时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Issctp)
                    .HasColumnName("ISSCTP")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否上传过图片（0没有上传，1上传了图片）");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Ycyslxvalue)
                    .HasColumnName("YCYSLXVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素类型")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<HpfNbBhglghbzqkjlb>(entity =>
            {
                entity.ToTable("hpf_nb_bhglghbzqkjlb");

                entity.HasComment("年报_保护管理规划编制情况记录表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Addline)
                    .HasColumnName("ADDLINE")
                    .HasColumnType("varchar(50)")
                    .HasComment("新加一行")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bzdwvalue)
                    .HasColumnName("BZDWVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("编制单位")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bzhgbztvalue)
                    .HasColumnName("BZHGBZTVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("编制和公布状态")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ghqxvalue)
                    .HasColumnName("GHQXVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("规划期限")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Mcvalue)
                    .HasColumnName("MCVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<HpfNbBhgljfqk>(entity =>
            {
                entity.ToTable("hpf_nb_bhgljfqk");

                entity.HasComment("年报_保护管理经费情况");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bhglzjfvalue)
                    .HasColumnName("BHGLZJFVALUE")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("保护管理总经费【元】");

                entity.Property(e => e.Bhxsvalue)
                    .HasColumnName("BHXSVALUE")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("保护修缮【元】");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Hjzzvalue)
                    .HasColumnName("HJZZVALUE")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("环境整治【元】");

                entity.Property(e => e.Jcglvalue)
                    .HasColumnName("JCGLVALUE")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("监测管理【元】");

                entity.Property(e => e.Lyglvalue)
                    .HasColumnName("LYGLVALUE")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("旅游管理【元】");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Qtvalue)
                    .HasColumnName("QTVALUE")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("其他【元】");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Rykzvalue)
                    .HasColumnName("RYKZVALUE")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("人员开支【元】");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Xcjyvalue)
                    .HasColumnName("XCJYVALUE")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("宣传教育【元】");

                entity.Property(e => e.Xsyjvalue)
                    .HasColumnName("XSYJVALUE")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("学术研究【元】");
            });

            modelBuilder.Entity<HpfNbBhgljgqk>(entity =>
            {
                entity.ToTable("hpf_nb_bhgljgqk");

                entity.HasComment("年报_保护管理机构情况");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Aqfzrvalue)
                    .HasColumnName("AQFZRVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("安全责任人")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dzyxvalue)
                    .HasColumnName("DZYXVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("电子邮箱")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Fddbrvalue)
                    .HasColumnName("FDDBRVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("法定代表人")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Gfwzvalue)
                    .HasColumnName("GFWZVALUE")
                    .HasColumnType("varchar(500)")
                    .HasComment("官方网站")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Glquvalue)
                    .HasColumnName("GLQUVALUE")
                    .HasColumnType("text")
                    .HasComment("管理区域")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Glzevalue)
                    .HasColumnName("GLZEVALUE")
                    .HasColumnType("text")
                    .HasComment("管理责任")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Gzryzsvalue)
                    .HasColumnName("GZRYZSVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("工作人员总数");

                entity.Property(e => e.Jgclsjvalue)
                    .HasColumnName("JGCLSJVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("机构成立时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jggmvalue)
                    .HasColumnName("JGGMVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("机构规模");

                entity.Property(e => e.Jgjbvalue)
                    .HasColumnName("JGJBVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("机构级别")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jgmcvalue)
                    .HasColumnName("JGMCVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("机构名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Lxdhvalue)
                    .HasColumnName("LXDHVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("联系电话")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Lxfsvalue)
                    .HasColumnName("LXFSVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("联系方式")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Lxrxmvalue)
                    .HasColumnName("LXRXMVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("联系人姓名")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sjgldwvalue)
                    .HasColumnName("SJGLDWVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("上级管理单位")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Szxzqvalue)
                    .HasColumnName("SZXZQVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("所在行政区")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Xzzfzrvalue)
                    .HasColumnName("XZZFZRVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("行政总负责人")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zyjflyvalue)
                    .HasColumnName("ZYJFLYVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("主要经费来源")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zzjgdmvalue)
                    .HasColumnName("ZZJGDMVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("组织机构代码")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<HpfNbBhglryqk>(entity =>
            {
                entity.ToTable("hpf_nb_bhglryqk");

                entity.HasComment("年报_保护管理人员情况");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bhglryzsvalue)
                    .HasColumnName("BHGLRYZSVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("保护管理人员总数【人】");

                entity.Property(e => e.Bkryslvalue)
                    .HasColumnName("BKRYSLVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("本科人员数量【人】");

                entity.Property(e => e.Bsyjsrsvalue)
                    .HasColumnName("BSYJSRSVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("博士研究生人数【人】");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cjzcrsvalue)
                    .HasColumnName("CJZCRSVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("初级职称人数");

                entity.Property(e => e.Csycbhdryslvalue)
                    .HasColumnName("CSYCBHDRYSLVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("从事遗产保护的人员数量【人】");

                entity.Property(e => e.Gjzcrsvalue)
                    .HasColumnName("GJZCRSVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("高级职称人数");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Qtxlvalue)
                    .HasColumnName("QTXLVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("其他学历人数");

                entity.Property(e => e.Qtzcrsvalue)
                    .HasColumnName("QTZCRSVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("其他职称人数");

                entity.Property(e => e.Qtzgvalue)
                    .HasColumnName("QTZGVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("其他职工");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Ssyjsrsvalue)
                    .HasColumnName("SSYJSRSVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("硕士研究生人数【人】");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Zbrsvalue)
                    .HasColumnName("ZBRSVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("在编人数【人】");

                entity.Property(e => e.Zhglryslvalue)
                    .HasColumnName("ZHGLRYSLVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("综合管理人员数量【人】");

                entity.Property(e => e.Zjzcrsvalue)
                    .HasColumnName("ZJZCRSVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("中级职称人数");

                entity.Property(e => e.Zkryslvalue)
                    .HasColumnName("ZKRYSLVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("专科人员数量【人】");

                entity.Property(e => e.Zygcvalue)
                    .HasColumnName("ZYGCVALUE")
                    .HasColumnType("text")
                    .HasComment("专业构成")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zyjsryslvalue)
                    .HasColumnName("ZYJSRYSLVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("专业技术人员数量【人】");

                entity.Property(e => e.Zzcsjcdryslvalue)
                    .HasColumnName("ZZCSJCDRYSLVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("专职从事监测的人员数量【人】");
            });

            modelBuilder.Entity<HpfNbBhzshjzzgcqk>(entity =>
            {
                entity.ToTable("hpf_nb_bhzshjzzgcqk");

                entity.HasComment("年报_保护展示环境整治工程情况");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bzvalue)
                    .HasColumnName("BZVALUE")
                    .HasColumnType("text")
                    .HasComment("备注")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dgsjvalue)
                    .HasColumnName("DGSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("动工时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Gcxmlxvalue)
                    .HasColumnName("GCXMLXVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("工程项目类型")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Isavailable)
                    .HasColumnName("ISAVAILABLE")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'1'")
                    .HasComment("是否可用（0不可用，1可用）");

                entity.Property(e => e.Issctp)
                    .HasColumnName("ISSCTP")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否上传了图片（0没有上传过图片）");

                entity.Property(e => e.Jftrzevalue)
                    .HasColumnName("JFTRZEVALUE")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("经费投入总额");

                entity.Property(e => e.Jgsjvalue)
                    .HasColumnName("JGSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("竣工时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wwbmpzxkwhvalue)
                    .HasColumnName("WWBMPZXKWHVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("文物部门批准/许可文号")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Xmmcvalue)
                    .HasColumnName("XMMCVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Xmztvalue)
                    .HasColumnName("XMZTVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目状态")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Yssjvalue)
                    .HasColumnName("YSSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("验收时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Yswhvalue)
                    .HasColumnName("YSWHVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("验收文号")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zyczjfvalue)
                    .HasColumnName("ZYCZJFVALUE")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("中央财政经费");
            });

            modelBuilder.Entity<HpfNbDyycbhglgzjy>(entity =>
            {
                entity.ToTable("hpf_nb_dyycbhglgzjy");

                entity.HasComment("年报_对于遗产保护管理工作建议");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bhglvalue)
                    .HasColumnName("BHGLVALUE")
                    .HasColumnType("text")
                    .HasComment("对于遗产保护管理工作建议")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<HpfNbJcgzxg>(entity =>
            {
                entity.ToTable("hpf_nb_jcgzxg");

                entity.HasComment("年报_监测工作效果");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Jcgzxgvalue)
                    .HasColumnName("JCGZXGVALUE")
                    .HasColumnType("text")
                    .HasComment("监测工作效果")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<HpfNbJcgzzpg>(entity =>
            {
                entity.ToTable("hpf_nb_jcgzzpg");

                entity.HasComment("年报_监测工作自评估");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Gzbhjyvalue)
                    .HasColumnName("GZBHJYVALUE")
                    .HasColumnType("text")
                    .HasComment("对于遗产保护管理工作建议")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jcgzxgvalue)
                    .HasColumnName("JCGZXGVALUE")
                    .HasColumnType("text")
                    .HasComment("监测工作效果")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jcsbsyvalue)
                    .HasColumnName("JCSBSYVALUE")
                    .HasColumnType("text")
                    .HasComment("监测设备的使用")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jfsyvalue)
                    .HasColumnName("JFSYVALUE")
                    .HasColumnType("text")
                    .HasComment("经费的使用")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<HpfNbJcjgqk>(entity =>
            {
                entity.ToTable("hpf_nb_jcjgqk");

                entity.HasComment("年报_监测机构情况");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cddzrvalue)
                    .HasColumnName("CDDZRVALUE")
                    .HasColumnType("text")
                    .HasComment("承担的责任")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dzyxvalue)
                    .HasColumnName("DZYXVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("电子邮箱")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Fzrlxdhvalue)
                    .HasColumnName("FZRLXDHVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("负责人联系电话")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Fzrvalue)
                    .HasColumnName("FZRVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("负责人")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Isavailable)
                    .HasColumnName("ISAVAILABLE")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'1'")
                    .HasComment("是否可用");

                entity.Property(e => e.Jcgzwzvalue)
                    .HasColumnName("JCGZWZVALUE")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测工作网站")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jcjgmcvalue)
                    .HasColumnName("JCJGMCVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("监测机构名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jgclsjvalue)
                    .HasColumnName("JGCLSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("机构成立时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jgjbvalue)
                    .HasColumnName("JGJBVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("机构级别")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Lxdhvalue)
                    .HasColumnName("LXDHVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("联系电话")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Lxrvalue)
                    .HasColumnName("LXRVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("联系人")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Ryzsvalue)
                    .HasColumnName("RYZSVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("人员总数");

                entity.Property(e => e.Sfwdljzvalue)
                    .HasColumnName("SFWDLJZVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测机构是否为独立建制")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sjgldwvalue)
                    .HasColumnName("SJGLDWVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("上级管理单位")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<HpfNbJcsbdsy>(entity =>
            {
                entity.ToTable("hpf_nb_jcsbdsy");

                entity.HasComment("年报_监测设备的使用");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Jcsbvalue)
                    .HasColumnName("JCSBVALUE")
                    .HasColumnType("text")
                    .HasComment("监测设备的使用")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<HpfNbJfdsy>(entity =>
            {
                entity.ToTable("hpf_nb_jfdsy");

                entity.HasComment("年报_经费的使用");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Jfvalue)
                    .HasColumnName("JFVALUE")
                    .HasColumnType("text")
                    .HasComment("经费的使用")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<HpfNbJskzjcqk>(entity =>
            {
                entity.ToTable("hpf_nb_jskzjcqk");

                entity.HasComment("年报_建设控制监测情况");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dycdyxpgvalue)
                    .HasColumnName("DYCDYXPGVALUE")
                    .HasColumnType("text")
                    .HasComment("对遗产的影响评估")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Isavailable)
                    .HasColumnName("ISAVAILABLE")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'1'")
                    .HasComment("是否可用（1可用，0不可用）");

                entity.Property(e => e.Jgsjvalue)
                    .HasColumnName("JGSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("竣工时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jsddvalue)
                    .HasColumnName("JSDDVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("建设地点")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jsmdvalue)
                    .HasColumnName("JSMDVALUE")
                    .HasColumnType("text")
                    .HasComment("建设目的")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Kgsjvalue)
                    .HasColumnName("KGSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("开工时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Pzsjvalue)
                    .HasColumnName("PZSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("批准时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Qtbmpzwhvalue)
                    .HasColumnName("QTBMPZWHVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("其他部门批准文号")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wwbmpzwhvalue)
                    .HasColumnName("WWBMPZWHVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("文物部门批准文号")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Xmmcvalue)
                    .HasColumnName("XMMCVALUE")
                    .HasColumnType("varchar(500)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zdmjvalue)
                    .HasColumnName("ZDMJVALUE")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("占地面积（㎡）");
            });

            modelBuilder.Entity<HpfNbKgfjqk>(entity =>
            {
                entity.ToTable("hpf_nb_kgfjqk");

                entity.HasComment("年报_考古发掘情况");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fjmjvalue)
                    .HasColumnName("FJMJVALUE")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("发掘面积");

                entity.Property(e => e.Htmjvalue)
                    .HasColumnName("HTMJVALUE")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("回填面积");

                entity.Property(e => e.Isavailable)
                    .HasColumnName("ISAVAILABLE")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'1'")
                    .HasComment("是否可用（0不可用，1可用）");

                entity.Property(e => e.Jftrzevalue)
                    .HasColumnName("JFTRZEVALUE")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("经费投入总额【元】");

                entity.Property(e => e.Jssjvalue)
                    .HasColumnName("JSSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("结束时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Kssjvalue)
                    .HasColumnName("KSSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("开始时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Pzfjmjvalue)
                    .HasColumnName("PZFJMJVALUE")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("批准发掘面积");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wwbmpzwhvalue)
                    .HasColumnName("WWBMPZWHVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("文物部门批准文号")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Xmmcvalue)
                    .HasColumnName("XMMCVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Yyfjxcbhdjfvalue)
                    .HasColumnName("YYFJXCBHDJFVALUE")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("用于发掘现场保护的经费【元】");
            });

            modelBuilder.Entity<HpfNbKykt>(entity =>
            {
                entity.ToTable("hpf_nb_kykt");

                entity.HasComment("年报_科研课题情况");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Jxsjvalue)
                    .HasColumnName("JXSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("结项时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Kssjvalue)
                    .HasColumnName("KSSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("开始时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ktfzrvalue)
                    .HasColumnName("KTFZRVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("课题负责人")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ktmcvalue)
                    .HasColumnName("KTMCVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("课题名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ktztvalue)
                    .HasColumnName("KTZTVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("课题状态")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(255)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wtdwvalue)
                    .HasColumnName("WTDWVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("委托单位")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Zyyjnrvalue)
                    .HasColumnName("ZYYJNRVALUE")
                    .HasColumnType("text")
                    .HasComment("主要研究内容")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<HpfNbKyktCbzz>(entity =>
            {
                entity.ToTable("hpf_nb_kykt_cbzz");

                entity.HasComment("科研课题部分--出版著作");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cbsvalue)
                    .HasColumnName("CBSVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("出版社")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Shvalue)
                    .HasColumnName("SHVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("书号")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Zsvalue)
                    .HasColumnName("ZSVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("字数")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zzmcvalue)
                    .HasColumnName("ZZMCVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("著作名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zzvalue)
                    .HasColumnName("ZZVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("作者")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<HpfNbKyktXslw>(entity =>
            {
                entity.ToTable("hpf_nb_kykt_xslw");

                entity.HasComment("科研课题--学术论文");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Lwmcvalue)
                    .HasColumnName("LWMCVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("论文名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Qhvalue)
                    .HasColumnName("QHVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("期号")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sjlxvalue)
                    .HasColumnName("SJLXVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("刊物/书籍类型")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sjmcvalue)
                    .HasColumnName("SJMCVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("刊物/书籍名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Zzvalue)
                    .HasColumnName("ZZVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("作者")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<HpfNbLyxyndjl>(entity =>
            {
                entity.ToTable("hpf_nb_lyxyndjl");

                entity.HasComment("年报_旅游效益年度记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bhgljgcyjyfwzsrvalue)
                    .HasColumnName("BHGLJGCYJYFWZSRVALUE")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("保护管理机构参与的经营与服务总收入【元】");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cyxgbhglgzycdjmslvalue)
                    .HasColumnName("CYXGBHGLGZYCDJMSLVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("参与相关保护管理工作和经营活动的遗产地居民数量【人】");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Nmpzsrvalue)
                    .HasColumnName("NMPZSRVALUE")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("年门票总收入【元】");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Smvalue)
                    .HasColumnName("SMVALUE")
                    .HasColumnType("text")
                    .HasComment("说明")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<HpfNbNdbgfj>(entity =>
            {
                entity.ToTable("hpf_nb_ndbgfj");

                entity.HasComment("年度报告附件表（存储年报支撑材料的附件）");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Fjmc)
                    .HasColumnName("FJMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("附件名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Lj)
                    .HasColumnName("LJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("路径")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("附件类型")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");
            });

            modelBuilder.Entity<HpfNbNdbgfxbgjdz>(entity =>
            {
                entity.ToTable("hpf_nb_ndbgfxbgjdz");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("int(11)")
                    .HasComment("类型");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP");

                entity.Property(e => e.Typeforejdx)
                    .HasColumnName("TYPEFOREJDX")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Typeforejdz)
                    .HasColumnName("TYPEFOREJDZ")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'");

                entity.Property(e => e.Typeonejdx)
                    .HasColumnName("TYPEONEJDX")
                    .HasColumnType("varchar(50)")
                    .HasComment("进度项")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Typeonejdz)
                    .HasColumnName("TYPEONEJDZ")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'");

                entity.Property(e => e.Typethreejdx)
                    .HasColumnName("TYPETHREEJDX")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Typethreejdz)
                    .HasColumnName("TYPETHREEJDZ")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'");

                entity.Property(e => e.Typetwojdx)
                    .HasColumnName("TYPETWOJDX")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Typetwojdz)
                    .HasColumnName("TYPETWOJDZ")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'");
            });

            modelBuilder.Entity<HpfNbNdbgjcsj>(entity =>
            {
                entity.ToTable("hpf_nb_ndbgjcsj");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Funid)
                    .HasColumnName("FUNID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对应每一项的id")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sfjcsj)
                    .HasColumnName("SFJCSJ")
                    .HasColumnType("varchar(10)")
                    .HasComment("是不是基础数据库中的数据（0,不是，1是，2确认）")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Typename)
                    .HasColumnName("TYPENAME")
                    .HasColumnType("varchar(100)")
                    .HasComment("类型的名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<HpfNbNdbgjdz>(entity =>
            {
                entity.ToTable("hpf_nb_ndbgjdz");

                entity.HasComment("年度报告各类型进度值");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(50)")
                    .HasComment("编码")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jdx)
                    .HasColumnName("JDX")
                    .HasColumnType("varchar(50)")
                    .HasComment("进度项")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jdz)
                    .HasColumnName("JDZ")
                    .HasColumnType("double(20,2)")
                    .HasDefaultValueSql("'0.00'")
                    .HasComment("进度值");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(20)")
                    .HasComment("类型（1综述2基本信息概述3分项报告4监测工作自评估）")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(50)")
                    .HasComment("年份")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");
            });

            modelBuilder.Entity<HpfNbNdbgjlb>(entity =>
            {
                entity.ToTable("hpf_nb_ndbgjlb");

                entity.HasComment("年报_记录表（记录该年报中该类型数据是否已经保存过）");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Lxid)
                    .HasColumnName("LXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");
            });

            modelBuilder.Entity<HpfNbNdbgsfjlb>(entity =>
            {
                entity.ToTable("hpf_nb_ndbgsfjlb");

                entity.HasComment("记录是否");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime");

                entity.Property(e => e.Funiditem)
                    .HasColumnName("FUNIDITEM")
                    .HasColumnType("varchar(50)")
                    .HasComment("对应每一项的id")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sfvalue)
                    .HasColumnName("SFVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("记录是否")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<HpfNbNdbgshb>(entity =>
            {
                entity.ToTable("hpf_nb_ndbgshb");

                entity.HasComment("年度报告审核表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sftj)
                    .HasColumnName("SFTJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否提交(0未提交，1提交)");

                entity.Property(e => e.Shr)
                    .HasColumnName("SHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Shyj)
                    .HasColumnName("SHYJ")
                    .HasColumnType("text")
                    .HasComment("审核意见")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'1'")
                    .HasComment("审核状态(1审核通过0审核不通过)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Typeid)
                    .HasColumnName("TYPEID")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Typename)
                    .HasColumnName("TYPENAME")
                    .HasColumnType("varchar(100)")
                    .HasComment("各小项的类型")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zyyj)
                    .HasColumnName("ZYYJ")
                    .HasColumnType("text")
                    .HasComment("专员意见")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zyzt)
                    .HasColumnName("ZYZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("专员状态")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<HpfNbNdbgtbz>(entity =>
            {
                entity.ToTable("hpf_nb_ndbgtbz");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Funid)
                    .HasColumnName("FUNID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对应后台xml中每一项的ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Iswc)
                    .HasColumnName("ISWC")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否完成（0未完成，1完成）");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");
            });

            modelBuilder.Entity<HpfNbNdbgtyfjb>(entity =>
            {
                entity.ToTable("hpf_nb_ndbgtyfjb");

                entity.HasComment("年度报告通用附件表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Gsvalue)
                    .HasColumnName("GSVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("格式")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ljvalue)
                    .HasColumnName("LJVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("路径")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Lxvalue)
                    .HasColumnName("LXVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Mcvalue)
                    .HasColumnName("MCVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("记录ID(总表id)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Scridvalue)
                    .HasColumnName("SCRIDVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("上传人ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("各项的数据ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Typename)
                    .HasColumnName("TYPENAME")
                    .HasColumnType("varchar(200)")
                    .HasComment("类型名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<HpfNbNdbgzb>(entity =>
            {
                entity.ToTable("hpf_nb_ndbgzb");

                entity.HasComment("年度报告总表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(50)")
                    .HasComment("编码")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Iffc)
                    .HasColumnName("IFFC")
                    .HasColumnType("bit(1)")
                    .HasComment("是否封存");

                entity.Property(e => e.Kzm)
                    .HasColumnName("KZM")
                    .HasColumnType("varchar(20)")
                    .HasComment("文件扩展名")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Lj)
                    .HasColumnName("LJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("路径")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(200)")
                    .HasComment("年报名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(100)")
                    .HasComment("年度报告所属年份")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Shyj)
                    .HasColumnName("SHYJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核意见")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态(0通过1未通过)");

                entity.Property(e => e.Tjzt)
                    .HasColumnName("TJZT")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'1'")
                    .HasComment("提交状态(0已提交)");
            });

            modelBuilder.Entity<HpfNbNdbgztz>(entity =>
            {
                entity.ToTable("hpf_nb_ndbgztz");

                entity.HasComment("年度报告状态值");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(50)")
                    .HasComment("编码")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Lxid)
                    .HasColumnName("LXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("各项的编码")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(20)")
                    .HasComment("年份")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Ztz)
                    .HasColumnName("ZTZ")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("状态值");
            });

            modelBuilder.Entity<HpfNbPxynljsqkGljgrycy>(entity =>
            {
                entity.ToTable("hpf_nb_pxynljsqk_gljgrycy");

                entity.HasComment("年报_培训与能力建设情况_管理机构人员参与");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Jbdwvalue)
                    .HasColumnName("JBDWVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("举办单位")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Pxlxvalue)
                    .HasColumnName("PXLXVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("培训类型")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Pxsjvalue)
                    .HasColumnName("PXSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("培训时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Pxxmmcvalue)
                    .HasColumnName("PXXMMCVALUE")
                    .HasColumnType("varchar(500)")
                    .HasComment("培训项目名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Pxzcjfvalue)
                    .HasColumnName("PXZCJFVALUE")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("培训支出经费【元】");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Sxryslvalue)
                    .HasColumnName("SXRYSLVALUE")
                    .HasColumnType("int(50)")
                    .HasComment("受训人员数量【人】");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Zbcbdwvalue)
                    .HasColumnName("ZBCBDWVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("主办承办单位")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<HpfNbPxynljsqkZbhcb>(entity =>
            {
                entity.ToTable("hpf_nb_pxynljsqk_zbhcb");

                entity.HasComment("年报_培训与能力建设情况_主办或承办");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Pxlxvalue)
                    .HasColumnName("PXLXVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("培训类型")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Pxsjvalue)
                    .HasColumnName("PXSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("培训时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Pxxmmcvalue)
                    .HasColumnName("PXXMMCVALUE")
                    .HasColumnType("varchar(500)")
                    .HasComment("培训项目名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Pxzcjfvalue)
                    .HasColumnName("PXZCJFVALUE")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("培训支出经费【元】");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Sxryslvalue)
                    .HasColumnName("SXRYSLVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("受训人员数量【人】");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Zbcbvalue)
                    .HasColumnName("ZBCBVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("主办承办")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zbdwvalue)
                    .HasColumnName("ZBDWVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("主办单位")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<HpfNbQtxgghqk>(entity =>
            {
                entity.ToTable("hpf_nb_qtxgghqk");

                entity.HasComment("年报_其他相关规划情况");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bzdwvalue)
                    .HasColumnName("BZDWVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("编制单位")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bzhgbztvalue)
                    .HasColumnName("BZHGBZTVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("编制和公布状态")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ghqxvalue)
                    .HasColumnName("GHQXVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("规划期限")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Isavailable)
                    .HasColumnName("ISAVAILABLE")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可用（1可用，0不可用）");

                entity.Property(e => e.Lxvalue)
                    .HasColumnName("LXVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("类型")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Mcvalue)
                    .HasColumnName("MCVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<HpfNbRwysjcqk>(entity =>
            {
                entity.ToTable("hpf_nb_rwysjcqk");

                entity.HasComment("年报_人为因素监测情况");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cqdcsvalue)
                    .HasColumnName("CQDCSVALUE")
                    .HasColumnType("text")
                    .HasComment("采取的措施")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Isavailable)
                    .HasColumnName("ISAVAILABLE")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'1'")
                    .HasComment("是否可用（1可用，0不可用）");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Rwsjmsvalue)
                    .HasColumnName("RWSJMSVALUE")
                    .HasColumnType("text")
                    .HasComment("人为事件描述")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sjvalue)
                    .HasColumnName("SJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Ssqkvalue)
                    .HasColumnName("SSQKVALUE")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("损失的情况（元）");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<HpfNbSfyrwysjcqk>(entity =>
            {
                entity.ToTable("hpf_nb_sfyrwysjcqk");

                entity.HasComment("是否有人为因素监测情况");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Funiditem)
                    .HasColumnName("FUNIDITEM")
                    .HasColumnType("varchar(50)")
                    .HasComment("每一小项的ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sfyrwysjcvalue)
                    .HasColumnName("SFYRWYSJCVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否有人为因素监测情况")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<HpfNbSfzsgzrzh>(entity =>
            {
                entity.ToTable("hpf_nb_sfzsgzrzh");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Funiditem)
                    .HasColumnName("FUNIDITEM")
                    .HasColumnType("varchar(50)")
                    .HasComment("每一小项的id")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sfzsgzrzhvalue)
                    .HasColumnName("SFZSGZRZHVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否遭受过自然灾害")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<HpfNbSjycwyhjy>(entity =>
            {
                entity.ToTable("hpf_nb_sjycwyhjy");

                entity.HasComment("年报_世界遗产委员会决议");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sjycwyhvalue)
                    .HasColumnName("SJYCWYHVALUE")
                    .HasColumnType("text")
                    .HasComment("世界遗产委员会决议")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<HpfNbSycn>(entity =>
            {
                entity.ToTable("hpf_nb_sycn");

                entity.HasComment("年报_申遗承诺");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Sycnvalue)
                    .HasColumnName("SYCNVALUE")
                    .HasColumnType("text")
                    .HasComment("申遗承诺")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<HpfNbSycnlxqk>(entity =>
            {
                entity.ToTable("hpf_nb_sycnlxqk");

                entity.HasComment("年报_申遗承诺履行情况");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cnsxvalue)
                    .HasColumnName("CNSXVALUE")
                    .HasColumnType("text")
                    .HasComment("承诺事项")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cnwcsjvalue)
                    .HasColumnName("CNWCSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("承诺完成时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Isavailable)
                    .HasColumnName("ISAVAILABLE")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'1'")
                    .HasComment("是否可用（0不可用，1可用）");

                entity.Property(e => e.Mqjzvalue)
                    .HasColumnName("MQJZVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("目前进展")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Smvalue)
                    .HasColumnName("SMVALUE")
                    .HasColumnType("text")
                    .HasComment("说明")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<HpfNbTcpbjzsm>(entity =>
            {
                entity.ToTable("hpf_nb_tcpbjzsm");

                entity.HasComment("年报_突出普遍价值声明");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(255)")
                    .HasComment("完整系数");

                entity.Property(e => e.Tcpbjzvalue)
                    .HasColumnName("TCPBJZVALUE")
                    .HasColumnType("text")
                    .HasComment("突出普遍价值声明")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)");
            });

            modelBuilder.Entity<HpfNbXgzl>(entity =>
            {
                entity.ToTable("hpf_nb_xgzl");

                entity.HasComment("年报_基本信息概述_提供相关资料");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Sycnvalue)
                    .HasColumnName("SYCNVALUE")
                    .HasColumnType("text")
                    .HasComment("申遗承诺")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Tcpbjzvalue)
                    .HasColumnName("TCPBJZVALUE")
                    .HasColumnType("text")
                    .HasComment("突出普遍价值声明")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wyhjyvalue)
                    .HasColumnName("WYHJYVALUE")
                    .HasColumnType("text")
                    .HasComment("世界遗产委员会决议")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<HpfNbXxghzxqk>(entity =>
            {
                entity.ToTable("hpf_nb_xxghzxqk");

                entity.HasComment("年报_现行规划执行情况");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bzvalue)
                    .HasColumnName("BZVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ghmcvalue)
                    .HasColumnName("GHMCVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("规划名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ghxmvalue)
                    .HasColumnName("GHXMVALUE")
                    .HasColumnType("text")
                    .HasComment("规划项目")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Isavailable)
                    .HasColumnName("ISAVAILABLE")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'1'")
                    .HasComment("是否可用（0不可用，1可用）");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Qksmvalue)
                    .HasColumnName("QKSMVALUE")
                    .HasColumnType("text")
                    .HasComment("情况说明")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Ssqkvalue)
                    .HasColumnName("SSQKVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施情况")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<HpfNbXyjdgzjh>(entity =>
            {
                entity.ToTable("hpf_nb_xyjdgzjh");

                entity.HasComment("年报_下一阶段工作计划");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Gzjhvalue)
                    .HasColumnName("GZJHVALUE")
                    .HasColumnType("text")
                    .HasComment("下一阶段工作计划")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<HpfNbYcbhglzk>(entity =>
            {
                entity.ToTable("hpf_nb_ycbhglzk");

                entity.HasComment("年报_遗产保护管理状况");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bhglzkvalue)
                    .HasColumnName("BHGLZKVALUE")
                    .HasColumnType("text")
                    .HasComment("遗产保护管理状况")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<HpfNbYcdztpg>(entity =>
            {
                entity.ToTable("hpf_nb_ycdztpg");

                entity.HasComment("年报_遗产地总体评估");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Aqsgvalue)
                    .HasColumnName("AQSGVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("安全事故记录")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bhbhvalue)
                    .HasColumnName("BHBHVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("病害变化")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bhglvalue)
                    .HasColumnName("BHGLVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("保护管理规划执行情况")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bhzsvalue)
                    .HasColumnName("BHZSVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("保护展示与环境整治工程")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Funiditem)
                    .HasColumnName("FUNIDITEM")
                    .HasColumnType("varchar(50)")
                    .HasComment("对应的每一小项的xml的ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Hjysvalue)
                    .HasColumnName("HJYSVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("环境因素负面影响的控制情况")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jcxxwsvalue)
                    .HasColumnName("JCXXWSVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("基础信息完善程度")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Kgfjvalue)
                    .HasColumnName("KGFJVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("考古发掘")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rcglvalue)
                    .HasColumnName("RCGLVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("日常管理情况")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Rypxvalue)
                    .HasColumnName("RYPXVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("人员培训情况")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Sycnvalue)
                    .HasColumnName("SYCNVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("申遗承诺履行情况")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Tdlybhvalue)
                    .HasColumnName("TDLYBHVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("土地利用变化")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Xjxmvalue)
                    .HasColumnName("XJXMVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("新建项目建设控制情况")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ycsygnvalue)
                    .HasColumnName("YCSYGNVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产使用功能变化")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ycysxsvalue)
                    .HasColumnName("YCYSXSVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素形式材料变化")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ycztgjvalue)
                    .HasColumnName("YCZTGJVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产总体格局变化")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ykfmyxvalue)
                    .HasColumnName("YKFMYXVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("游客负面影响")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<HpfNbYcqd>(entity =>
            {
                entity.ToTable("hpf_nb_ycqd");

                entity.HasComment("年报_遗产清单");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Xhvalue)
                    .HasColumnName("XHVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("序号");

                entity.Property(e => e.Ycyslxvalue)
                    .HasColumnName("YCYSLXVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素类型")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Yxysvalue)
                    .HasColumnName("YXYSVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<HpfNbYcqhcqshhjndjcjl>(entity =>
            {
                entity.ToTable("hpf_nb_ycqhcqshhjndjcjl");

                entity.HasComment("年报_遗产区和缓冲区社会环境年度监测记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dqdhcqrkslvalue)
                    .HasColumnName("DQDHCQRKSLVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("当前的缓冲区人口数量");

                entity.Property(e => e.Dqdycqrkslvalue)
                    .HasColumnName("DQDYCQRKSLVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("当前的遗产区人口数量");

                entity.Property(e => e.Fmyxfwvalue)
                    .HasColumnName("FMYXFWVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("负面影响范围");

                entity.Property(e => e.Lrmlsdhcqrkvalue)
                    .HasColumnName("LRMLSDHCQRKVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("列入名录时的缓冲区人口");

                entity.Property(e => e.Lrmlsdycqrkslvalue)
                    .HasColumnName("LRMLSDYCQRKSLVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("列入名录时的遗产区人口数量");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Rkssxqvalue)
                    .HasColumnName("RKSSXQVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("人口疏散需求")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Yzwrgyqyslvalue)
                    .HasColumnName("YZWRGYQYSLVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("严重污染工业企业数量");

                entity.Property(e => e.Zykcdslvalue)
                    .HasColumnName("ZYKCDSLVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("资源开采点数量");
            });

            modelBuilder.Entity<HpfNbYcsygnqk>(entity =>
            {
                entity.ToTable("hpf_nb_ycsygnqk");

                entity.HasComment("年报_遗产使用功能情况");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Isavailable)
                    .HasColumnName("ISAVAILABLE")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'1'")
                    .HasComment("是否可用（0不可用，1可用）");

                entity.Property(e => e.Msvalue)
                    .HasColumnName("MSVALUE")
                    .HasColumnType("text")
                    .HasComment("描述")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Sygnqkvalue)
                    .HasColumnName("SYGNQKVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("使用功能情况")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<HpfNbYcszdshhjndjcjl>(entity =>
            {
                entity.ToTable("hpf_nb_ycszdshhjndjcjl");

                entity.HasComment("年报_遗产所在地社会环境年度监测记录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rjgdpvalue)
                    .HasColumnName("RJGDPVALUE")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("人均GDP");

                entity.Property(e => e.Rkmdvalue)
                    .HasColumnName("RKMDVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("人口密度");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Ycszdyzwrgzqyslvalue)
                    .HasColumnName("YCSZDYZWRGZQYSLVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("遗产所在地严重污染工业企业数量 ");
            });

            modelBuilder.Entity<HpfNbYcysdtqk>(entity =>
            {
                entity.ToTable("hpf_nb_ycysdtqk");

                entity.HasComment("年报_遗产要素单体情况");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Isavailable)
                    .HasColumnName("ISAVAILABLE")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'1'")
                    .HasComment("是否可用（1可用）");

                entity.Property(e => e.Msvalue)
                    .HasColumnName("MSVALUE")
                    .HasColumnType("text")
                    .HasComment("描述")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Ycysdtsfybhvalue)
                    .HasColumnName("YCYSDTSFYBHVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素单体是否有变化")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<HpfNbYkl>(entity =>
            {
                entity.ToTable("hpf_nb_ykl");

                entity.HasComment("年报_游客量");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bsykslvalue)
                    .HasColumnName("BSYKSLVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("本省游客数量");

                entity.Property(e => e.Cgsjykrltsvalue)
                    .HasColumnName("CGSJYKRLTSVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("超过设计游客容量的天数");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Gwykrcsvalue)
                    .HasColumnName("GWYKRCSVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("国外游客人次数");

                entity.Property(e => e.Jjyfwrsvalue)
                    .HasColumnName("JJYFWRSVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("讲解员服务人数");

                entity.Property(e => e.Jjyjjcsvalue)
                    .HasColumnName("JJYJJCSVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("讲解员讲解次数");

                entity.Property(e => e.Msvalue)
                    .HasColumnName("MSVALUE")
                    .HasColumnType("text")
                    .HasComment("描述")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Qnykzlvalue)
                    .HasColumnName("QNYKZLVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("全年游客总量(人)");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Ryklxzzvalue)
                    .HasColumnName("RYKLXZZVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("日游客量限制值");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Ssyklxzzvalue)
                    .HasColumnName("SSYKLXZZVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("瞬时游客量限制值");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Yyyrcsvalue)
                    .HasColumnName("YYYRCSVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("预约游人次数");

                entity.Property(e => e.Zgqyklvalue)
                    .HasColumnName("ZGQYKLVALUE")
                    .HasColumnType("int(11)")
                    .HasComment("最高日游客量（人）");

                entity.Property(e => e.Zgrykrqvalue)
                    .HasColumnName("ZGRYKRQVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("最高日游客量日期")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<HpfNbZdbhjcqk>(entity =>
            {
                entity.ToTable("hpf_nb_zdbhjcqk");

                entity.HasComment("年报_重大病害监测情况");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bhlxvalue)
                    .HasColumnName("BHLXVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("病害类型")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Issctp)
                    .HasColumnName("ISSCTP")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否上传了图片(0没有上传过图片)");

                entity.Property(e => e.Jcffvalue)
                    .HasColumnName("JCFFVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("监测方法")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jcjssjvalue)
                    .HasColumnName("JCJSSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测结束时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jckssjvalue)
                    .HasColumnName("JCKSSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测开始时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jczqvalue)
                    .HasColumnName("JCZQVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测周期")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Ssjgvalue)
                    .HasColumnName("SSJGVALUE")
                    .HasColumnType("varchar(500)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Ycyslxvalue)
                    .HasColumnName("YCYSLXVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素类型")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ycysvalue)
                    .HasColumnName("YCYSVALUE")
                    .HasColumnType("varchar(500)")
                    .HasComment("遗产要素")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<HpfNbZrhjnr>(entity =>
            {
                entity.ToTable("hpf_nb_zrhjnr");

                entity.HasComment("自然环境内容");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sjlyvalue)
                    .HasColumnName("SJLYVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据来源")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Zrhjnrvalue)
                    .HasColumnName("ZRHJNRVALUE")
                    .HasColumnType("text")
                    .HasComment("自然环境内容")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<HpfNbZrhjysjcqk>(entity =>
            {
                entity.ToTable("hpf_nb_zrhjysjcqk");

                entity.HasComment("年报_自然环境因素监测情况");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ljjcdzrhjnrvalue)
                    .HasColumnName("LJJCDZRHJNRVALUE")
                    .HasColumnType("text")
                    .HasComment("列举监测的自然环境内容")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<HpfNbZrhjyxpg>(entity =>
            {
                entity.ToTable("hpf_nb_zrhjyxpg");

                entity.HasComment("自然环境影响评估");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Zrhjyxmsvalue)
                    .HasColumnName("ZRHJYXMSVALUE")
                    .HasColumnType("text")
                    .HasComment("自然环境影响描述")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zrhjyxpgvalue)
                    .HasColumnName("ZRHJYXPGVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("自然环境影响评估")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<HpfNbZrzhjcqk>(entity =>
            {
                entity.ToTable("hpf_nb_zrzhjcqk");

                entity.HasComment("年报_自然灾害监测情况");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Isavailable)
                    .HasColumnName("ISAVAILABLE")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'1'")
                    .HasComment("是否可用（1可用，0不可用）");

                entity.Property(e => e.Jzjevalue)
                    .HasColumnName("JZJEVALUE")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("救灾金额");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Szqkmsvalue)
                    .HasColumnName("SZQKMSVALUE")
                    .HasColumnType("text")
                    .HasComment("受灾情况描述")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Zhlxvalue)
                    .HasColumnName("ZHLXVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("灾害类型")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zhsjvalue)
                    .HasColumnName("ZHSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("灾害时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zqyfcsvalue)
                    .HasColumnName("ZQYFCSVALUE")
                    .HasColumnType("text")
                    .HasComment("灾前预防措施")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<HpfNbZs>(entity =>
            {
                entity.ToTable("hpf_nb_zs");

                entity.HasComment("年报_综述");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Xyjdgzjhvalue)
                    .HasColumnName("XYJDGZJHVALUE")
                    .HasColumnType("text")
                    .HasComment("下一阶段工作计划")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ycbhglvalue)
                    .HasColumnName("YCBHGLVALUE")
                    .HasColumnType("text")
                    .HasComment("遗产保护管理状况")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zygzcjvalue)
                    .HasColumnName("ZYGZCJVALUE")
                    .HasColumnType("text")
                    .HasComment("主要工作成绩")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zywtyskvalue)
                    .HasColumnName("ZYWTYSKVALUE")
                    .HasColumnType("text")
                    .HasComment("主要问题与思考")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<HpfNbZtgjqk>(entity =>
            {
                entity.ToTable("hpf_nb_ztgjqk");

                entity.HasComment("年报_总体格局情况");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Gjsfybhvalue)
                    .HasColumnName("GJSFYBHVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("格局是否有变化")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Isavailable)
                    .HasColumnName("ISAVAILABLE")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'1'")
                    .HasComment("是否可用（0不可用，1可用）");

                entity.Property(e => e.Msvalue)
                    .HasColumnName("MSVALUE")
                    .HasColumnType("text")
                    .HasComment("描述")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<HpfNbZxfggzqk>(entity =>
            {
                entity.ToTable("hpf_nb_zxfggzqk");

                entity.HasComment("年报_专项法规规章情况");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Gbdwvalue)
                    .HasColumnName("GBDWVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("公布单位")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Gbsjvalue)
                    .HasColumnName("GBSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("公布时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Gbwhvalue)
                    .HasColumnName("GBWHVALUE")
                    .HasColumnType("varchar(500)")
                    .HasComment("公布文号")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Lbvalue)
                    .HasColumnName("LBVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("类别")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Mcvalue)
                    .HasColumnName("MCVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Sssjvalue)
                    .HasColumnName("SSSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<HpfNbZxqkzhpj>(entity =>
            {
                entity.ToTable("hpf_nb_zxqkzhpj");

                entity.HasComment("年报_执行情况综合评价");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Isavailable)
                    .HasColumnName("ISAVAILABLE")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'1'")
                    .HasComment("是否可用（0不可用，1可用）");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Zhpjvalue)
                    .HasColumnName("ZHPJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("综合评价")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<HpfNbZygzcj>(entity =>
            {
                entity.ToTable("hpf_nb_zygzcj");

                entity.HasComment("年报_主要工作成绩");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Zygzcjvalue)
                    .HasColumnName("ZYGZCJVALUE")
                    .HasColumnType("text")
                    .HasComment("主要工作成绩")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<HpfNbZywtysk>(entity =>
            {
                entity.ToTable("hpf_nb_zywtysk");

                entity.HasComment("年报_主要问题与思考");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Zywtyskvalue)
                    .HasColumnName("ZYWTYSKVALUE")
                    .HasColumnType("text")
                    .HasComment("主要问题与思考")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<HpfYcjcxxSjwhyc>(entity =>
            {
                entity.ToTable("hpf_ycjcxx_sjwhyc");

                entity.HasIndex(e => e.Bm)
                    .HasName("bminx")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bfzc)
                    .HasColumnName("BFZC")
                    .HasColumnType("bit(1)")
                    .HasDefaultValueSql("b'0'")
                    .HasComment("不区分组成部分  ,现在能用到 例如 定期评估 花山和苏州古典园林是不区分的");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(5)")
                    .HasComment("编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dbzp)
                    .HasColumnName("DBZP")
                    .HasColumnType("varchar(100)")
                    .HasComment("代表照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gbjg)
                    .HasColumnName("GBJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("公布机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gbwh)
                    .HasColumnName("GBWH")
                    .HasColumnType("varchar(50)")
                    .HasComment("公布文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Hcqmj)
                    .HasColumnName("HCQMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("缓冲区面积")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasColumnType("decimal(10,7)")
                    .HasComment("经度");

                entity.Property(e => e.Kznf)
                    .HasColumnName("KZNF")
                    .HasColumnType("varchar(10)")
                    .HasComment("扩展年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("timestamp")
                    .HasComment("入库时间");

                entity.Property(e => e.Rxbz)
                    .HasColumnName("RXBZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("入选标准")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rxnf)
                    .HasColumnName("RXNF")
                    .HasColumnType("int(11)")
                    .HasComment("入选年份");

                entity.Property(e => e.Sfsjwhyc)
                    .HasColumnName("SFSJWHYC")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否世界文化遗产");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasColumnType("decimal(10,7)")
                    .HasComment("纬度");

                entity.Property(e => e.Wzsm)
                    .HasColumnName("WZSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("位置说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzqbm)
                    .HasColumnName("XZQBM")
                    .HasColumnType("varchar(120)")
                    .HasComment("行政区编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycgk)
                    .HasColumnName("YCGK")
                    .HasColumnType("varchar(2000)")
                    .HasComment("遗产概况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycjz)
                    .HasColumnName("YCJZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产价值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yclx)
                    .HasColumnName("YCLX")
                    .HasColumnType("varchar(10)")
                    .HasComment("遗产类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycmc)
                    .HasColumnName("YCMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycpj)
                    .HasColumnName("YCPJ")
                    .HasColumnType("varchar(2000)")
                    .HasComment("遗产评价")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycqmj)
                    .HasColumnName("YCQMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产区面积")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywmc)
                    .HasColumnName("YWMC")
                    .HasColumnType("varchar(150)")
                    .HasComment("英文名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywycgk)
                    .HasColumnName("YWYCGK")
                    .HasColumnType("varchar(2000)")
                    .HasComment("英文遗产概况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zssx)
                    .HasColumnName("ZSSX")
                    .HasColumnType("int(5)")
                    .HasComment("展示顺序");

                entity.Property(e => e.Zyycxzms)
                    .HasColumnName("ZYYCXZMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("主要遗存现状描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<HpfYcjcxxYcys>(entity =>
            {
                entity.ToTable("hpf_ycjcxx_ycys");

                entity.HasComment("遗产要素");

                entity.HasIndex(e => e.Bm)
                    .HasName("weiyidi")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(50)")
                    .HasComment("编码(21位)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dbxtp)
                    .HasColumnName("DBXTP")
                    .HasColumnType("varchar(200)")
                    .HasComment("代表性图片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dydwbdw)
                    .HasColumnName("DYDWBDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("对应的文保单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fid)
                    .HasColumnName("FID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fz)
                    .HasColumnName("FZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gc)
                    .HasColumnName("GC")
                    .HasColumnType("varchar(50)")
                    .HasComment("高程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glycbtid)
                    .HasColumnName("GLYCBTID")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("关联遗产本体ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gm)
                    .HasColumnName("GM")
                    .HasColumnType("varchar(2000)")
                    .HasComment("规模")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gmlx)
                    .HasColumnName("GMLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("规模类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasColumnType("decimal(18,10)");

                entity.Property(e => e.Lycs)
                    .HasColumnName("LYCS")
                    .HasColumnType("int(50)");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(100)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nd)
                    .HasColumnName("ND")
                    .HasColumnType("varchar(50)")
                    .HasComment("年代")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sm)
                    .HasColumnName("SM")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasColumnType("decimal(18,10)");

                entity.Property(e => e.Xh)
                    .HasColumnName("XH")
                    .HasColumnType("int(50)")
                    .HasComment("序号");

                entity.Property(e => e.Xxwz)
                    .HasColumnName("XXWZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("详细位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycyslx)
                    .HasColumnName("YCYSLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysms)
                    .HasColumnName("YCYSMS")
                    .HasColumnType("varchar(10000)")
                    .HasComment("遗产要素描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yczcmc)
                    .HasColumnName("YCZCMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yygs)
                    .HasColumnName("YYGS")
                    .HasColumnType("varchar(2000)")
                    .HasComment("语音概述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zcbfid)
                    .HasColumnName("ZCBFID")
                    .HasColumnType("varchar(200)")
                    .HasComment("组成部分ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<HpfYcjcxxYcyslx>(entity =>
            {
                entity.ToTable("hpf_ycjcxx_ycyslx");

                entity.HasComment("遗产要素类型");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Falg).HasColumnType("int(11)");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("tinyint(3) unsigned")
                    .HasComment("父ID");
            });

            modelBuilder.Entity<HpfYcjcxxYczcbf>(entity =>
            {
                entity.ToTable("hpf_ycjcxx_yczcbf");

                entity.HasComment("遗产组成部分");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(13)")
                    .HasComment("编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dbzp)
                    .HasColumnName("DBZP")
                    .HasColumnType("varchar(100)")
                    .HasComment("代表照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fid)
                    .HasColumnName("FID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID（为区分多级遗产组成）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gk)
                    .HasColumnName("GK")
                    .HasColumnType("varchar(2000)")
                    .HasComment("概况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasColumnType("decimal(10,7)")
                    .HasComment("经度");

                entity.Property(e => e.Level)
                    .HasColumnName("LEVEL")
                    .HasColumnType("int(11)")
                    .HasComment("5 8 8的编码结构  第二个8代表组成部分  此字段拆分8的位数 一级前3位000 二级中2位 00 三级3位 000");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("timestamp")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sjwhycbm)
                    .HasColumnName("SJWHYCBM")
                    .HasColumnType("varchar(5)")
                    .HasComment("世界文化遗产编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sort).HasColumnType("int(11)");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasColumnType("decimal(10,7)")
                    .HasComment("纬度");

                entity.Property(e => e.Wzsm)
                    .HasColumnName("WZSM")
                    .HasColumnType("varchar(200)")
                    .HasComment("位置说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzgn)
                    .HasColumnName("XZGN")
                    .HasColumnType("varchar(100)")
                    .HasComment("现状功能")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzqbm)
                    .HasColumnName("XZQBM")
                    .HasColumnType("varchar(20)")
                    .HasComment("行政区编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywmc)
                    .HasColumnName("YWMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("英文名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zzjgbh)
                    .HasColumnName("ZZJGBH")
                    .HasColumnType("varchar(10)")
                    .HasComment("组织机构编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<HsRcxcQyCopy1>(entity =>
            {
                entity.ToTable("hs_rcxc_qy_copy1");

                entity.HasComment("日常巡查_区域表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(45)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glycbtid)
                    .HasColumnName("GLYCBTID")
                    .HasColumnType("varchar(50)")
                    .HasComment("关联遗产本体ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Path)
                    .HasColumnType("varchar(4000)")
                    .HasComment(" 区域路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qymc)
                    .HasColumnName("QYMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("区域名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JbhjWp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("jbhj_wp");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcz)
                    .HasColumnName("JCZ")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JczlStzlcfwz>(entity =>
            {
                entity.ToTable("jczl_stzlcfwz");

                entity.HasComment("实体资料存放位置");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzsm)
                    .HasColumnName("bzsm")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fjid)
                    .HasColumnName("fjid")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("lx")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wzbm)
                    .HasColumnName("wzbm")
                    .HasColumnType("varchar(50)")
                    .HasComment("位置编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JczlZlfl>(entity =>
            {
                entity.ToTable("jczl_zlfl");

                entity.HasComment("资料分类");

                entity.HasIndex(e => e.Fjid)
                    .HasName("FK_88C8468C1AE94530");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzsm)
                    .HasColumnName("bzsm")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fjid)
                    .HasColumnName("fjid")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Flbm)
                    .HasColumnName("flbm")
                    .HasColumnType("varchar(50)")
                    .HasComment("分类编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xsmc)
                    .HasColumnName("xsmc")
                    .HasColumnType("varchar(50)")
                    .HasComment("显示名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Fj)
                    .WithMany(p => p.InverseFj)
                    .HasForeignKey(d => d.Fjid)
                    .HasConstraintName("jczl_zlfl_ibfk_1");
            });

            modelBuilder.Entity<JczlZljl>(entity =>
            {
                entity.ToTable("jczl_zljl");

                entity.HasComment("资料记录");

                entity.HasIndex(e => e.Jczlflid)
                    .HasName("FK_6E96D6F64DCA4D57");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bgdw)
                    .HasColumnName("bgdw")
                    .HasColumnType("varchar(50)")
                    .HasComment("保管单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bt)
                    .HasColumnName("bt")
                    .HasColumnType("varchar(50)")
                    .HasComment("标题")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Gjc)
                    .HasColumnName("gjc")
                    .HasColumnType("varchar(50)")
                    .HasComment("关键词")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jczlflid)
                    .HasColumnName("jczlflid")
                    .HasColumnType("varchar(50)")
                    .HasComment("基础资料分类ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfdzzl)
                    .HasColumnName("sfdzzl")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否电子资料");

                entity.Property(e => e.Sfsmtp)
                    .HasColumnName("sfsmtp")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否扫描图片");

                entity.Property(e => e.Sfstzl)
                    .HasColumnName("sfstzl")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否实体资料");

                entity.Property(e => e.Slrxm)
                    .HasColumnName("slrxm")
                    .HasColumnType("varchar(50)")
                    .HasComment("收录人姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Slsj)
                    .HasColumnName("slsj")
                    .HasColumnType("datetime")
                    .HasComment("收录时间");

                entity.Property(e => e.Stzlwzbh)
                    .HasColumnName("stzlwzbh")
                    .HasColumnType("varchar(50)")
                    .HasComment("实体资料位置编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzqbm)
                    .HasColumnName("xzqbm")
                    .HasColumnType("varchar(50)")
                    .HasComment("行政区编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zlbm)
                    .HasColumnName("zlbm")
                    .HasColumnType("varchar(50)")
                    .HasComment("资料编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zlsm)
                    .HasColumnName("zlsm")
                    .HasColumnType("varchar(50)")
                    .HasComment("资料说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Jczlfl)
                    .WithMany(p => p.JczlZljl)
                    .HasForeignKey(d => d.Jczlflid)
                    .HasConstraintName("jczl_zljl_ibfk_1");
            });

            modelBuilder.Entity<JczlZljlDzwj>(entity =>
            {
                entity.ToTable("jczl_zljl_dzwj");

                entity.HasComment("资料记录_电子文件");

                entity.HasIndex(e => e.Zljlid)
                    .HasName("FK_299402D21A2A4CC3");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scrid)
                    .HasColumnName("scrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("上传人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scsj)
                    .HasColumnName("scsj")
                    .HasColumnType("datetime")
                    .HasComment("上传时间");

                entity.Property(e => e.Wjgs)
                    .HasColumnName("wjgs")
                    .HasColumnType("varchar(50)")
                    .HasComment("文件格式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wjlj)
                    .HasColumnName("wjlj")
                    .HasColumnType("varchar(200)")
                    .HasComment("文件路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wjmc)
                    .HasColumnName("wjmc")
                    .HasColumnType("varchar(50)")
                    .HasComment("文件名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zljlid)
                    .HasColumnName("zljlid")
                    .HasColumnType("varchar(50)")
                    .HasComment("资料记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Zljl)
                    .WithMany(p => p.JczlZljlDzwj)
                    .HasForeignKey(d => d.Zljlid)
                    .HasConstraintName("jczl_zljl_dzwj_ibfk_1");
            });

            modelBuilder.Entity<JieruAqiDensityvalue>(entity =>
            {
                entity.ToTable("jieru_aqi_densityvalue");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Count)
                    .HasColumnName("count")
                    .HasColumnType("double(50,0)")
                    .HasDefaultValueSql("'0'");

                entity.Property(e => e.Sum)
                    .HasColumnName("sum")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("数据时间");

                entity.Property(e => e.Wrw)
                    .HasColumnName("wrw")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JieruAqiDensityvalueCopy>(entity =>
            {
                entity.ToTable("jieru_aqi_densityvalue_copy");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Count)
                    .HasColumnName("count")
                    .HasColumnType("double(50,0)")
                    .HasDefaultValueSql("'0'");

                entity.Property(e => e.Sum)
                    .HasColumnName("sum")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("数据时间");

                entity.Property(e => e.Wrw)
                    .HasColumnName("wrw")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JieruAqiLimitvalue>(entity =>
            {
                entity.HasKey(e => e.Wrw)
                    .HasName("PRIMARY");

                entity.ToTable("jieru_aqi_limitvalue");

                entity.HasComment("空气质量分指数以及对应污染物浓度限制值");

                entity.Property(e => e.Wrw)
                    .HasColumnName("wrw")
                    .HasColumnType("varchar(50)")
                    .HasComment("污染物（类型）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Iaqi0)
                    .HasColumnName("IAQI_0")
                    .HasColumnType("int(11)")
                    .HasComment("空气质量分指数0对应的浓度值（平均 µg/m3）");

                entity.Property(e => e.Iaqi100)
                    .HasColumnName("IAQI_100")
                    .HasColumnType("int(11)")
                    .HasComment("空气质量分指数100对应的浓度值（平均 µg/m3）");

                entity.Property(e => e.Iaqi150)
                    .HasColumnName("IAQI_150")
                    .HasColumnType("int(11)")
                    .HasComment("空气质量分指数150对应的浓度值（平均 µg/m3）");

                entity.Property(e => e.Iaqi200)
                    .HasColumnName("IAQI_200")
                    .HasColumnType("int(11)")
                    .HasComment("空气质量分指数200对应的浓度值（平均 µg/m3）");

                entity.Property(e => e.Iaqi300)
                    .HasColumnName("IAQI_300")
                    .HasColumnType("int(11)")
                    .HasComment("空气质量分指数300对应的浓度值（平均 µg/m3）");

                entity.Property(e => e.Iaqi400)
                    .HasColumnName("IAQI_400")
                    .HasColumnType("int(11)")
                    .HasComment("空气质量分指数400对应的浓度值（平均 µg/m3）");

                entity.Property(e => e.Iaqi50)
                    .HasColumnName("IAQI_50")
                    .HasColumnType("int(11)")
                    .HasComment("空气质量分指数50对应的浓度值（平均 µg/m3）");

                entity.Property(e => e.Iaqi500)
                    .HasColumnName("IAQI_500")
                    .HasColumnType("int(11)")
                    .HasComment("空气质量分指数500对应的浓度值（平均 µg/m3）");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JieruAqiLimitvalueCopy>(entity =>
            {
                entity.HasKey(e => e.Wrw)
                    .HasName("PRIMARY");

                entity.ToTable("jieru_aqi_limitvalue_copy");

                entity.HasComment("空气质量分指数以及对应污染物浓度限制值");

                entity.Property(e => e.Wrw)
                    .HasColumnName("wrw")
                    .HasColumnType("varchar(50)")
                    .HasComment("污染物（类型）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Iaqi0)
                    .HasColumnName("IAQI_0")
                    .HasColumnType("int(11)")
                    .HasComment("空气质量分指数0对应的浓度值（平均 µg/m3）");

                entity.Property(e => e.Iaqi100)
                    .HasColumnName("IAQI_100")
                    .HasColumnType("int(11)")
                    .HasComment("空气质量分指数100对应的浓度值（平均 µg/m3）");

                entity.Property(e => e.Iaqi150)
                    .HasColumnName("IAQI_150")
                    .HasColumnType("int(11)")
                    .HasComment("空气质量分指数150对应的浓度值（平均 µg/m3）");

                entity.Property(e => e.Iaqi200)
                    .HasColumnName("IAQI_200")
                    .HasColumnType("int(11)")
                    .HasComment("空气质量分指数200对应的浓度值（平均 µg/m3）");

                entity.Property(e => e.Iaqi300)
                    .HasColumnName("IAQI_300")
                    .HasColumnType("int(11)")
                    .HasComment("空气质量分指数300对应的浓度值（平均 µg/m3）");

                entity.Property(e => e.Iaqi400)
                    .HasColumnName("IAQI_400")
                    .HasColumnType("int(11)")
                    .HasComment("空气质量分指数400对应的浓度值（平均 µg/m3）");

                entity.Property(e => e.Iaqi50)
                    .HasColumnName("IAQI_50")
                    .HasColumnType("int(11)")
                    .HasComment("空气质量分指数50对应的浓度值（平均 µg/m3）");

                entity.Property(e => e.Iaqi500)
                    .HasColumnName("IAQI_500")
                    .HasColumnType("int(11)")
                    .HasComment("空气质量分指数500对应的浓度值（平均 µg/m3）");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JieruAqiMintueData>(entity =>
            {
                entity.ToTable("jieru_aqi_mintue_data");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.CoDensity)
                    .HasColumnName("co_density")
                    .HasColumnType("varchar(255)")
                    .HasComment("一氧化碳（CO）浓度单位：mg/m3")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jierutime)
                    .HasColumnName("jierutime")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("数据接入时间");

                entity.Property(e => e.Klw2d5Density)
                    .HasColumnName("klw2d5_density")
                    .HasColumnType("varchar(255)")
                    .HasComment("颗粒物（粒径<=2.5µm）浓度单位：mg/m3")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.KlwDensity)
                    .HasColumnName("klw_density")
                    .HasColumnType("varchar(255)")
                    .HasComment("颗粒物（粒径<=10µm）浓度单位：mg/m3")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.No2Density)
                    .HasColumnName("no2_density")
                    .HasColumnType("varchar(255)")
                    .HasComment("二氧化氮（NO2）浓度d单位：mg/m3")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O3Density)
                    .HasColumnName("o3_density")
                    .HasColumnType("varchar(255)")
                    .HasComment("臭氧（O3）浓度单位：mg/m3")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.So2Density)
                    .HasColumnName("so2_density")
                    .HasColumnType("varchar(255)")
                    .HasComment("二氧化硫（SO2）浓度单位：mg/m3")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("数据时间");
            });

            modelBuilder.Entity<JieruAqiMintueDataCopy>(entity =>
            {
                entity.ToTable("jieru_aqi_mintue_data_copy");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.CoDensity)
                    .HasColumnName("co_density")
                    .HasColumnType("varchar(255)")
                    .HasComment("一氧化碳（CO）浓度单位：mg/m3")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jierutime)
                    .HasColumnName("jierutime")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("数据接入时间");

                entity.Property(e => e.Klw2d5Density)
                    .HasColumnName("klw2d5_density")
                    .HasColumnType("varchar(255)")
                    .HasComment("颗粒物（粒径<=2.5µm）浓度单位：mg/m3")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.KlwDensity)
                    .HasColumnName("klw_density")
                    .HasColumnType("varchar(255)")
                    .HasComment("颗粒物（粒径<=10µm）浓度单位：mg/m3")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.No2Density)
                    .HasColumnName("no2_density")
                    .HasColumnType("varchar(255)")
                    .HasComment("二氧化氮（NO2）浓度d单位：mg/m3")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O3Density)
                    .HasColumnName("o3_density")
                    .HasColumnType("varchar(255)")
                    .HasComment("臭氧（O3）浓度单位：mg/m3")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.So2Density)
                    .HasColumnName("so2_density")
                    .HasColumnType("varchar(255)")
                    .HasComment("二氧化硫（SO2）浓度单位：mg/m3")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("数据时间");
            });

            modelBuilder.Entity<JieruAqiReportDay>(entity =>
            {
                entity.ToTable("jieru_aqi_report_day");

                entity.HasComment("大气质量日报");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aqi)
                    .HasColumnName("aqi")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数（AQI）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiClass)
                    .HasColumnName("aqi_class")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数级别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiLbColor)
                    .HasColumnName("aqi_lb_color")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数类别颜色")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiLbLb)
                    .HasColumnName("aqi_lb_lb")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数类别（类别）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Co24hDensity)
                    .HasColumnName("co_24h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("一氧化碳（CO）24小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Co24hSubindex)
                    .HasColumnName("co_24h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("一氧化碳（CO）24小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcdid)
                    .HasColumnName("JCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw24hDensity)
                    .HasColumnName("klw_24h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=10µm）24小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw24hSubindex)
                    .HasColumnName("klw_24h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=10µm）24小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw2d524hDensity)
                    .HasColumnName("klw2d5_24h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=2.5µm）24小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw2d524hSubindex)
                    .HasColumnName("klw2d5_24h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=2.5µm）24小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.MajorPollutant)
                    .HasColumnName("major_pollutant")
                    .HasColumnType("varchar(20)")
                    .HasComment("首要污染物")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.No224hDensity)
                    .HasColumnName("no2_24h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化氮（NO2）24小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.No224hSubindex)
                    .HasColumnName("no2_24h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化氮（NO2）24小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O31hDensity)
                    .HasColumnName("o3_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O31hSubindex)
                    .HasColumnName("o3_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O38hpjDensity)
                    .HasColumnName("o3_8hpj_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）8小时滑动平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O38hpjSubindex)
                    .HasColumnName("o3_8hpj_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）8小时滑动平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ReportDate)
                    .HasColumnName("report_date")
                    .HasColumnType("datetime")
                    .HasComment("发布时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态(整型)");

                entity.Property(e => e.So224hDensity)
                    .HasColumnName("so2_24h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化硫（SO2）24小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.So224hSubindex)
                    .HasColumnName("so2_24h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化硫（SO2）24小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<JieruAqiReportDayCopy>(entity =>
            {
                entity.ToTable("jieru_aqi_report_day_copy");

                entity.HasComment("大气质量日报");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aqi)
                    .HasColumnName("aqi")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数（AQI）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiClass)
                    .HasColumnName("aqi_class")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数级别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiLbColor)
                    .HasColumnName("aqi_lb_color")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数类别颜色")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiLbLb)
                    .HasColumnName("aqi_lb_lb")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数类别（类别）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Co24hDensity)
                    .HasColumnName("co_24h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("一氧化碳（CO）24小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Co24hSubindex)
                    .HasColumnName("co_24h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("一氧化碳（CO）24小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Klw24hDensity)
                    .HasColumnName("klw_24h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=10µm）24小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw24hSubindex)
                    .HasColumnName("klw_24h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=10µm）24小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw2d524hDensity)
                    .HasColumnName("klw2d5_24h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=2.5µm）24小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw2d524hSubindex)
                    .HasColumnName("klw2d5_24h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=2.5µm）24小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.MajorPollutant)
                    .HasColumnName("major_pollutant")
                    .HasColumnType("varchar(20)")
                    .HasComment("首要污染物")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.No224hDensity)
                    .HasColumnName("no2_24h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化氮（NO2）24小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.No224hSubindex)
                    .HasColumnName("no2_24h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化氮（NO2）24小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O31hDensity)
                    .HasColumnName("o3_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O31hSubindex)
                    .HasColumnName("o3_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O38hpjDensity)
                    .HasColumnName("o3_8hpj_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）8小时滑动平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O38hpjSubindex)
                    .HasColumnName("o3_8hpj_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）8小时滑动平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ReportDate)
                    .HasColumnName("report_date")
                    .HasColumnType("datetime")
                    .HasComment("发布时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态(整型)");

                entity.Property(e => e.So224hDensity)
                    .HasColumnName("so2_24h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化硫（SO2）24小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.So224hSubindex)
                    .HasColumnName("so2_24h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化硫（SO2）24小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<JieruAqiReportDayCopy手动导入数据>(entity =>
            {
                entity.ToTable("jieru_aqi_report_day_copy手动导入数据");

                entity.HasComment("大气质量日报");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aqi)
                    .HasColumnName("aqi")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数（AQI）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiClass)
                    .HasColumnName("aqi_class")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数级别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiLbColor)
                    .HasColumnName("aqi_lb_color")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数类别颜色")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiLbLb)
                    .HasColumnName("aqi_lb_lb")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数类别（类别）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Co24hDensity)
                    .HasColumnName("co_24h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("一氧化碳（CO）24小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Co24hSubindex)
                    .HasColumnName("co_24h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("一氧化碳（CO）24小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Klw24hDensity)
                    .HasColumnName("klw_24h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=10µm）24小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw24hSubindex)
                    .HasColumnName("klw_24h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=10µm）24小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw2d524hDensity)
                    .HasColumnName("klw2d5_24h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=2.5µm）24小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw2d524hSubindex)
                    .HasColumnName("klw2d5_24h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=2.5µm）24小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.MajorPollutant)
                    .HasColumnName("major_pollutant")
                    .HasColumnType("varchar(20)")
                    .HasComment("首要污染物")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.No224hDensity)
                    .HasColumnName("no2_24h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化氮（NO2）24小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.No224hSubindex)
                    .HasColumnName("no2_24h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化氮（NO2）24小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O31hDensity)
                    .HasColumnName("o3_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O31hSubindex)
                    .HasColumnName("o3_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O38hpjDensity)
                    .HasColumnName("o3_8hpj_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）8小时滑动平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O38hpjSubindex)
                    .HasColumnName("o3_8hpj_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）8小时滑动平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ReportDate)
                    .HasColumnName("report_date")
                    .HasColumnType("datetime")
                    .HasComment("发布时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态(整型)");

                entity.Property(e => e.So224hDensity)
                    .HasColumnName("so2_24h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化硫（SO2）24小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.So224hSubindex)
                    .HasColumnName("so2_24h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化硫（SO2）24小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<JieruAqiReportDayCopy改时间之前>(entity =>
            {
                entity.ToTable("jieru_aqi_report_day_copy改时间之前");

                entity.HasComment("大气质量日报");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aqi)
                    .HasColumnName("aqi")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数（AQI）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiClass)
                    .HasColumnName("aqi_class")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数级别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiLbColor)
                    .HasColumnName("aqi_lb_color")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数类别颜色")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiLbLb)
                    .HasColumnName("aqi_lb_lb")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数类别（类别）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Co24hDensity)
                    .HasColumnName("co_24h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("一氧化碳（CO）24小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Co24hSubindex)
                    .HasColumnName("co_24h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("一氧化碳（CO）24小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Klw24hDensity)
                    .HasColumnName("klw_24h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=10µm）24小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw24hSubindex)
                    .HasColumnName("klw_24h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=10µm）24小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw2d524hDensity)
                    .HasColumnName("klw2d5_24h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=2.5µm）24小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw2d524hSubindex)
                    .HasColumnName("klw2d5_24h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=2.5µm）24小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.MajorPollutant)
                    .HasColumnName("major_pollutant")
                    .HasColumnType("varchar(20)")
                    .HasComment("首要污染物")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.No224hDensity)
                    .HasColumnName("no2_24h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化氮（NO2）24小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.No224hSubindex)
                    .HasColumnName("no2_24h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化氮（NO2）24小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O31hDensity)
                    .HasColumnName("o3_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O31hSubindex)
                    .HasColumnName("o3_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O38hpjDensity)
                    .HasColumnName("o3_8hpj_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）8小时滑动平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O38hpjSubindex)
                    .HasColumnName("o3_8hpj_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）8小时滑动平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ReportDate)
                    .HasColumnName("report_date")
                    .HasColumnType("datetime")
                    .HasComment("发布时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态(整型)");

                entity.Property(e => e.So224hDensity)
                    .HasColumnName("so2_24h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化硫（SO2）24小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.So224hSubindex)
                    .HasColumnName("so2_24h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化硫（SO2）24小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<JieruAqiReportHour>(entity =>
            {
                entity.ToTable("jieru_aqi_report_hour");

                entity.HasComment("大气质量时报");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aqi)
                    .HasColumnName("aqi")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数（AQI）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiClass)
                    .HasColumnName("aqi_class")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数级别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiDay)
                    .HasColumnName("aqi_day")
                    .HasColumnType("varchar(20)")
                    .HasComment("aqi天")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiLbColor)
                    .HasColumnName("aqi_lb_color")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数类别颜色")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiLbLb)
                    .HasColumnName("aqi_lb_lb")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数类别（类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Co1hDensity)
                    .HasColumnName("co_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("一氧化碳（CO）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Co1hSubindex)
                    .HasColumnName("co_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("一氧化碳（CO）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcdid)
                    .HasColumnName("JCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw1hDensity)
                    .HasColumnName("klw_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=10µm）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw1hSubindex)
                    .HasColumnName("klw_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=10µm）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw2d51hDensity)
                    .HasColumnName("klw2d5_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=2.5µm）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw2d51hSubindex)
                    .HasColumnName("klw2d5_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=2.5µm）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.MajorPollutant)
                    .HasColumnName("major_pollutant")
                    .HasColumnType("varchar(200)")
                    .HasComment("首要污染物")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.No21hDensity)
                    .HasColumnName("no2_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化氮（NO2）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.No21hSubindex)
                    .HasColumnName("no2_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化氮（NO2）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O31hDensity)
                    .HasColumnName("o3_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O31hSubindex)
                    .HasColumnName("o3_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O38hpjDensity)
                    .HasColumnName("o3_8hpj_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）8小时滑动平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O38hpjSubindex)
                    .HasColumnName("o3_8hpj_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）8小时滑动平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ReportDate)
                    .HasColumnName("report_date")
                    .HasColumnType("datetime")
                    .HasComment("发布时间，主键");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.So21hDensity)
                    .HasColumnName("so2_1h_density")
                    .HasColumnType("varchar(50)")
                    .HasComment("二氧化硫（SO2）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.So21hSubindex)
                    .HasColumnName("so2_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化硫（SO2）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<JieruAqiReportHourCopy>(entity =>
            {
                entity.ToTable("jieru_aqi_report_hour_copy");

                entity.HasComment("大气质量时报");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aqi)
                    .HasColumnName("aqi")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数（AQI）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiClass)
                    .HasColumnName("aqi_class")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数级别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiDay)
                    .HasColumnName("aqi_day")
                    .HasColumnType("varchar(20)")
                    .HasComment("aqi天")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiLbColor)
                    .HasColumnName("aqi_lb_color")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数类别颜色")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiLbLb)
                    .HasColumnName("aqi_lb_lb")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数类别（类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Co1hDensity)
                    .HasColumnName("co_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("一氧化碳（CO）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Co1hSubindex)
                    .HasColumnName("co_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("一氧化碳（CO）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcdid)
                    .HasColumnName("JCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw1hDensity)
                    .HasColumnName("klw_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=10µm）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw1hSubindex)
                    .HasColumnName("klw_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=10µm）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw2d51hDensity)
                    .HasColumnName("klw2d5_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=2.5µm）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw2d51hSubindex)
                    .HasColumnName("klw2d5_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=2.5µm）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.MajorPollutant)
                    .HasColumnName("major_pollutant")
                    .HasColumnType("varchar(200)")
                    .HasComment("首要污染物")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.No21hDensity)
                    .HasColumnName("no2_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化氮（NO2）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.No21hSubindex)
                    .HasColumnName("no2_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化氮（NO2）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O31hDensity)
                    .HasColumnName("o3_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O31hSubindex)
                    .HasColumnName("o3_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O38hpjDensity)
                    .HasColumnName("o3_8hpj_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）8小时滑动平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O38hpjSubindex)
                    .HasColumnName("o3_8hpj_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）8小时滑动平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ReportDate)
                    .HasColumnName("report_date")
                    .HasColumnType("datetime")
                    .HasComment("发布时间，主键");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.So21hDensity)
                    .HasColumnName("so2_1h_density")
                    .HasColumnType("varchar(50)")
                    .HasComment("二氧化硫（SO2）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.So21hSubindex)
                    .HasColumnName("so2_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化硫（SO2）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<JieruAqiReportHourCopy手动导入数据>(entity =>
            {
                entity.ToTable("jieru_aqi_report_hour_copy手动导入数据");

                entity.HasComment("大气质量时报");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aqi)
                    .HasColumnName("aqi")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数（AQI）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiClass)
                    .HasColumnName("aqi_class")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数级别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiDay)
                    .HasColumnName("aqi_day")
                    .HasColumnType("varchar(20)")
                    .HasComment("aqi天")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiLbColor)
                    .HasColumnName("aqi_lb_color")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数类别颜色")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiLbLb)
                    .HasColumnName("aqi_lb_lb")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数类别（类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Co1hDensity)
                    .HasColumnName("co_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("一氧化碳（CO）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Co1hSubindex)
                    .HasColumnName("co_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("一氧化碳（CO）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Klw1hDensity)
                    .HasColumnName("klw_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=10µm）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw1hSubindex)
                    .HasColumnName("klw_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=10µm）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw2d51hDensity)
                    .HasColumnName("klw2d5_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=2.5µm）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw2d51hSubindex)
                    .HasColumnName("klw2d5_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=2.5µm）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.MajorPollutant)
                    .HasColumnName("major_pollutant")
                    .HasColumnType("varchar(200)")
                    .HasComment("首要污染物")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.No21hDensity)
                    .HasColumnName("no2_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化氮（NO2）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.No21hSubindex)
                    .HasColumnName("no2_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化氮（NO2）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O31hDensity)
                    .HasColumnName("o3_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O31hSubindex)
                    .HasColumnName("o3_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O38hpjDensity)
                    .HasColumnName("o3_8hpj_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）8小时滑动平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O38hpjSubindex)
                    .HasColumnName("o3_8hpj_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）8小时滑动平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ReportDate)
                    .HasColumnName("report_date")
                    .HasColumnType("datetime")
                    .HasComment("发布时间，主键");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.So21hDensity)
                    .HasColumnName("so2_1h_density")
                    .HasColumnType("varchar(50)")
                    .HasComment("二氧化硫（SO2）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.So21hSubindex)
                    .HasColumnName("so2_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化硫（SO2）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<JieruAqiReportHourCopy改时间之前>(entity =>
            {
                entity.ToTable("jieru_aqi_report_hour_copy改时间之前");

                entity.HasComment("大气质量时报");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aqi)
                    .HasColumnName("aqi")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数（AQI）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiClass)
                    .HasColumnName("aqi_class")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数级别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiDay)
                    .HasColumnName("aqi_day")
                    .HasColumnType("varchar(20)")
                    .HasComment("aqi天")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiLbColor)
                    .HasColumnName("aqi_lb_color")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数类别颜色")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AqiLbLb)
                    .HasColumnName("aqi_lb_lb")
                    .HasColumnType("varchar(20)")
                    .HasComment("空气质量指数类别（类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Co1hDensity)
                    .HasColumnName("co_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("一氧化碳（CO）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Co1hSubindex)
                    .HasColumnName("co_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("一氧化碳（CO）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Klw1hDensity)
                    .HasColumnName("klw_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=10µm）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw1hSubindex)
                    .HasColumnName("klw_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=10µm）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw2d51hDensity)
                    .HasColumnName("klw2d5_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=2.5µm）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Klw2d51hSubindex)
                    .HasColumnName("klw2d5_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("颗粒物（粒径<=2.5µm）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.MajorPollutant)
                    .HasColumnName("major_pollutant")
                    .HasColumnType("varchar(200)")
                    .HasComment("首要污染物")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.No21hDensity)
                    .HasColumnName("no2_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化氮（NO2）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.No21hSubindex)
                    .HasColumnName("no2_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化氮（NO2）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O31hDensity)
                    .HasColumnName("o3_1h_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O31hSubindex)
                    .HasColumnName("o3_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O38hpjDensity)
                    .HasColumnName("o3_8hpj_density")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）8小时滑动平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.O38hpjSubindex)
                    .HasColumnName("o3_8hpj_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("臭氧（O3）8小时滑动平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ReportDate)
                    .HasColumnName("report_date")
                    .HasColumnType("datetime")
                    .HasComment("发布时间，主键");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.So21hDensity)
                    .HasColumnName("so2_1h_density")
                    .HasColumnType("varchar(50)")
                    .HasComment("二氧化硫（SO2）1小时平均浓度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.So21hSubindex)
                    .HasColumnName("so2_1h_subindex")
                    .HasColumnType("varchar(20)")
                    .HasComment("二氧化硫（SO2）1小时平均分指数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<JieruArticle>(entity =>
            {
                entity.ToTable("jieru_article");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ArticleAuthor)
                    .HasColumnName("article_author")
                    .HasColumnType("varchar(50)")
                    .HasComment("文章作者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ArticleContent)
                    .HasColumnName("article_content")
                    .HasColumnType("longtext")
                    .HasComment("文章内容")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ArticleDatetime)
                    .HasColumnName("article_datetime")
                    .HasColumnType("datetime")
                    .HasComment("发布时间");

                entity.Property(e => e.ArticleId)
                    .HasColumnName("article_id")
                    .HasColumnType("varchar(50)")
                    .HasComment("文章ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ArticleSource)
                    .HasColumnName("article_source")
                    .HasColumnType("varchar(100)")
                    .HasComment("文章来源")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<JieruConfig>(entity =>
            {
                entity.ToTable("jieru_config");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(80)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AlertJudgeUrl)
                    .HasColumnName("alert_judge_url")
                    .HasColumnType("varchar(255)")
                    .HasComment("预警数据抓取为位置url")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Datacount)
                    .HasColumnName("datacount")
                    .HasColumnType("int(11)")
                    .HasComment("接入数据量");

                entity.Property(e => e.Fkey)
                    .HasColumnName("fkey")
                    .HasColumnType("varchar(50)")
                    .HasComment("外键-监测点ID或设备ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fkeytype)
                    .HasColumnName("fkeytype")
                    .HasColumnType("varchar(50)")
                    .HasComment("外键类别0-设备，1-监测点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.GrabCycle)
                    .HasColumnName("grab_cycle")
                    .HasColumnType("int(11)")
                    .HasComment("抓取周期（单位：秒）");

                entity.Property(e => e.GrabCycleUnit)
                    .HasColumnName("grab_cycle_unit")
                    .HasColumnType("varchar(255)")
                    .HasComment("抓取周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.GrabError)
                    .HasColumnName("grab_error")
                    .HasColumnType("int(11)")
                    .HasComment("抓取误差（秒）");

                entity.Property(e => e.GrabMainUrl)
                    .HasColumnName("grab_main_url")
                    .HasColumnType("varchar(255)")
                    .HasComment("数据抓取地址（只有一个抓取url）")
                    .HasCharSet("utf32")
                    .HasCollation("utf32_general_ci");

                entity.Property(e => e.GrabType)
                    .IsRequired()
                    .HasColumnName("grab_type")
                    .HasColumnType("varchar(40)")
                    .HasComment("抓取类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.IsActive)
                    .HasColumnName("is_active")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否启动(0-未启动,1-启动)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.IsStorage)
                    .HasColumnName("is_storage")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否存库");

                entity.Property(e => e.LastGrabTime)
                    .HasColumnName("last_grab_time")
                    .HasColumnType("datetime")
                    .HasComment("上次抓取时间");

                entity.Property(e => e.ManagerId)
                    .HasColumnName("manager_id")
                    .HasColumnType("varchar(50)")
                    .HasComment("负责人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("remark")
                    .HasColumnType("varchar(255)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.RemarkName)
                    .HasColumnName("remark_name")
                    .HasColumnType("varchar(50)")
                    .HasComment("所属名称(自然环境-大屏)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JieruConfigCopy>(entity =>
            {
                entity.ToTable("jieru_config_copy");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(80)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AlertJudgeUrl)
                    .HasColumnName("alert_judge_url")
                    .HasColumnType("varchar(255)")
                    .HasComment("预警数据抓取为位置url")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.GrabCycle)
                    .HasColumnName("grab_cycle")
                    .HasColumnType("int(11)")
                    .HasComment("抓取周期");

                entity.Property(e => e.GrabMainUrl)
                    .HasColumnName("grab_main_url")
                    .HasColumnType("varchar(255)")
                    .HasComment("数据抓取地址（只有一个抓取url）")
                    .HasCharSet("utf32")
                    .HasCollation("utf32_general_ci");

                entity.Property(e => e.GrabTime)
                    .HasColumnName("grab_time")
                    .HasColumnType("int(11)")
                    .HasComment("发布周期");

                entity.Property(e => e.GrabType)
                    .IsRequired()
                    .HasColumnName("grab_type")
                    .HasColumnType("varchar(40)")
                    .HasComment("抓取类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.IsStorage)
                    .HasColumnName("is_storage")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否存库");

                entity.Property(e => e.Remark)
                    .HasColumnName("remark")
                    .HasColumnType("varchar(255)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JieruConfigCopy20200622>(entity =>
            {
                entity.ToTable("jieru_config_copy20200622");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(80)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AlertJudgeUrl)
                    .HasColumnName("alert_judge_url")
                    .HasColumnType("varchar(255)")
                    .HasComment("预警数据抓取为位置url")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fkey)
                    .HasColumnName("fkey")
                    .HasColumnType("varchar(50)")
                    .HasComment("外键-监测点ID或设备ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fkeytype)
                    .HasColumnName("fkeytype")
                    .HasColumnType("varchar(50)")
                    .HasComment("外键类别0-设备，1-监测点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.GrabCycle)
                    .HasColumnName("grab_cycle")
                    .HasColumnType("int(11)")
                    .HasComment("抓取周期（单位：秒）");

                entity.Property(e => e.GrabCycleUnit)
                    .HasColumnName("grab_cycle_unit")
                    .HasColumnType("varchar(255)")
                    .HasComment("抓取周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.GrabError)
                    .HasColumnName("grab_error")
                    .HasColumnType("int(11)")
                    .HasComment("抓取误差（秒）");

                entity.Property(e => e.GrabMainUrl)
                    .HasColumnName("grab_main_url")
                    .HasColumnType("varchar(255)")
                    .HasComment("数据抓取地址（只有一个抓取url）")
                    .HasCharSet("utf32")
                    .HasCollation("utf32_general_ci");

                entity.Property(e => e.GrabType)
                    .IsRequired()
                    .HasColumnName("grab_type")
                    .HasColumnType("varchar(40)")
                    .HasComment("抓取类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.IsActive)
                    .HasColumnName("is_active")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否启动(0-未启动,1-启动)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.IsStorage)
                    .HasColumnName("is_storage")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否存库");

                entity.Property(e => e.LastGrabTime)
                    .HasColumnName("last_grab_time")
                    .HasColumnType("datetime")
                    .HasComment("上次抓取时间");

                entity.Property(e => e.ManagerId)
                    .HasColumnName("manager_id")
                    .HasColumnType("varchar(50)")
                    .HasComment("负责人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("remark")
                    .HasColumnType("varchar(255)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.RemarkName)
                    .HasColumnName("remark_name")
                    .HasColumnType("varchar(50)")
                    .HasComment("所属名称(自然环境-大屏)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JieruConfigCopy20200630>(entity =>
            {
                entity.ToTable("jieru_config_copy20200630");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(80)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AlertJudgeUrl)
                    .HasColumnName("alert_judge_url")
                    .HasColumnType("varchar(255)")
                    .HasComment("预警数据抓取为位置url")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fkey)
                    .HasColumnName("fkey")
                    .HasColumnType("varchar(50)")
                    .HasComment("外键-监测点ID或设备ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fkeytype)
                    .HasColumnName("fkeytype")
                    .HasColumnType("varchar(50)")
                    .HasComment("外键类别0-设备，1-监测点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.GrabCycle)
                    .HasColumnName("grab_cycle")
                    .HasColumnType("int(11)")
                    .HasComment("抓取周期（单位：秒）");

                entity.Property(e => e.GrabCycleUnit)
                    .HasColumnName("grab_cycle_unit")
                    .HasColumnType("varchar(255)")
                    .HasComment("抓取周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.GrabError)
                    .HasColumnName("grab_error")
                    .HasColumnType("int(11)")
                    .HasComment("抓取误差（秒）");

                entity.Property(e => e.GrabMainUrl)
                    .HasColumnName("grab_main_url")
                    .HasColumnType("varchar(255)")
                    .HasComment("数据抓取地址（只有一个抓取url）")
                    .HasCharSet("utf32")
                    .HasCollation("utf32_general_ci");

                entity.Property(e => e.GrabType)
                    .IsRequired()
                    .HasColumnName("grab_type")
                    .HasColumnType("varchar(40)")
                    .HasComment("抓取类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.IsActive)
                    .HasColumnName("is_active")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否启动(0-未启动,1-启动)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.IsStorage)
                    .HasColumnName("is_storage")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否存库");

                entity.Property(e => e.LastGrabTime)
                    .HasColumnName("last_grab_time")
                    .HasColumnType("datetime")
                    .HasComment("上次抓取时间");

                entity.Property(e => e.ManagerId)
                    .HasColumnName("manager_id")
                    .HasColumnType("varchar(50)")
                    .HasComment("负责人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("remark")
                    .HasColumnType("varchar(255)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.RemarkName)
                    .HasColumnName("remark_name")
                    .HasColumnType("varchar(50)")
                    .HasComment("所属名称(自然环境-大屏)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JieruConfigCopy20200709>(entity =>
            {
                entity.ToTable("jieru_config_copy20200709");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(80)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AlertJudgeUrl)
                    .HasColumnName("alert_judge_url")
                    .HasColumnType("varchar(255)")
                    .HasComment("预警数据抓取为位置url")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Datacount)
                    .HasColumnName("datacount")
                    .HasColumnType("int(50)");

                entity.Property(e => e.Fkey)
                    .HasColumnName("fkey")
                    .HasColumnType("varchar(50)")
                    .HasComment("外键-监测点ID或设备ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fkeytype)
                    .HasColumnName("fkeytype")
                    .HasColumnType("varchar(50)")
                    .HasComment("外键类别0-设备，1-监测点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.GrabCycle)
                    .HasColumnName("grab_cycle")
                    .HasColumnType("int(11)")
                    .HasComment("抓取周期（单位：秒）");

                entity.Property(e => e.GrabCycleUnit)
                    .HasColumnName("grab_cycle_unit")
                    .HasColumnType("varchar(255)")
                    .HasComment("抓取周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.GrabError)
                    .HasColumnName("grab_error")
                    .HasColumnType("int(11)")
                    .HasComment("抓取误差（秒）");

                entity.Property(e => e.GrabMainUrl)
                    .HasColumnName("grab_main_url")
                    .HasColumnType("varchar(255)")
                    .HasComment("数据抓取地址（只有一个抓取url）")
                    .HasCharSet("utf32")
                    .HasCollation("utf32_general_ci");

                entity.Property(e => e.GrabType)
                    .IsRequired()
                    .HasColumnName("grab_type")
                    .HasColumnType("varchar(40)")
                    .HasComment("抓取类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.IsActive)
                    .HasColumnName("is_active")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否启动(0-未启动,1-启动)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.IsStorage)
                    .HasColumnName("is_storage")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否存库");

                entity.Property(e => e.LastGrabTime)
                    .HasColumnName("last_grab_time")
                    .HasColumnType("datetime")
                    .HasComment("上次抓取时间");

                entity.Property(e => e.ManagerId)
                    .HasColumnName("manager_id")
                    .HasColumnType("varchar(50)")
                    .HasComment("负责人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("remark")
                    .HasColumnType("varchar(255)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.RemarkName)
                    .HasColumnName("remark_name")
                    .HasColumnType("varchar(50)")
                    .HasComment("所属名称(自然环境-大屏)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JieruConfigCopy删掉无用配置之前>(entity =>
            {
                entity.ToTable("jieru_config_copy删掉无用配置之前");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(80)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AlertJudgeUrl)
                    .HasColumnName("alert_judge_url")
                    .HasColumnType("varchar(255)")
                    .HasComment("预警数据抓取为位置url")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.GrabCycle)
                    .HasColumnName("grab_cycle")
                    .HasColumnType("int(11)")
                    .HasComment("抓取周期");

                entity.Property(e => e.GrabMainUrl)
                    .HasColumnName("grab_main_url")
                    .HasColumnType("varchar(255)")
                    .HasComment("数据抓取地址（只有一个抓取url）")
                    .HasCharSet("utf32")
                    .HasCollation("utf32_general_ci");

                entity.Property(e => e.GrabTime)
                    .HasColumnName("grab_time")
                    .HasColumnType("int(11)")
                    .HasComment("发布周期");

                entity.Property(e => e.GrabType)
                    .IsRequired()
                    .HasColumnName("grab_type")
                    .HasColumnType("varchar(40)")
                    .HasComment("抓取类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.IsStorage)
                    .HasColumnName("is_storage")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否存库");

                entity.Property(e => e.Remark)
                    .HasColumnName("remark")
                    .HasColumnType("varchar(255)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JieruDzsj>(entity =>
            {
                entity.ToTable("jieru_dzsj");

                entity.HasComment("地震数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Depth)
                    .HasColumnName("depth")
                    .HasColumnType("varchar(50)")
                    .HasComment("深度（单位：千米）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Lat)
                    .HasColumnName("lat")
                    .HasColumnType("varchar(50)")
                    .HasComment("纬度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lon)
                    .HasColumnName("lon")
                    .HasColumnType("varchar(50)")
                    .HasComment("经度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Power)
                    .HasColumnName("power")
                    .HasColumnType("varchar(50)")
                    .HasComment("震级（单位：M）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("地震时刻");

                entity.Property(e => e.Title)
                    .HasColumnName("title")
                    .HasColumnType("varchar(200)")
                    .HasComment("标题描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<JieruDzsjCopy>(entity =>
            {
                entity.ToTable("jieru_dzsj_copy");

                entity.HasComment("地震数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Depth)
                    .HasColumnName("depth")
                    .HasColumnType("varchar(50)")
                    .HasComment("深度（单位：千米）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Lat)
                    .HasColumnName("lat")
                    .HasColumnType("varchar(50)")
                    .HasComment("纬度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lon)
                    .HasColumnName("lon")
                    .HasColumnType("varchar(50)")
                    .HasComment("经度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Power)
                    .HasColumnName("power")
                    .HasColumnType("varchar(50)")
                    .HasComment("震级（单位：M）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("地震时刻");

                entity.Property(e => e.Title)
                    .HasColumnName("title")
                    .HasColumnType("varchar(200)")
                    .HasComment("标题描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<JieruHszljcszbb>(entity =>
            {
                entity.ToTable("jieru_hszljcszbb");

                entity.HasComment("海水质量检测");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ad)
                    .HasColumnName("AD")
                    .HasComment("氨-氮mg/L");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cycc)
                    .HasColumnName("CYCC")
                    .HasColumnType("varchar(20)")
                    .HasComment("采样层次")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cysd)
                    .HasColumnName("CYSD")
                    .HasComment("采样深度m");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.G).HasComment("镉mg/L");

                entity.Property(e => e.Ge).HasComment("铬mg/L");

                entity.Property(e => e.Gong).HasComment("汞mg/L");

                entity.Property(e => e.Gsy)
                    .HasColumnName("GSY")
                    .HasComment("硅酸盐mg/L");

                entity.Property(e => e.Hxxyl)
                    .HasColumnName("HXXYL")
                    .HasComment("化学需氧量mg/L");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测日期");

                entity.Property(e => e.Jczw)
                    .HasColumnName("JCZW")
                    .HasColumnType("varchar(5)")
                    .HasComment("监测站位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jhjd)
                    .HasColumnName("JHJD")
                    .HasColumnType("float(7,4)")
                    .HasComment("计划经度");

                entity.Property(e => e.Jhwd)
                    .HasColumnName("JHWD")
                    .HasColumnType("float(7,4)")
                    .HasComment("计划纬度");

                entity.Property(e => e.Lhw)
                    .HasColumnName("LHW")
                    .HasComment("硫化物ug/L");

                entity.Property(e => e.Lsy)
                    .HasColumnName("LSY")
                    .HasComment("磷酸盐mg/L");

                entity.Property(e => e.PH)
                    .HasColumnName("pH")
                    .HasComment("pH");

                entity.Property(e => e.Qian).HasComment("铅mg/L");

                entity.Property(e => e.Rjy)
                    .HasColumnName("RJY")
                    .HasComment("溶解氧mg/L");

                entity.Property(e => e.Scjd)
                    .HasColumnName("SCJD")
                    .HasColumnType("float(7,4)")
                    .HasComment("实测经度");

                entity.Property(e => e.Scwd)
                    .HasColumnName("SCWD")
                    .HasColumnType("float(7,4)")
                    .HasComment("实测纬度");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shen).HasComment("砷mg/L");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Ss)
                    .HasColumnName("SS")
                    .HasComment("水深m");

                entity.Property(e => e.Syl)
                    .HasColumnName("SYL")
                    .HasComment("石油类mg/L");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tong).HasComment("铜mg/L");

                entity.Property(e => e.Xfw)
                    .HasColumnName("XFW")
                    .HasComment("悬浮物mg/L");

                entity.Property(e => e.Xin).HasComment("锌mg/L");

                entity.Property(e => e.Xsyd)
                    .HasColumnName("XSYD")
                    .HasComment("硝酸盐-氮mg/L");

                entity.Property(e => e.Yd)
                    .HasColumnName("YD")
                    .HasComment("盐度");

                entity.Property(e => e.Ylsa)
                    .HasColumnName("YLSA")
                    .HasComment("叶绿素-aug/L");

                entity.Property(e => e.Yxsyd)
                    .HasColumnName("YXSYD")
                    .HasComment("亚硝酸盐-氮mg/L");

                entity.Property(e => e.Zd)
                    .HasColumnName("ZD")
                    .HasComment("总氮mg/L");

                entity.Property(e => e.Zl)
                    .HasColumnName("ZL")
                    .HasComment("总磷mg/L");
            });

            modelBuilder.Entity<JieruLog>(entity =>
            {
                entity.ToTable("jieru_log");

                entity.HasComment("接入日志");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ccsm)
                    .HasColumnName("ccsm")
                    .HasColumnType("varchar(500)")
                    .HasComment("出错说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cgzqjls)
                    .HasColumnName("cgzqjls")
                    .HasColumnType("int(11)")
                    .HasComment("成功抓取记录数");

                entity.Property(e => e.Sfcg)
                    .HasColumnName("sfcg")
                    .HasColumnType("bit(1)")
                    .HasComment("是否成功");

                entity.Property(e => e.Zqsj)
                    .HasColumnName("zqsj")
                    .HasColumnType("datetime")
                    .HasComment("抓取时间");

                entity.Property(e => e.Zqxdm)
                    .HasColumnName("zqxdm")
                    .HasColumnType("varchar(50)")
                    .HasComment("抓取项代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JieruProxy>(entity =>
            {
                entity.ToTable("jieru_proxy");

                entity.HasComment("代理ip表");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ip)
                    .HasColumnName("ip")
                    .HasColumnType("varchar(50)")
                    .HasComment("ip")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Port)
                    .HasColumnName("port")
                    .HasColumnType("varchar(50)")
                    .HasComment("端口")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Speed)
                    .HasColumnName("speed")
                    .HasColumnType("int(11)")
                    .HasComment("速度");
            });

            modelBuilder.Entity<JieruShuiwei>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("jieru_shuiwei");

                entity.HasComment("水位数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jczw)
                    .HasColumnName("JCZW")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测站位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jczwid)
                    .HasColumnName("JCZWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测站位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scjd)
                    .HasColumnName("SCJD")
                    .HasColumnType("varchar(50)")
                    .HasComment("实测经度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scwd)
                    .HasColumnName("SCWD")
                    .HasColumnType("varchar(50)")
                    .HasComment("实测纬度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sw)
                    .HasColumnName("SW")
                    .HasColumnType("varchar(50)")
                    .HasComment("水位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JieruSyysj>(entity =>
            {
                entity.ToTable("jieru_syysj");

                entity.HasComment("酸雨元数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Alz)
                    .HasColumnName("ALZ")
                    .HasComment("铵离子mg/L");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cydmc)
                    .HasColumnName("CYDMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("采样点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cykssj)
                    .HasColumnName("CYKSSJ")
                    .HasColumnType("datetime")
                    .HasComment("采样开始时间");

                entity.Property(e => e.Cyzzsj)
                    .HasColumnName("CYZZSJ")
                    .HasColumnType("datetime")
                    .HasComment("采样终止时间");

                entity.Property(e => e.Ddl)
                    .HasColumnName("DDL")
                    .HasComment("电导率μS/cm");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Flz)
                    .HasColumnName("FLZ")
                    .HasComment("氟离子mg/L");

                entity.Property(e => e.Glz)
                    .HasColumnName("GLZ")
                    .HasComment("钙离子mg/L");

                entity.Property(e => e.Jcdid)
                    .HasColumnName("JCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jlz)
                    .HasColumnName("JLZ")
                    .HasComment("钾离子mg/L");

                entity.Property(e => e.Jslx)
                    .HasColumnName("JSLX")
                    .HasColumnType("varchar(20)")
                    .HasComment("降水类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jyl)
                    .HasColumnName("JYL")
                    .HasComment("降雨量(mm)");

                entity.Property(e => e.Llz)
                    .HasColumnName("LLZ")
                    .HasComment("氯离子mg/L");

                entity.Property(e => e.Lsylz)
                    .HasColumnName("LSYLZ")
                    .HasComment("硫酸盐离子mg/L");

                entity.Property(e => e.Mlz)
                    .HasColumnName("MLZ")
                    .HasComment("镁离子mg/L");

                entity.Property(e => e.Nlz)
                    .HasColumnName("NLZ")
                    .HasComment("钠离子mg/L");

                entity.Property(e => e.PH)
                    .HasColumnName("pH")
                    .HasComment("pH");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xsglz)
                    .HasColumnName("XSGLZ")
                    .HasComment("硝酸根离子mg/L");
            });

            modelBuilder.Entity<JieruSyysjCopy>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("jieru_syysj_copy");

                entity.HasComment("酸雨元数据");

                entity.Property(e => e.Alz)
                    .HasColumnName("ALZ")
                    .HasComment("铵离子mg/L");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cydmc)
                    .HasColumnName("CYDMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("采样点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cykssj)
                    .HasColumnName("CYKSSJ")
                    .HasColumnType("datetime")
                    .HasComment("采样开始时间");

                entity.Property(e => e.Cyzzsj)
                    .HasColumnName("CYZZSJ")
                    .HasColumnType("datetime")
                    .HasComment("采样终止时间");

                entity.Property(e => e.Ddl)
                    .HasColumnName("DDL")
                    .HasComment("电导率μS/cm");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Flz)
                    .HasColumnName("FLZ")
                    .HasComment("氟离子mg/L");

                entity.Property(e => e.Glz)
                    .HasColumnName("GLZ")
                    .HasComment("钙离子mg/L");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdid)
                    .HasColumnName("JCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jlz)
                    .HasColumnName("JLZ")
                    .HasComment("钾离子mg/L");

                entity.Property(e => e.Jslx)
                    .HasColumnName("JSLX")
                    .HasColumnType("varchar(20)")
                    .HasComment("降水类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jyl)
                    .HasColumnName("JYL")
                    .HasComment("降雨量(mm)");

                entity.Property(e => e.Llz)
                    .HasColumnName("LLZ")
                    .HasComment("氯离子mg/L");

                entity.Property(e => e.Lsylz)
                    .HasColumnName("LSYLZ")
                    .HasComment("硫酸盐离子mg/L");

                entity.Property(e => e.Mlz)
                    .HasColumnName("MLZ")
                    .HasComment("镁离子mg/L");

                entity.Property(e => e.Nlz)
                    .HasColumnName("NLZ")
                    .HasComment("钠离子mg/L");

                entity.Property(e => e.PH)
                    .HasColumnName("pH")
                    .HasComment("pH");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xsglz)
                    .HasColumnName("XSGLZ")
                    .HasComment("硝酸根离子mg/L");
            });

            modelBuilder.Entity<JieruWeatherLive>(entity =>
            {
                entity.ToTable("jieru_weather_live");

                entity.HasComment("鼓浪屿天气实况");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Humidity)
                    .HasColumnName("humidity")
                    .HasColumnType("varchar(20)")
                    .HasComment("当前湿度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdid)
                    .HasColumnName("JCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pressure)
                    .HasColumnName("pressure")
                    .HasColumnType("varchar(20)")
                    .HasComment("气压(除以10之后是百帕)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rain)
                    .HasColumnName("rain")
                    .HasColumnType("varchar(20)")
                    .HasComment("一小时内的降雨量(mm)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rain12)
                    .HasColumnName("rain_12")
                    .HasColumnType("varchar(20)")
                    .HasComment("12小时降雨量(mm)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rain24)
                    .HasColumnName("rain_24")
                    .HasColumnType("varchar(20)")
                    .HasComment("24小时降雨量(mm)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rain3)
                    .HasColumnName("rain_3")
                    .HasColumnType("varchar(20)")
                    .HasComment("3小时降雨量(mm)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rain6)
                    .HasColumnName("rain_6")
                    .HasColumnType("varchar(20)")
                    .HasComment("6小时降雨量(mm)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.StationName)
                    .HasColumnName("stationName")
                    .HasColumnType("varchar(255)")
                    .HasComment("站点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.StationNum)
                    .HasColumnName("stationNum")
                    .HasColumnType("varchar(20)")
                    .HasComment("站点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Temp)
                    .HasColumnName("temp")
                    .HasColumnType("varchar(20)")
                    .HasComment("当前气温，摄氏度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.TempMax)
                    .HasColumnName("temp_max")
                    .HasColumnType("varchar(20)")
                    .HasComment("最高气温")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.TempMin)
                    .HasColumnName("temp_min")
                    .HasColumnType("varchar(20)")
                    .HasComment("最低气温")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("发布时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Visibility)
                    .HasColumnName("visibility")
                    .HasColumnType("varchar(20)")
                    .HasComment("能见度，单位为米")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.VisibilityMin24h)
                    .HasColumnName("visibility_min_24h")
                    .HasColumnType("varchar(20)")
                    .HasComment("24小时最小能见度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.WindDesc)
                    .HasColumnName("wind_desc")
                    .HasColumnType("varchar(20)")
                    .HasComment("风向描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.WindDirection)
                    .HasColumnName("wind_direction")
                    .HasColumnType("varchar(20)")
                    .HasComment("风向")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.WindJdspeed)
                    .HasColumnName("wind_jdspeed")
                    .HasColumnType("varchar(20)")
                    .HasComment("极大风速")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.WindJdspeedMax24)
                    .HasColumnName("wind_jdspeed_max24")
                    .HasColumnType("varchar(20)")
                    .HasComment("24小时极大风速")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.WindSpeed)
                    .HasColumnName("wind_speed")
                    .HasColumnType("varchar(20)")
                    .HasComment("平均风速")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JieruWeatherLiveCopy>(entity =>
            {
                entity.ToTable("jieru_weather_live_copy");

                entity.HasComment("鼓浪屿天气实况");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Humidity)
                    .HasColumnName("humidity")
                    .HasColumnType("varchar(20)")
                    .HasComment("当前湿度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdid)
                    .HasColumnName("JCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pressure)
                    .HasColumnName("pressure")
                    .HasColumnType("varchar(20)")
                    .HasComment("气压(除以10之后是百帕)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rain)
                    .HasColumnName("rain")
                    .HasColumnType("varchar(20)")
                    .HasComment("一小时内的降雨量(mm)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rain12)
                    .HasColumnName("rain_12")
                    .HasColumnType("varchar(20)")
                    .HasComment("12小时降雨量(mm)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rain24)
                    .HasColumnName("rain_24")
                    .HasColumnType("varchar(20)")
                    .HasComment("24小时降雨量(mm)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rain3)
                    .HasColumnName("rain_3")
                    .HasColumnType("varchar(20)")
                    .HasComment("3小时降雨量(mm)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rain6)
                    .HasColumnName("rain_6")
                    .HasColumnType("varchar(20)")
                    .HasComment("6小时降雨量(mm)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.StationName)
                    .HasColumnName("stationName")
                    .HasColumnType("varchar(255)")
                    .HasComment("站点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.StationNum)
                    .HasColumnName("stationNum")
                    .HasColumnType("varchar(20)")
                    .HasComment("站点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Temp)
                    .HasColumnName("temp")
                    .HasColumnType("varchar(20)")
                    .HasComment("当前气温，摄氏度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.TempMax)
                    .HasColumnName("temp_max")
                    .HasColumnType("varchar(20)")
                    .HasComment("最高气温")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.TempMin)
                    .HasColumnName("temp_min")
                    .HasColumnType("varchar(20)")
                    .HasComment("最低气温")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("发布时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Visibility)
                    .HasColumnName("visibility")
                    .HasColumnType("varchar(20)")
                    .HasComment("能见度，单位为米")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.VisibilityMin24h)
                    .HasColumnName("visibility_min_24h")
                    .HasColumnType("varchar(20)")
                    .HasComment("24小时最小能见度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.WindDesc)
                    .HasColumnName("wind_desc")
                    .HasColumnType("varchar(20)")
                    .HasComment("风向描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.WindDirection)
                    .HasColumnName("wind_direction")
                    .HasColumnType("varchar(20)")
                    .HasComment("风向")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.WindJdspeed)
                    .HasColumnName("wind_jdspeed")
                    .HasColumnType("varchar(20)")
                    .HasComment("极大风速")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.WindJdspeedMax24)
                    .HasColumnName("wind_jdspeed_max24")
                    .HasColumnType("varchar(20)")
                    .HasComment("24小时极大风速")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.WindSpeed)
                    .HasColumnName("wind_speed")
                    .HasColumnType("varchar(20)")
                    .HasComment("平均风速")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JieruWeatherTyphoon>(entity =>
            {
                entity.ToTable("jieru_weather_typhoon");

                entity.HasComment("鼓浪屿天气台风");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Code)
                    .HasColumnName("code")
                    .HasColumnType("int(11)")
                    .HasComment("台风代码");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Enname)
                    .HasColumnName("enname")
                    .HasColumnType("varchar(50)")
                    .HasComment("英文名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Happenyear)
                    .HasColumnName("happenyear")
                    .HasColumnType("char(4)")
                    .HasComment("发生年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasColumnType("varchar(50)")
                    .HasComment("台风名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<JieruWeatherTyphoonCopy>(entity =>
            {
                entity.ToTable("jieru_weather_typhoon_copy");

                entity.HasComment("鼓浪屿天气台风");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Code)
                    .HasColumnName("code")
                    .HasColumnType("int(11)")
                    .HasComment("台风代码");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Enname)
                    .HasColumnName("enname")
                    .HasColumnType("varchar(50)")
                    .HasComment("英文名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Happenyear)
                    .HasColumnName("happenyear")
                    .HasColumnType("char(4)")
                    .HasComment("发生年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasColumnType("varchar(50)")
                    .HasComment("台风名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<JieruWeatherTyphoonPath>(entity =>
            {
                entity.ToTable("jieru_weather_typhoon_path");

                entity.HasComment("台风路径");

                entity.HasIndex(e => e.Pid)
                    .HasName("typhoon_info_id");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Airpressure)
                    .HasColumnName("airpressure")
                    .HasColumnType("int(11)")
                    .HasComment("气压");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Latitude)
                    .HasColumnName("latitude")
                    .HasComment("纬度");

                entity.Property(e => e.Longitude)
                    .HasColumnName("longitude")
                    .HasComment("经度");

                entity.Property(e => e.Movedirection)
                    .HasColumnName("movedirection")
                    .HasColumnType("varchar(50)")
                    .HasComment("移动方向")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Movespeed)
                    .HasColumnName("movespeed")
                    .HasColumnType("int(11)")
                    .HasComment("移动速度");

                entity.Property(e => e.Pid)
                    .HasColumnName("pid")
                    .HasColumnType("varchar(50)")
                    .HasComment("父ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("发生时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasColumnType("varchar(50)")
                    .HasComment("台风类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Windpower)
                    .HasColumnName("windpower")
                    .HasColumnType("int(11)")
                    .HasComment("风力");

                entity.Property(e => e.Windradius10)
                    .HasColumnName("windradius10")
                    .HasComment("10级风圈（单位：km）");

                entity.Property(e => e.Windradius12)
                    .HasColumnName("windradius12")
                    .HasComment("12级风圈（单位：km）");

                entity.Property(e => e.Windradius7)
                    .HasColumnName("windradius7")
                    .HasComment("7级风圈（单位：km）");

                entity.Property(e => e.Windspeed)
                    .HasColumnName("windspeed")
                    .HasColumnType("int(11)")
                    .HasComment("风速");

                entity.Property(e => e.Year)
                    .HasColumnName("year")
                    .HasColumnType("char(4)")
                    .HasComment("发生年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JieruWeatherTyphoonPathCopy>(entity =>
            {
                entity.ToTable("jieru_weather_typhoon_path_copy");

                entity.HasComment("台风路径");

                entity.HasIndex(e => e.Pid)
                    .HasName("typhoon_info_id");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Airpressure)
                    .HasColumnName("airpressure")
                    .HasColumnType("int(11)")
                    .HasComment("气压");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Latitude)
                    .HasColumnName("latitude")
                    .HasComment("纬度");

                entity.Property(e => e.Longitude)
                    .HasColumnName("longitude")
                    .HasComment("经度");

                entity.Property(e => e.Movedirection)
                    .HasColumnName("movedirection")
                    .HasColumnType("varchar(50)")
                    .HasComment("移动方向")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Movespeed)
                    .HasColumnName("movespeed")
                    .HasColumnType("int(11)")
                    .HasComment("移动速度");

                entity.Property(e => e.Pid)
                    .HasColumnName("pid")
                    .HasColumnType("varchar(50)")
                    .HasComment("父ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("发生时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasColumnType("varchar(50)")
                    .HasComment("台风类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Windpower)
                    .HasColumnName("windpower")
                    .HasColumnType("int(11)")
                    .HasComment("风力");

                entity.Property(e => e.Windradius10)
                    .HasColumnName("windradius10")
                    .HasComment("10级风圈（单位：km）");

                entity.Property(e => e.Windradius12)
                    .HasColumnName("windradius12")
                    .HasComment("12级风圈（单位：km）");

                entity.Property(e => e.Windradius7)
                    .HasColumnName("windradius7")
                    .HasComment("7级风圈（单位：km）");

                entity.Property(e => e.Windspeed)
                    .HasColumnName("windspeed")
                    .HasColumnType("int(11)")
                    .HasComment("风速");

                entity.Property(e => e.Year)
                    .HasColumnName("year")
                    .HasColumnType("char(4)")
                    .HasComment("发生年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JieruWeatherTyphoonPoint>(entity =>
            {
                entity.ToTable("jieru_weather_typhoon_point");

                entity.HasComment("台风预估点");

                entity.HasIndex(e => e.Pid)
                    .HasName("typhoon_path_id");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Airpressure)
                    .HasColumnName("airpressure")
                    .HasColumnType("int(11)")
                    .HasComment("气压");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fbtime)
                    .HasColumnName("fbtime")
                    .HasColumnType("datetime")
                    .HasComment("发布时间");

                entity.Property(e => e.Latitude)
                    .HasColumnName("latitude")
                    .HasComment("纬度");

                entity.Property(e => e.Longitude)
                    .HasColumnName("longitude")
                    .HasComment("经度");

                entity.Property(e => e.Movedirection)
                    .HasColumnName("movedirection")
                    .HasColumnType("varchar(50)")
                    .HasComment("移动方向")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Movespeed)
                    .HasColumnName("movespeed")
                    .HasColumnType("int(11)")
                    .HasComment("移动速度");

                entity.Property(e => e.Pid)
                    .HasColumnName("pid")
                    .HasColumnType("varchar(50)")
                    .HasComment("父ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("发生时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasColumnType("varchar(50)")
                    .HasComment("台风类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Windpower)
                    .HasColumnName("windpower")
                    .HasColumnType("int(11)")
                    .HasComment("风力");

                entity.Property(e => e.Windradius10)
                    .HasColumnName("windradius10")
                    .HasComment("10级风圈");

                entity.Property(e => e.Windradius12)
                    .HasColumnName("windradius12")
                    .HasComment("12级风圈");

                entity.Property(e => e.Windradius7)
                    .HasColumnName("windradius7")
                    .HasComment("7级风圈");

                entity.Property(e => e.Windspeed)
                    .HasColumnName("windspeed")
                    .HasColumnType("int(11)")
                    .HasComment("风速");

                entity.Property(e => e.Year)
                    .HasColumnName("year")
                    .HasColumnType("char(4)")
                    .HasComment("发生年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JieruWeatherTyphoonPointCopy>(entity =>
            {
                entity.ToTable("jieru_weather_typhoon_point_copy");

                entity.HasComment("台风预估点");

                entity.HasIndex(e => e.Pid)
                    .HasName("typhoon_path_id");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Airpressure)
                    .HasColumnName("airpressure")
                    .HasColumnType("int(11)")
                    .HasComment("气压");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fbtime)
                    .HasColumnName("fbtime")
                    .HasColumnType("datetime")
                    .HasComment("发布时间");

                entity.Property(e => e.Latitude)
                    .HasColumnName("latitude")
                    .HasComment("纬度");

                entity.Property(e => e.Longitude)
                    .HasColumnName("longitude")
                    .HasComment("经度");

                entity.Property(e => e.Movedirection)
                    .HasColumnName("movedirection")
                    .HasColumnType("varchar(50)")
                    .HasComment("移动方向")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Movespeed)
                    .HasColumnName("movespeed")
                    .HasColumnType("int(11)")
                    .HasComment("移动速度");

                entity.Property(e => e.Pid)
                    .HasColumnName("pid")
                    .HasColumnType("varchar(50)")
                    .HasComment("父ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("发生时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasColumnType("varchar(50)")
                    .HasComment("台风类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Windpower)
                    .HasColumnName("windpower")
                    .HasColumnType("int(11)")
                    .HasComment("风力");

                entity.Property(e => e.Windradius10)
                    .HasColumnName("windradius10")
                    .HasComment("10级风圈");

                entity.Property(e => e.Windradius12)
                    .HasColumnName("windradius12")
                    .HasComment("12级风圈");

                entity.Property(e => e.Windradius7)
                    .HasColumnName("windradius7")
                    .HasComment("7级风圈");

                entity.Property(e => e.Windspeed)
                    .HasColumnName("windspeed")
                    .HasColumnType("int(11)")
                    .HasComment("风速");

                entity.Property(e => e.Year)
                    .HasColumnName("year")
                    .HasColumnType("char(4)")
                    .HasComment("发生年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JieruWeatherWarning>(entity =>
            {
                entity.ToTable("jieru_weather_warning");

                entity.HasComment("天气预警");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("bz")
                    .HasColumnType("varchar(200)")
                    .HasComment("标准")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Code)
                    .HasColumnName("code")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Codename)
                    .HasColumnName("codename")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警代码名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Contensign)
                    .HasColumnName("contensign")
                    .HasColumnType("varchar(2000)")
                    .HasComment("发布内容(同cont)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.District)
                    .HasColumnName("district")
                    .HasColumnType("varchar(20)")
                    .HasComment("行政区")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fy)
                    .HasColumnName("fy")
                    .HasColumnType("text")
                    .HasComment("防御指南")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jctime)
                    .HasColumnName("jctime")
                    .HasColumnType("datetime")
                    .HasComment("预警解除时间");

                entity.Property(e => e.Number)
                    .HasColumnName("number")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pretimesign)
                    .HasColumnName("pretimesign")
                    .HasColumnType("datetime")
                    .HasComment("发布时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Station)
                    .HasColumnName("station")
                    .HasColumnType("varchar(50)")
                    .HasComment("发布站点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasColumnType("varchar(50)")
                    .HasComment("发布状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Subscriber)
                    .HasColumnName("subscriber")
                    .HasColumnType("varchar(50)")
                    .HasComment("发布人员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Title)
                    .HasColumnName("title")
                    .HasColumnType("varchar(200)")
                    .HasComment("预警信号名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yssjid)
                    .HasColumnName("yssjid")
                    .HasColumnType("varchar(50)")
                    .HasComment("原始数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JieruWeatherWarningCopy>(entity =>
            {
                entity.ToTable("jieru_weather_warning_copy");

                entity.HasComment("天气预警");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("bz")
                    .HasColumnType("varchar(200)")
                    .HasComment("标准")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Code)
                    .HasColumnName("code")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Codename)
                    .HasColumnName("codename")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警代码名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Contensign)
                    .HasColumnName("contensign")
                    .HasColumnType("varchar(2000)")
                    .HasComment("发布内容(同cont)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.District)
                    .HasColumnName("district")
                    .HasColumnType("varchar(20)")
                    .HasComment("行政区")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fy)
                    .HasColumnName("fy")
                    .HasColumnType("text")
                    .HasComment("防御指南")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jctime)
                    .HasColumnName("jctime")
                    .HasColumnType("datetime")
                    .HasComment("预警解除时间");

                entity.Property(e => e.Number)
                    .HasColumnName("number")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pretimesign)
                    .HasColumnName("pretimesign")
                    .HasColumnType("datetime")
                    .HasComment("发布时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Station)
                    .HasColumnName("station")
                    .HasColumnType("varchar(50)")
                    .HasComment("发布站点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasColumnType("varchar(50)")
                    .HasComment("发布状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Subscriber)
                    .HasColumnName("subscriber")
                    .HasColumnType("varchar(50)")
                    .HasComment("发布人员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Title)
                    .HasColumnName("title")
                    .HasColumnType("varchar(200)")
                    .HasComment("预警信号名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yssjid)
                    .HasColumnName("yssjid")
                    .HasColumnType("varchar(50)")
                    .HasComment("原始数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<JieruZrhjJczd>(entity =>
            {
                entity.ToTable("jieru_zrhj_jczd");

                entity.HasComment("自然环境监测站点");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcnr)
                    .HasColumnName("JCNR")
                    .HasColumnType("varchar(20)")
                    .HasComment("监测内容")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(255)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wz)
                    .HasColumnName("WZ")
                    .HasColumnType("varchar(20)")
                    .HasComment("位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zdbh)
                    .HasColumnName("ZDBH")
                    .HasColumnType("varchar(255)")
                    .HasComment("站点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zdmc)
                    .HasColumnName("ZDMC")
                    .HasColumnType("varchar(20)")
                    .HasComment("站点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<LeshanCrkxx>(entity =>
            {
                entity.ToTable("leshan_crkxx");

                entity.HasComment("出入口闸机信息");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Code)
                    .HasColumnName("code")
                    .HasColumnType("varchar(50)")
                    .HasComment("通道编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Crkid)
                    .HasColumnName("crkid")
                    .HasColumnType("varchar(11)")
                    .HasComment("所属园区出入口的id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("jd")
                    .HasColumnType("varchar(11)")
                    .HasComment("经度 ")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasColumnType("varchar(50)")
                    .HasComment("出入口名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasColumnType("varchar(11)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("wd")
                    .HasColumnType("varchar(11)")
                    .HasComment("纬度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<LeshanFirewarning>(entity =>
            {
                entity.ToTable("leshan_firewarning");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Basestaionnumber)
                    .HasColumnName("basestaionnumber")
                    .HasColumnType("varchar(50)")
                    .HasComment("探测器所属基站编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fireaddr)
                    .HasColumnName("fireaddr")
                    .HasColumnType("varchar(100)")
                    .HasComment("起火地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Firetime)
                    .HasColumnName("firetime")
                    .HasColumnType("datetime")
                    .HasComment("起火日期");

                entity.Property(e => e.Isrescindsign)
                    .HasColumnName("isrescindsign")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否解除预警")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lat)
                    .HasColumnName("lat")
                    .HasComment("经度");

                entity.Property(e => e.Lng)
                    .HasColumnName("lng")
                    .HasComment("纬度");

                entity.Property(e => e.Partitioncode)
                    .HasColumnName("partitioncode")
                    .HasColumnType("varchar(10)")
                    .HasComment("分区代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Partitionname)
                    .HasColumnName("partitionname")
                    .HasColumnType("varchar(10)")
                    .HasComment("分区名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Prekind)
                    .HasColumnName("prekind")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.SensorNo)
                    .HasColumnName("sensorNo")
                    .HasColumnType("varchar(50)")
                    .HasComment("探测器编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Signimagepath)
                    .HasColumnName("signimagepath")
                    .HasColumnType("varchar(200)")
                    .HasComment("预警图片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Signmean)
                    .HasColumnName("signmean")
                    .HasColumnType("text")
                    .HasComment("预警含义")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Signtitle)
                    .HasColumnName("signtitle")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警信号描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Warnsign)
                    .HasColumnName("warnsign")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<LeshanFjptrs>(entity =>
            {
                entity.ToTable("leshan_fjptrs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Innum)
                    .HasColumnName("innum")
                    .HasColumnType("int(11)")
                    .HasComment("进入人数");

                entity.Property(e => e.Outnum)
                    .HasColumnName("outnum")
                    .HasColumnType("int(11)")
                    .HasComment("离开人数");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<LeshanHjjcd>(entity =>
            {
                entity.ToTable("leshan_hjjcd");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bh)
                    .HasColumnName("bh")
                    .HasColumnType("varchar(200)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("jd")
                    .HasColumnType("varchar(200)")
                    .HasComment("经度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("wd")
                    .HasColumnType("varchar(200)")
                    .HasComment("纬度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wzms)
                    .HasColumnName("wzms")
                    .HasColumnType("varchar(200)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<LeshanJcgt>(entity =>
            {
                entity.ToTable("leshan_jcgt");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bh)
                    .HasColumnName("bh")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd).HasColumnName("jd");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("remark")
                    .HasColumnType("varchar(50)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tccbh)
                    .HasColumnName("tccbh")
                    .HasColumnType("varchar(50)")
                    .HasComment("停车场编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd).HasColumnName("wd");
            });

            modelBuilder.Entity<LeshanJcparking>(entity =>
            {
                entity.ToTable("leshan_jcparking");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cws)
                    .HasColumnName("cws")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("jd")
                    .HasComment("经度");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("停车场名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tccbh)
                    .HasColumnName("tccbh")
                    .HasColumnType("varchar(200)")
                    .HasComment("停车场编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("wd")
                    .HasComment("纬度");
            });

            modelBuilder.Entity<LeshanJqcrkxx>(entity =>
            {
                entity.ToTable("leshan_jqcrkxx");

                entity.HasComment("景区出入口信息");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("jd")
                    .HasColumnType("varchar(50)")
                    .HasComment("经度 ")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasColumnType("varchar(50)")
                    .HasComment("出入口名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasColumnType("varchar(11)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("wd")
                    .HasColumnType("varchar(50)")
                    .HasComment("纬度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<LeshanParkcrknum>(entity =>
            {
                entity.ToTable("leshan_parkcrknum");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bh)
                    .HasColumnName("bh")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("编号")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sccls)
                    .HasColumnName("sccls")
                    .HasColumnType("int(11)")
                    .HasComment("驶出车辆数");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Srcls)
                    .HasColumnName("srcls")
                    .HasColumnType("int(11)")
                    .HasComment("驶入车辆数");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<LeshanParkinfo>(entity =>
            {
                entity.ToTable("leshan_parkinfo");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cws)
                    .HasColumnName("cws")
                    .HasColumnType("int(11)")
                    .HasComment("车位数");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("停车场名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sccls)
                    .HasColumnName("sccls")
                    .HasColumnType("int(11)")
                    .HasComment("驶出车辆数");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Srcls)
                    .HasColumnName("srcls")
                    .HasColumnType("int(11)")
                    .HasComment("驶入车辆数");

                entity.Property(e => e.Sycws)
                    .HasColumnName("sycws")
                    .HasColumnType("int(11)")
                    .HasComment("剩余车位数");

                entity.Property(e => e.Tccbh)
                    .HasColumnName("tccbh")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("停车场编号")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ztcls)
                    .HasColumnName("ztcls")
                    .HasColumnType("int(11)")
                    .HasComment("在停车辆数");
            });

            modelBuilder.Entity<LeshanRlt>(entity =>
            {
                entity.ToTable("leshan_rlt");

                entity.HasComment("热力图");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jd)
                    .IsRequired()
                    .HasColumnName("JD")
                    .HasColumnType("varchar(50)")
                    .HasComment("经度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jssj)
                    .HasColumnName("JSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Kssj)
                    .HasColumnName("KSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测开始时间");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Rlz)
                    .HasColumnName("RLZ")
                    .HasColumnType("int(11)")
                    .HasComment("热力值");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasColumnType("varchar(50)")
                    .HasComment("纬度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<LeshanRltCopy20200709>(entity =>
            {
                entity.ToTable("leshan_rlt_copy20200709");

                entity.HasComment("热力图");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jd)
                    .IsRequired()
                    .HasColumnName("JD")
                    .HasColumnType("varchar(50)")
                    .HasComment("经度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jssj)
                    .HasColumnName("JSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Kssj)
                    .HasColumnName("KSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测开始时间");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Rlz)
                    .HasColumnName("RLZ")
                    .HasColumnType("int(11)")
                    .HasComment("热力值");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasColumnType("varchar(50)")
                    .HasComment("纬度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<LeshanRltCopy20200711>(entity =>
            {
                entity.ToTable("leshan_rlt_copy20200711");

                entity.HasComment("热力图");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jd)
                    .IsRequired()
                    .HasColumnName("JD")
                    .HasColumnType("varchar(50)")
                    .HasComment("经度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jssj)
                    .HasColumnName("JSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Kssj)
                    .HasColumnName("KSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测开始时间");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Rlz)
                    .HasColumnName("RLZ")
                    .HasColumnType("int(11)")
                    .HasComment("热力值");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasColumnType("varchar(50)")
                    .HasComment("纬度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<LeshanRykl>(entity =>
            {
                entity.ToTable("leshan_rykl");

                entity.HasComment("日游客量");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.NumEnter)
                    .HasColumnName("num_enter")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时入园人数");

                entity.Property(e => e.NumIn)
                    .HasColumnName("num_in")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时在园人数");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ykqyid)
                    .HasColumnName("YKQYID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("游客区域id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<LeshanRykl20200622>(entity =>
            {
                entity.ToTable("leshan_rykl_20200622");

                entity.HasComment("日游客量");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.NumEnter)
                    .HasColumnName("num_enter")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时入园人数");

                entity.Property(e => e.NumIn)
                    .HasColumnName("num_in")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时在园人数");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ykqyid)
                    .HasColumnName("YKQYID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("游客区域id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<LeshanRyklCopy>(entity =>
            {
                entity.ToTable("leshan_rykl_copy");

                entity.HasComment("日游客量");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.NumEnter)
                    .HasColumnName("num_enter")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时入园人数");

                entity.Property(e => e.NumIn)
                    .HasColumnName("num_in")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时在园人数");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ykqyid)
                    .HasColumnName("YKQYID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("游客区域id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<LeshanRyklCopy2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("leshan_rykl_copy2");

                entity.HasComment("日游客量（2019-8-7）");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.NumEnter)
                    .HasColumnName("num_enter")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时入园人数");

                entity.Property(e => e.NumIn)
                    .HasColumnName("num_in")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时在园人数");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ykqyid)
                    .HasColumnName("YKQYID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("游客区域id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<LeshanRyklCopy20180919qhx真实数据>(entity =>
            {
                entity.ToTable("leshan_rykl_copy20180919qhx真实数据");

                entity.HasComment("日游客量");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.NumEnter)
                    .HasColumnName("num_enter")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时入园人数");

                entity.Property(e => e.NumIn)
                    .HasColumnName("num_in")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时在园人数");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ykqyid)
                    .HasColumnName("YKQYID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("游客区域id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<LeshanRyklCopyCopy>(entity =>
            {
                entity.ToTable("leshan_rykl_copy_copy");

                entity.HasComment("日游客量");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.NumEnter)
                    .HasColumnName("num_enter")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时入园人数");

                entity.Property(e => e.NumIn)
                    .HasColumnName("num_in")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时在园人数");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ykqyid)
                    .HasColumnName("YKQYID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("游客区域id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<LeshanRyklWp>(entity =>
            {
                entity.ToTable("leshan_rykl_wp");

                entity.HasComment("日游客量");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.NumEnter)
                    .HasColumnName("num_enter")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时入园人数");

                entity.Property(e => e.NumIn)
                    .HasColumnName("num_in")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时在园人数");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ykqyid)
                    .HasColumnName("YKQYID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("游客区域id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<LeshanSjdmpsrtj>(entity =>
            {
                entity.ToTable("leshan_sjdmpsrtj");

                entity.HasComment("时间段门票收入统计");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("入库时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.SaleTime)
                    .HasColumnType("datetime")
                    .HasComment("销售时间段");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.TicketCount)
                    .HasColumnType("int(11)")
                    .HasComment("总购票⼈数");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.TradeAmount)
                    .HasColumnType("varchar(50)")
                    .HasComment("总售票金额")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<LeshanSjjc>(entity =>
            {
                entity.ToTable("leshan_sjjc");

                entity.HasComment("乐山_数据检测");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jcdid)
                    .IsRequired()
                    .HasColumnName("JCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点id")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jclx)
                    .IsRequired()
                    .HasColumnName("JCLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("检测类型")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jzsj)
                    .HasColumnName("JZSJ")
                    .HasColumnType("datetime")
                    .HasComment("截至时间");

                entity.Property(e => e.Kssj)
                    .HasColumnName("KSSJ")
                    .HasColumnType("datetime")
                    .HasComment("开始时间");

                entity.Property(e => e.Sfzc)
                    .IsRequired()
                    .HasColumnName("SFZC")
                    .HasColumnType("char(1)")
                    .HasComment("是否正常")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<LeshanSjjcWt>(entity =>
            {
                entity.ToTable("leshan_sjjc_wt");

                entity.HasComment("乐山_数据监测_问题");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sjjcid)
                    .IsRequired()
                    .HasColumnName("SJJCID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据监测id")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wtjssj)
                    .HasColumnName("WTJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("问题结束时间");

                entity.Property(e => e.Wtkssj)
                    .HasColumnName("WTKSSJ")
                    .HasColumnType("datetime")
                    .HasComment("问题开始时间");
            });

            modelBuilder.Entity<LeshanSsykl>(entity =>
            {
                entity.ToTable("leshan_ssykl");

                entity.HasComment("瞬时游客量");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("Id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.NumEnter)
                    .HasColumnName("num_enter")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时入园人数");

                entity.Property(e => e.NumIn)
                    .HasColumnName("num_in")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时在园人数");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ykqyid)
                    .HasColumnName("YKQYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("游客区域id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<LeshanSsykl20200622>(entity =>
            {
                entity.ToTable("leshan_ssykl_20200622");

                entity.HasComment("瞬时游客量");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("Id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.NumEnter)
                    .HasColumnName("num_enter")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时入园人数");

                entity.Property(e => e.NumIn)
                    .HasColumnName("num_in")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时在园人数");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ykqyid)
                    .HasColumnName("YKQYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("游客区域id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<LeshanSsyklCopy>(entity =>
            {
                entity.ToTable("leshan_ssykl_copy");

                entity.HasComment("瞬时游客量");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("Id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.NumEnter)
                    .HasColumnName("num_enter")
                    .HasColumnType("int(11)")
                    .HasComment("日累计游客量");

                entity.Property(e => e.NumIn)
                    .HasColumnName("num_in")
                    .HasColumnType("int(11)")
                    .HasComment("瞬时游客量");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ykqyid)
                    .HasColumnName("YKQYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("游客区域id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<LeshanSsyklJcwz>(entity =>
            {
                entity.ToTable("leshan_ssykl_jcwz");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzmc)
                    .HasColumnName("JCWZMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzms)
                    .HasColumnName("JCWZMS")
                    .HasColumnType("text")
                    .HasComment("监测位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzsyt)
                    .HasColumnName("JCWZSYT")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zb)
                    .HasColumnName("ZB")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbsjid)
                    .HasColumnName("ZBSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主表数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<LeshanSxjkWdl>(entity =>
            {
                entity.ToTable("leshan_sxjk_wdl");

                entity.HasComment("水锈结壳");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Geos)
                    .HasColumnName("GEOS")
                    .HasColumnType("varchar(10000)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Leftbottom)
                    .HasColumnName("LEFTBOTTOM")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Righttop)
                    .HasColumnName("RIGHTTOP")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<LeshanSxjkWdlBhdcjcgzqkjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("leshan_sxjk_wdl_bhdcjcgzqkjl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("bhbh")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhmc)
                    .HasColumnName("BHMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bz)
                    .HasColumnName("bz")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Geos)
                    .HasColumnName("GEOS")
                    .HasColumnType("varchar(10000)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Leftbottom)
                    .HasColumnName("LEFTBOTTOM")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("pg")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Righttop)
                    .HasColumnName("RIGHTTOP")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("rwid")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<LeshanTlqqWdl>(entity =>
            {
                entity.ToTable("leshan_tlqq_wdl");

                entity.HasComment("修缮附加层脱落起翘_文档类");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Geos)
                    .HasColumnName("GEOS")
                    .HasColumnType("varchar(10000)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Leftbottom)
                    .HasColumnName("LEFTBOTTOM")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Righttop)
                    .HasColumnName("RIGHTTOP")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<LeshanTlqqWdlBhdcjcgzqkjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("leshan_tlqq_wdl_bhdcjcgzqkjl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("bhbh")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhmc)
                    .HasColumnName("BHMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bz)
                    .HasColumnName("bz")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Geos)
                    .HasColumnName("GEOS")
                    .HasColumnType("varchar(10000)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Leftbottom)
                    .HasColumnName("LEFTBOTTOM")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("pg")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Righttop)
                    .HasColumnName("RIGHTTOP")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("rwid")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<LeshanWswWdl>(entity =>
            {
                entity.ToTable("leshan_wsw_wdl");

                entity.HasComment("微生物");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Geos)
                    .HasColumnName("GEOS")
                    .HasColumnType("varchar(10000)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Leftbottom)
                    .HasColumnName("LEFTBOTTOM")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pfzj)
                    .HasColumnName("PFZJ")
                    .HasColumnType("int(11)")
                    .HasComment("评分增减");

                entity.Property(e => e.Pfzz)
                    .HasColumnName("PFZZ")
                    .HasColumnType("int(11)")
                    .HasComment("评分终值");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Righttop)
                    .HasColumnName("RIGHTTOP")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<LeshanWswWdlBhdcjcgzqkjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("leshan_wsw_wdl_bhdcjcgzqkjl");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhmc)
                    .HasColumnName("BHMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bz)
                    .HasColumnName("bz")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Geos)
                    .HasColumnName("GEOS")
                    .HasColumnType("varchar(10000)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Leftbottom)
                    .HasColumnName("LEFTBOTTOM")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("pg")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Righttop)
                    .HasColumnName("RIGHTTOP")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("rwid")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<LeshanZwWdl>(entity =>
            {
                entity.ToTable("leshan_zw_wdl");

                entity.HasComment("植物_文档类");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Geos)
                    .HasColumnName("GEOS")
                    .HasColumnType("varchar(10000)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Leftbottom)
                    .HasColumnName("LEFTBOTTOM")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Righttop)
                    .HasColumnName("RIGHTTOP")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<LeshanZwWdlBhdcjcgzqkjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("leshan_zw_wdl_bhdcjcgzqkjl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("bhbh")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhmc)
                    .HasColumnName("BHMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bz)
                    .HasColumnName("bz")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Geos)
                    .HasColumnName("GEOS")
                    .HasColumnType("varchar(10000)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Leftbottom)
                    .HasColumnName("LEFTBOTTOM")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("pg")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Righttop)
                    .HasColumnName("RIGHTTOP")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("rwid")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否对接成功");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<LzjcJcx>(entity =>
            {
                entity.ToTable("lzjc_jcx");

                entity.HasComment("服务于专家模块的 监测项-监测内容");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Child)
                    .HasColumnName("CHILD")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(保存时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ContAliasfield)
                    .HasColumnName("CONT_ALIASFIELD")
                    .HasColumnType("varchar(50)")
                    .HasComment("有监测内容，监测内容表里的显示字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ContKeyfield)
                    .HasColumnName("CONT_KEYFIELD")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'ID'")
                    .HasComment("有监测内容，监测内容表里的主键字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fid)
                    .HasColumnName("FID")
                    .HasColumnType("varchar(50)")
                    .HasComment("树状结构查询的父级ID，左侧、右侧树的根级均为空，子级不为空")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Hasmoncont)
                    .HasColumnName("HASMONCONT")
                    .HasColumnType("varchar(1)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否有监测内容")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("bigint(12)")
                    .HasComment("排序索引");

                entity.Property(e => e.Label)
                    .HasColumnName("LABEL")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID（逻辑父级）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tabname)
                    .HasColumnName("TABNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("根据表id翻译的表名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<MapLayerLayerrelation>(entity =>
            {
                entity.ToTable("map_layer_layerrelation");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasColumnType("varchar(50)")
                    .HasComment("名字")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<MapLayerTdt>(entity =>
            {
                entity.ToTable("map_layer_tdt");

                entity.HasComment("地图_TDT图层");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("bm")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("bz")
                    .HasColumnType("varchar(2000)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("lx")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Relationid)
                    .HasColumnName("relationid")
                    .HasColumnType("varchar(50)")
                    .HasComment("layerrelation中的id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tl)
                    .HasColumnName("tl")
                    .HasColumnType("varchar(300)")
                    .HasComment("图例")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Typelx)
                    .HasColumnName("typelx")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'tdt'")
                    .HasComment("类型，区分是tdf、wms、wmts之一")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Url)
                    .HasColumnName("url")
                    .HasColumnType("varchar(500)")
                    .HasComment("地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbck)
                    .HasColumnName("zbck")
                    .HasColumnType("varchar(50)")
                    .HasComment("坐标参考")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<MapLayerWfs>(entity =>
            {
                entity.ToTable("map_layer_wfs");

                entity.HasComment("地图_WFS图层");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("bm")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzsm)
                    .HasColumnName("bzsm")
                    .HasColumnType("varchar(2000)")
                    .HasComment("备注说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("lx")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Relationid)
                    .HasColumnName("relationid")
                    .HasColumnType("varchar(50)")
                    .HasComment("layerrelation中的id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tcys)
                    .HasColumnName("tcys")
                    .HasColumnType("varchar(100)")
                    .HasComment("图层样式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tl)
                    .HasColumnName("tl")
                    .HasColumnType("varchar(300)")
                    .HasComment("图例")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Typelx)
                    .HasColumnName("typelx")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型，区分是tdf、wms、wmts之一")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Url)
                    .HasColumnName("url")
                    .HasColumnType("varchar(300)")
                    .HasComment("Url地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xybb)
                    .HasColumnName("xybb")
                    .HasColumnType("varchar(50)")
                    .HasComment("协议版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbck)
                    .HasColumnName("zbck")
                    .HasColumnType("varchar(50)")
                    .HasComment("坐标参考")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<MapLayerWms>(entity =>
            {
                entity.ToTable("map_layer_wms");

                entity.HasComment("地图_WMS图层");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("bm")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("bz")
                    .HasColumnType("varchar(2000)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Relationid)
                    .HasColumnName("relationid")
                    .HasColumnType("varchar(50)")
                    .HasComment("layerrelation中的id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfwptc)
                    .HasColumnName("sfwptc")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("是否瓦片图层");

                entity.Property(e => e.Tl)
                    .HasColumnName("tl")
                    .HasColumnType("varchar(300)")
                    .HasComment("图例")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Typelx)
                    .HasColumnName("typelx")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'wms'")
                    .HasComment("类型，区分是tdf、wms、wmts之一")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Url)
                    .HasColumnName("url")
                    .HasColumnType("varchar(300)")
                    .HasComment("URL地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wpgd)
                    .HasColumnName("wpgd")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("瓦片高度");

                entity.Property(e => e.Wpgs)
                    .HasColumnName("wpgs")
                    .HasColumnType("varchar(50)")
                    .HasComment("瓦片格式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wpkd)
                    .HasColumnName("wpkd")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("瓦片宽度");

                entity.Property(e => e.Xybb)
                    .HasColumnName("xybb")
                    .HasColumnType("varchar(50)")
                    .HasComment("协议版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbck)
                    .HasColumnName("zbck")
                    .HasColumnType("varchar(50)")
                    .HasComment("坐标参考")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ztcj)
                    .HasColumnName("ztcj")
                    .HasColumnType("varchar(200)")
                    .HasComment("子图层级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<MapLayerWmts>(entity =>
            {
                entity.ToTable("map_layer_wmts");

                entity.HasComment("地图_WMTS图层");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("bm")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("bz")
                    .HasColumnType("varchar(2000)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Relationid)
                    .HasColumnName("relationid")
                    .HasColumnType("varchar(50)")
                    .HasComment("layerrelation中的id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tl)
                    .HasColumnName("tl")
                    .HasColumnType("varchar(300)")
                    .HasComment("图例")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Typelx)
                    .HasColumnName("typelx")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'wmts'")
                    .HasComment("类型，区分是tdf、wms、wmts之一")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Url)
                    .HasColumnName("url")
                    .HasColumnType("varchar(300)")
                    .HasComment("Url地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbck)
                    .HasColumnName("zbck")
                    .HasColumnType("varchar(50)")
                    .HasComment("坐标参考")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ztcj)
                    .HasColumnName("ztcj")
                    .HasColumnType("varchar(200)")
                    .HasComment("子图层级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zzfs)
                    .HasColumnName("zzfs")
                    .HasColumnType("varchar(100)")
                    .HasComment("组织方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<MetadataQtlysj>(entity =>
            {
                entity.ToTable("metadata_qtlysj");

                entity.HasComment("其他类元数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(100)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(100)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjcjfs)
                    .HasColumnName("JCSJCJFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据采集方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcszm)
                    .HasColumnName("JCSZM")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测数值名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(20)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfw)
                    .HasColumnName("SJCJFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("数据采集范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjlrdw)
                    .HasColumnName("SJCJLRDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("数据采集录入单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcldw)
                    .HasColumnName("SJCLDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("数据处理单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjfhdw)
                    .HasColumnName("SJFHDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("数据复核单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjfhsj)
                    .HasColumnName("SJFHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据复核时间");

                entity.Property(e => e.Sjldx)
                    .HasColumnName("SJLDX")
                    .HasColumnType("varchar(30)")
                    .HasComment("数据量大小")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjlx)
                    .HasColumnName("SJLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjly)
                    .HasColumnName("SJLY")
                    .HasColumnType("varchar(100)")
                    .HasComment("数据来源")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(100)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjscjlsj)
                    .HasColumnName("SJSCJLSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据生成/记录时间");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szcjdzbxx)
                    .HasColumnName("SZCJDZBXX")
                    .HasColumnType("varchar(50)")
                    .HasComment("数值采集点坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(100)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzcs)
                    .HasColumnName("XZCS")
                    .HasColumnType("int(11)")
                    .HasComment("下载次数");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysdlxxzb)
                    .HasColumnName("YCYSDLXXZB")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<MetadataSzlysj>(entity =>
            {
                entity.ToTable("metadata_szlysj");

                entity.HasComment("数值类元数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsb)
                    .HasColumnName("CJSB")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集设备")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(100)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(100)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsz)
                    .HasColumnName("JCSZ")
                    .HasColumnType("varchar(30)")
                    .HasComment("监测数值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcszcjfs)
                    .HasColumnName("JCSZCJFS")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测数值采集方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcszm)
                    .HasColumnName("JCSZM")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数值名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jldw)
                    .HasColumnName("JLDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("计量单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shr)
                    .HasColumnName("SHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjlrdw)
                    .HasColumnName("SJCJLRDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("数据采集录入单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjlrzrr)
                    .HasColumnName("SJCJLRZRR")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集录入责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjfhdw)
                    .HasColumnName("SJFHDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("数据复核单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjfhr)
                    .HasColumnName("SJFHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据复核人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjfhsj)
                    .HasColumnName("SJFHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据复核时间");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjscjlsj)
                    .HasColumnName("SJSCJLSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据生成/记录时间");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szcjdzbxx)
                    .HasColumnName("SZCJDZBXX")
                    .HasColumnType("varchar(50)")
                    .HasComment("数值采集点坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(100)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzcs)
                    .HasColumnName("XZCS")
                    .HasColumnType("int(11)")
                    .HasComment("下载次数");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysdlxxzb)
                    .HasColumnName("YCYSDLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<MetadataTplysj>(entity =>
            {
                entity.ToTable("metadata_tplysj");

                entity.HasComment("图片类元数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdzbxx)
                    .HasColumnName("CJDZBXX")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集点坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(200)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(100)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pssb)
                    .HasColumnName("PSSB")
                    .HasColumnType("varchar(50)")
                    .HasComment("拍摄设备")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Tpcjdw)
                    .HasColumnName("TPCJDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片采集单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpcjzrr)
                    .HasColumnName("TPCJZRR")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片采集责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpgs)
                    .HasColumnName("TPGS")
                    .HasColumnType("varchar(30)")
                    .HasComment("图片格式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpmc)
                    .HasColumnName("TPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("图片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpscsj)
                    .HasColumnName("TPSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("图片生成时间");

                entity.Property(e => e.Tpsddw)
                    .HasColumnName("TPSDDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("图片审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpsdsj)
                    .HasColumnName("TPSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("图片审定时间");

                entity.Property(e => e.Tpsdz)
                    .HasColumnName("TPSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpsjl)
                    .HasColumnName("TPSJL")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片数据量")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzcs)
                    .HasColumnName("XZCS")
                    .HasColumnType("int(11)")
                    .HasComment("下载次数");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<MetadataTzlysj>(entity =>
            {
                entity.ToTable("metadata_tzlysj");

                entity.HasComment("图纸类元数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Chr)
                    .HasColumnName("CHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("测绘人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Chzrdw)
                    .HasColumnName("CHZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("测绘责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ctshr)
                    .HasColumnName("CTSHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("成图审核人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ctshsj)
                    .HasColumnName("CTSHSJ")
                    .HasColumnType("datetime")
                    .HasComment("成图审核时间");

                entity.Property(e => e.Ctsj)
                    .HasColumnName("CTSJ")
                    .HasColumnType("datetime")
                    .HasComment("成图时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fgfw)
                    .HasColumnName("FGFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("覆盖范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(50)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tfcc)
                    .HasColumnName("TFCC")
                    .HasColumnType("varchar(100)")
                    .HasComment("图幅尺寸")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Tzgs)
                    .HasColumnName("TZGS")
                    .HasColumnType("varchar(20)")
                    .HasComment("图纸格式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzjz)
                    .HasColumnName("TZJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("图纸介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzlb)
                    .HasColumnName("TZLB")
                    .HasColumnType("varchar(200)")
                    .HasComment("图纸类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzmc)
                    .HasColumnName("TZMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("图纸名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tznrlx)
                    .HasColumnName("TZNRLX")
                    .HasColumnType("varchar(100)")
                    .HasComment("图纸内容类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzsxblc)
                    .HasColumnName("TZSXBLC")
                    .HasColumnType("varchar(20)")
                    .HasComment("图纸属性比例尺")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzcs)
                    .HasColumnName("XZCS")
                    .HasColumnType("int(11)")
                    .HasComment("下载次数");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytbh)
                    .HasColumnName("YTBH")
                    .HasColumnType("varchar(200)")
                    .HasComment("原图编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytblc)
                    .HasColumnName("YTBLC")
                    .HasColumnType("varchar(50)")
                    .HasComment("原图比例尺")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytmc)
                    .HasColumnName("YTMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("原图名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytscdw)
                    .HasColumnName("YTSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原图收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytzbx)
                    .HasColumnName("YTZBX")
                    .HasColumnType("varchar(50)")
                    .HasComment("原图坐标系")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytztdw)
                    .HasColumnName("YTZTDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("原图制图单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytztsj)
                    .HasColumnName("YTZTSJ")
                    .HasColumnType("datetime")
                    .HasComment("原图制图时间");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<MetadataWdlysj>(entity =>
            {
                entity.ToTable("metadata_wdlysj");

                entity.HasComment("文档类元数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lycs)
                    .HasColumnName("LYCS")
                    .HasColumnType("int(100)")
                    .HasComment("利用次数");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjccbdlj)
                    .HasColumnName("SJCCBDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccydlj)
                    .HasColumnName("SJCCYDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(20)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Wdbb)
                    .HasColumnName("WDBB")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdbzdw)
                    .HasColumnName("WDBZDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("文档编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdcjsj)
                    .HasColumnName("WDCJSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档创建时间");

                entity.Property(e => e.Wdjz)
                    .HasColumnName("WDJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdlx)
                    .HasColumnName("WDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdmc)
                    .HasColumnName("WDMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdscsj)
                    .HasColumnName("WDSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档上传时间");

                entity.Property(e => e.Wdsddw)
                    .HasColumnName("WDSDDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdsdsj)
                    .HasColumnName("WDSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档审定时间");

                entity.Property(e => e.Wdsdz)
                    .HasColumnName("WDSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdzz)
                    .HasColumnName("WDZZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档作者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yswdbh)
                    .HasColumnName("YSWDBH")
                    .HasColumnType("varchar(100)")
                    .HasComment("原始文档编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdd)
                    .HasColumnName("YWDSCDD")
                    .HasColumnType("varchar(100)")
                    .HasComment("原文档收藏地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdw)
                    .HasColumnName("YWDSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原文档收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscrq)
                    .HasColumnName("YWDSCRQ")
                    .HasColumnType("datetime")
                    .HasComment("原文档生成日期");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<MetadataXgfjwd>(entity =>
            {
                entity.ToTable("metadata_xgfjwd");

                entity.HasComment("相关附件文档");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjr)
                    .HasColumnName("CJR")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Lj)
                    .HasColumnName("LJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lyid)
                    .HasColumnName("LYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("来源ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lylx)
                    .HasColumnName("LYLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("来源类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Scrid)
                    .HasColumnName("SCRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("上传人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scsj)
                    .HasColumnName("SCSJ")
                    .HasColumnType("datetime")
                    .HasComment("上传时间");

                entity.Property(e => e.Sm)
                    .HasColumnName("SM")
                    .HasColumnType("varchar(50)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdlx)
                    .HasColumnName("WDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<MetadataYxlysj>(entity =>
            {
                entity.ToTable("metadata_yxlysj");

                entity.HasComment("影像类元数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(100)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(20)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(100)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysyxcjdw)
                    .HasColumnName("YSYXCJDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原始影像采集单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxcjfw)
                    .HasColumnName("YXCJFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("影像采集范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxcldw)
                    .HasColumnName("YXCLDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("影像处理单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxfbl)
                    .HasColumnName("YXFBL")
                    .HasColumnType("varchar(20)")
                    .HasComment("影像分辨率")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxfw)
                    .HasColumnName("YXFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("影像范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxlx)
                    .HasColumnName("YXLX")
                    .HasColumnType("varchar(20)")
                    .HasComment("影像类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxly)
                    .HasColumnName("YXLY")
                    .HasColumnType("varchar(200)")
                    .HasComment("影像来源")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxmc)
                    .HasColumnName("YXMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("影像名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxscsj)
                    .HasColumnName("YXSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("影像生成时间");

                entity.Property(e => e.Yxsddw)
                    .HasColumnName("YXSDDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("影像审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxsdsj)
                    .HasColumnName("YXSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("影像审定时间");

                entity.Property(e => e.Yxsdz)
                    .HasColumnName("YXSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("影像审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxsjl)
                    .HasColumnName("YXSJL")
                    .HasColumnType("varchar(20)")
                    .HasComment("影像数据量")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(100)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<MwdZdjcdxWyt>(entity =>
            {
                entity.ToTable("mwd_zdjcdx_wyt");

                entity.HasComment("mwd_自动监测对象_危岩体");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bjx)
                    .HasColumnName("bjx")
                    .HasColumnType("varchar(4000)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("date");

                entity.Property(e => e.Jcfaid)
                    .HasColumnName("jcfaid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("px")
                    .HasColumnType("decimal(32,0)");

                entity.Property(e => e.Sfdtxs)
                    .HasColumnName("sfdtxs")
                    .HasColumnType("decimal(1,0)");

                entity.Property(e => e.Sfjgsjzd)
                    .HasColumnName("sfjgsjzd")
                    .HasColumnType("decimal(1,0)");

                entity.Property(e => e.Sfptdj)
                    .HasColumnName("sfptdj")
                    .HasColumnType("decimal(1,0)");

                entity.Property(e => e.Sjzdid)
                    .HasColumnName("sjzdid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wzms)
                    .HasColumnName("wzms")
                    .HasColumnType("varchar(500)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.X)
                    .HasColumnName("x")
                    .HasColumnType("decimal(38,8)");

                entity.Property(e => e.Y)
                    .HasColumnName("y")
                    .HasColumnType("decimal(38,8)");

                entity.Property(e => e.Ybid)
                    .HasColumnName("ybid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjczfaid)
                    .HasColumnName("yjczfaid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjsfid)
                    .HasColumnName("yjsfid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zdxsjb)
                    .HasColumnName("zdxsjb")
                    .HasColumnType("decimal(32,0)");

                entity.Property(e => e.Zxxsjb)
                    .HasColumnName("zxxsjb")
                    .HasColumnType("decimal(32,0)");
            });

            modelBuilder.Entity<MwdZdjcdxWytResultSub>(entity =>
            {
                entity.ToTable("mwd_zdjcdx_wyt_result_sub");

                entity.HasComment("稳定性差值表");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ptid)
                    .HasColumnName("ptid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("date");

                entity.Property(e => e.Wytid)
                    .HasColumnName("wytid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.X)
                    .HasColumnName("x")
                    .HasColumnType("decimal(38,4)");

                entity.Property(e => e.Y)
                    .HasColumnName("y")
                    .HasColumnType("decimal(38,4)");

                entity.Property(e => e.Z)
                    .HasColumnName("z")
                    .HasColumnType("decimal(38,4)");
            });

            modelBuilder.Entity<OgrPosition>(entity =>
            {
                entity.ToTable("ogr_position");

                entity.HasComment("职位");

                entity.HasIndex(e => e.Departmentid)
                    .HasName("FK_857975909A0D4C22");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Departmentid)
                    .HasColumnName("DEPARTMENTID")
                    .HasColumnType("varchar(50)")
                    .HasComment("组织机构ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Descreiption)
                    .HasColumnName("DESCREIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("REMARK")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Requirement)
                    .HasColumnName("REQUIREMENT")
                    .HasColumnType("varchar(200)")
                    .HasComment("要求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Responsibility)
                    .HasColumnName("RESPONSIBILITY")
                    .HasColumnType("varchar(200)")
                    .HasComment("职责")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<OrgDepartment>(entity =>
            {
                entity.ToTable("org_department");

                entity.HasComment("组织机构");

                entity.HasIndex(e => e.Parentid)
                    .HasName("FK_C0DE25463CD24714");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Address)
                    .HasColumnName("ADDRESS")
                    .HasColumnType("varchar(100)")
                    .HasComment("地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Contacts)
                    .HasColumnName("CONTACTS")
                    .HasColumnType("varchar(50)")
                    .HasComment("联系人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Createdate)
                    .HasColumnName("CREATEDATE")
                    .HasColumnType("datetime")
                    .HasComment("创建日期");

                entity.Property(e => e.Cxrq)
                    .HasColumnName("CXRQ")
                    .HasColumnType("datetime")
                    .HasComment("撤消日期");

                entity.Property(e => e.Departmentcode)
                    .HasColumnName("DEPARTMENTCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("组织机构代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Duty)
                    .HasColumnName("DUTY")
                    .HasColumnType("varchar(500)")
                    .HasComment("组织机构职责")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Email)
                    .HasColumnName("EMAIL")
                    .HasColumnType("varchar(50)")
                    .HasComment("联系电子邮箱")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Isdepartment)
                    .HasColumnName("ISDEPARTMENT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否部门");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Parentid)
                    .HasColumnName("PARENTID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("REMARK")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Telephone)
                    .HasColumnName("TELEPHONE")
                    .HasColumnType("varchar(50)")
                    .HasComment("联系电话")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Url)
                    .HasColumnName("URL")
                    .HasColumnType("varchar(100)")
                    .HasComment("网址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.X).HasComment("X");

                entity.Property(e => e.Xzqbm)
                    .HasColumnName("XZQBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("行政区编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Y).HasComment("Y");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.InverseParent)
                    .HasForeignKey(d => d.Parentid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("org_department_ibfk_1");
            });

            modelBuilder.Entity<OrgDepartmentCopy>(entity =>
            {
                entity.ToTable("org_department_copy");

                entity.HasComment("组织机构");

                entity.HasIndex(e => e.Parentid)
                    .HasName("FK_C0DE25463CD24714");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Address)
                    .HasColumnName("ADDRESS")
                    .HasColumnType("varchar(100)")
                    .HasComment("地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Contacts)
                    .HasColumnName("CONTACTS")
                    .HasColumnType("varchar(50)")
                    .HasComment("联系人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Createdate)
                    .HasColumnName("CREATEDATE")
                    .HasColumnType("datetime")
                    .HasComment("创建日期");

                entity.Property(e => e.Cxrq)
                    .HasColumnName("CXRQ")
                    .HasColumnType("datetime")
                    .HasComment("撤消日期");

                entity.Property(e => e.Departmentcode)
                    .HasColumnName("DEPARTMENTCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("组织机构代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Duty)
                    .HasColumnName("DUTY")
                    .HasColumnType("varchar(500)")
                    .HasComment("组织机构职责")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Email)
                    .HasColumnName("EMAIL")
                    .HasColumnType("varchar(50)")
                    .HasComment("联系电子邮箱")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Isdepartment)
                    .HasColumnName("ISDEPARTMENT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否部门");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Parentid)
                    .HasColumnName("PARENTID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("REMARK")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Telephone)
                    .HasColumnName("TELEPHONE")
                    .HasColumnType("varchar(50)")
                    .HasComment("联系电话")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Url)
                    .HasColumnName("URL")
                    .HasColumnType("varchar(100)")
                    .HasComment("网址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.X).HasComment("X");

                entity.Property(e => e.Xzqbm)
                    .HasColumnName("XZQBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("行政区编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Y).HasComment("Y");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.OrgDepartmentCopy)
                    .HasForeignKey(d => d.Parentid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("org_department_copy_ibfk_1");
            });

            modelBuilder.Entity<OrgLeader>(entity =>
            {
                entity.ToTable("org_leader");

                entity.HasComment("领导");

                entity.HasIndex(e => e.Departmentid)
                    .HasName("FK_E5F3A5CD5D1F4CFD");

                entity.HasIndex(e => e.Userid)
                    .HasName("FK_D7366134B139444D");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Departmentid)
                    .IsRequired()
                    .HasColumnName("DEPARTMENTID")
                    .HasColumnType("varchar(50)")
                    .HasComment("部门编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(50)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Leaderlevel)
                    .HasColumnName("LEADERLEVEL")
                    .HasColumnType("tinyint(4)")
                    .HasComment("领导级别");

                entity.Property(e => e.Responsibility)
                    .HasColumnName("RESPONSIBILITY")
                    .HasColumnType("varchar(200)")
                    .HasComment("职责")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rolename)
                    .IsRequired()
                    .HasColumnName("ROLENAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("角色名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Userid)
                    .IsRequired()
                    .HasColumnName("USERID")
                    .HasColumnType("varchar(50)")
                    .HasComment("员工编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Department)
                    .WithMany(p => p.OrgLeader)
                    .HasForeignKey(d => d.Departmentid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("org_leader_ibfk_2");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.OrgLeader)
                    .HasForeignKey(d => d.Userid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("org_leader_ibfk_1");
            });

            modelBuilder.Entity<OrgUserinfo>(entity =>
            {
                entity.ToTable("org_userinfo");

                entity.HasComment("员工");

                entity.HasIndex(e => e.Departmentid)
                    .HasName("FK_B929685D035B49AF");

                entity.HasIndex(e => e.Leaderid)
                    .HasName("FK_9A34852244AA4556");

                entity.HasIndex(e => e.Positionid)
                    .HasName("FK_173019BB55EF45AC");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Careerentry)
                    .HasColumnName("CAREERENTRY")
                    .HasColumnType("datetime")
                    .HasComment("入职日期");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("用户创建时间")
                    .ValueGeneratedOnAddOrUpdate();

                entity.Property(e => e.Departmentid)
                    .IsRequired()
                    .HasColumnName("DEPARTMENTID")
                    .HasColumnType("varchar(50)")
                    .HasComment("部门编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.DeviceId)
                    .HasColumnName("deviceID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测设备ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Email)
                    .HasColumnName("EMAIL")
                    .HasColumnType("varchar(50)")
                    .HasComment("电子邮箱")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Idcard)
                    .HasColumnName("IDCARD")
                    .HasColumnType("varchar(20)")
                    .HasComment("身份证号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ishangposition)
                    .HasColumnName("ISHANGPOSITION")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否挂职");

                entity.Property(e => e.Leaderid)
                    .HasColumnName("LEADERID")
                    .HasColumnType("varchar(50)")
                    .HasComment("上级领导编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Leavedate)
                    .HasColumnName("LEAVEDATE")
                    .HasColumnType("datetime")
                    .HasComment("离职日期");

                entity.Property(e => e.Loginname)
                    .IsRequired()
                    .HasColumnName("LOGINNAME")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Maploginname)
                    .HasColumnName("MAPLOGINNAME")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mappassword)
                    .HasColumnName("MAPPASSWORD")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称(员工编号)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Password)
                    .HasColumnName("PASSWORD")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'e10adc3949ba59abbe56e057f20f883e'")
                    .HasComment("默认密码：123456")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Photo)
                    .HasColumnName("PHOTO")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Positionid)
                    .HasColumnName("POSITIONID")
                    .HasColumnType("varchar(50)")
                    .HasComment("职位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qq)
                    .HasColumnName("QQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("QQ号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Realname)
                    .HasColumnName("REALNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("REMARK")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sex)
                    .HasColumnName("SEX")
                    .HasColumnType("tinyint(4)")
                    .HasComment("性别");

                entity.Property(e => e.Sfauto)
                    .HasColumnName("SFAUTO")
                    .HasComment("是否移动端用户");

                entity.Property(e => e.Sfjr)
                    .HasColumnName("SFJR")
                    .HasComment("是否为外部接入系统用户");

                entity.Property(e => e.Sfsystem)
                    .HasColumnName("SFSYSTEM")
                    .HasComment("是否系统平台用户");

                entity.Property(e => e.Systemuserid)
                    .HasColumnName("SYSTEMUSERID")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统用户ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tel)
                    .HasColumnName("TEL")
                    .HasColumnType("varchar(50)")
                    .HasComment("电话")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Department)
                    .WithMany(p => p.OrgUserinfo)
                    .HasForeignKey(d => d.Departmentid)
                    .HasConstraintName("org_userinfo_ibfk_3");

                entity.HasOne(d => d.Leader)
                    .WithMany(p => p.InverseLeader)
                    .HasForeignKey(d => d.Leaderid)
                    .HasConstraintName("org_userinfo_ibfk_2");

                entity.HasOne(d => d.Position)
                    .WithMany(p => p.OrgUserinfo)
                    .HasForeignKey(d => d.Positionid)
                    .HasConstraintName("org_userinfo_ibfk_1");
            });

            modelBuilder.Entity<OrgUserinfoCopy>(entity =>
            {
                entity.ToTable("org_userinfo_copy");

                entity.HasComment("员工");

                entity.HasIndex(e => e.Departmentid)
                    .HasName("FK_B929685D035B49AF");

                entity.HasIndex(e => e.Leaderid)
                    .HasName("FK_9A34852244AA4556");

                entity.HasIndex(e => e.Positionid)
                    .HasName("FK_173019BB55EF45AC");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Careerentry)
                    .HasColumnName("CAREERENTRY")
                    .HasColumnType("datetime")
                    .HasComment("入职日期");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("用户创建时间")
                    .ValueGeneratedOnAddOrUpdate();

                entity.Property(e => e.Departmentid)
                    .IsRequired()
                    .HasColumnName("DEPARTMENTID")
                    .HasColumnType("varchar(50)")
                    .HasComment("部门编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.DeviceId)
                    .HasColumnName("deviceID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测设备ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Email)
                    .HasColumnName("EMAIL")
                    .HasColumnType("varchar(50)")
                    .HasComment("电子邮箱")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Idcard)
                    .HasColumnName("IDCARD")
                    .HasColumnType("varchar(20)")
                    .HasComment("身份证号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ishangposition)
                    .HasColumnName("ISHANGPOSITION")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否挂职");

                entity.Property(e => e.Leaderid)
                    .HasColumnName("LEADERID")
                    .HasColumnType("varchar(50)")
                    .HasComment("上级领导编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Leavedate)
                    .HasColumnName("LEAVEDATE")
                    .HasColumnType("datetime")
                    .HasComment("离职日期");

                entity.Property(e => e.Loginname)
                    .IsRequired()
                    .HasColumnName("LOGINNAME")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Maploginname)
                    .HasColumnName("MAPLOGINNAME")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mappassword)
                    .HasColumnName("MAPPASSWORD")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称(员工编号)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Password)
                    .HasColumnName("PASSWORD")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'e10adc3949ba59abbe56e057f20f883e'")
                    .HasComment("默认密码：123456")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Photo)
                    .HasColumnName("PHOTO")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Positionid)
                    .HasColumnName("POSITIONID")
                    .HasColumnType("varchar(50)")
                    .HasComment("职位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qq)
                    .HasColumnName("QQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("QQ号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Realname)
                    .HasColumnName("REALNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("REMARK")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sex)
                    .HasColumnName("SEX")
                    .HasColumnType("tinyint(4)")
                    .HasComment("性别");

                entity.Property(e => e.Sfauto)
                    .HasColumnName("SFAUTO")
                    .HasComment("是否移动端用户");

                entity.Property(e => e.Sfjr)
                    .HasColumnName("SFJR")
                    .HasComment("是否为外部接入系统用户");

                entity.Property(e => e.Sfsystem)
                    .HasColumnName("SFSYSTEM")
                    .HasComment("是否系统平台用户");

                entity.Property(e => e.Systemuserid)
                    .HasColumnName("SYSTEMUSERID")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统用户ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tel)
                    .HasColumnName("TEL")
                    .HasColumnType("varchar(50)")
                    .HasComment("电话")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Department)
                    .WithMany(p => p.OrgUserinfoCopy)
                    .HasForeignKey(d => d.Departmentid)
                    .HasConstraintName("org_userinfo_copy_ibfk_3");

                entity.HasOne(d => d.Leader)
                    .WithMany(p => p.OrgUserinfoCopy)
                    .HasForeignKey(d => d.Leaderid)
                    .HasConstraintName("org_userinfo_copy_ibfk_2");

                entity.HasOne(d => d.Position)
                    .WithMany(p => p.OrgUserinfoCopy)
                    .HasForeignKey(d => d.Positionid)
                    .HasConstraintName("org_userinfo_copy_ibfk_1");
            });

            modelBuilder.Entity<Oridata>(entity =>
            {
                entity.ToTable("oridata");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("int(11)");

                entity.Property(e => e.CollectTime)
                    .HasColumnName("collectTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.Flag)
                    .HasColumnName("flag")
                    .HasColumnType("int(11)");

                entity.Property(e => e.ParaId)
                    .HasColumnName("paraId")
                    .HasColumnType("varchar(32)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ParaTypeCode)
                    .HasColumnName("paraTypeCode")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ParaValue).HasColumnName("paraValue");

                entity.Property(e => e.RtuCode)
                    .HasColumnName("rtuCode")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.SystemTime)
                    .HasColumnName("systemTime")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<PrivsData>(entity =>
            {
                entity.ToTable("privs_data");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Argstext)
                    .HasColumnName("ARGSTEXT")
                    .HasColumnType("varchar(500)")
                    .HasComment("参数说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Columntext)
                    .HasColumnName("COLUMNTEXT")
                    .HasColumnType("varchar(200)")
                    .HasComment("允许操作的字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dataoperation)
                    .HasColumnName("DATAOPERATION")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据操作")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Datasourcetext)
                    .HasColumnName("DATASOURCETEXT")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据源内容")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Datasourcetype)
                    .HasColumnName("DATASOURCETYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据源类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(200)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Initargs)
                    .HasColumnName("INITARGS")
                    .HasColumnType("varchar(500)")
                    .HasComment("初始参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wheretext)
                    .HasColumnName("WHERETEXT")
                    .HasColumnType("varchar(200)")
                    .HasComment("允许操作的数据")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsDataprivs>(entity =>
            {
                entity.ToTable("privs_dataprivs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dataid)
                    .HasColumnName("DATAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(200)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsDepartment>(entity =>
            {
                entity.ToTable("privs_department");

                entity.HasIndex(e => e.Id)
                    .HasName("ID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Address)
                    .HasColumnName("ADDRESS")
                    .HasColumnType("varchar(100)")
                    .HasComment("地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(200)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("timestamp")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("创建时间");

                entity.Property(e => e.Contacts)
                    .HasColumnName("CONTACTS")
                    .HasColumnType("varchar(50)")
                    .HasComment("联系人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Createdate)
                    .HasColumnName("CREATEDATE")
                    .HasColumnType("datetime")
                    .HasComment("创建日期");

                entity.Property(e => e.Cxrq)
                    .HasColumnName("CXRQ")
                    .HasColumnType("datetime")
                    .HasComment("撤消日期");

                entity.Property(e => e.Departmentcode)
                    .HasColumnName("DEPARTMENTCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("组织机构代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(4000)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Duty)
                    .HasColumnName("DUTY")
                    .HasColumnType("varchar(2000)")
                    .HasComment("组织机构职责")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Email)
                    .HasColumnName("EMAIL")
                    .HasColumnType("varchar(50)")
                    .HasComment("联系电子邮箱")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Isdepartment)
                    .HasColumnName("ISDEPARTMENT")
                    .HasColumnType("char(1)")
                    .HasComment("是否部门")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(100)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Parentid)
                    .HasColumnName("PARENTID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("REMARK")
                    .HasColumnType("varchar(4000)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Telephone)
                    .HasColumnName("TELEPHONE")
                    .HasColumnType("varchar(50)")
                    .HasComment("联系电话")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Url)
                    .HasColumnName("URL")
                    .HasColumnType("varchar(100)")
                    .HasComment("网址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.X)
                    .HasColumnType("decimal(38,8)")
                    .HasComment("X");

                entity.Property(e => e.Xzqbm)
                    .HasColumnName("XZQBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("行政区编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Y)
                    .HasColumnType("decimal(38,8)")
                    .HasComment("Y");
            });

            modelBuilder.Entity<PrivsDlsj>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("privs_dlsj");

                entity.Property(e => e.Dlsj)
                    .HasColumnName("DLSJ")
                    .HasColumnType("datetime");

                entity.Property(e => e.Userid)
                    .IsRequired()
                    .HasColumnName("USERID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsFunc>(entity =>
            {
                entity.ToTable("privs_func");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("int(11)")
                    .HasComment("排序索引");

                entity.Property(e => e.Initargs)
                    .HasColumnName("INITARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("初始化参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Operation)
                    .HasColumnName("OPERATION")
                    .HasColumnType("varchar(50)")
                    .HasComment("操作")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Typeid)
                    .HasColumnName("TYPEID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能类型ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsFuncData>(entity =>
            {
                entity.HasKey(e => e.Funcid)
                    .HasName("PRIMARY");

                entity.ToTable("privs_func_data");

                entity.Property(e => e.Funcid)
                    .HasColumnName("FUNCID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dataid)
                    .IsRequired()
                    .HasColumnName("DATAID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("数据编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsFuncprivs>(entity =>
            {
                entity.ToTable("privs_funcprivs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("操作参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Child)
                    .HasColumnName("CHILD")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(保存时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fid)
                    .HasColumnName("FID")
                    .HasColumnType("varchar(50)")
                    .HasComment("树状结构查询的父级ID，左侧、右侧树的根级均为空，子级不为空")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Funcid)
                    .HasColumnName("FUNCID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Icon)
                    .HasColumnName("ICON")
                    .HasColumnType("varchar(50)")
                    .HasComment("图标编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("bigint(12)")
                    .HasComment("排序索引");

                entity.Property(e => e.Label)
                    .HasColumnName("LABEL")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Path)
                    .HasColumnName("PATH")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID（逻辑父级）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qxyzl)
                    .HasColumnName("QXYZL")
                    .HasColumnType("varchar(255)")
                    .HasComment("权限验证列")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Route)
                    .HasColumnName("ROUTE")
                    .HasColumnType("varchar(50)")
                    .HasComment("（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sign)
                    .HasColumnName("SIGN")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(查询时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.State)
                    .HasColumnName("STATE")
                    .HasColumnType("varchar(200)")
                    .HasComment("状态（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Syscode)
                    .HasColumnName("SYSCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Type)
                    .HasColumnName("TYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsFuncprivsCopy>(entity =>
            {
                entity.ToTable("privs_funcprivs_copy");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("操作参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Child)
                    .HasColumnName("CHILD")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(保存时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fid)
                    .HasColumnName("FID")
                    .HasColumnType("varchar(50)")
                    .HasComment("树状结构查询的父级ID，左侧、右侧树的根级均为空，子级不为空")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Funcid)
                    .HasColumnName("FUNCID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Icon)
                    .HasColumnName("ICON")
                    .HasColumnType("varchar(50)")
                    .HasComment("图标编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("bigint(12)")
                    .HasComment("排序索引");

                entity.Property(e => e.Label)
                    .HasColumnName("LABEL")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Path)
                    .HasColumnName("PATH")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID（逻辑父级）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qxyzl)
                    .HasColumnName("QXYZL")
                    .HasColumnType("varchar(255)")
                    .HasComment("权限验证列")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Route)
                    .HasColumnName("ROUTE")
                    .HasColumnType("varchar(50)")
                    .HasComment("（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sign)
                    .HasColumnName("SIGN")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(查询时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.State)
                    .HasColumnName("STATE")
                    .HasColumnType("varchar(200)")
                    .HasComment("状态（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Syscode)
                    .HasColumnName("SYSCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Type)
                    .HasColumnName("TYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsFuncprivsCopy0412>(entity =>
            {
                entity.ToTable("privs_funcprivs_copy0412");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("操作参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Child)
                    .HasColumnName("CHILD")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(保存时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fid)
                    .HasColumnName("FID")
                    .HasColumnType("varchar(50)")
                    .HasComment("树状结构查询的父级ID，左侧、右侧树的根级均为空，子级不为空")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Funcid)
                    .HasColumnName("FUNCID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Icon)
                    .HasColumnName("ICON")
                    .HasColumnType("varchar(50)")
                    .HasComment("图标编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("bigint(12)")
                    .HasComment("排序索引");

                entity.Property(e => e.Label)
                    .HasColumnName("LABEL")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Path)
                    .HasColumnName("PATH")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID（逻辑父级）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qxyzl)
                    .HasColumnName("QXYZL")
                    .HasColumnType("varchar(255)")
                    .HasComment("权限验证列")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Route)
                    .HasColumnName("ROUTE")
                    .HasColumnType("varchar(50)")
                    .HasComment("（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sign)
                    .HasColumnName("SIGN")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(查询时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.State)
                    .HasColumnName("STATE")
                    .HasColumnType("varchar(200)")
                    .HasComment("状态（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Syscode)
                    .HasColumnName("SYSCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Type)
                    .HasColumnName("TYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsFuncprivsCopy0420>(entity =>
            {
                entity.ToTable("privs_funcprivs_copy0420");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("操作参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Child)
                    .HasColumnName("CHILD")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(保存时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fid)
                    .HasColumnName("FID")
                    .HasColumnType("varchar(50)")
                    .HasComment("树状结构查询的父级ID，左侧、右侧树的根级均为空，子级不为空")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Funcid)
                    .HasColumnName("FUNCID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Icon)
                    .HasColumnName("ICON")
                    .HasColumnType("varchar(50)")
                    .HasComment("图标编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("bigint(12)")
                    .HasComment("排序索引");

                entity.Property(e => e.Label)
                    .HasColumnName("LABEL")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Path)
                    .HasColumnName("PATH")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID（逻辑父级）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qxyzl)
                    .HasColumnName("QXYZL")
                    .HasColumnType("varchar(255)")
                    .HasComment("权限验证列")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Route)
                    .HasColumnName("ROUTE")
                    .HasColumnType("varchar(50)")
                    .HasComment("（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sign)
                    .HasColumnName("SIGN")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(查询时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.State)
                    .HasColumnName("STATE")
                    .HasColumnType("varchar(200)")
                    .HasComment("状态（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Syscode)
                    .HasColumnName("SYSCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Type)
                    .HasColumnName("TYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsFuncprivsCopy0504>(entity =>
            {
                entity.ToTable("privs_funcprivs_copy0504");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("操作参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Child)
                    .HasColumnName("CHILD")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(保存时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fid)
                    .HasColumnName("FID")
                    .HasColumnType("varchar(50)")
                    .HasComment("树状结构查询的父级ID，左侧、右侧树的根级均为空，子级不为空")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Funcid)
                    .HasColumnName("FUNCID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Icon)
                    .HasColumnName("ICON")
                    .HasColumnType("varchar(50)")
                    .HasComment("图标编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("bigint(12)")
                    .HasComment("排序索引");

                entity.Property(e => e.Label)
                    .HasColumnName("LABEL")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Path)
                    .HasColumnName("PATH")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID（逻辑父级）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qxyzl)
                    .HasColumnName("QXYZL")
                    .HasColumnType("varchar(255)")
                    .HasComment("权限验证列")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Route)
                    .HasColumnName("ROUTE")
                    .HasColumnType("varchar(50)")
                    .HasComment("（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sign)
                    .HasColumnName("SIGN")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(查询时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.State)
                    .HasColumnName("STATE")
                    .HasColumnType("varchar(200)")
                    .HasComment("状态（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Syscode)
                    .HasColumnName("SYSCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Type)
                    .HasColumnName("TYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsFuncprivsCopy0605>(entity =>
            {
                entity.ToTable("privs_funcprivs_copy0605");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("操作参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Child)
                    .HasColumnName("CHILD")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(保存时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fid)
                    .HasColumnName("FID")
                    .HasColumnType("varchar(50)")
                    .HasComment("树状结构查询的父级ID，左侧、右侧树的根级均为空，子级不为空")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Funcid)
                    .HasColumnName("FUNCID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Icon)
                    .HasColumnName("ICON")
                    .HasColumnType("varchar(50)")
                    .HasComment("图标编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("bigint(12)")
                    .HasComment("排序索引");

                entity.Property(e => e.Label)
                    .HasColumnName("LABEL")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Path)
                    .HasColumnName("PATH")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID（逻辑父级）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qxyzl)
                    .HasColumnName("QXYZL")
                    .HasColumnType("varchar(255)")
                    .HasComment("权限验证列")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Route)
                    .HasColumnName("ROUTE")
                    .HasColumnType("varchar(50)")
                    .HasComment("（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sign)
                    .HasColumnName("SIGN")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(查询时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.State)
                    .HasColumnName("STATE")
                    .HasColumnType("varchar(200)")
                    .HasComment("状态（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Syscode)
                    .HasColumnName("SYSCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Type)
                    .HasColumnName("TYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsFuncprivsCopy0620>(entity =>
            {
                entity.ToTable("privs_funcprivs_copy0620");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("操作参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Child)
                    .HasColumnName("CHILD")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(保存时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fid)
                    .HasColumnName("FID")
                    .HasColumnType("varchar(50)")
                    .HasComment("树状结构查询的父级ID，左侧、右侧树的根级均为空，子级不为空")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Funcid)
                    .HasColumnName("FUNCID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Icon)
                    .HasColumnName("ICON")
                    .HasColumnType("varchar(50)")
                    .HasComment("图标编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("bigint(12)")
                    .HasComment("排序索引");

                entity.Property(e => e.Label)
                    .HasColumnName("LABEL")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Path)
                    .HasColumnName("PATH")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID（逻辑父级）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qxyzl)
                    .HasColumnName("QXYZL")
                    .HasColumnType("varchar(255)")
                    .HasComment("权限验证列")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Route)
                    .HasColumnName("ROUTE")
                    .HasColumnType("varchar(50)")
                    .HasComment("（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sign)
                    .HasColumnName("SIGN")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(查询时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.State)
                    .HasColumnName("STATE")
                    .HasColumnType("varchar(200)")
                    .HasComment("状态（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Syscode)
                    .HasColumnName("SYSCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Type)
                    .HasColumnName("TYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsFuncprivsCopy0726>(entity =>
            {
                entity.ToTable("privs_funcprivs_copy0726");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("操作参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Child)
                    .HasColumnName("CHILD")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(保存时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fid)
                    .HasColumnName("FID")
                    .HasColumnType("varchar(50)")
                    .HasComment("树状结构查询的父级ID，左侧、右侧树的根级均为空，子级不为空")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Funcid)
                    .HasColumnName("FUNCID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Icon)
                    .HasColumnName("ICON")
                    .HasColumnType("varchar(50)")
                    .HasComment("图标编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("bigint(12)")
                    .HasComment("排序索引");

                entity.Property(e => e.Label)
                    .HasColumnName("LABEL")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Path)
                    .HasColumnName("PATH")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID（逻辑父级）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qxyzl)
                    .HasColumnName("QXYZL")
                    .HasColumnType("varchar(255)")
                    .HasComment("权限验证列")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Route)
                    .HasColumnName("ROUTE")
                    .HasColumnType("varchar(50)")
                    .HasComment("（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sign)
                    .HasColumnName("SIGN")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(查询时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.State)
                    .HasColumnName("STATE")
                    .HasColumnType("varchar(200)")
                    .HasComment("状态（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Syscode)
                    .HasColumnName("SYSCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Type)
                    .HasColumnName("TYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsFuncprivsCopy0903>(entity =>
            {
                entity.ToTable("privs_funcprivs_copy0903");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("操作参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Child)
                    .HasColumnName("CHILD")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(保存时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fid)
                    .HasColumnName("FID")
                    .HasColumnType("varchar(50)")
                    .HasComment("树状结构查询的父级ID，左侧、右侧树的根级均为空，子级不为空")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Funcid)
                    .HasColumnName("FUNCID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Icon)
                    .HasColumnName("ICON")
                    .HasColumnType("varchar(50)")
                    .HasComment("图标编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("bigint(12)")
                    .HasComment("排序索引");

                entity.Property(e => e.Label)
                    .HasColumnName("LABEL")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Path)
                    .HasColumnName("PATH")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID（逻辑父级）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qxyzl)
                    .HasColumnName("QXYZL")
                    .HasColumnType("varchar(255)")
                    .HasComment("权限验证列")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Route)
                    .HasColumnName("ROUTE")
                    .HasColumnType("varchar(50)")
                    .HasComment("（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sign)
                    .HasColumnName("SIGN")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(查询时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.State)
                    .HasColumnName("STATE")
                    .HasColumnType("varchar(200)")
                    .HasComment("状态（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Syscode)
                    .HasColumnName("SYSCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Type)
                    .HasColumnName("TYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsFuncprivsCopy1>(entity =>
            {
                entity.ToTable("privs_funcprivs_copy1");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("操作参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Child)
                    .HasColumnName("CHILD")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(保存时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fid)
                    .HasColumnName("FID")
                    .HasColumnType("varchar(50)")
                    .HasComment("树状结构查询的父级ID，左侧、右侧树的根级均为空，子级不为空")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Funcid)
                    .HasColumnName("FUNCID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Icon)
                    .HasColumnName("ICON")
                    .HasColumnType("varchar(50)")
                    .HasComment("图标编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("bigint(12)")
                    .HasComment("排序索引");

                entity.Property(e => e.Label)
                    .HasColumnName("LABEL")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Path)
                    .HasColumnName("PATH")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID（逻辑父级）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qxyzl)
                    .HasColumnName("QXYZL")
                    .HasColumnType("varchar(255)")
                    .HasComment("权限验证列")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Route)
                    .HasColumnName("ROUTE")
                    .HasColumnType("varchar(50)")
                    .HasComment("（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sign)
                    .HasColumnName("SIGN")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(查询时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.State)
                    .HasColumnName("STATE")
                    .HasColumnType("varchar(200)")
                    .HasComment("状态（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Syscode)
                    .HasColumnName("SYSCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Type)
                    .HasColumnName("TYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsFuncprivsCopy20180919>(entity =>
            {
                entity.ToTable("privs_funcprivs_copy20180919");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("操作参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Child)
                    .HasColumnName("CHILD")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(保存时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fid)
                    .HasColumnName("FID")
                    .HasColumnType("varchar(50)")
                    .HasComment("树状结构查询的父级ID，左侧、右侧树的根级均为空，子级不为空")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Funcid)
                    .HasColumnName("FUNCID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Icon)
                    .HasColumnName("ICON")
                    .HasColumnType("varchar(50)")
                    .HasComment("图标编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("bigint(12)")
                    .HasComment("排序索引");

                entity.Property(e => e.Label)
                    .HasColumnName("LABEL")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Path)
                    .HasColumnName("PATH")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID（逻辑父级）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qxyzl)
                    .HasColumnName("QXYZL")
                    .HasColumnType("varchar(255)")
                    .HasComment("权限验证列")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Route)
                    .HasColumnName("ROUTE")
                    .HasColumnType("varchar(50)")
                    .HasComment("（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sign)
                    .HasColumnName("SIGN")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(查询时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.State)
                    .HasColumnName("STATE")
                    .HasColumnType("varchar(200)")
                    .HasComment("状态（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Syscode)
                    .HasColumnName("SYSCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Type)
                    .HasColumnName("TYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsFuncprivsCopy20180927监测数据病害列表调整前>(entity =>
            {
                entity.ToTable("privs_funcprivs_copy20180927监测数据病害列表调整前");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("操作参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Child)
                    .HasColumnName("CHILD")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(保存时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fid)
                    .HasColumnName("FID")
                    .HasColumnType("varchar(50)")
                    .HasComment("树状结构查询的父级ID，左侧、右侧树的根级均为空，子级不为空")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Funcid)
                    .HasColumnName("FUNCID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Icon)
                    .HasColumnName("ICON")
                    .HasColumnType("varchar(50)")
                    .HasComment("图标编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("bigint(12)")
                    .HasComment("排序索引");

                entity.Property(e => e.Label)
                    .HasColumnName("LABEL")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Path)
                    .HasColumnName("PATH")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID（逻辑父级）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qxyzl)
                    .HasColumnName("QXYZL")
                    .HasColumnType("varchar(255)")
                    .HasComment("权限验证列")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Route)
                    .HasColumnName("ROUTE")
                    .HasColumnType("varchar(50)")
                    .HasComment("（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sign)
                    .HasColumnName("SIGN")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(查询时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.State)
                    .HasColumnName("STATE")
                    .HasColumnType("varchar(200)")
                    .HasComment("状态（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Syscode)
                    .HasColumnName("SYSCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Type)
                    .HasColumnName("TYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsFuncprivsCopy20181012>(entity =>
            {
                entity.ToTable("privs_funcprivs_copy20181012");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("操作参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Child)
                    .HasColumnName("CHILD")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(保存时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fid)
                    .HasColumnName("FID")
                    .HasColumnType("varchar(50)")
                    .HasComment("树状结构查询的父级ID，左侧、右侧树的根级均为空，子级不为空")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Funcid)
                    .HasColumnName("FUNCID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Icon)
                    .HasColumnName("ICON")
                    .HasColumnType("varchar(50)")
                    .HasComment("图标编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("bigint(12)")
                    .HasComment("排序索引");

                entity.Property(e => e.Label)
                    .HasColumnName("LABEL")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Path)
                    .HasColumnName("PATH")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID（逻辑父级）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qxyzl)
                    .HasColumnName("QXYZL")
                    .HasColumnType("varchar(255)")
                    .HasComment("权限验证列")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Route)
                    .HasColumnName("ROUTE")
                    .HasColumnType("varchar(50)")
                    .HasComment("（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sign)
                    .HasColumnName("SIGN")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(查询时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.State)
                    .HasColumnName("STATE")
                    .HasColumnType("varchar(200)")
                    .HasComment("状态（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Syscode)
                    .HasColumnName("SYSCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Type)
                    .HasColumnName("TYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsFuncprivsCopy20200713>(entity =>
            {
                entity.ToTable("privs_funcprivs_copy20200713");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("操作参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Child)
                    .HasColumnName("CHILD")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(保存时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fid)
                    .HasColumnName("FID")
                    .HasColumnType("varchar(50)")
                    .HasComment("树状结构查询的父级ID，左侧、右侧树的根级均为空，子级不为空")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Funcid)
                    .HasColumnName("FUNCID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Icon)
                    .HasColumnName("ICON")
                    .HasColumnType("varchar(50)")
                    .HasComment("图标编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("bigint(12)")
                    .HasComment("排序索引");

                entity.Property(e => e.Label)
                    .HasColumnName("LABEL")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Path)
                    .HasColumnName("PATH")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID（逻辑父级）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qxyzl)
                    .HasColumnName("QXYZL")
                    .HasColumnType("varchar(255)")
                    .HasComment("权限验证列")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Route)
                    .HasColumnName("ROUTE")
                    .HasColumnType("varchar(50)")
                    .HasComment("（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sign)
                    .HasColumnName("SIGN")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(查询时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.State)
                    .HasColumnName("STATE")
                    .HasColumnType("varchar(200)")
                    .HasComment("状态（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Syscode)
                    .HasColumnName("SYSCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Type)
                    .HasColumnName("TYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsFuncprivsCopy3>(entity =>
            {
                entity.ToTable("privs_funcprivs_copy3");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("操作参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Child)
                    .HasColumnName("CHILD")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(保存时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fid)
                    .HasColumnName("FID")
                    .HasColumnType("varchar(50)")
                    .HasComment("树状结构查询的父级ID，左侧、右侧树的根级均为空，子级不为空")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Funcid)
                    .HasColumnName("FUNCID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Icon)
                    .HasColumnName("ICON")
                    .HasColumnType("varchar(50)")
                    .HasComment("图标编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("bigint(12)")
                    .HasComment("排序索引");

                entity.Property(e => e.Label)
                    .HasColumnName("LABEL")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Path)
                    .HasColumnName("PATH")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID（逻辑父级）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qxyzl)
                    .HasColumnName("QXYZL")
                    .HasColumnType("varchar(255)")
                    .HasComment("权限验证列")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Route)
                    .HasColumnName("ROUTE")
                    .HasColumnType("varchar(50)")
                    .HasComment("（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sign)
                    .HasColumnName("SIGN")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(查询时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.State)
                    .HasColumnName("STATE")
                    .HasColumnType("varchar(200)")
                    .HasComment("状态（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Syscode)
                    .HasColumnName("SYSCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Type)
                    .HasColumnName("TYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsFuncprivsTmp>(entity =>
            {
                entity.ToTable("privs_funcprivs_tmp");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("操作参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Child)
                    .HasColumnName("CHILD")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(保存时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fid)
                    .HasColumnName("FID")
                    .HasColumnType("varchar(50)")
                    .HasComment("树状结构查询的父级ID，左侧、右侧树的根级均为空，子级不为空")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Funcid)
                    .HasColumnName("FUNCID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Icon)
                    .HasColumnName("ICON")
                    .HasColumnType("varchar(50)")
                    .HasComment("图标编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("bigint(12)")
                    .HasComment("排序索引");

                entity.Property(e => e.Label)
                    .HasColumnName("LABEL")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Path)
                    .HasColumnName("PATH")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID（逻辑父级）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qxyzl)
                    .HasColumnName("QXYZL")
                    .HasColumnType("varchar(255)")
                    .HasComment("权限验证列")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Route)
                    .HasColumnName("ROUTE")
                    .HasColumnType("varchar(50)")
                    .HasComment("（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sign)
                    .HasColumnName("SIGN")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(查询时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.State)
                    .HasColumnName("STATE")
                    .HasColumnType("varchar(200)")
                    .HasComment("状态（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Syscode)
                    .HasColumnName("SYSCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Type)
                    .HasColumnName("TYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsFunctype>(entity =>
            {
                entity.ToTable("privs_functype");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("int(11)")
                    .HasComment("排序索引");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsLeader>(entity =>
            {
                entity.ToTable("privs_leader");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Departmentid)
                    .HasColumnName("DEPARTMENTID")
                    .HasColumnType("varchar(50)")
                    .HasComment("部门编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(50)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Issingle)
                    .HasColumnName("ISSINGLE")
                    .HasColumnType("char(1)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否单一")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Leaderlevel)
                    .HasColumnName("LEADERLEVEL")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'2'")
                    .HasComment("领导级别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Position)
                    .HasColumnName("POSITION")
                    .HasColumnType("varchar(50)")
                    .HasComment("职位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("REMARK")
                    .HasColumnType("varchar(50)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Responsibility)
                    .HasColumnName("RESPONSIBILITY")
                    .HasColumnType("varchar(1000)")
                    .HasDefaultValueSql("'第二负责人'")
                    .HasComment("职责")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rolename)
                    .HasColumnName("ROLENAME")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'第二负责人'")
                    .HasComment("角色名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Userid)
                    .HasColumnName("USERID")
                    .HasColumnType("varchar(50)")
                    .HasComment("员工编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsOldFuncprivs>(entity =>
            {
                entity.ToTable("privs_old_funcprivs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("操作参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Funcid)
                    .HasColumnName("FUNCID")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("int(11)")
                    .HasComment("排序索引");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qxyzl)
                    .HasColumnName("QXYZL")
                    .HasColumnType("varchar(255)")
                    .HasComment("权限验证列")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Systemid)
                    .HasColumnName("SYSTEMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsPosition>(entity =>
            {
                entity.ToTable("privs_position");

                entity.HasIndex(e => e.Id)
                    .HasName("ID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Departmentid)
                    .HasColumnName("DEPARTMENTID")
                    .HasColumnType("varchar(50)")
                    .HasComment("组织机构ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Descreiption)
                    .HasColumnName("DESCREIPTION")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Issingle)
                    .HasColumnName("ISSINGLE")
                    .HasColumnType("char(1)")
                    .HasComment("是否单一")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("REMARK")
                    .HasColumnType("varchar(4000)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Requirement)
                    .HasColumnName("REQUIREMENT")
                    .HasColumnType("varchar(500)")
                    .HasComment("要求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Responsibility)
                    .HasColumnName("RESPONSIBILITY")
                    .HasColumnType("varchar(500)")
                    .HasComment("职责")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsRole>(entity =>
            {
                entity.ToTable("privs_role");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("timestamp")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("创建时间");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(2000)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Namespace)
                    .HasColumnName("NAMESPACE")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Systemid)
                    .HasColumnName("SYSTEMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("所属系统ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsRoleDataprivs>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("privs_role_dataprivs");

                entity.Property(e => e.Privsid)
                    .IsRequired()
                    .HasColumnName("PRIVSID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("数据权限编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Roleid)
                    .IsRequired()
                    .HasColumnName("ROLEID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("角色编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsRoleFuncprivs>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("privs_role_funcprivs");

                entity.Property(e => e.Privsid)
                    .IsRequired()
                    .HasColumnName("PRIVSID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("权限编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Roleid)
                    .IsRequired()
                    .HasColumnName("ROLEID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("角色编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsSystem>(entity =>
            {
                entity.ToTable("privs_system");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(500)")
                    .HasComment("参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Descreaption)
                    .HasColumnName("DESCREAPTION")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(100)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<PrivsUser>(entity =>
            {
                entity.ToTable("privs_user");

                entity.HasIndex(e => e.Departmentid)
                    .HasName("PRIVS_USER_ibfk_1");

                entity.HasIndex(e => e.Id)
                    .HasName("ID");

                entity.HasIndex(e => e.Leaderid)
                    .HasName("PRIVS_USER_ibfk_3");

                entity.HasIndex(e => e.Positionid)
                    .HasName("PRIVS_USER_ibfk_2");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bgdh)
                    .HasColumnName("BGDH")
                    .HasColumnType("varchar(20)")
                    .HasComment("办公电话")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bgwz)
                    .HasColumnName("BGWZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("办公位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Careerentry)
                    .HasColumnName("CAREERENTRY")
                    .HasColumnType("datetime")
                    .HasComment("入职日期");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("timestamp")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("创建时间");

                entity.Property(e => e.Clientid)
                    .HasColumnName("CLIENTID")
                    .HasColumnType("varchar(50)")
                    .HasComment("识别码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Departmentid)
                    .HasColumnName("DEPARTMENTID")
                    .HasColumnType("varchar(50)")
                    .HasComment("部门编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Email)
                    .HasColumnName("EMAIL")
                    .HasColumnType("varchar(50)")
                    .HasComment("电子邮箱")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gn)
                    .HasColumnName("GN")
                    .HasColumnType("varchar(50)")
                    .HasComment("功能（存储皮肤）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Idcard)
                    .HasColumnName("IDCARD")
                    .HasColumnType("varchar(50)")
                    .HasComment("身份证")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Islocked)
                    .HasColumnName("ISLOCKED")
                    .HasColumnType("char(1)")
                    .HasDefaultValueSql("'2'")
                    .HasComment("是否锁定（1：锁定 ,2:未锁定 ）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Issystem)
                    .HasColumnName("ISSYSTEM")
                    .HasColumnType("char(1)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否系统用户\"1\"是\"0\"不是")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Leaderid)
                    .HasColumnName("LEADERID")
                    .HasColumnType("varchar(50)")
                    .HasComment("上级领导编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Leavedate)
                    .HasColumnName("LEAVEDATE")
                    .HasColumnType("datetime")
                    .HasComment("离职日期");

                entity.Property(e => e.Mobile)
                    .HasColumnName("MOBILE")
                    .HasColumnType("varchar(50)")
                    .HasComment("手机号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Namepassword)
                    .HasColumnName("NAMEPassword")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Password)
                    .HasColumnName("PASSWORD")
                    .HasColumnType("varchar(200)")
                    .HasComment("密码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Photopath)
                    .HasColumnName("PHOTOPATH")
                    .HasColumnType("longtext")
                    .HasComment("照片文件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Positionid)
                    .HasColumnName("POSITIONID")
                    .HasColumnType("varchar(50)")
                    .HasComment("职位编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qq)
                    .HasColumnName("QQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("QQ")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Realname)
                    .HasColumnName("REALNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("REMARK")
                    .HasColumnType("varchar(4000)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sex)
                    .HasColumnName("SEX")
                    .HasColumnType("char(1)")
                    .HasComment("性别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfyxgmm)
                    .HasColumnName("SFYXGMM")
                    .HasColumnType("char(1)")
                    .HasDefaultValueSql("'2'")
                    .HasComment("是否已修改密码 1是 2否")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Token)
                    .HasColumnName("TOKEN")
                    .HasColumnType("varchar(1000)")
                    .HasComment("凭证")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Usercode)
                    .HasColumnName("USERCODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("员工代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Department)
                    .WithMany(p => p.PrivsUser)
                    .HasForeignKey(d => d.Departmentid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("PRIVS_USER_ibfk_1");

                entity.HasOne(d => d.Leader)
                    .WithMany(p => p.InverseLeader)
                    .HasForeignKey(d => d.Leaderid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("PRIVS_USER_ibfk_3");
            });

            modelBuilder.Entity<PrivsUserClientid>(entity =>
            {
                entity.ToTable("privs_user_clientid");

                entity.HasIndex(e => e.Userid)
                    .HasName("USERID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Clientid)
                    .IsRequired()
                    .HasColumnName("CLIENTID")
                    .HasColumnType("varchar(50)")
                    .HasComment("clientid")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Userid)
                    .IsRequired()
                    .HasColumnName("USERID")
                    .HasColumnType("varchar(50)")
                    .HasComment("用户id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.PrivsUserClientid)
                    .HasForeignKey(d => d.Userid)
                    .HasConstraintName("PRIVS_USER_CLIENTID_ibfk_1");
            });

            modelBuilder.Entity<PrivsUserExtend>(entity =>
            {
                entity.ToTable("privs_user_extend");

                entity.HasIndex(e => e.Userid)
                    .HasName("USERID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Skinpath)
                    .HasColumnName("SKINPATH")
                    .HasColumnType("longtext")
                    .HasComment("皮肤文件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Userid)
                    .HasColumnName("USERID")
                    .HasColumnType("varchar(50)")
                    .HasComment("用户编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.PrivsUserExtend)
                    .HasForeignKey(d => d.Userid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("USERID");
            });

            modelBuilder.Entity<PrivsUserLogininfo>(entity =>
            {
                entity.ToTable("privs_user_logininfo");

                entity.HasComment("记录用户登录");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Dlsj)
                    .HasColumnName("DLSJ")
                    .HasColumnType("datetime")
                    .HasComment("登录时间");

                entity.Property(e => e.Userid)
                    .IsRequired()
                    .HasColumnName("USERID")
                    .HasColumnType("varchar(50)")
                    .HasComment("用户ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<PrivsUserRole>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("privs_user_role");

                entity.Property(e => e.Roleid)
                    .IsRequired()
                    .HasColumnName("ROLEID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("角色编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Userid)
                    .IsRequired()
                    .HasColumnName("USERID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("用户编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<SGcGcda>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("s_gc_gcda");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dalx)
                    .HasColumnName("DALX")
                    .HasColumnType("varchar(50)")
                    .HasComment("档案类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gcid)
                    .HasColumnName("GCID")
                    .HasColumnType("varchar(200)")
                    .HasComment("工程id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gcmc)
                    .HasColumnName("GCMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<SGlyjcJcpz>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("s_glyjc_jcpz");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzid)
                    .IsRequired()
                    .HasColumnName("JCPZID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<SGlyjcJcpz2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("s_glyjc_jcpz_2");

                entity.Property(e => e.Jcdxid)
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzid)
                    .IsRequired()
                    .HasColumnName("JCPZID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<SYcysdtyxtjcsjMetadata>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("s_ycysdtyxtjcsj_metadata");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdjd)
                    .HasColumnName("cjdjd")
                    .HasComment("采集点经度");

                entity.Property(e => e.Cjdsyt)
                    .HasColumnName("cjdsyt")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集点示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdwd)
                    .HasColumnName("cjdwd")
                    .HasComment("采集点纬度");

                entity.Property(e => e.Cjdwzms)
                    .HasColumnName("cjdwzms")
                    .HasColumnType("varchar(100)")
                    .HasComment("采集点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzzp)
                    .HasColumnName("JZZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("基准照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<Sheet1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("sheet1");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.NumEnter)
                    .HasColumnName("num_enter")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.NumIn)
                    .HasColumnName("num_in")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ykqyid)
                    .HasColumnName("YKQYID")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<SpatialRefSys>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("spatial_ref_sys");

                entity.Property(e => e.AuthName)
                    .HasColumnName("AUTH_NAME")
                    .HasColumnType("varchar(256)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AuthSrid)
                    .HasColumnName("AUTH_SRID")
                    .HasColumnType("int(11)");

                entity.Property(e => e.Srid)
                    .HasColumnName("SRID")
                    .HasColumnType("int(11)");

                entity.Property(e => e.Srtext)
                    .HasColumnName("SRTEXT")
                    .HasColumnType("varchar(2048)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<SystmpTreedata>(entity =>
            {
                entity.ToTable("systmp_treedata");

                entity.HasComment("systmp_treedata");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dataid)
                    .IsRequired()
                    .HasColumnName("dataid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Swid)
                    .IsRequired()
                    .HasColumnName("swid")
                    .HasColumnType("varchar(50)")
                    .HasComment("事务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TApiuseRecords>(entity =>
            {
                entity.ToTable("t_apiuse_records");

                entity.HasComment("接口调用记录表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ip)
                    .HasColumnName("IP")
                    .HasColumnType("varchar(50)")
                    .HasComment("IP地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ishttps)
                    .HasColumnName("ISHTTPS")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否HTTPS");

                entity.Property(e => e.Method)
                    .HasColumnName("METHOD")
                    .HasColumnType("varchar(50)")
                    .HasComment("方法")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Protocol)
                    .HasColumnName("PROTOCOL")
                    .HasColumnType("varchar(50)")
                    .HasComment("协议")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Route)
                    .HasColumnName("ROUTE")
                    .HasColumnType("varchar(50)")
                    .HasComment("路由")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Userid)
                    .HasColumnName("USERID")
                    .HasColumnType("varchar(50)")
                    .HasComment("用户ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Username)
                    .HasColumnName("USERNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("用户名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TJcygzbJfdh>(entity =>
            {
                entity.ToTable("t_jcygzb_jfdh");

                entity.HasComment("积分兑换");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("采集时间");

                entity.Property(e => e.Dhspid)
                    .HasColumnName("DHSPID")
                    .HasColumnType("int(11)")
                    .HasComment("兑换商品ID");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间")
                    .ValueGeneratedOnAddOrUpdate();

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrdz)
                    .HasColumnName("SHRDZ")
                    .HasColumnType("varchar(250)")
                    .HasComment("收货人地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrmc)
                    .HasColumnName("SHRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("收货人名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrsjh)
                    .HasColumnName("SHRSJH")
                    .HasColumnType("varchar(50)")
                    .HasComment("收货人手机号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjh)
                    .HasColumnName("SJH")
                    .HasColumnType("varchar(50)")
                    .HasComment("手机号（用户登录的）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TJcygzbJfdhsp>(entity =>
            {
                entity.ToTable("t_jcygzb_jfdhsp");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("int(50)")
                    .HasComment("ID");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasDefaultValueSql("''")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("采集时间");

                entity.Property(e => e.Dhjssj)
                    .HasColumnName("DHJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("商品兑换结束时间");

                entity.Property(e => e.Dhkssj)
                    .HasColumnName("DHKSSJ")
                    .HasColumnType("datetime")
                    .HasComment("商品兑换开始时间");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间")
                    .ValueGeneratedOnAddOrUpdate();

                entity.Property(e => e.Sfdq)
                    .HasColumnName("SFDQ")
                    .HasColumnType("varchar(5)")
                    .HasComment("是否当期商品")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("审核状态");

                entity.Property(e => e.Spdj)
                    .HasColumnName("SPDJ")
                    .HasColumnType("decimal(10,2)")
                    .HasDefaultValueSql("'0.00'")
                    .HasComment("商品单价");

                entity.Property(e => e.Spjf)
                    .HasColumnName("SPJF")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("商品积分");

                entity.Property(e => e.Splb)
                    .HasColumnName("SPLB")
                    .HasColumnType("varchar(10)")
                    .HasDefaultValueSql("''")
                    .HasComment("商品类别:1-服饰家居文化类,2-彩色神徽系列,3-集鸟系列,4-箱包类,5-首饰系列,6-丝巾,7-玉器仿制品,8-茶具类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Splbmc)
                    .HasColumnName("SPLBMC")
                    .HasColumnType("varchar(255)")
                    .HasDefaultValueSql("''")
                    .HasComment("商品类别名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Splqrs)
                    .HasColumnName("SPLQRS")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("商品领取人数");

                entity.Property(e => e.Splx)
                    .HasColumnName("SPLX")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("商品类型0-普通，1-只可第一名兑换");

                entity.Property(e => e.Spmc)
                    .HasColumnName("SPMC")
                    .HasColumnType("varchar(255)")
                    .HasDefaultValueSql("''")
                    .HasComment("商品名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Spsl)
                    .HasColumnName("SPSL")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("商品数量");

                entity.Property(e => e.Sptplj)
                    .HasColumnName("SPTPLJ")
                    .HasColumnType("varchar(255)")
                    .HasDefaultValueSql("''")
                    .HasComment("商品图片存储路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sptpmc)
                    .HasColumnName("SPTPMC")
                    .HasColumnType("varchar(255)")
                    .HasDefaultValueSql("''")
                    .HasComment("商品图片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Spxl)
                    .HasColumnName("SPXL")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("商品限量");

                entity.Property(e => e.Spzje)
                    .HasColumnName("SPZJE")
                    .HasColumnType("decimal(14,2)")
                    .HasDefaultValueSql("'0.00'")
                    .HasComment("商品总金额");
            });

            modelBuilder.Entity<TJcygzbJfenum>(entity =>
            {
                entity.ToTable("t_jcygzb_jfenum");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("int(11)")
                    .HasComment("ID");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("采集时间");

                entity.Property(e => e.Jfjz)
                    .HasColumnName("JFJZ")
                    .HasColumnType("int(11)")
                    .HasComment(@"积分机制，0-一次，1-每天每个数据id一次，2-无限
");

                entity.Property(e => e.Jfx)
                    .HasColumnName("JFX")
                    .HasColumnType("varchar(50)")
                    .HasComment("积分项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jfz)
                    .HasColumnName("JFZ")
                    .HasColumnType("int(11)")
                    .HasComment("积分值");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("审核状态");
            });

            modelBuilder.Entity<TJcygzbJfmx>(entity =>
            {
                entity.ToTable("t_jcygzb_jfmx");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("采集时间");

                entity.Property(e => e.Enumid)
                    .HasColumnName("ENUMID")
                    .HasColumnType("int(11)")
                    .HasComment("积分操作枚举ID");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjh)
                    .HasColumnName("SJH")
                    .HasColumnType("varchar(50)")
                    .HasComment("手机号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjjf)
                    .HasColumnName("SJJF")
                    .HasColumnType("int(11)")
                    .HasComment("实际积分值");

                entity.Property(e => e.Yhm)
                    .HasColumnName("YHM")
                    .HasColumnType("varchar(50)")
                    .HasComment("用户名")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<TJcygzbLoginLog>(entity =>
            {
                entity.ToTable("t_jcygzb_login_log");

                entity.HasComment("登录日志表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("采集时间");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间")
                    .ValueGeneratedOnAddOrUpdate();

                entity.Property(e => e.Sjh)
                    .HasColumnName("SJH")
                    .HasColumnType("varchar(50)")
                    .HasComment("手机号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yzm)
                    .HasColumnName("YZM")
                    .HasColumnType("varchar(50)")
                    .HasComment("验证码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TJcygzbOnoroffline>(entity =>
            {
                entity.ToTable("t_jcygzb_onoroffline");

                entity.HasComment("上线下线记录表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("采集时间");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型（下线0、上线1）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间")
                    .ValueGeneratedOnAddOrUpdate();

                entity.Property(e => e.Sjh)
                    .HasColumnName("SJH")
                    .HasColumnType("varchar(50)")
                    .HasComment("手机号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TJcygzbSs>(entity =>
            {
                entity.ToTable("t_jcygzb_ss");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("采集时间");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度（火星坐标系）");

                entity.Property(e => e.Jj)
                    .HasColumnName("JJ")
                    .HasColumnType("varchar(1000)")
                    .HasDefaultValueSql("''")
                    .HasComment("简介")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jyywsc)
                    .HasColumnName("JYYWSC")
                    .HasColumnType("varchar(255)")
                    .HasComment("建议游玩时长")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kfsj)
                    .HasColumnName("KFSJ")
                    .HasColumnType("varchar(255)")
                    .HasComment("开放时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型0-遗产要素;1-景点；2-餐饮；3-购物；4-观光车；5-停车场；6-卫生间；7-服务中心；8-其他")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(100)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("审核状态");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度（火星坐标系）");

                entity.Property(e => e.Wgsjd)
                    .HasColumnName("WGSJD")
                    .HasComment("WGS坐标系经度");

                entity.Property(e => e.Wgswd)
                    .HasColumnName("WGSWD")
                    .HasComment("WGS坐标纬度");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(500)")
                    .HasDefaultValueSql("''")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TJcygzbSsCopy20200521>(entity =>
            {
                entity.ToTable("t_jcygzb_ss_copy20200521");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("采集时间");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Jj)
                    .HasColumnName("JJ")
                    .HasColumnType("varchar(1000)")
                    .HasDefaultValueSql("''")
                    .HasComment("简介")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jyywsc)
                    .HasColumnName("JYYWSC")
                    .HasColumnType("varchar(255)")
                    .HasComment("建议游玩时长")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kfsj)
                    .HasColumnName("KFSJ")
                    .HasColumnType("varchar(255)")
                    .HasComment("开放时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型0-遗产要素;1-景点；2-餐饮；3-购物；4-观光车；5-停车场；6-卫生间；7-服务中心")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(100)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("审核状态");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(500)")
                    .HasDefaultValueSql("''")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TJcygzbSsfjb>(entity =>
            {
                entity.ToTable("t_jcygzb_ssfjb");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fjlj)
                    .HasColumnName("FJLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("附近路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fjlx)
                    .HasColumnName("FJLX")
                    .HasColumnType("varchar(4)")
                    .HasComment("附件类型，0-音频，1-图片，2-视频")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fjmc)
                    .HasColumnName("FJMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("附件名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(10)")
                    .HasComment("类型0-遗产要素;1-景点；2-餐饮；3-购物；4-观光车；5-停车场；6-卫生间；7-服务中心")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Sjid)
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TJcygzbStaticfilepath>(entity =>
            {
                entity.ToTable("t_jcygzb_staticfilepath");

                entity.HasComment("静态资源文件路径");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("采集时间");

                entity.Property(e => e.Mobilefilepath)
                    .HasColumnName("mobilefilepath")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("移动端URL的相对路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间")
                    .ValueGeneratedOnAddOrUpdate();

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("审核状态");

                entity.Property(e => e.Webfileppath)
                    .HasColumnName("webfileppath")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("Web端URL的相对路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TJcygzbTjZctj>(entity =>
            {
                entity.ToTable("t_jcygzb_tj_zctj");

                entity.HasComment("注册统计");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("采集时间");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Zcrs)
                    .HasColumnName("ZCRS")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("注册人数");

                entity.Property(e => e.Zxzsc)
                    .HasColumnName("ZXZSC")
                    .HasColumnType("bigint(20)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("在线总时长");
            });

            modelBuilder.Entity<TJcygzbWdfx>(entity =>
            {
                entity.ToTable("t_jcygzb_wdfx");

                entity.HasComment("我的发现");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bq)
                    .HasColumnName("BQ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("标签");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("采集时间");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("tinyint(4)")
                    .HasComment("类型（-1-负面、0-中性、1-正面）");

                entity.Property(e => e.Ms)
                    .HasColumnName("MS")
                    .HasColumnType("varchar(255)")
                    .HasComment("描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Myd)
                    .HasColumnName("MYD")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("满意度");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间")
                    .ValueGeneratedOnAddOrUpdate();

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(255)")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjh)
                    .HasColumnName("SJH")
                    .HasColumnType("varchar(50)")
                    .HasComment("手机号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wgs84jd)
                    .HasColumnName("WGS84JD")
                    .HasComment("WGS84经度");

                entity.Property(e => e.Wgs84wd)
                    .HasColumnName("WGS84WD")
                    .HasComment("WGS84纬度");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yhm)
                    .HasColumnName("YHM")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("用户名")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<TJcygzbWdfxDa>(entity =>
            {
                entity.ToTable("t_jcygzb_wdfx_da");

                entity.HasComment("我的发现-档案");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bq)
                    .HasColumnName("BQ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("标签");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("采集时间");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("tinyint(4)")
                    .HasComment("类型（-1-负面、0-中性、1-正面）");

                entity.Property(e => e.Ms)
                    .HasColumnName("MS")
                    .HasColumnType("varchar(255)")
                    .HasComment("描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Myd)
                    .HasColumnName("MYD")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("满意度");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间")
                    .ValueGeneratedOnAddOrUpdate();

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(255)")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjh)
                    .HasColumnName("SJH")
                    .HasColumnType("varchar(50)")
                    .HasComment("手机号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wgs84jd)
                    .HasColumnName("WGS84JD")
                    .HasComment("WGS84经度");

                entity.Property(e => e.Wgs84wd)
                    .HasColumnName("WGS84WD")
                    .HasComment("WGS84纬度");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yhm)
                    .HasColumnName("YHM")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("用户名")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<TJcygzbWdjf>(entity =>
            {
                entity.ToTable("t_jcygzb_wdjf");

                entity.HasComment("我的积分");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("采集时间");

                entity.Property(e => e.Drzxsc)
                    .HasColumnName("DRZXSC")
                    .HasDefaultValueSql("'1'")
                    .HasComment("当日在线时长");

                entity.Property(e => e.Hdjf)
                    .HasColumnName("HDJF")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("活动积分（有加减的）");

                entity.Property(e => e.Jf)
                    .HasColumnName("JF")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("积分（只增）");

                entity.Property(e => e.Ljzzxsc)
                    .HasColumnName("LJZZXSC")
                    .HasComment("累积总在线时长");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Scdlsj)
                    .HasColumnName("SCDLSJ")
                    .HasColumnType("datetime")
                    .HasComment("上次登录时间");

                entity.Property(e => e.Sfzx)
                    .HasColumnName("SFZX")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否在线");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjh)
                    .HasColumnName("SJH")
                    .HasColumnType("varchar(50)")
                    .HasComment("手机号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txurl)
                    .HasColumnName("TXURL")
                    .HasColumnType("varchar(500)")
                    .HasDefaultValueSql("''")
                    .HasComment("头像url")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yhm)
                    .HasColumnName("YHM")
                    .HasColumnType("varchar(50)")
                    .HasComment("用户名")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<TJcygzbYhzb>(entity =>
            {
                entity.HasKey(e => e.Uuid)
                    .HasName("PRIMARY");

                entity.ToTable("t_jcygzb_yhzb");

                entity.HasComment("用户坐标");

                entity.Property(e => e.Uuid)
                    .HasColumnName("UUID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("采集时间");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间")
                    .ValueGeneratedOnAddOrUpdate();

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("审核状态");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");
            });

            modelBuilder.Entity<TJcygzbZx>(entity =>
            {
                entity.ToTable("t_jcygzb_zx");

                entity.HasComment("资讯");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("采集时间");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间")
                    .ValueGeneratedOnAddOrUpdate();

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("审核状态");

                entity.Property(e => e.Zxbt)
                    .HasColumnName("ZXBT")
                    .HasColumnType("varchar(100)")
                    .HasDefaultValueSql("''")
                    .HasComment("资讯标题")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zxfbsj)
                    .HasColumnName("ZXFBSJ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("资讯发布时间(yyyy-MM-dd)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zxjj)
                    .HasColumnName("ZXJJ")
                    .HasColumnType("text")
                    .HasComment("资讯简介")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zxly)
                    .HasColumnName("ZXLY")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("资讯来源")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zxtplj)
                    .HasColumnName("ZXTPLJ")
                    .HasColumnType("varchar(255)")
                    .HasComment("资讯图片存储路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zxtpmc)
                    .HasColumnName("ZXTPMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("资讯图片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zxurl)
                    .HasColumnName("ZXURL")
                    .HasColumnType("varchar(255)")
                    .HasDefaultValueSql("''")
                    .HasComment("资讯详情url")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TJcygzbZxcz>(entity =>
            {
                entity.ToTable("t_jcygzb_zxcz");

                entity.HasComment("资讯操作");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("采集时间");

                entity.Property(e => e.Jfenumid)
                    .HasColumnName("JFENUMID")
                    .HasColumnType("int(11)")
                    .HasComment("积分操作枚举ID");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjh)
                    .HasColumnName("SJH")
                    .HasColumnType("varchar(50)")
                    .HasComment("手机号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zxid)
                    .HasColumnName("ZXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("资讯ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TLandcover>(entity =>
            {
                entity.ToTable("t_landcover");

                entity.HasComment("地表覆盖表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dlbm)
                    .HasColumnName("DLBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("大类编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlmc)
                    .HasColumnName("DLMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("大类名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlmj)
                    .HasColumnName("DLMJ")
                    .HasColumnType("double(20,5)")
                    .HasComment("地类面积");

                entity.Property(e => e.Dlsl)
                    .HasColumnName("DLSL")
                    .HasColumnType("int(11)")
                    .HasComment("地类数量");

                entity.Property(e => e.Gjdwlb)
                    .HasColumnName("GJDWLB")
                    .HasColumnType("varchar(10)")
                    .HasComment("根级地物类别(1-自然地物，2-人工地物)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lsqy)
                    .HasColumnName("LSQY")
                    .HasColumnType("varchar(255)")
                    .HasComment("隶属区域：遗产区还是缓冲区")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mjzb)
                    .HasColumnName("MJZB")
                    .HasColumnType("double(20,2)")
                    .HasComment("面积占比");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(50)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Xlbm)
                    .HasColumnName("XLBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("小类编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xlmc)
                    .HasColumnName("XLMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("小类名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TLandcoverCopy20200702>(entity =>
            {
                entity.ToTable("t_landcover_copy20200702");

                entity.HasComment("地表覆盖表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dlbm)
                    .HasColumnName("DLBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("大类编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlmc)
                    .HasColumnName("DLMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("大类名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlmj)
                    .HasColumnName("DLMJ")
                    .HasColumnType("double(20,5)")
                    .HasComment("地类面积");

                entity.Property(e => e.Dlsl)
                    .HasColumnName("DLSL")
                    .HasColumnType("int(11)")
                    .HasComment("地类数量");

                entity.Property(e => e.Lsqy)
                    .HasColumnName("LSQY")
                    .HasColumnType("varchar(255)")
                    .HasComment("隶属区域：遗产区还是缓冲区")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mjzb)
                    .HasColumnName("MJZB")
                    .HasColumnType("double(20,2)")
                    .HasComment("面积占比");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(50)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Xlbm)
                    .HasColumnName("XLBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("小类编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xlmc)
                    .HasColumnName("XLMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("小类名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TLandcoverCopy20200729>(entity =>
            {
                entity.ToTable("t_landcover_copy20200729");

                entity.HasComment("地表覆盖表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dlbm)
                    .HasColumnName("DLBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("大类编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlmc)
                    .HasColumnName("DLMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("大类名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlmj)
                    .HasColumnName("DLMJ")
                    .HasColumnType("double(20,5)")
                    .HasComment("地类面积");

                entity.Property(e => e.Dlsl)
                    .HasColumnName("DLSL")
                    .HasColumnType("int(11)")
                    .HasComment("地类数量");

                entity.Property(e => e.Lsqy)
                    .HasColumnName("LSQY")
                    .HasColumnType("varchar(255)")
                    .HasComment("隶属区域：遗产区还是缓冲区")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mjzb)
                    .HasColumnName("MJZB")
                    .HasColumnType("double(20,0)")
                    .HasComment("面积占比");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(50)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Xlbm)
                    .HasColumnName("XLBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("小类编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xlmc)
                    .HasColumnName("XLMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("小类名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TLandcoverType>(entity =>
            {
                entity.ToTable("t_landcover_type");

                entity.HasComment("地表覆盖类别表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Lb)
                    .HasColumnName("LB")
                    .HasColumnType("varchar(50)")
                    .HasComment("类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");
            });

            modelBuilder.Entity<TPgZrhjysj>(entity =>
            {
                entity.ToTable("t_pg_zrhjysj");

                entity.HasComment("自然环境元数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasComment("表ID(对应业务表元数据中ID)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bmc)
                    .HasColumnName("BMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("表名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dwzd)
                    .HasColumnName("DWZD")
                    .HasColumnType("varchar(50)")
                    .HasComment("点位字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jclx)
                    .HasColumnName("JCLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sfbhxgxfx)
                    .HasColumnName("SFBHXGXFX")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否病害相关性分析");

                entity.Property(e => e.Sjzd)
                    .HasColumnName("SJZD")
                    .HasColumnType("varchar(50)")
                    .HasComment("时间字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbxdw)
                    .HasColumnName("ZBXDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("指标项单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbxmc)
                    .HasColumnName("ZBXMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("指标项名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbxzd)
                    .HasColumnName("ZBXZD")
                    .HasColumnType("varchar(50)")
                    .HasComment("指标项字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TPgZrhjysjMx>(entity =>
            {
                entity.ToTable("t_pg_zrhjysj_mx");

                entity.HasComment("自然环境元数据明细");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzwjz)
                    .HasColumnName("BZWJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("相关性分析用到的表中外键值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzwjzd)
                    .HasColumnName("BZWJZD")
                    .HasColumnType("varchar(50)")
                    .HasComment("表中外键字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Ysjid)
                    .HasColumnName("YSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对应zrhjysj表的ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TRcxcZbx>(entity =>
            {
                entity.ToTable("t_rcxc_zbx");

                entity.HasComment("日常巡查的监测指标项");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Inputtime)
                    .HasColumnName("INPUTTIME")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("时间");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(30)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(10)")
                    .HasComment("父级ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TShhjCl>(entity =>
            {
                entity.ToTable("t_shhj_cl");

                entity.HasComment("社会环境-车辆监测");

                entity.HasIndex(e => new { e.Jcdid, e.Jcsj })
                    .HasName("JCDID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键标识")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Clsj)
                    .HasColumnName("CLSJ")
                    .HasColumnType("int(11)")
                    .HasComment("车辆数量");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcdid)
                    .HasColumnName("JCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(255)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");
            });

            modelBuilder.Entity<TShhjCz>(entity =>
            {
                entity.ToTable("t_shhj_cz");

                entity.HasComment("社会环境-城镇");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AreaCode)
                    .HasColumnName("AREA_CODE")
                    .HasColumnType("varchar(20)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Geom)
                    .HasColumnName("GEOM")
                    .HasColumnType("mediumtext")
                    .HasComment("geom")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Provincecode)
                    .HasColumnName("PROVINCECODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("省代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.ShapeArea)
                    .HasColumnName("SHAPE_AREA")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ShapeLeng)
                    .HasColumnName("SHAPE_LENG")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TShhjCzCopy20200707>(entity =>
            {
                entity.ToTable("t_shhj_cz_copy20200707");

                entity.HasComment("社会环境-城镇");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.AreaCode)
                    .HasColumnName("AREA_CODE")
                    .HasColumnType("varchar(20)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Backup)
                    .HasColumnName("BACKUP")
                    .HasColumnType("varchar(50)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Female)
                    .HasColumnName("FEMALE")
                    .HasColumnType("int(11)")
                    .HasComment("女");

                entity.Property(e => e.Geom)
                    .HasColumnName("GEOM")
                    .HasColumnType("mediumtext")
                    .HasComment("geom")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Group)
                    .HasColumnName("GROUP")
                    .HasColumnType("int(11)")
                    .HasComment("组");

                entity.Property(e => e.Households)
                    .HasColumnName("HOUSEHOLDS")
                    .HasColumnType("int(11)")
                    .HasComment("户数");

                entity.Property(e => e.Male)
                    .HasColumnName("MALE")
                    .HasColumnType("int(11)")
                    .HasComment("男");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Population)
                    .HasColumnName("POPULATION")
                    .HasColumnType("int(11)")
                    .HasComment("人口");

                entity.Property(e => e.Provincecode)
                    .HasColumnName("PROVINCECODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("省代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.ShapeArea)
                    .HasColumnName("SHAPE_AREA")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ShapeLeng)
                    .HasColumnName("SHAPE_LENG")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Totalrevenue)
                    .HasColumnName("TOTALREVENUE")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("总收入");
            });

            modelBuilder.Entity<TShhjCzsj>(entity =>
            {
                entity.ToTable("t_shhj_czsj");

                entity.HasComment("社会环境-城镇数据");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Backup)
                    .HasColumnName("BACKUP")
                    .HasColumnType("varchar(50)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Czid)
                    .HasColumnName("CZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("城镇ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Female)
                    .HasColumnName("FEMALE")
                    .HasColumnType("int(11)")
                    .HasComment("女");

                entity.Property(e => e.Group)
                    .HasColumnName("GROUP")
                    .HasColumnType("int(11)")
                    .HasComment("组");

                entity.Property(e => e.Households)
                    .HasColumnName("HOUSEHOLDS")
                    .HasColumnType("int(11)")
                    .HasComment("户数");

                entity.Property(e => e.Male)
                    .HasColumnName("MALE")
                    .HasColumnType("int(11)")
                    .HasComment("男");

                entity.Property(e => e.Population)
                    .HasColumnName("POPULATION")
                    .HasColumnType("int(11)")
                    .HasComment("人口");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Totalrevenue)
                    .HasColumnName("TOTALREVENUE")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("总收入");
            });

            modelBuilder.Entity<TTempCxph>(entity =>
            {
                entity.ToTable("t_temp_cxph");

                entity.HasComment("出行偏好");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cllx)
                    .HasColumnName("CLLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("车辆类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Czbl)
                    .HasColumnName("CZBL")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("乘坐比例");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'2'")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TTempFile>(entity =>
            {
                entity.ToTable("t_temp_file");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime(3)")
                    .HasComment("入库时间");

                entity.Property(e => e.Uid)
                    .HasColumnName("UID")
                    .HasColumnType("varchar(50)")
                    .HasComment("关联ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wjdx)
                    .HasColumnName("WJDX")
                    .HasColumnType("decimal(15,2)")
                    .HasComment("文件大小(KB)");

                entity.Property(e => e.Wjlj)
                    .HasColumnName("WJLJ")
                    .HasColumnType("varchar(250)")
                    .HasComment("文件路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wjlx)
                    .HasColumnName("WJLX")
                    .HasColumnType("varchar(10)")
                    .HasComment("文件类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wjmc)
                    .HasColumnName("WJMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("文件名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TTempFkhx>(entity =>
            {
                entity.ToTable("t_temp_fkhx");

                entity.HasComment("访客画像(近一周)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Femalerate)
                    .HasColumnName("FEMALERATE")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("女性游客比例");

                entity.Property(e => e.From19to25)
                    .HasColumnName("FROM19TO25")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("19-25比例");

                entity.Property(e => e.From26to35)
                    .HasColumnName("FROM26TO35")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("26-35比例");

                entity.Property(e => e.From36to45)
                    .HasColumnName("FROM36TO45")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("36-45比例");

                entity.Property(e => e.From46to55)
                    .HasColumnName("FROM46TO55")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("46-55比例");

                entity.Property(e => e.Gt55)
                    .HasColumnName("GT55")
                    .HasColumnType("decimal(10,2)")
                    .HasComment(">55比例");

                entity.Property(e => e.Lt19)
                    .HasColumnName("LT19")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("<19比例");

                entity.Property(e => e.Malerate)
                    .HasColumnName("MALERATE")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("男性游客比例");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'2'")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Unknownage)
                    .HasColumnName("UNKNOWNAGE")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("未知年龄比例");

                entity.Property(e => e.Unknownrate)
                    .HasColumnName("UNKNOWNRATE")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("未知游客性别比例");
            });

            modelBuilder.Entity<TTempFkhxCopy20200715>(entity =>
            {
                entity.ToTable("t_temp_fkhx_copy20200715");

                entity.HasComment("访客画像(近一周)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Femalerate)
                    .HasColumnName("FEMALERATE")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("女性游客比例");

                entity.Property(e => e.From19to25)
                    .HasColumnName("FROM19TO25")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("19-25比例");

                entity.Property(e => e.From26to35)
                    .HasColumnName("FROM26TO35")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("26-35比例");

                entity.Property(e => e.From36to45)
                    .HasColumnName("FROM36TO45")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("36-45比例");

                entity.Property(e => e.From46to55)
                    .HasColumnName("FROM46TO55")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("46-55比例");

                entity.Property(e => e.Gt55)
                    .HasColumnName("GT55")
                    .HasColumnType("decimal(10,2)")
                    .HasComment(">55比例");

                entity.Property(e => e.Lt19)
                    .HasColumnName("LT19")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("<19比例");

                entity.Property(e => e.Malerate)
                    .HasColumnName("MALERATE")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("男性游客比例");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'2'")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Unknownage)
                    .HasColumnName("UNKNOWNAGE")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("未知年龄比例");

                entity.Property(e => e.Unknownrate)
                    .HasColumnName("UNKNOWNRATE")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("未知游客性别比例");
            });

            modelBuilder.Entity<TTempGgcl>(entity =>
            {
                entity.ToTable("t_temp_ggcl");

                entity.HasComment("观光车辆使用");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Allusesightcarnum)
                    .HasColumnName("ALLUSESIGHTCARNUM")
                    .HasColumnType("int(11)")
                    .HasComment("总量");

                entity.Property(e => e.Chargingcarnum)
                    .HasColumnName("CHARGINGCARNUM")
                    .HasColumnType("varchar(50)")
                    .HasComment("充电车数量")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Faultsightcarnum)
                    .HasColumnName("FAULTSIGHTCARNUM")
                    .HasColumnType("int(11)")
                    .HasComment("挂故障");

                entity.Property(e => e.Inusesightcarnum)
                    .HasColumnName("INUSESIGHTCARNUM")
                    .HasColumnType("int(11)")
                    .HasComment("使用");

                entity.Property(e => e.Remainsightcarnum)
                    .HasColumnName("REMAINSIGHTCARNUM")
                    .HasColumnType("int(11)")
                    .HasComment("剩余(空闲中)");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'2'")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TTempJcsbxx>(entity =>
            {
                entity.ToTable("t_temp_jcsbxx");

                entity.HasComment("基础设备信息(停车位/闸机/观光车)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Inusegatenum)
                    .HasColumnName("INUSEGATENUM")
                    .HasColumnType("int(11)")
                    .HasComment("闸机-使用中");

                entity.Property(e => e.Inuseparknum)
                    .HasColumnName("INUSEPARKNUM")
                    .HasColumnType("int(11)")
                    .HasComment("停车位-使用中");

                entity.Property(e => e.Inusesightcarnum)
                    .HasColumnName("INUSESIGHTCARNUM")
                    .HasColumnType("int(11)")
                    .HasComment("观光车-使用中");

                entity.Property(e => e.Remaingatenum)
                    .HasColumnName("REMAINGATENUM")
                    .HasColumnType("int(11)")
                    .HasComment("闸机-剩余");

                entity.Property(e => e.Remainparknum)
                    .HasColumnName("REMAINPARKNUM")
                    .HasColumnType("int(11)")
                    .HasComment("停车位-剩余");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'2'")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TTempKyjgcs>(entity =>
            {
                entity.ToTable("t_temp_kyjgcs");

                entity.HasComment("客源结构(近一周)城市");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bszb)
                    .HasColumnName("BSZB")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("本省占比");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dyfb)
                    .HasColumnName("DYFB")
                    .HasColumnType("varchar(50)")
                    .HasComment("地域分布(城市)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'2'")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TTempKyjgcsCopy20200715>(entity =>
            {
                entity.ToTable("t_temp_kyjgcs_copy20200715");

                entity.HasComment("客源结构(近一周)城市");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bszb)
                    .HasColumnName("BSZB")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("本省占比");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dyfb)
                    .HasColumnName("DYFB")
                    .HasColumnType("varchar(50)")
                    .HasComment("地域分布(城市)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'2'")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TTempKyjgs>(entity =>
            {
                entity.ToTable("t_temp_kyjgs");

                entity.HasComment("客源结构(近一周)省");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dyfb)
                    .HasColumnName("DYFB")
                    .HasColumnType("varchar(50)")
                    .HasComment("地域分布(省)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qgzb)
                    .HasColumnName("QGZB")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("全国占比");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'2'")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TTempKyjgsCopy20200714>(entity =>
            {
                entity.ToTable("t_temp_kyjgs_copy20200714");

                entity.HasComment("客源结构(近一周)省");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dyfb)
                    .HasColumnName("DYFB")
                    .HasColumnType("varchar(50)")
                    .HasComment("地域分布(省)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qgzb)
                    .HasColumnName("QGZB")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("全国占比");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'2'")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TTempKyjgsCopy20200715>(entity =>
            {
                entity.ToTable("t_temp_kyjgs_copy20200715");

                entity.HasComment("客源结构(近一周)省");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dyfb)
                    .HasColumnName("DYFB")
                    .HasColumnType("varchar(50)")
                    .HasComment("地域分布(省)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qgzb)
                    .HasColumnName("QGZB")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("全国占比");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'2'")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TTempRkll>(entity =>
            {
                entity.ToTable("t_temp_rkll");

                entity.HasComment("入口流量");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Rkmc)
                    .HasColumnName("RKMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("入口名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rkrsbl)
                    .HasColumnName("RKRSBL")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("入口人数比例");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'2'")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TTempRkllCopy20200714>(entity =>
            {
                entity.ToTable("t_temp_rkll_copy20200714");

                entity.HasComment("入口流量");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Rkmc)
                    .HasColumnName("RKMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("入口名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rkrsbl)
                    .HasColumnName("RKRSBL")
                    .HasColumnType("decimal(10,2)")
                    .HasComment("入口人数比例");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'2'")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TTempYjzh>(entity =>
            {
                entity.ToTable("t_temp_yjzh");

                entity.HasComment("应急指挥");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Emergencyindex)
                    .HasColumnName("EMERGENCYINDEX")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Emergencytype)
                    .HasColumnName("EMERGENCYTYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型(bus_station=观光车站点、emergency_exit=应急出口、fire_evacuation_station=消防避难点)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Latitude)
                    .HasColumnName("LATITUDE")
                    .HasColumnType("varchar(50)")
                    .HasComment("纬度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Longitude)
                    .HasColumnName("LONGITUDE")
                    .HasColumnType("varchar(50)")
                    .HasComment("经度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'2'")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TTempYkll>(entity =>
            {
                entity.ToTable("t_temp_ykll");

                entity.HasComment("游客流量");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Preentrancecount)
                    .HasColumnName("PREENTRANCECOUNT")
                    .HasColumnType("int(11)")
                    .HasComment("当日预约人数");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'2'")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Totalcount)
                    .HasColumnName("TOTALCOUNT")
                    .HasColumnType("int(11)")
                    .HasComment("当日到达人数");
            });

            modelBuilder.Entity<TTempYqrs>(entity =>
            {
                entity.ToTable("t_temp_yqrs");

                entity.HasComment("舆情热搜");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Rsmc)
                    .HasColumnName("RSMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("热搜名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rssl)
                    .HasColumnName("RSSL")
                    .HasColumnType("int(11)")
                    .HasComment("热搜数量");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'2'")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TTempYqrsCopy20200715>(entity =>
            {
                entity.ToTable("t_temp_yqrs_copy20200715");

                entity.HasComment("舆情热搜");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Rsmc)
                    .HasColumnName("RSMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("热搜名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rssl)
                    .HasColumnName("RSSL")
                    .HasColumnType("int(11)")
                    .HasComment("热搜数量");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'2'")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TYcgk>(entity =>
            {
                entity.ToTable("t_ycgk");

                entity.HasComment("遗产概况表");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Ycjz)
                    .HasColumnName("YCJZ")
                    .HasColumnType("text")
                    .HasComment("遗产价值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycqid)
                    .HasColumnName("YCQID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产区ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TYcysqdYsm>(entity =>
            {
                entity.ToTable("t_ycysqd_ysm");

                entity.HasComment("遗产要素清单-要素面");

                entity.HasIndex(e => e.Ycysid)
                    .HasName("ycysid");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fid)
                    .HasColumnName("FID")
                    .HasColumnType("varchar(20)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Geometry)
                    .HasColumnName("GEOMETRY")
                    .HasColumnType("mediumtext")
                    .HasComment("geo-json")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Layer)
                    .HasColumnName("LAYER")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.ShapeArea)
                    .HasColumnName("SHAPE_AREA")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ShapeLeng)
                    .HasColumnName("SHAPE_LENG")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Type)
                    .HasColumnName("TYPE")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TZrhjQx>(entity =>
            {
                entity.ToTable("t_zrhj_qx");

                entity.HasComment("气象");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dqqw)
                    .HasColumnName("DQQW")
                    .HasColumnType("varchar(20)")
                    .HasComment("当前气温")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dqsd)
                    .HasColumnName("DQSD")
                    .HasColumnType("varchar(20)")
                    .HasComment("当前湿度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbsj)
                    .HasColumnName("FBSJ")
                    .HasColumnType("datetime")
                    .HasComment("发布时间");

                entity.Property(e => e.Fl)
                    .HasColumnName("FL")
                    .HasColumnType("varchar(20)")
                    .HasComment("风力")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fx)
                    .HasColumnName("FX")
                    .HasColumnType("varchar(20)")
                    .HasComment("风向")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glycbtid)
                    .HasColumnName("GLYCBTID")
                    .HasColumnType("varchar(50)")
                    .HasComment("关联遗产本体ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdmc)
                    .HasColumnName("JCDMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jyl1h)
                    .HasColumnName("JYL_1H")
                    .HasColumnType("varchar(20)")
                    .HasComment("一小时内的降雨量")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jyl24h)
                    .HasColumnName("JYL_24H")
                    .HasColumnType("varchar(20)")
                    .HasComment("24小时内降雨量")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Xzqbm)
                    .HasColumnName("XZQBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("行政区编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycdsjid)
                    .HasColumnName("YCDSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产地数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TabCategory>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tab_category");

                entity.HasComment("移动端监测项");

                entity.Property(e => e.Clickable)
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可点击");

                entity.Property(e => e.Code)
                    .HasColumnType("varchar(50)")
                    .HasComment("表名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ElmentType).HasColumnType("tinyint(4)");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxbmc)
                    .HasColumnName("JCDXBMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象表名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzbmc)
                    .HasColumnName("JCWZBMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置表名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ParentId)
                    .HasColumnName("ParentID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.TaskType).HasColumnType("tinyint(4)");
            });

            modelBuilder.Entity<Temp>(entity =>
            {
                entity.ToTable("temp");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("int(50)");

                entity.Property(e => e.Des)
                    .HasColumnName("des")
                    .HasColumnType("varchar(50)")
                    .HasComment("描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sz)
                    .HasColumnName("sz")
                    .HasColumnType("int(11)");
            });

            modelBuilder.Entity<Temp2018年8月3日>(entity =>
            {
                entity.HasKey(e => e.Sbid)
                    .HasName("PRIMARY");

                entity.ToTable("temp2018年8月3日");

                entity.Property(e => e.Sbid)
                    .HasColumnName("SBID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ip)
                    .HasColumnName("IP")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rtmp)
                    .HasColumnName("RTMP")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbmc)
                    .HasColumnName("SBMC")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfjt)
                    .HasColumnName("SFJT")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssqy)
                    .HasColumnName("SSQY")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<TempBy34level>(entity =>
            {
                entity.ToTable("temp_by34level");

                entity.HasComment("by34j");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("int(50)")
                    .HasComment("主键");

                entity.Property(e => e.Jsr)
                    .HasColumnName("JSR")
                    .HasColumnType("varchar(50)")
                    .HasComment("接收人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jsrbmid)
                    .HasColumnName("JSRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("接收人部门ID（接收部门（单位））")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbfs)
                    .HasColumnName("SBFS")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'电话'")
                    .HasComment("上报方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbr)
                    .HasColumnName("SBR")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'杨鑫'")
                    .HasComment("上报人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbsj)
                    .HasColumnName("SBSJ")
                    .HasColumnType("datetime")
                    .HasComment("上报时间");
            });

            modelBuilder.Entity<TempBy34levelgzjc>(entity =>
            {
                entity.ToTable("temp_by34levelgzjc");

                entity.HasComment("by34jgzjc");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcjgms)
                    .HasColumnName("xcjgms")
                    .HasColumnType("varchar(500)")
                    .HasComment("巡查结果描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcr)
                    .HasColumnName("xcr")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'杨鑫'")
                    .HasComment("巡查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<Tempjzjc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tempjzjc");

                entity.Property(e => e.Bh)
                    .HasColumnName("BH")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasColumnType("double(30,14)");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasColumnType("double(30,14)");
            });

            modelBuilder.Entity<Temptb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("temptb");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qksm)
                    .HasColumnName("QKSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("情况说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzlyurl)
                    .HasColumnName("TZLYURL")
                    .HasColumnType("varchar(500)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysbczt)
                    .HasColumnName("YCYSBCZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素保存状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjdj)
                    .HasColumnName("YJDJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjsfjc)
                    .HasColumnName("YJSFJC")
                    .HasColumnType("char(1)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("预警是否解除")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxxid)
                    .HasColumnName("YJXXID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ylt)
                    .HasColumnName("YLT")
                    .HasColumnType("varchar(200)")
                    .HasComment("预览图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ylturl)
                    .HasColumnName("YLTURL")
                    .HasColumnType("varchar(503)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<Test>(entity =>
            {
                entity.ToTable("test");

                entity.HasComment("测试表");

                entity.HasIndex(e => new { e.F2, e.F1 })
                    .HasName("F2-F1");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Date1)
                    .HasColumnName("date1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Date2)
                    .HasColumnName("date2")
                    .HasColumnType("datetime");

                entity.Property(e => e.F1)
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.F2)
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<Testtemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("testtemp");

                entity.HasComment("临时表测试");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fswzwz)
                    .HasColumnName("FSWZWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生地点（位置）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjms)
                    .HasColumnName("SJMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("事件描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycsj)
                    .HasColumnName("YCSJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("异常事件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<Testtemp1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("testtemp1");

                entity.HasComment("临时表测试1,划分异常区域，采集解除数据");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("创建时间");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VBhdcWdlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_bhdc_wdlysj");

                entity.Property(e => e.Bbh)
                    .HasColumnName("BBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("版本号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhczzt)
                    .HasColumnName("BHCZZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害存在状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhlx)
                    .HasColumnName("BHLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhsyt)
                    .HasColumnName("BHSYT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhztt)
                    .HasColumnName("BHZTT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害状态图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcff)
                    .HasColumnName("JCFF")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测方法")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jczq)
                    .HasColumnName("JCZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mid)
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VBhdcWdlysjBak>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_bhdc_wdlysj_bak");

                entity.Property(e => e.Bbh)
                    .HasColumnName("BBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("版本号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhczzt)
                    .HasColumnName("BHCZZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害存在状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhlx)
                    .HasColumnName("BHLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhsyt)
                    .HasColumnName("BHSYT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhztt)
                    .HasColumnName("BHZTT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害状态图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcff)
                    .HasColumnName("JCFF")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测方法")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jczq)
                    .HasColumnName("JCZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mid)
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VBhfbtjcsjTzlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_bhfbtjcsj_tzlysj");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Chr)
                    .HasColumnName("CHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("测绘人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Chzrdw)
                    .HasColumnName("CHZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("测绘责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("date")
                    .HasComment("创建时间");

                entity.Property(e => e.Ctshr)
                    .HasColumnName("CTSHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("成图审核人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ctshsj)
                    .HasColumnName("CTSHSJ")
                    .HasColumnType("datetime")
                    .HasComment("成图审核时间");

                entity.Property(e => e.Ctsj)
                    .HasColumnName("CTSJ")
                    .HasColumnType("datetime")
                    .HasComment("成图时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("date")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fgfw)
                    .HasColumnName("FGFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("覆盖范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mid)
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("date")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(50)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tfcc)
                    .HasColumnName("TFCC")
                    .HasColumnType("varchar(100)")
                    .HasComment("图幅尺寸")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("date")
                    .HasComment("提交时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Tzfj)
                    .HasColumnName("TZFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("图纸附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzgs)
                    .HasColumnName("TZGS")
                    .HasColumnType("varchar(20)")
                    .HasComment("图纸格式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzjz)
                    .HasColumnName("TZJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("图纸介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzlb)
                    .HasColumnName("TZLB")
                    .HasColumnType("varchar(200)")
                    .HasComment("图纸类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzmc)
                    .HasColumnName("TZMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("图纸名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tznrlx)
                    .HasColumnName("TZNRLX")
                    .HasColumnType("varchar(100)")
                    .HasComment("图纸内容类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzsxblc)
                    .HasColumnName("TZSXBLC")
                    .HasColumnType("varchar(20)")
                    .HasComment("图纸属性比例尺")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzcs)
                    .HasColumnName("XZCS")
                    .HasColumnType("int(11)")
                    .HasComment("下载次数");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytbh)
                    .HasColumnName("YTBH")
                    .HasColumnType("varchar(200)")
                    .HasComment("原图编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytblc)
                    .HasColumnName("YTBLC")
                    .HasColumnType("varchar(50)")
                    .HasComment("原图比例尺")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytfj)
                    .HasColumnName("YTFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("原图附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytmc)
                    .HasColumnName("YTMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("原图名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytscdw)
                    .HasColumnName("YTSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原图收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytzbx)
                    .HasColumnName("YTZBX")
                    .HasColumnType("varchar(50)")
                    .HasComment("原图坐标系")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytztdw)
                    .HasColumnName("YTZTDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("原图制图单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytztsj)
                    .HasColumnName("YTZTSJ")
                    .HasColumnType("datetime")
                    .HasComment("原图制图时间");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VBhjctCzbh>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_bhjct_czbh");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tcmc)
                    .HasColumnName("TCMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("图层名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VBhqhtjcsjTzlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_bhqhtjcsj_tzlysj");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Chr)
                    .HasColumnName("CHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("测绘人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Chzrdw)
                    .HasColumnName("CHZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("测绘责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("date")
                    .HasComment("创建时间");

                entity.Property(e => e.Ctshr)
                    .HasColumnName("CTSHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("成图审核人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ctshsj)
                    .HasColumnName("CTSHSJ")
                    .HasColumnType("datetime")
                    .HasComment("成图审核时间");

                entity.Property(e => e.Ctsj)
                    .HasColumnName("CTSJ")
                    .HasColumnType("datetime")
                    .HasComment("成图时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("date")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fgfw)
                    .HasColumnName("FGFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("覆盖范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mid)
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("date")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(50)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tfcc)
                    .HasColumnName("TFCC")
                    .HasColumnType("varchar(100)")
                    .HasComment("图幅尺寸")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("date")
                    .HasComment("提交时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Tzfj)
                    .HasColumnName("TZFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("图纸附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzgs)
                    .HasColumnName("TZGS")
                    .HasColumnType("varchar(20)")
                    .HasComment("图纸格式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzjz)
                    .HasColumnName("TZJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("图纸介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzlb)
                    .HasColumnName("TZLB")
                    .HasColumnType("varchar(200)")
                    .HasComment("图纸类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzmc)
                    .HasColumnName("TZMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("图纸名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tznrlx)
                    .HasColumnName("TZNRLX")
                    .HasColumnType("varchar(100)")
                    .HasComment("图纸内容类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzsxblc)
                    .HasColumnName("TZSXBLC")
                    .HasColumnType("varchar(20)")
                    .HasComment("图纸属性比例尺")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzcs)
                    .HasColumnName("XZCS")
                    .HasColumnType("int(11)")
                    .HasComment("下载次数");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytbh)
                    .HasColumnName("YTBH")
                    .HasColumnType("varchar(200)")
                    .HasComment("原图编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytblc)
                    .HasColumnName("YTBLC")
                    .HasColumnType("varchar(50)")
                    .HasComment("原图比例尺")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytfj)
                    .HasColumnName("YTFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("原图附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytmc)
                    .HasColumnName("YTMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("原图名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytscdw)
                    .HasColumnName("YTSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原图收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytzbx)
                    .HasColumnName("YTZBX")
                    .HasColumnType("varchar(50)")
                    .HasComment("原图坐标系")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytztdw)
                    .HasColumnName("YTZTDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("原图制图单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytztsj)
                    .HasColumnName("YTZTSJ")
                    .HasColumnType("datetime")
                    .HasComment("原图制图时间");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VBhxjzNewestinfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_bhxjz_newestinfo");

                entity.Property(e => e.Jd)
                    .HasColumnName("jd")
                    .HasComment("精度");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfcj)
                    .HasColumnName("sfcj")
                    .HasColumnType("int(1)");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjbbmc)
                    .IsRequired()
                    .HasColumnName("sjbbmc")
                    .HasColumnType("varchar(21)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("sjid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("wd")
                    .HasComment("纬度");

                entity.Property(e => e.Yjdj)
                    .HasColumnName("yjdj")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywzj)
                    .IsRequired()
                    .HasColumnName("ywzj")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VBhxjzNewestupdatetime>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_bhxjz_newestupdatetime");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dxid)
                    .HasColumnName("dxid")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VCljqrLfpoints>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_cljqr_lfpoints");

                entity.Property(e => e.Csjl)
                    .HasColumnName("csjl")
                    .HasColumnType("double(10,4)")
                    .HasComment("两点间初始距离（为性能考虑而缓存中间值）");

                entity.Property(e => e.CsjlDt)
                    .HasColumnName("csjl_dt")
                    .HasColumnType("double(21,4)");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(101)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pic)
                    .HasColumnName("pic")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测点位置示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pot1)
                    .HasColumnName("pot1")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点1ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pot2)
                    .HasColumnName("pot2")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点2ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("ycysid")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VCljqrsj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_cljqrsj");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhid)
                    .HasColumnName("bhid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("int(11)");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ptid)
                    .HasColumnName("ptid")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否已对接");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime");

                entity.Property(e => e.X)
                    .HasColumnName("x")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Y)
                    .HasColumnName("y")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Z)
                    .HasColumnName("z")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VDhjyWdlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_dhjy_wdlysj");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gbsj)
                    .HasColumnName("GBSJ")
                    .HasColumnType("datetime")
                    .HasComment("公布时间");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lycs)
                    .HasColumnName("LYCS")
                    .HasColumnType("int(100)")
                    .HasComment("利用次数");

                entity.Property(e => e.Mid)
                    .IsRequired()
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccbdlj)
                    .HasColumnName("SJCCBDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccydlj)
                    .HasColumnName("SJCCYDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(20)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Wdbb)
                    .HasColumnName("WDBB")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdbzdw)
                    .HasColumnName("WDBZDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("文档编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdcjsj)
                    .HasColumnName("WDCJSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档创建时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdjz)
                    .HasColumnName("WDJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdlx)
                    .HasColumnName("WDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdmc)
                    .HasColumnName("WDMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdscsj)
                    .HasColumnName("WDSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档上传时间");

                entity.Property(e => e.Wdsddw)
                    .HasColumnName("WDSDDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdsdsj)
                    .HasColumnName("WDSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档审定时间");

                entity.Property(e => e.Wdsdz)
                    .HasColumnName("WDSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdzz)
                    .HasColumnName("WDZZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档作者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yswdbh)
                    .HasColumnName("YSWDBH")
                    .HasColumnType("varchar(100)")
                    .HasComment("原始文档编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdd)
                    .HasColumnName("YWDSCDD")
                    .HasColumnType("varchar(100)")
                    .HasComment("原文档收藏地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdw)
                    .HasColumnName("YWDSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原文档收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscrq)
                    .HasColumnName("YWDSCRQ")
                    .HasColumnType("datetime")
                    .HasComment("原文档生成日期");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VDqbgWdlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_dqbg_wdlysj");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lycs)
                    .HasColumnName("LYCS")
                    .HasColumnType("int(100)")
                    .HasComment("利用次数");

                entity.Property(e => e.Mid)
                    .IsRequired()
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccbdlj)
                    .HasColumnName("SJCCBDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccydlj)
                    .HasColumnName("SJCCYDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(20)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Wdbb)
                    .HasColumnName("WDBB")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdbzdw)
                    .HasColumnName("WDBZDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("文档编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdcjsj)
                    .HasColumnName("WDCJSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档创建时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdjz)
                    .HasColumnName("WDJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdlx)
                    .HasColumnName("WDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdmc)
                    .HasColumnName("WDMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdscsj)
                    .HasColumnName("WDSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档上传时间");

                entity.Property(e => e.Wdsddw)
                    .HasColumnName("WDSDDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdsdsj)
                    .HasColumnName("WDSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档审定时间");

                entity.Property(e => e.Wdsdz)
                    .HasColumnName("WDSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdzz)
                    .HasColumnName("WDZZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档作者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yswdbh)
                    .HasColumnName("YSWDBH")
                    .HasColumnType("varchar(100)")
                    .HasComment("原始文档编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdd)
                    .HasColumnName("YWDSCDD")
                    .HasColumnType("varchar(100)")
                    .HasComment("原文档收藏地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdw)
                    .HasColumnName("YWDSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原文档收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscrq)
                    .HasColumnName("YWDSCRQ")
                    .HasColumnType("datetime")
                    .HasComment("原文档生成日期");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VDwlmNewestinfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_dwlm_newestinfo");

                entity.Property(e => e.Jd)
                    .HasColumnName("jd")
                    .HasComment("精度");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfcj)
                    .HasColumnName("sfcj")
                    .HasColumnType("int(1)");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjbbmc)
                    .IsRequired()
                    .HasColumnName("sjbbmc")
                    .HasColumnType("varchar(12)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("sjid")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("wd")
                    .HasComment("纬度");

                entity.Property(e => e.Yjdj)
                    .HasColumnName("yjdj")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywzj)
                    .IsRequired()
                    .HasColumnName("ywzj")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VDwlmNewestupdatetime>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_dwlm_newestupdatetime");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dxid)
                    .HasColumnName("dxid")
                    .HasColumnType("varchar(50)")
                    .HasComment("照片区域")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcBhTotalBhdcjcgzqkjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_bh_total_bhdcjcgzqkjl");

                entity.Property(e => e.Bhsyt)
                    .HasColumnName("BHSYT")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxbid)
                    .IsRequired()
                    .HasColumnName("JCDXBID")
                    .HasColumnType("varchar(2)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jcdxfamc)
                    .HasColumnName("JCDXFAMC")
                    .HasColumnType("varchar(54)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxid)
                    .IsRequired()
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxlx)
                    .HasColumnName("JCDXLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzid)
                    .HasColumnName("JCPZID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzbid)
                    .HasColumnName("JCWZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzmc)
                    .HasColumnName("JCWZMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzms)
                    .HasColumnName("JCWZMS")
                    .HasColumnType("text")
                    .HasComment("监测位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzsyt)
                    .HasColumnName("JCWZSYT")
                    .HasColumnType("varchar(200)")
                    .HasComment("监测位置示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("病害经度");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lxzd)
                    .IsRequired()
                    .HasColumnName("LXZD")
                    .HasColumnType("varchar(4)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ms)
                    .HasColumnName("MS")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(255)")
                    .HasComment("排序");

                entity.Property(e => e.Sbids)
                    .HasColumnName("SBIDS")
                    .HasColumnType("varchar(500)")
                    .HasComment("设备ID集（以“，”隔开）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasComment("监测周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrmc)
                    .HasColumnName("SJCJFZRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tcmc)
                    .HasColumnName("TCMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("对应的图层照片记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcBhgcJcwzJcpz>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_bhgc_jcwz_jcpz");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxbid)
                    .IsRequired()
                    .HasColumnName("JCDXBID")
                    .HasColumnType("varchar(2)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jcdxfamc)
                    .HasColumnName("JCDXFAMC")
                    .HasColumnType("varchar(54)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxid)
                    .IsRequired()
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxlx)
                    .HasColumnName("JCDXLX")
                    .HasMaxLength(0)
                    .IsFixedLength();

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzid)
                    .HasColumnName("JCPZID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzbid)
                    .HasColumnName("JCWZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzmc)
                    .HasColumnName("JCWZMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzms)
                    .HasColumnName("JCWZMS")
                    .HasColumnType("text")
                    .HasComment("监测位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzsyt)
                    .HasColumnName("JCWZSYT")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lxzd)
                    .HasColumnName("LXZD")
                    .HasMaxLength(0)
                    .IsFixedLength();

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(255)")
                    .HasComment("排序");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasComment("监测周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrmc)
                    .HasColumnName("SJCJFZRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcBhgcxfdbhxx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_bhgcxfdbhxx");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhczzt)
                    .HasColumnName("BHCZZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害存在状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhgcxfdbhid)
                    .HasColumnName("BHGCXFDBHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护工程修复的病害ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhlx)
                    .HasColumnName("BHLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhxmid)
                    .HasColumnName("BHXMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护项目ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xfhzp)
                    .HasColumnName("XFHZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("修复后照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xfsj)
                    .HasColumnName("XFSJ")
                    .HasColumnType("datetime")
                    .HasComment("修复时间");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("XMMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcBhgcxfdbhxxJcpz>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_bhgcxfdbhxx_jcpz");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxbid)
                    .IsRequired()
                    .HasColumnName("JCDXBID")
                    .HasColumnType("varchar(2)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jcdxfamc)
                    .HasColumnName("JCDXFAMC")
                    .HasColumnType("varchar(62)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxid)
                    .IsRequired()
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxlx)
                    .HasColumnName("JCDXLX")
                    .HasMaxLength(0)
                    .IsFixedLength();

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzid)
                    .HasColumnName("JCPZID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzbid)
                    .HasColumnName("JCWZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzmc)
                    .HasColumnName("JCWZMC")
                    .HasMaxLength(0)
                    .IsFixedLength();

                entity.Property(e => e.Jcwzms)
                    .HasColumnName("JCWZMS")
                    .HasMaxLength(0)
                    .IsFixedLength();

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lxzd)
                    .HasColumnName("LXZD")
                    .HasMaxLength(0)
                    .IsFixedLength();

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(58)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasComment("监测周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrmc)
                    .HasColumnName("SJCJFZRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcBhgcxfxggzjc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_bhgcxfxggzjc");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhczzt)
                    .HasColumnName("BHCZZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害存在状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhlx)
                    .HasColumnName("BHLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Bhwz)
                    .HasColumnName("BHWZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("病害位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(500)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pglx)
                    .HasColumnName("PGLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xfdbhjlid)
                    .HasColumnName("XFDBHJLID")
                    .HasColumnType("varchar(50)")
                    .HasComment("修复的病害记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zp)
                    .HasColumnName("ZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcBhgljfYflxjf>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_bhgljf_yflxjf");

                entity.Property(e => e.Bhgljf)
                    .HasColumnName("bhgljf")
                    .HasComment("保护管理经费");

                entity.Property(e => e.Bhgljflx)
                    .HasColumnName("bhgljflx")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护管理经费类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yf)
                    .HasColumnName("yf")
                    .HasColumnType("int(2)");
            });

            modelBuilder.Entity<VGlyjcBhkzztpg>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_bhkzztpg");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhdid)
                    .HasColumnName("BHDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhkzztpg)
                    .HasColumnName("BHKZZTPG")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害控制状态评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhlx)
                    .HasColumnName("BHLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<VGlyjcBhxjBcjcdx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_bhxj_bcjcdx");

                entity.Property(e => e.Bhxysms)
                    .HasColumnName("BHXYSMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("不和谐因素描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fsbd)
                    .HasColumnName("FSBD")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生变动")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("精度");

                entity.Property(e => e.Jgnd)
                    .HasColumnName("JGND")
                    .HasColumnType("varchar(50)")
                    .HasComment("竣工年代")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzcqr)
                    .HasColumnName("JZCQR")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑产权人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzcs)
                    .HasColumnName("JZCS")
                    .HasColumnType("int(11)")
                    .HasComment("建筑层数");

                entity.Property(e => e.Jzgd)
                    .HasColumnName("JZGD")
                    .HasComment("建筑高度");

                entity.Property(e => e.Jzjg)
                    .HasColumnName("JZJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑结构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzmc)
                    .HasColumnName("JZMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzwx)
                    .HasColumnName("JZWX")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑外形")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzyt)
                    .HasColumnName("JZYT")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑用途")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qtys)
                    .HasColumnName("QTYS")
                    .HasColumnType("varchar(50)")
                    .HasComment("墙体颜色")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrq)
                    .HasColumnName("TXRQ")
                    .HasColumnType("datetime")
                    .HasComment("填写日期");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wdys)
                    .HasColumnName("WDYS")
                    .HasColumnType("varchar(50)")
                    .HasComment("屋顶颜色")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzsffsbd)
                    .HasColumnName("XZSFFSBD")
                    .HasColumnType("tinyint(4)")
                    .HasComment("现状是否发生变动");

                entity.Property(e => e.Zdmj)
                    .HasColumnName("ZDMJ")
                    .HasColumnType("int(11)")
                    .HasComment("占地面积");

                entity.Property(e => e.Zplj)
                    .HasColumnName("ZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcBhxjzzpjbhxjzjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_bhxjzzpjbhxjzjl");

                entity.Property(e => e.Bhxysms)
                    .HasColumnName("BHXYSMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("不和谐因素描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fsbd)
                    .HasColumnName("FSBD")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生变动")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jgnd)
                    .HasColumnName("JGND")
                    .HasColumnType("varchar(50)")
                    .HasComment("竣工年代")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzcqr)
                    .HasColumnName("JZCQR")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑产权人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzcs)
                    .HasColumnName("JZCS")
                    .HasColumnType("int(11)")
                    .HasComment("建筑层数");

                entity.Property(e => e.Jzgd)
                    .HasColumnName("JZGD")
                    .HasComment("建筑高度");

                entity.Property(e => e.Jzjg)
                    .HasColumnName("JZJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑结构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzmc)
                    .HasColumnName("JZMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzwx)
                    .HasColumnName("JZWX")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑外形")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzyt)
                    .HasColumnName("JZYT")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑用途")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qtys)
                    .HasColumnName("QTYS")
                    .HasColumnType("varchar(50)")
                    .HasComment("墙体颜色")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrq)
                    .HasColumnName("TXRQ")
                    .HasColumnType("datetime")
                    .HasComment("填写日期");

                entity.Property(e => e.Wdys)
                    .HasColumnName("WDYS")
                    .HasColumnType("varchar(50)")
                    .HasComment("屋顶颜色")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzsffsbd)
                    .HasColumnName("XZSFFSBD")
                    .HasColumnType("tinyint(4)")
                    .HasComment("现状是否发生变动");

                entity.Property(e => e.Zdmj)
                    .HasColumnName("ZDMJ")
                    .HasColumnType("int(11)")
                    .HasComment("占地面积");

                entity.Property(e => e.Zplj)
                    .HasColumnName("ZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcBhzsyhjzzgcjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_bhzsyhjzzgcjl");

                entity.Property(e => e.Bhgcjfdfpt)
                    .HasColumnName("bhgcjfdfpt")
                    .HasColumnType("int(11)")
                    .HasComment("保护工程经费-地方配套");

                entity.Property(e => e.Bhgcjfgjbz)
                    .HasColumnName("bhgcjfgjbz")
                    .HasColumnType("int(11)")
                    .HasComment("保护工程经费-国家补助");

                entity.Property(e => e.Bhgcjzqk)
                    .HasColumnName("bhgcjzqk")
                    .HasColumnType("varchar(4)")
                    .HasComment("保护工程进展情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhzsyhjzzgcda)
                    .HasColumnName("bhzsyhjzzgcda")
                    .HasColumnType("varchar(500)")
                    .HasComment("保护展示与环境整治工程档案")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrmc)
                    .HasColumnName("CJRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("djrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("djsj")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Ejgcfl)
                    .HasColumnName("ejgcfl")
                    .HasColumnType("varchar(50)")
                    .HasComment("二级工程分类")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Gcfl)
                    .HasColumnName("gcfl")
                    .HasColumnType("varchar(50)")
                    .HasComment("工程分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gjwwjysrq)
                    .HasColumnName("gjwwjysrq")
                    .HasColumnType("datetime")
                    .HasComment("国家文物局验收日期");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Jftrze)
                    .HasColumnName("jftrze")
                    .HasColumnType("int(11)")
                    .HasComment("经费投入总额");

                entity.Property(e => e.Jgysrq)
                    .HasColumnName("jgysrq")
                    .HasColumnType("datetime")
                    .HasComment("竣工验收日期");

                entity.Property(e => e.Jldw)
                    .HasColumnName("jldw")
                    .HasColumnType("varchar(500)")
                    .HasComment("监理单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jssj)
                    .HasColumnName("jssj")
                    .HasColumnType("datetime")
                    .HasComment("结束时间");

                entity.Property(e => e.Kssj)
                    .HasColumnName("kssj")
                    .HasColumnType("datetime")
                    .HasComment("开始时间");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasComment("ONLYID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_bin");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("sfkdj")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Sgdw)
                    .HasColumnName("sgdw")
                    .HasColumnType("varchar(500)")
                    .HasComment("施工单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("shbtgsm")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("shrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Syt)
                    .HasColumnName("syt")
                    .HasColumnType("varchar(500)")
                    .HasComment("示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("tjsj")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wwbmpz)
                    .HasColumnName("wwbmpz")
                    .HasColumnType("varchar(50)")
                    .HasComment("文物部门批准/许可文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmfl)
                    .HasColumnName("xmfl")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmfw)
                    .HasColumnName("XMFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("项目范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmfwturl)
                    .HasColumnName("xmfwturl")
                    .HasColumnType("varchar(200)")
                    .HasComment("项目范围图url")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("xmmc")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zyczjf)
                    .HasColumnName("zyczjf")
                    .HasColumnType("int(11)")
                    .HasComment("中央财政经费");
            });

            modelBuilder.Entity<VGlyjcBhzsyhjzzgcxczp>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_bhzsyhjzzgcxczp");

                entity.Property(e => e.Bhzsyhjzzxmid)
                    .HasColumnName("BHZSYHJZZXMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护展示与环境整治项目ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfwg)
                    .HasColumnName("SFWG")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否完工")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjwgsj)
                    .HasColumnName("SJWGSJ")
                    .HasColumnType("datetime")
                    .HasComment("实际完工时间");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("xmmc")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcBtjhjgycsyx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_btjhjgycsyx");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gcid)
                    .HasColumnName("GCID")
                    .HasColumnType("varchar(50)")
                    .HasComment("工程ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(20)")
                    .HasComment("年份(2017）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("XMMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxcd)
                    .HasColumnName("YXCD")
                    .HasColumnType("text")
                    .HasComment("影响程度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcBxWdlNewestdxsj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_bx_wdl_newestdxsj");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");
            });

            modelBuilder.Entity<VGlyjcByWdlNewestdxsj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_by_wdl_newestdxsj");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");
            });

            modelBuilder.Entity<VGlyjcByywhgcjlJcpz>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_byywhgcjl_jcpz");

                entity.Property(e => e.Byywhnr)
                    .HasColumnName("BYYWHNR")
                    .HasColumnType("varchar(500)")
                    .HasComment("保养与维护内容")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Byywhrq)
                    .HasColumnName("BYYWHRQ")
                    .HasColumnType("datetime")
                    .HasComment("保养与维护日期");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxbid)
                    .IsRequired()
                    .HasColumnName("JCDXBID")
                    .HasColumnType("varchar(2)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jcdxfamc)
                    .HasColumnName("JCDXFAMC")
                    .HasColumnType("varchar(104)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxid)
                    .IsRequired()
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxlx)
                    .HasColumnName("JCDXLX")
                    .HasMaxLength(0)
                    .IsFixedLength();

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzid)
                    .HasColumnName("JCPZID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzbid)
                    .HasColumnName("JCWZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lxzd)
                    .HasColumnName("LXZD")
                    .HasMaxLength(0)
                    .IsFixedLength();

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(50)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rcbyzp)
                    .HasColumnName("RCBYZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("日常保养照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasComment("监测周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrmc)
                    .HasColumnName("SJCJFZRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssz)
                    .HasColumnName("SSZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yf)
                    .HasColumnName("YF")
                    .HasColumnType("varchar(50)")
                    .HasComment("月份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcCamera>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_camera");

                entity.Property(e => e.Azdjd)
                    .HasColumnName("AZDJD")
                    .HasComment("安装点经度");

                entity.Property(e => e.Azdszycdid)
                    .HasColumnName("AZDSZYCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("安装点所在遗产点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Azdwd)
                    .HasColumnName("AZDWD")
                    .HasComment("安装点纬度");

                entity.Property(e => e.Bcjcdxid)
                    .HasColumnName("BCJCDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("补充监测对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cameraid)
                    .HasColumnName("cameraid")
                    .HasColumnType("varchar(50)")
                    .HasComment("视频ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cancontrol)
                    .HasColumnName("cancontrol")
                    .HasColumnType("int(2)")
                    .HasComment("是否为可控制姿态的球机");

                entity.Property(e => e.Channel)
                    .HasColumnName("channel")
                    .HasColumnType("varchar(50)")
                    .HasComment("管道")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dll)
                    .HasColumnName("dll")
                    .HasColumnType("varchar(50)")
                    .HasComment("厂商驱动")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ip)
                    .HasColumnName("ip")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lat)
                    .HasColumnName("lat")
                    .HasComment("纬度");

                entity.Property(e => e.Locadesc)
                    .HasColumnName("locadesc")
                    .HasColumnType("varchar(200)")
                    .HasComment("位置说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lon)
                    .HasColumnName("lon")
                    .HasComment("经度");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Param)
                    .HasColumnName("param")
                    .HasColumnType("varchar(50)")
                    .HasComment("参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Password)
                    .HasColumnName("password")
                    .HasColumnType("varchar(50)")
                    .HasComment("密码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Port)
                    .HasColumnName("port")
                    .HasColumnType("varchar(50)")
                    .HasComment("端口")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("remark")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbid)
                    .IsRequired()
                    .HasColumnName("sbid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbmc)
                    .HasColumnName("SBMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sourceid)
                    .HasColumnName("sourceid")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备清单ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Username)
                    .HasColumnName("username")
                    .HasColumnType("varchar(50)")
                    .HasComment("用户名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Videourl)
                    .HasColumnName("videourl")
                    .HasColumnType("varchar(200)")
                    .HasComment("实时视频URL地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcCjNewestdxsj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_cj_newestdxsj");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");
            });

            modelBuilder.Entity<VGlyjcCjqxrzjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_cjqxrzjl");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasComment("表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bmc)
                    .HasColumnName("BMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("表名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Realname)
                    .HasColumnName("REALNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yssjid)
                    .HasColumnName("YSSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("原始数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zxlb)
                    .HasColumnName("ZXLB")
                    .HasColumnType("varchar(50)")
                    .HasComment("执行类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zxnr)
                    .HasColumnName("ZXNR")
                    .HasColumnType("text")
                    .HasComment("执行内容")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcClfmjiancesj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_clfmjiancesj");

                entity.Property(e => e.Bdqkms)
                    .HasColumnName("BDQKMS")
                    .HasColumnType("varchar(50)")
                    .HasComment("变动情况描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdyxcd)
                    .HasColumnName("BDYXCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("变动影响程度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Clfmid)
                    .IsRequired()
                    .HasColumnName("CLFMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("村落风貌ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Clfmmc)
                    .HasColumnName("CLFMMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("XMMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzsffsbd)
                    .HasColumnName("XZSFFSBD")
                    .HasColumnType("varchar(50)")
                    .HasComment("现状是否发生变动")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcDbssz>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_dbssz");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ddl)
                    .HasColumnName("DDL")
                    .HasColumnType("double(6,2)")
                    .HasComment("电导率");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键标识")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdid)
                    .HasColumnName("JCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Ph)
                    .HasColumnName("PH")
                    .HasColumnType("double(6,2)")
                    .HasComment("PH值");

                entity.Property(e => e.Rjy)
                    .HasColumnName("RJY")
                    .HasColumnType("double(6,2)")
                    .HasComment("溶解氧");

                entity.Property(e => e.Sbmc)
                    .HasColumnName("SBMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Zd)
                    .HasColumnName("ZD")
                    .HasColumnType("double(6,2)")
                    .HasComment("浊度");
            });

            modelBuilder.Entity<VGlyjcDwWdl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_dw_wdl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcrmc)
                    .HasColumnName("DCRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dwlx)
                    .HasColumnName("DWLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("动物类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Phfs)
                    .HasColumnName("PHFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("破坏方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Phfw)
                    .HasColumnName("PHFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("破坏范围（cm2）（人工估算填写）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcDwlmbdxx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_dwlmbdxx");

                entity.Property(e => e.Bdhzp)
                    .HasColumnName("BDHZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("变动后照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdjzdz)
                    .HasColumnName("BDJZDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("变动建筑地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdqkms)
                    .HasColumnName("BDQKMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("变动情况描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdqzp)
                    .HasColumnName("BDQZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("变动前照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dwlmzp)
                    .HasColumnName("DWLMZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("第五立面照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(200)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("smallint(6)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("smallint(6)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(500)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(50)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("XMMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpqy)
                    .HasColumnName("ZPQY")
                    .HasColumnType("varchar(50)")
                    .HasComment("照片区域")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcDwlmzp>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_dwlmzp");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dwlmzp)
                    .HasColumnName("DWLMZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("第五立面照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pzsj)
                    .HasColumnName("PZSJ")
                    .HasColumnType("datetime")
                    .HasComment("拍照时间");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("smallint(6)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("smallint(6)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(500)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(50)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zpqy)
                    .HasColumnName("ZPQY")
                    .HasColumnType("varchar(50)")
                    .HasComment("照片区域")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcFsWdlNewestdxsj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_fs_wdl_newestdxsj");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");
            });

            modelBuilder.Entity<VGlyjcHjyxpg>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_hjyxpg");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdwid)
                    .HasColumnName("JCDWID")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测点位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pglx)
                    .HasColumnName("PGLX")
                    .HasColumnType("varchar(255)")
                    .HasComment("评估类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgsm)
                    .HasColumnName("PGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("评估说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbmc)
                    .HasColumnName("SBMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yf)
                    .HasColumnName("YF")
                    .HasColumnType("varchar(255)")
                    .HasComment("月份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcJbhj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_jbhj");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Co2)
                    .HasColumnName("CO2")
                    .HasColumnType("int(6)")
                    .HasComment("二氧化碳");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dqsd)
                    .HasColumnName("DQSD")
                    .HasColumnType("double(6,2)")
                    .HasComment("大气湿度");

                entity.Property(e => e.Dqwd)
                    .HasColumnName("DQWD")
                    .HasColumnType("double(6,2)")
                    .HasComment("大气温度");

                entity.Property(e => e.Fs)
                    .HasColumnName("FS")
                    .HasColumnType("double(6,2)")
                    .HasComment("风速");

                entity.Property(e => e.Fx)
                    .HasColumnName("FX")
                    .HasColumnType("double(6,2)")
                    .HasComment("风向");

                entity.Property(e => e.Fylz)
                    .HasColumnName("FYLZ")
                    .HasColumnType("double(6,2)")
                    .HasComment("负氧离子");

                entity.Property(e => e.Gzd)
                    .HasColumnName("GZD")
                    .HasColumnType("int(8)")
                    .HasComment("光照度");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdid)
                    .HasColumnName("JCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdmc)
                    .HasColumnName("JCDMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Jyzfs)
                    .HasColumnName("JYZFS")
                    .HasColumnType("double(6,2)")
                    .HasComment("简易总辐射");

                entity.Property(e => e.Ph)
                    .HasColumnName("PH")
                    .HasColumnType("double(6,2)")
                    .HasComment("pH值");

                entity.Property(e => e.Pm25)
                    .HasColumnName("PM25")
                    .HasColumnType("double(6,2)")
                    .HasComment("PM2.5");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(1) unsigned zerofill")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shtbgsm)
                    .HasColumnName("SHTBGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(255)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(5)");

                entity.Property(e => e.Szqy)
                    .HasColumnName("SZQY")
                    .HasColumnType("double(6,2)")
                    .HasComment("数字气压");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Trsd)
                    .HasColumnName("TRSD")
                    .HasColumnType("double(6,2)")
                    .HasComment("土壤湿度");

                entity.Property(e => e.Trwd)
                    .HasColumnName("TRWD")
                    .HasColumnType("double(6,2)")
                    .HasComment("土壤温度");

                entity.Property(e => e.Yf)
                    .HasColumnName("YF")
                    .HasColumnType("double(8,2)")
                    .HasComment("盐分");

                entity.Property(e => e.Yl)
                    .HasColumnName("YL")
                    .HasColumnType("double(6,2)")
                    .HasComment("雨量mm/min");

                entity.Property(e => e.Yllj)
                    .HasColumnName("YLLJ")
                    .HasColumnType("double(6,2)")
                    .HasComment("雨量累计mm");

                entity.Property(e => e.Zs)
                    .HasColumnName("ZS")
                    .HasColumnType("double(6,2)")
                    .HasComment("噪声");
            });

            modelBuilder.Entity<VGlyjcJbhjFx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_jbhj_fx");

                entity.Property(e => e.Fx)
                    .HasColumnName("FX")
                    .HasColumnType("varchar(3)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Fxsz)
                    .HasColumnName("FXSZ")
                    .HasColumnType("double(6,2)")
                    .HasComment("风向");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdid)
                    .HasColumnName("JCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcJcpzsjg>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_jcpzsjg");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxbid)
                    .HasColumnName("JCDXBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxdtxxbmc)
                    .HasColumnName("jcdxdtxxbmc")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象地图信息表名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxlmzbzd)
                    .HasColumnName("JCDXLMZBZD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象立面坐标字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxsytzd)
                    .HasColumnName("JCDXSYTZD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象示意图字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxyjcwz)
                    .HasColumnName("JCDXYJCWZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象在监测位置表中的字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxzbzd)
                    .HasColumnName("JCDXZBZD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象坐标字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxzd)
                    .HasColumnName("JCDXZD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象展示字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzbid)
                    .HasColumnName("JCWZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzdtxxbmc)
                    .HasColumnName("jcwzdtxxbmc")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置地图信息表名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzdtzd)
                    .HasColumnName("JCWZDTZD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置底图字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lxzd)
                    .HasColumnName("lxzd")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("树结构展示名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("PID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(11)")
                    .HasComment("排序(1XX)");

                entity.Property(e => e.Ycysbid)
                    .HasColumnName("YCYSBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysyjcdx)
                    .HasColumnName("YCYSYJCDX")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素在监测对象表中字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycyszd)
                    .HasColumnName("YCYSZD")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素展示字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcJcwzdtxx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_jcwzdtxx");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzmc)
                    .HasColumnName("jcwzmc")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzms)
                    .HasColumnName("JCWZMS")
                    .HasColumnType("mediumtext")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbsjid)
                    .HasColumnName("ZBSJID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbxx)
                    .HasColumnName("ZBXX")
                    .HasColumnType("mediumtext")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcJksjjrpzbTrsq>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_jksjjrpzb_trsq");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dw)
                    .HasColumnName("dw")
                    .HasColumnType("varchar(255)")
                    .HasComment("单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcfx)
                    .HasColumnName("jcfx")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测方向")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsd)
                    .HasColumnName("jcsd")
                    .HasColumnType("double(10,2)")
                    .HasComment("监测深度（单位：cm）");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jcz)
                    .HasColumnName("JCZ")
                    .HasColumnType("double(10,2)")
                    .HasComment("监测值");

                entity.Property(e => e.Jssj)
                    .HasColumnName("JSSJ")
                    .HasColumnType("datetime")
                    .HasComment("接收时间");

                entity.Property(e => e.Paraid)
                    .HasColumnName("PARAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("参数编码ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbid)
                    .HasColumnName("sbid")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Yssjid)
                    .HasColumnName("YSSJID")
                    .HasColumnType("int(11)")
                    .HasComment("原始数据ID");
            });

            modelBuilder.Entity<VGlyjcJskzClfmjichusj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_jskz_clfmjichusj");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxbid)
                    .IsRequired()
                    .HasColumnName("JCDXBID")
                    .HasColumnType("varchar(3)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jcdxfamc)
                    .HasColumnName("JCDXFAMC")
                    .HasColumnType("varchar(54)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxid)
                    .IsRequired()
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxlx)
                    .HasColumnName("JCDXLX")
                    .HasMaxLength(0)
                    .IsFixedLength();

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzid)
                    .HasColumnName("JCPZID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzbid)
                    .HasColumnName("JCWZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasColumnType("varchar(255)")
                    .HasComment("经度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lxzd)
                    .HasColumnName("LXZD")
                    .HasMaxLength(0)
                    .IsFixedLength();

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ms)
                    .HasColumnName("MS")
                    .HasColumnType("varchar(200)")
                    .HasComment("风貌描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pzwzms)
                    .HasColumnName("PZWZMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("拍照位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pzwzzb)
                    .HasColumnName("PZWZZB")
                    .HasColumnType("varchar(200)")
                    .HasComment("拍照位置坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasComment("监测周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrmc)
                    .HasColumnName("SJCJFZRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasColumnType("varchar(255)")
                    .HasComment("纬度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcJskzTjlkxjichusj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_jskz_tjlkxjichusj");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxbid)
                    .IsRequired()
                    .HasColumnName("JCDXBID")
                    .HasColumnType("varchar(3)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jcdxfamc)
                    .HasColumnName("JCDXFAMC")
                    .HasColumnType("varchar(54)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxid)
                    .IsRequired()
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxlx)
                    .HasColumnName("JCDXLX")
                    .HasMaxLength(0)
                    .IsFixedLength();

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzid)
                    .HasColumnName("JCPZID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzbid)
                    .HasColumnName("JCWZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lxzd)
                    .HasColumnName("LXZD")
                    .HasMaxLength(0)
                    .IsFixedLength();

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ms)
                    .HasColumnName("MS")
                    .HasColumnType("varchar(200)")
                    .HasComment("轮廓线描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pzwzms)
                    .HasColumnName("PZWZMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("拍照位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasComment("监测周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrmc)
                    .HasColumnName("SJCJFZRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcJskzygzxjc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_jskzygzxjc");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dbt)
                    .HasColumnName("DBT")
                    .HasColumnType("varchar(255)")
                    .HasComment("对比图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dbtfbl)
                    .HasColumnName("DBTFBL")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dbtmc)
                    .HasColumnName("DBTMC")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dbtnf)
                    .HasColumnName("DBTNF")
                    .HasColumnType("varchar(20)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dbturl)
                    .HasColumnName("DBTURL")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzt)
                    .HasColumnName("JZT")
                    .HasColumnType("varchar(255)")
                    .HasComment("基准图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jztfbl)
                    .HasColumnName("JZTFBL")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jztmc)
                    .HasColumnName("JZTMC")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jztnf)
                    .HasColumnName("JZTNF")
                    .HasColumnType("varchar(20)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzturl)
                    .HasColumnName("JZTURL")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ms)
                    .HasColumnName("MS")
                    .HasColumnType("varchar(255)")
                    .HasComment("描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估(正面影响、负面影响、不确定影响)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjfw)
                    .HasColumnName("SJFW")
                    .HasColumnType("varchar(255)")
                    .HasComment("时间范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tbmj)
                    .HasColumnName("TBMJ")
                    .HasColumnType("double(10,4)")
                    .HasComment("图斑面积");

                entity.Property(e => e.Zhhdl)
                    .HasColumnName("ZHHDL")
                    .HasColumnType("varchar(255)")
                    .HasComment("转换后地类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zhqdl)
                    .HasColumnName("ZHQDL")
                    .HasColumnType("varchar(255)")
                    .HasComment("转换前地类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zhqk)
                    .HasColumnName("ZHQK")
                    .HasColumnType("varchar(255)")
                    .HasComment("转换情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcJzjc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_jzjc");

                entity.Property(e => e.Bczt)
                    .IsRequired()
                    .HasColumnName("BCZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("保存状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bh)
                    .HasColumnName("BH")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bjsx)
                    .HasColumnName("BJSX")
                    .HasColumnType("tinyint(4)")
                    .HasComment("边界属性");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Czlx)
                    .HasColumnName("CZLX")
                    .HasColumnType("tinyint(4)")
                    .HasComment("材质类型");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Ssys)
                    .HasColumnName("SSYS")
                    .HasColumnType("varchar(50)")
                    .HasComment("所属要素")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbx)
                    .HasColumnName("ZBX")
                    .HasColumnType("varchar(50)")
                    .HasComment("坐标x")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zby)
                    .HasColumnName("ZBY")
                    .HasColumnType("varchar(50)")
                    .HasComment("坐标y")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zp)
                    .HasColumnName("ZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件存储在目标文件夹下的存储名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcKgfjJcwzJcpz>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_kgfj_jcwz_jcpz");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxbid)
                    .IsRequired()
                    .HasColumnName("JCDXBID")
                    .HasColumnType("varchar(3)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jcdxfamc)
                    .HasColumnName("JCDXFAMC")
                    .HasColumnType("varchar(259)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxid)
                    .IsRequired()
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxlx)
                    .HasColumnName("JCDXLX")
                    .HasMaxLength(0)
                    .IsFixedLength();

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzid)
                    .HasColumnName("JCPZID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzbid)
                    .HasColumnName("JCWZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzmc)
                    .HasColumnName("JCWZMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzms)
                    .HasColumnName("JCWZMS")
                    .HasColumnType("text")
                    .HasComment("监测位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzsyt)
                    .HasColumnName("JCWZSYT")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lxzd)
                    .HasColumnName("LXZD")
                    .HasMaxLength(0)
                    .IsFixedLength();

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(255)")
                    .HasComment("考古发掘记录记录名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(255)")
                    .HasComment("排序");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasComment("监测周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrmc)
                    .HasColumnName("SJCJFZRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcKgfjctww>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_kgfjctww");

                entity.Property(e => e.Ctsj)
                    .HasColumnName("CTSJ")
                    .HasColumnType("datetime")
                    .HasComment("出土时间");

                entity.Property(e => e.Djcfj)
                    .HasColumnName("DJCFJ")
                    .HasColumnType("int(11)")
                    .HasComment("第几次发掘");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jlmc)
                    .HasColumnName("JLMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("考古发掘记录记录名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kgfjjlid)
                    .HasColumnName("KGFJJLID")
                    .HasColumnType("varchar(50)")
                    .HasComment("考古发掘记录id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kgfjxmid)
                    .HasColumnName("KGFJXMID")
                    .HasColumnType("varchar(255)")
                    .HasComment("考古发掘项目id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wwmc)
                    .HasColumnName("WWMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("文物名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wwms)
                    .HasColumnName("WWMS")
                    .HasColumnType("varchar(255)")
                    .HasComment("文物描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wwzp)
                    .HasColumnName("WWZP")
                    .HasColumnType("varchar(255)")
                    .HasComment("文物照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("XMMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcKgfjjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_kgfjjl");

                entity.Property(e => e.Djcfj)
                    .HasColumnName("DJCFJ")
                    .HasColumnType("int(11)")
                    .HasComment("第几次发掘");

                entity.Property(e => e.Fjmj)
                    .HasColumnName("FJMJ")
                    .HasColumnType("double(20,4)")
                    .HasComment("发掘面积（平方米）");

                entity.Property(e => e.Htmj)
                    .HasColumnName("HTMJ")
                    .HasColumnType("double(20,4)")
                    .HasComment("回填面积（平方米）");

                entity.Property(e => e.Htqk)
                    .HasColumnName("HTQK")
                    .HasColumnType("varchar(255)")
                    .HasComment("回填情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jftrze)
                    .HasColumnName("JFTRZE")
                    .HasComment("经费投入总额（单位：万元）");

                entity.Property(e => e.Jssj)
                    .HasColumnName("JSSJ")
                    .HasColumnType("datetime")
                    .HasComment("结束时间");

                entity.Property(e => e.Kssj)
                    .HasColumnName("KSSJ")
                    .HasColumnType("datetime")
                    .HasComment("开始时间");

                entity.Property(e => e.Pzfjmj)
                    .HasColumnName("PZFJMJ")
                    .HasComment("批准发掘面积(单位：平方米）");

                entity.Property(e => e.Pzwh)
                    .HasColumnName("PZWH")
                    .HasColumnType("varchar(255)")
                    .HasComment("批准文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("XMMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zszp)
                    .HasColumnName("ZSZP")
                    .HasColumnType("varchar(255)")
                    .HasComment("证书照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcKgfjjlXm>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_kgfjjl_xm");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djcfj)
                    .HasColumnName("DJCFJ")
                    .HasColumnType("int(11)")
                    .HasComment("第几次发掘");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fjmj)
                    .HasColumnName("FJMJ")
                    .HasColumnType("double(20,4)")
                    .HasComment("发掘面积（平方米）");

                entity.Property(e => e.Htmj)
                    .HasColumnName("HTMJ")
                    .HasColumnType("double(20,4)")
                    .HasComment("回填面积（平方米）");

                entity.Property(e => e.Htqk)
                    .HasColumnName("HTQK")
                    .HasColumnType("varchar(255)")
                    .HasComment("回填情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jlcjrmc)
                    .HasColumnName("JLCJRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jlmc)
                    .HasColumnName("JLMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("考古发掘记录记录名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jssj)
                    .HasColumnName("JSSJ")
                    .HasColumnType("datetime")
                    .HasComment("结束时间");

                entity.Property(e => e.Kgfjxmid)
                    .HasColumnName("KGFJXMID")
                    .HasColumnType("varchar(255)")
                    .HasComment("考古发掘项目id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kssj)
                    .HasColumnName("KSSJ")
                    .HasColumnType("datetime")
                    .HasComment("开始时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfwg)
                    .HasColumnName("SFWG")
                    .HasColumnType("varchar(255)")
                    .HasComment("是否完工")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(255)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmcjrmc)
                    .HasColumnName("XMCJRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("xmmc")
                    .HasColumnType("varchar(200)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcKgfjxm>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_kgfjxm");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrmc)
                    .HasColumnName("CJRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(255)")
                    .HasComment("对接人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fjdw)
                    .HasColumnName("FJDW")
                    .HasColumnType("varchar(255)")
                    .HasComment("发掘单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jftrze)
                    .HasColumnName("JFTRZE")
                    .HasComment("经费投入总额（单位：万元）");

                entity.Property(e => e.Jssj)
                    .HasColumnName("JSSJ")
                    .HasColumnType("varchar(100)")
                    .HasComment("结束时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kssj)
                    .HasColumnName("KSSJ")
                    .HasColumnType("varchar(100)")
                    .HasComment("开始时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pzfjmj)
                    .HasColumnName("PZFJMJ")
                    .HasComment("批准发掘面积(单位：平方米）");

                entity.Property(e => e.Pzwh)
                    .HasColumnName("PZWH")
                    .HasColumnType("varchar(255)")
                    .HasComment("批准文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("varchar(255)")
                    .HasComment("是否可对接")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("varchar(255)")
                    .HasComment("是否已对接")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("varchar(255)")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("XMMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zszp)
                    .HasColumnName("ZSZP")
                    .HasColumnType("varchar(255)")
                    .HasComment("证书照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcLfSzlNewestdxsj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_lf_szl_newestdxsj");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");
            });

            modelBuilder.Entity<VGlyjcLfWdlNewestdxsj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_lf_wdl_newestdxsj");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");
            });

            modelBuilder.Entity<VGlyjcLsdljcjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_lsdljcjl");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlkdbhqk)
                    .HasColumnName("DLKDBHQK")
                    .HasColumnType("varchar(50)")
                    .HasComment("道路宽度变化情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlpz)
                    .HasColumnName("DLPZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("道路铺装")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlzplj)
                    .HasColumnName("DLZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("道路照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlzpmc)
                    .HasColumnName("DLZPMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("道路照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ldmc)
                    .HasColumnName("LDMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("路段名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qtcz)
                    .HasColumnName("QTCZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("墙体材质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qtys)
                    .HasColumnName("QTYS")
                    .HasColumnType("varchar(50)")
                    .HasComment("墙体颜色")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Szdl)
                    .HasColumnName("SZDL")
                    .HasColumnType("varchar(50)")
                    .HasComment("所在道路")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Szhx)
                    .HasColumnName("SZHX")
                    .HasColumnType("varchar(50)")
                    .HasComment("所在环线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrq)
                    .HasColumnName("TXRQ")
                    .HasColumnType("datetime")
                    .HasComment("填写日期");

                entity.Property(e => e.Wqcd)
                    .HasColumnName("WQCD")
                    .HasComment("围墙长度");

                entity.Property(e => e.Wqcdbhqk)
                    .HasColumnName("WQCDBHQK")
                    .HasColumnType("varchar(50)")
                    .HasComment("围墙长度变化情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wqgd)
                    .HasColumnName("WQGD")
                    .HasComment("围墙高度");

                entity.Property(e => e.Wqgdbhqk)
                    .HasColumnName("WQGDBHQK")
                    .HasColumnType("varchar(50)")
                    .HasComment("围墙高度变化情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wqwzbh)
                    .HasColumnName("WQWZBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("围墙位置变化")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wqydlgkb)
                    .HasColumnName("WQYDLGKB")
                    .HasColumnType("varchar(50)")
                    .HasComment("围墙与道路高宽比")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcParaidjcx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_paraidjcx");

                entity.Property(e => e.Bmc)
                    .HasColumnName("BMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("表名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcxid)
                    .HasColumnName("JCXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Paraid)
                    .IsRequired()
                    .HasColumnName("PARAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("参数编码ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcPgPgjgpgdx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_pg_pgjgpgdx");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Jcdxbid)
                    .HasColumnName("JCDXBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxlx)
                    .HasColumnName("JCDXLX")
                    .HasColumnType("tinyint(4)")
                    .HasComment("监测对象类型");

                entity.Property(e => e.Jcdxmc)
                    .HasColumnName("JCDXMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasColumnType("double(20,14)")
                    .HasComment("经度");

                entity.Property(e => e.Pgbg)
                    .HasColumnName("PGBG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估报告")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgbgmb)
                    .HasColumnName("PGBGMB")
                    .HasColumnType("varchar(500)")
                    .HasComment("评估报告模板")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgdxid)
                    .HasColumnName("PGDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgfs)
                    .HasColumnName("PGFS")
                    .HasColumnType("tinyint(4)")
                    .HasComment("评估方式（0—自动评估，1—专家评估）");

                entity.Property(e => e.PgfsDesc)
                    .HasColumnName("PGFS_DESC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgjg)
                    .HasColumnName("PGJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估结果")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgjgid)
                    .IsRequired()
                    .HasColumnName("PGJGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgjlid)
                    .HasColumnName("PGJLID")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估记录ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgjlmc)
                    .HasColumnName("PGJLMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估记录名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgjlsm)
                    .HasColumnName("PGJLSM")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估记录说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgjssj)
                    .HasColumnName("PGJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("评估结束时间");

                entity.Property(e => e.Pgmxid)
                    .HasColumnName("PGMXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估模型ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgqssj)
                    .HasColumnName("PGQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("评估起始时间");

                entity.Property(e => e.Realname)
                    .HasColumnName("REALNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasColumnType("double(20,14)")
                    .HasComment("纬度");

                entity.Property(e => e.Zbsjjgbid)
                    .HasColumnName("ZBSJJGBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("指标数据结果表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbsjjgid)
                    .HasColumnName("ZBSJJGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("指标数据结果ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zjid)
                    .HasColumnName("ZJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("专家ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("状态(0-暂停，1-进行中，2-已完成)");

                entity.Property(e => e.ZtDesc)
                    .HasColumnName("ZT_DESC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcPgPgjlb>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_pg_pgjlb");

                entity.Property(e => e.Byyx)
                    .HasColumnName("BYYX")
                    .HasColumnType("varchar(50)")
                    .HasComment("毕业院校")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID（指派人）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间（指派时间）");

                entity.Property(e => e.Dlid)
                    .HasColumnName("DLID")
                    .HasColumnType("varchar(50)")
                    .HasComment("大类ID(所属专题)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlmc)
                    .HasColumnName("DLMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("大类名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gj)
                    .HasColumnName("GJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("国籍")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gzdw)
                    .HasColumnName("GZDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("工作单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxmc)
                    .HasColumnName("JCDXMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lxdh)
                    .HasColumnName("LXDH")
                    .HasColumnType("varchar(50)")
                    .HasComment("联系电话")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mxcjsj)
                    .HasColumnName("MXCJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Mxmc)
                    .HasColumnName("MXMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("模型名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mz)
                    .HasColumnName("MZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("民族")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgbgmb)
                    .HasColumnName("PGBGMB")
                    .HasColumnType("varchar(500)")
                    .HasComment("评估报告模板")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgdxid)
                    .HasColumnName("PGDXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估对象ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgfs)
                    .HasColumnName("PGFS")
                    .HasColumnType("tinyint(4)")
                    .HasComment("评估方式（0—自动评估，1—专家评估）");

                entity.Property(e => e.Pgjlmc)
                    .HasColumnName("PGJLMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估记录名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgjlsm)
                    .HasColumnName("PGJLSM")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估记录说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgjssj)
                    .HasColumnName("PGJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("评估结束时间");

                entity.Property(e => e.Pgmxid)
                    .HasColumnName("PGMXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估模型ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgqssj)
                    .HasColumnName("PGQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("评估起始时间");

                entity.Property(e => e.Pgszyzdw)
                    .HasColumnName("PGSZYZDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估设置阈值单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Realname)
                    .HasColumnName("REALNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sxzy)
                    .HasColumnName("SXZY")
                    .HasColumnType("varchar(50)")
                    .HasComment("所学专业")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xb)
                    .HasColumnName("XB")
                    .HasColumnType("tinyint(4)")
                    .HasComment("性别");

                entity.Property(e => e.Yhid)
                    .HasColumnName("YHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("用户ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yx)
                    .HasColumnName("YX")
                    .HasColumnType("varchar(50)")
                    .HasComment("邮箱")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zc)
                    .HasColumnName("ZC")
                    .HasColumnType("varchar(50)")
                    .HasComment("职称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zjfl)
                    .HasColumnName("ZJFL")
                    .HasColumnType("varchar(50)")
                    .HasComment("专家分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zjid)
                    .HasColumnName("ZJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("专家ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("状态(0-暂停，1-进行中，2-已完成)");
            });

            modelBuilder.Entity<VGlyjcPgZjxx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_pg_zjxx");

                entity.Property(e => e.Byyx)
                    .HasColumnName("BYYX")
                    .HasColumnType("varchar(50)")
                    .HasComment("毕业院校")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gj)
                    .HasColumnName("GJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("国籍")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gzdw)
                    .HasColumnName("GZDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("工作单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lxdh)
                    .HasColumnName("LXDH")
                    .HasColumnType("varchar(50)")
                    .HasComment("联系电话")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mz)
                    .HasColumnName("MZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("民族")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Realname)
                    .HasColumnName("REALNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sxzy)
                    .HasColumnName("SXZY")
                    .HasColumnType("varchar(50)")
                    .HasComment("所学专业")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xb)
                    .HasColumnName("XB")
                    .HasColumnType("tinyint(4)")
                    .HasComment("性别");

                entity.Property(e => e.Yhid)
                    .HasColumnName("YHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("用户ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yx)
                    .HasColumnName("YX")
                    .HasColumnType("varchar(50)")
                    .HasComment("邮箱")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zc)
                    .HasColumnName("ZC")
                    .HasColumnType("varchar(50)")
                    .HasComment("职称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zjfl)
                    .HasColumnName("ZJFL")
                    .HasColumnType("varchar(50)")
                    .HasComment("专家分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcQt>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_qt");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lycs)
                    .HasColumnName("LYCS")
                    .HasColumnType("int(100)")
                    .HasComment("利用次数");

                entity.Property(e => e.Mid)
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccbdlj)
                    .HasColumnName("SJCCBDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccydlj)
                    .HasColumnName("SJCCYDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(20)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Wdbb)
                    .HasColumnName("WDBB")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdbzdw)
                    .HasColumnName("WDBZDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("文档编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdcjsj)
                    .HasColumnName("WDCJSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档创建时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdjz)
                    .HasColumnName("WDJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdlx)
                    .HasColumnName("WDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdmc)
                    .HasColumnName("WDMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdscsj)
                    .HasColumnName("WDSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档上传时间");

                entity.Property(e => e.Wdsddw)
                    .HasColumnName("WDSDDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdsdsj)
                    .HasColumnName("WDSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档审定时间");

                entity.Property(e => e.Wdsdz)
                    .HasColumnName("WDSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdzz)
                    .HasColumnName("WDZZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档作者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yswdbh)
                    .HasColumnName("YSWDBH")
                    .HasColumnType("varchar(100)")
                    .HasComment("原始文档编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdd)
                    .HasColumnName("YWDSCDD")
                    .HasColumnType("varchar(100)")
                    .HasComment("原文档收藏地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdw)
                    .HasColumnName("YWDSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原文档收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscrq)
                    .HasColumnName("YWDSCRQ")
                    .HasColumnType("datetime")
                    .HasComment("原文档生成日期");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcRcxcandycjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_rcxcandycjl");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime");

                entity.Property(e => e.Dd)
                    .HasColumnName("DD")
                    .HasColumnType("varchar(500)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jchzp)
                    .HasColumnName("JCHZP")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jchzpccmc)
                    .HasColumnName("JCHZPCCMC")
                    .HasColumnType("varchar(500)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jchzpmlmc)
                    .HasColumnName("JCHZPMLMC")
                    .HasColumnType("varchar(500)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime");

                entity.Property(e => e.Ms)
                    .HasColumnName("MS")
                    .HasColumnType("varchar(500)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qyid)
                    .HasColumnName("QYID")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)");

                entity.Property(e => e.Sjms)
                    .HasColumnName("SJMS")
                    .HasColumnType("varchar(500)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcsj)
                    .HasColumnName("XCSJ")
                    .HasColumnType("datetime");

                entity.Property(e => e.Xcy)
                    .HasColumnName("XCY")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcymc)
                    .HasColumnName("XCYMC")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycsfjc)
                    .HasColumnName("YCSFJC")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yczb)
                    .HasColumnName("YCZB")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zcqk)
                    .IsRequired()
                    .HasColumnName("ZCQK")
                    .HasColumnType("varchar(1)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zcqkmc)
                    .HasColumnName("ZCQKMC")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmcccmc)
                    .HasColumnName("ZPMCCCMC")
                    .HasColumnType("varchar(500)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmcmlmc)
                    .HasColumnName("ZPMCMLMC")
                    .HasColumnType("varchar(500)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcRcxczycbg>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_rcxczycbg");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dqymc)
                    .HasColumnName("DQYMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("大区域名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jssj)
                    .HasColumnName("JSSJ")
                    .HasColumnType("datetime")
                    .HasComment("结束时间");

                entity.Property(e => e.Kssj)
                    .HasColumnName("KSSJ")
                    .HasColumnType("datetime")
                    .HasComment("开始时间");

                entity.Property(e => e.Ms)
                    .HasColumnName("MS")
                    .HasColumnType("varchar(255)")
                    .HasComment("正异常情况描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qyid)
                    .HasColumnName("QYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("区域ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qymc)
                    .HasColumnName("QYMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("区域名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcdd)
                    .HasColumnName("XCDD")
                    .HasColumnType("varchar(500)")
                    .HasComment("巡查地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcyid)
                    .HasColumnName("XCYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcymc)
                    .HasColumnName("XCYMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcRhwzp>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_rhwzp");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("bhbh")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(255)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fhblmjpg)
                    .HasColumnName("FHBLMJPG")
                    .HasColumnType("varchar(10)")
                    .HasComment("风化剥落面积评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Kjg)
                    .HasColumnName("KJG")
                    .HasColumnType("varchar(500)")
                    .HasComment("可见光路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rhw)
                    .HasColumnName("RHW")
                    .HasColumnType("varchar(500)")
                    .HasComment("热红外路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbid)
                    .HasColumnName("SBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(255)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Ssdgspg)
                    .HasColumnName("SSDGSPG")
                    .HasColumnType("varchar(10)")
                    .HasComment("渗水点个数评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssmjpg)
                    .HasColumnName("SSMJPG")
                    .HasColumnType("varchar(10)")
                    .HasComment("渗水面积评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcSbdqJcxZrhj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_sbdq_jcx_zrhj");

                entity.Property(e => e.Bmc)
                    .HasColumnName("BMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("表名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzsjgid)
                    .HasColumnName("JCPZSJGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置树结构ID（该监测项顶级父级，用于设备归类）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcxid)
                    .HasColumnName("JCXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcxsjzd)
                    .HasColumnName("JCXSJZD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项时间字段名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lxid)
                    .HasColumnName("LXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lxmc)
                    .HasColumnName("LXMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbid)
                    .IsRequired()
                    .HasColumnName("SBID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbmc)
                    .HasColumnName("SBMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssqy)
                    .HasColumnName("SSQY")
                    .HasColumnType("varchar(50)")
                    .HasComment("所属区域")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywzj)
                    .HasColumnName("YWZJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务主键(设备类中对应为数据表中的外键字段名)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcSbjcd>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_sbjcd");

                entity.Property(e => e.Dtid)
                    .HasColumnName("DTID")
                    .HasColumnType("varchar(50)")
                    .HasComment("底图ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dtlx)
                    .HasColumnName("DTLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("底图类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdmc)
                    .HasColumnName("JCDMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbid)
                    .HasColumnName("SBID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbmc)
                    .HasColumnName("SBMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(50)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.X)
                    .HasColumnType("double(10,2)")
                    .HasComment("初始坐标X");

                entity.Property(e => e.Y)
                    .HasColumnType("double(10,2)")
                    .HasComment("初始坐标Y");

                entity.Property(e => e.Z)
                    .HasColumnType("double(10,2)")
                    .HasComment("初始坐标Z");

                entity.Property(e => e.Zb)
                    .HasColumnName("ZB")
                    .HasColumnType("text")
                    .HasComment("坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcSbqdConfJcjg>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_sbqd_conf_jcjg");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("检查结束时间");

                entity.Property(e => e.Jckssj)
                    .HasColumnName("JCKSSJ")
                    .HasColumnType("datetime")
                    .HasComment("检查开始时间");

                entity.Property(e => e.Jcpc)
                    .HasColumnName("JCPC")
                    .HasColumnType("int(11)")
                    .HasComment("检查批次");

                entity.Property(e => e.Jcxbid)
                    .HasColumnName("JCXBID")
                    .HasColumnType("varchar(40)")
                    .HasComment("抓取类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jrjg)
                    .HasColumnName("JRJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("接入结果-正常或异常")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jrjglxid)
                    .HasColumnName("JRJGLXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("接入结果类型ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lxmc)
                    .HasColumnName("LXMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pzid)
                    .HasColumnName("PZID")
                    .HasColumnType("varchar(80)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pzsm)
                    .HasColumnName("PZSM")
                    .HasColumnType("varchar(255)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbid)
                    .IsRequired()
                    .HasColumnName("SBID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sblx)
                    .HasColumnName("SBLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbmc)
                    .HasColumnName("SBMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sczqsj)
                    .HasColumnName("SCZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("上次抓取时间");

                entity.Property(e => e.Zqzq)
                    .HasColumnName("ZQZQ")
                    .HasColumnType("int(11)")
                    .HasComment("抓取周期（单位：秒）");

                entity.Property(e => e.Zqzqdw)
                    .HasColumnName("ZQZQDW")
                    .HasColumnType("varchar(255)")
                    .HasComment("抓取周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqzqwc)
                    .HasColumnName("ZQZQWC")
                    .HasColumnType("int(11)")
                    .HasComment("抓取误差（秒）");
            });

            modelBuilder.Entity<VGlyjcSbqdConfig>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_sbqd_config");

                entity.Property(e => e.AlertJudgeUrl)
                    .HasColumnName("alert_judge_url")
                    .HasColumnType("varchar(255)")
                    .HasComment("预警数据抓取为位置url")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Azdjd)
                    .HasColumnName("AZDJD")
                    .HasComment("安装点经度");

                entity.Property(e => e.Azdszycdid)
                    .HasColumnName("AZDSZYCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("安装点所在遗产点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Azdwd)
                    .HasColumnName("AZDWD")
                    .HasComment("安装点纬度");

                entity.Property(e => e.Azdwzms)
                    .HasColumnName("AZDWZMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("安装点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Azsj)
                    .HasColumnName("AZSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cjzq)
                    .HasColumnName("CJZQ")
                    .HasComment("周期");

                entity.Property(e => e.Cjzqdw)
                    .HasColumnName("CJZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Devid)
                    .HasColumnName("DEVID")
                    .HasColumnType("varchar(10)")
                    .HasComment("设备唯一标识ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dmgc)
                    .HasColumnName("DMGC")
                    .HasColumnType("varchar(50)")
                    .HasComment("地面高程(m)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Filename)
                    .HasColumnName("FILENAME")
                    .HasColumnType("varchar(255)")
                    .HasComment("Red5服务器下的文件名（只要文件名，前面路径不要。不区分格式：mp4，flv都放这里面。例如：xxx.flv）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fkey)
                    .HasColumnName("fkey")
                    .HasColumnType("varchar(50)")
                    .HasComment("外键-监测点ID或设备ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fkeytype)
                    .HasColumnName("fkeytype")
                    .HasColumnType("varchar(50)")
                    .HasComment("外键类别0-设备，1-监测点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Flv)
                    .HasColumnName("FLV")
                    .HasColumnType("varchar(255)")
                    .HasComment("FLV路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.GrabCycle)
                    .HasColumnName("grab_cycle")
                    .HasColumnType("int(11)")
                    .HasComment("抓取周期（单位：秒）");

                entity.Property(e => e.GrabCycleUnit)
                    .HasColumnName("grab_cycle_unit")
                    .HasColumnType("varchar(255)")
                    .HasComment("抓取周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.GrabError)
                    .HasColumnName("grab_error")
                    .HasColumnType("int(11)")
                    .HasComment("抓取误差（秒）");

                entity.Property(e => e.GrabMainUrl)
                    .HasColumnName("grab_main_url")
                    .HasColumnType("varchar(255)")
                    .HasComment("数据抓取地址（只有一个抓取url）")
                    .HasCharSet("utf32")
                    .HasCollation("utf32_general_ci");

                entity.Property(e => e.GrabType)
                    .HasColumnName("grab_type")
                    .HasColumnType("varchar(40)")
                    .HasComment("抓取类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ip)
                    .HasColumnName("IP")
                    .HasColumnType("varchar(255)")
                    .HasComment("视频流IP")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.IsActive)
                    .HasColumnName("is_active")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否启动(0-未启动,1-启动)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.IsStorage)
                    .HasColumnName("is_storage")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否存库");

                entity.Property(e => e.Islive)
                    .HasColumnName("ISLIVE")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否是直播")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcxid)
                    .HasColumnName("JCXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.LastGrabTime)
                    .HasColumnName("last_grab_time")
                    .HasColumnType("datetime")
                    .HasComment("上次抓取时间");

                entity.Property(e => e.Lxmc)
                    .HasColumnName("LXMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.M3u8)
                    .HasColumnName("M3U8")
                    .HasColumnType("varchar(255)")
                    .HasComment("M3U8路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ManagerId)
                    .HasColumnName("manager_id")
                    .HasColumnType("varchar(50)")
                    .HasComment("负责人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mp4)
                    .HasColumnName("MP4")
                    .HasColumnType("varchar(255)")
                    .HasComment("MP4路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pzid)
                    .HasColumnName("PZID")
                    .HasColumnType("varchar(80)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Realname)
                    .HasColumnName("REALNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("remark")
                    .HasColumnType("varchar(255)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Resid)
                    .HasColumnName("RESID")
                    .HasColumnType("varchar(50)")
                    .HasComment("资源id，关联硬件设备")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rtmp)
                    .HasColumnName("RTMP")
                    .HasColumnType("varchar(255)")
                    .HasComment("RTMP路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbbh)
                    .HasColumnName("SBBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sblx)
                    .HasColumnName("SBLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbmc)
                    .HasColumnName("SBMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfjt)
                    .HasColumnName("SFJT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否接通(0-否，1-是)");

                entity.Property(e => e.Sxtid)
                    .HasColumnName("SXTID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcShuiwei>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_shuiwei");

                entity.Property(e => e.Jcdid)
                    .HasColumnName("JCDID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jcz)
                    .HasColumnName("JCZ")
                    .HasColumnType("double(10,2)")
                    .HasComment("监测值，单位:m");

                entity.Property(e => e.Sblx)
                    .HasColumnName("SBLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sblxmc)
                    .HasColumnName("SBLXMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbmc)
                    .HasColumnName("SBMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcSlWdlNewestdxsj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_sl_wdl_newestdxsj");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");
            });

            modelBuilder.Entity<VGlyjcSpwySzlNewestdxsj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_spwy_szl_newestdxsj");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");
            });

            modelBuilder.Entity<VGlyjcStlsWdl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_stls_wdl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcrmc)
                    .HasColumnName("DCRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzmc)
                    .HasColumnName("JCWZMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Stlswzsd)
                    .HasColumnName("STLSWZSD")
                    .HasColumnType("double(15,2)")
                    .HasComment("水土流失位置深度（mm，估算）");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcStyycystjxzpjjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_styycystjxzpjjl");

                entity.Property(e => e.Bdlx)
                    .HasColumnName("BDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("变动类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdqkms)
                    .HasColumnName("BDQKMS")
                    .HasColumnType("varchar(50)")
                    .HasComment("变动情况描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bdyxcd)
                    .HasColumnName("BDYXCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Lkxid)
                    .IsRequired()
                    .HasColumnName("LKXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("轮廓线ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lkxmc)
                    .HasColumnName("LKXMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("XMMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzsffsbd)
                    .HasColumnName("XZSFFSBD")
                    .HasColumnType("varchar(50)")
                    .HasComment("现状是否发生变动")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcTjlkxjichusj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_tjlkxjichusj");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrmc)
                    .HasColumnName("CJRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fx)
                    .HasColumnName("FX")
                    .HasColumnType("tinyint(4)")
                    .HasComment("方向0-3：东南西北");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Lkxms)
                    .HasColumnName("LKXMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("轮廓线描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pzwzms)
                    .HasColumnName("PZWZMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("拍照位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Zp)
                    .HasColumnName("ZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcTlWdlNewestdxsj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_tl_wdl_newestdxsj");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");
            });

            modelBuilder.Entity<VGlyjcTtWdl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_tt_wdl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcrmc)
                    .HasColumnName("DCRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(255)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ttmj)
                    .HasColumnName("TTMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("土体坍塌面积（cm2）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcTtblWdl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_ttbl_wdl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcrmc)
                    .HasColumnName("DCRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(255)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ttblmj)
                    .HasColumnName("TTBLMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("土体剥落面积（㎡人工估算填写）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ttblsd)
                    .HasColumnName("TTBLSD")
                    .HasColumnType("varchar(50)")
                    .HasComment("土体剥落深度（cm人工估算填写）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcWhj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_whj");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dqsd)
                    .HasColumnName("DQSD")
                    .HasColumnType("double(6,2)")
                    .HasComment("大气湿度");

                entity.Property(e => e.Dqwd)
                    .HasColumnName("DQWD")
                    .HasColumnType("double(6,2)")
                    .HasComment("大气温度");

                entity.Property(e => e.Fs)
                    .HasColumnName("FS")
                    .HasColumnType("double(6,2)")
                    .HasComment("风速");

                entity.Property(e => e.Fx)
                    .HasColumnName("FX")
                    .HasColumnType("double(6,2)")
                    .HasComment("风向");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdid)
                    .HasColumnName("JCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdmc)
                    .HasColumnName("JCDMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(5)")
                    .HasComment("审核状态");
            });

            modelBuilder.Entity<VGlyjcWwbhwxda>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_wwbhwxda");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dalx)
                    .HasColumnName("DALX")
                    .HasColumnType("varchar(50)")
                    .HasComment("档案类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gcid)
                    .HasColumnName("GCID")
                    .HasColumnType("varchar(200)")
                    .HasComment("工程id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("xmmc")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcXjxmJcwzJcpz>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_xjxm_jcwz_jcpz");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxbid)
                    .IsRequired()
                    .HasColumnName("JCDXBID")
                    .HasColumnType("varchar(2)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jcdxfamc)
                    .HasColumnName("JCDXFAMC")
                    .HasColumnType("varchar(104)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxid)
                    .IsRequired()
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxlx)
                    .HasColumnName("JCDXLX")
                    .HasMaxLength(0)
                    .IsFixedLength();

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzid)
                    .HasColumnName("JCPZID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzbid)
                    .HasColumnName("JCWZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzmc)
                    .HasColumnName("JCWZMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzms)
                    .HasColumnName("JCWZMS")
                    .HasColumnType("text")
                    .HasComment("监测位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzsyt)
                    .HasColumnName("JCWZSYT")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lxzd)
                    .HasColumnName("LXZD")
                    .HasMaxLength(0)
                    .IsFixedLength();

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(100)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ms)
                    .HasColumnName("MS")
                    .HasColumnType("varchar(500)")
                    .HasComment("项目位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(255)")
                    .HasComment("排序");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasComment("监测周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrmc)
                    .HasColumnName("SJCJFZRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Xjxmgcfa)
                    .HasColumnName("XJXMGCFA")
                    .HasColumnType("varchar(200)")
                    .HasComment("新建项目工程方案")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcXjxmgzjlXjxmjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_xjxmgzjl_xjxmjl");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzmc)
                    .HasColumnName("JCWZMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfwg)
                    .HasColumnName("SFWG")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否完工")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjwgsj)
                    .HasColumnName("SJWGSJ")
                    .HasColumnType("datetime")
                    .HasComment("实际完工时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Xchjzplj)
                    .HasColumnName("XCHJZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("现场环境照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xjxmjskzqk)
                    .HasColumnName("XJXMJSKZQK")
                    .HasColumnType("varchar(50)")
                    .HasComment(" 新建项目建设控制情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xjxmmc)
                    .HasColumnName("xjxmmc")
                    .HasColumnType("varchar(100)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("XMMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmms)
                    .HasColumnName("XMMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("项目描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcXjxmjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_xjxmjl");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrmc)
                    .HasColumnName("CJRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Csjzz)
                    .HasColumnName("CSJZZ")
                    .HasColumnType("varchar(255)")
                    .HasComment("层数基准值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gd)
                    .HasColumnName("GD")
                    .HasComment("高度");

                entity.Property(e => e.Gdjzz)
                    .HasColumnName("GDJZZ")
                    .HasColumnType("varchar(255)")
                    .HasComment("高度基准值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Jgsj)
                    .HasColumnName("JGSJ")
                    .HasColumnType("datetime")
                    .HasComment("竣工时间");

                entity.Property(e => e.Jsdd)
                    .HasColumnName("JSDD")
                    .HasColumnType("varchar(200)")
                    .HasComment("建设地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jsmd)
                    .HasColumnName("JSMD")
                    .HasColumnType("varchar(500)")
                    .HasComment("建设目的")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kgsj)
                    .HasColumnName("KGSJ")
                    .HasColumnType("datetime")
                    .HasComment("开工时间");

                entity.Property(e => e.Lb)
                    .HasColumnName("LB")
                    .HasColumnType("varchar(10)")
                    .HasComment("类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mjjzz)
                    .HasColumnName("MJJZZ")
                    .HasColumnType("varchar(255)")
                    .HasComment("面积基准值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qtjzz)
                    .HasColumnName("QTJZZ")
                    .HasColumnType("varchar(255)")
                    .HasComment("其他基准值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scjzz)
                    .HasColumnName("SCJZZ")
                    .HasColumnType("varchar(255)")
                    .HasComment("色彩基准值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfazjsxkdfajx)
                    .HasColumnName("SFAZJSXKDFAJX")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否按照建设许可的方案进行");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Sfzdwwbmty)
                    .HasColumnName("SFZDWWBMTY")
                    .HasColumnType("varchar(200)")
                    .HasComment("是否征得文物部门同意")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Spyq)
                    .HasColumnName("SPYQ")
                    .HasColumnType("text")
                    .HasComment("审批要求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Syt)
                    .HasColumnName("SYT")
                    .HasColumnType("varchar(500)")
                    .HasComment("示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wjhqff)
                    .HasColumnName("WJHQFF")
                    .HasColumnType("varchar(4)")
                    .HasComment("违建获取方法")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wwbmpzxkwh)
                    .HasColumnName("WWBMPZXKWH")
                    .HasColumnType("varchar(50)")
                    .HasComment("文物部门批准许可文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xjxmbh)
                    .HasColumnName("XJXMBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("新建项目编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xjxmgcfa)
                    .HasColumnName("XJXMGCFA")
                    .HasColumnType("varchar(200)")
                    .HasComment("新建项目工程方案")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmjswztlj)
                    .HasColumnName("XMJSWZTLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("项目建设位置图路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmlb)
                    .HasColumnName("XMLB")
                    .HasColumnType("varchar(4)")
                    .HasComment("项目类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("XMMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmwz)
                    .HasColumnName("XMWZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("项目位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xsjzz)
                    .HasColumnName("XSJZZ")
                    .HasColumnType("varchar(255)")
                    .HasComment("形式基准值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zdmj)
                    .HasColumnName("ZDMJ")
                    .HasComment("占地面积");
            });

            modelBuilder.Entity<VGlyjcYcyjfkyj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_ycyjfkyj");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对应数据表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dw)
                    .HasColumnName("DW")
                    .HasColumnType("varchar(255)")
                    .HasComment("单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dwmc)
                    .HasColumnName("DWMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fkr)
                    .HasColumnName("FKR")
                    .HasColumnType("varchar(255)")
                    .HasComment("反馈人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fkwj)
                    .HasColumnName("FKWJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("反馈文件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jlr)
                    .HasColumnName("JLR")
                    .HasColumnType("varchar(50)")
                    .HasComment("记录人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jlsj)
                    .HasColumnName("JLSJ")
                    .HasColumnType("datetime")
                    .HasComment("记录时间");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID ")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Yj)
                    .HasColumnName("YJ")
                    .HasColumnType("text")
                    .HasComment("意见")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcYcyjzhzs>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_ycyjzhzs");

                entity.Property(e => e.Dycdyxcd)
                    .HasColumnName("DYCDYXCD")
                    .HasColumnType("varchar(10)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fswz)
                    .HasColumnName("FSWZ")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime");

                entity.Property(e => e.Jd).HasColumnName("JD");

                entity.Property(e => e.Lx)
                    .IsRequired()
                    .HasColumnName("LX")
                    .HasColumnType("varchar(1)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(500)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfjc)
                    .HasColumnName("SFJC")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sj)
                    .HasColumnName("SJ")
                    .HasColumnType("datetime");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(255)");

                entity.Property(e => e.Wd).HasColumnName("WD");

                entity.Property(e => e.Yjdj)
                    .HasColumnName("YJDJ")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcYcysdtxztyxtjycysxzjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_ycysdtxztyxtjycysxzjl");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxbid)
                    .IsRequired()
                    .HasColumnName("JCDXBID")
                    .HasColumnType("varchar(2)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jcdxfamc)
                    .HasColumnName("JCDXFAMC")
                    .HasColumnType("varchar(54)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxid)
                    .IsRequired()
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxlx)
                    .HasColumnName("JCDXLX")
                    .HasMaxLength(0)
                    .IsFixedLength();

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzid)
                    .HasColumnName("JCPZID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzbid)
                    .HasColumnName("JCWZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lxzd)
                    .HasColumnName("LXZD")
                    .HasMaxLength(0)
                    .IsFixedLength();

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasComment("监测周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrmc)
                    .HasColumnName("SJCJFZRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcYcysdtxztyxtjycysxzjlYcysqd>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_ycysdtxztyxtjycysxzjl_ycysqd");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrmc)
                    .HasColumnName("CJRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qksm)
                    .HasColumnName("QKSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("情况说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tzlj)
                    .HasColumnName("TZLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("图纸路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysbczt)
                    .HasColumnName("YCYSBCZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素保存状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ylt)
                    .HasColumnName("YLT")
                    .HasColumnType("varchar(200)")
                    .HasComment("预览图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcYcysdtyxtjcsj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_ycysdtyxtjcsj");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxbid)
                    .IsRequired()
                    .HasColumnName("JCDXBID")
                    .HasColumnType("varchar(3)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jcdxfamc)
                    .HasColumnName("JCDXFAMC")
                    .HasColumnType("varchar(54)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxid)
                    .IsRequired()
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxlx)
                    .HasColumnName("JCDXLX")
                    .HasMaxLength(0)
                    .IsFixedLength();

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzid)
                    .HasColumnName("JCPZID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzbid)
                    .HasColumnName("JCWZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lxzd)
                    .HasColumnName("LXZD")
                    .HasMaxLength(0)
                    .IsFixedLength();

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasComment("监测周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrmc)
                    .HasColumnName("SJCJFZRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcYhlmzpjyhlmjcjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_yhlmzpjyhlmjcjl");

                entity.Property(e => e.Bhxys)
                    .HasColumnName("BHXYS")
                    .HasColumnType("varchar(50)")
                    .HasComment("不和谐因素")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhxysfswz)
                    .HasColumnName("BHXYSFSWZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("不和谐因素发生位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhxysms)
                    .HasColumnName("BHXYSMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("不和谐因素描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzmc)
                    .HasColumnName("JZMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrq)
                    .HasColumnName("TXRQ")
                    .HasColumnType("datetime")
                    .HasComment("填写日期");

                entity.Property(e => e.Zplj)
                    .HasColumnName("ZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcYjczgz>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_yjczgz");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("处置跟踪时间");

                entity.Property(e => e.Czsm)
                    .HasColumnName("czsm")
                    .HasColumnType("varchar(500)")
                    .HasComment("处置跟踪说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Filename)
                    .HasColumnName("filename")
                    .HasColumnType("varchar(255)")
                    .HasComment("附件名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("处置跟踪ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Picname)
                    .HasColumnName("picname")
                    .HasColumnType("varchar(255)")
                    .HasComment("附图名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("remark")
                    .HasColumnType("varchar(255)")
                    .HasComment("备注信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Userid)
                    .HasColumnName("userid")
                    .HasColumnType("varchar(50)")
                    .HasComment("用户ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Username)
                    .HasColumnName("username")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjsfjc)
                    .HasColumnName("YJSFJC")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警是否解除")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxxid)
                    .IsRequired()
                    .HasColumnName("yjxxid")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警信息ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcYjjsxx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_yjjsxx");

                entity.Property(e => e.Realname)
                    .HasColumnName("REALNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tel)
                    .HasColumnName("TEL")
                    .HasColumnType("varchar(50)")
                    .HasComment("电话")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjdj)
                    .HasColumnName("YJDJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjjsrid)
                    .HasColumnName("YJJSRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警信息接收人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjpzfamc)
                    .HasColumnName("YJPZFAMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjszid)
                    .HasColumnName("YJSZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警设置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcYjsb>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_yjsb");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fjmc)
                    .HasColumnName("FJMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jsr)
                    .HasColumnName("JSR")
                    .HasColumnType("varchar(50)")
                    .HasComment("接收人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jsrbmid)
                    .HasColumnName("JSRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("接收人部门ID（接收部门（单位））")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jsrbmmc)
                    .HasColumnName("JSRBMMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbfs)
                    .HasColumnName("SBFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("上报方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbr)
                    .HasColumnName("SBR")
                    .HasColumnType("varchar(50)")
                    .HasComment("上报人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbsj)
                    .HasColumnName("SBSJ")
                    .HasColumnType("datetime")
                    .HasComment("上报时间");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Yjxxid)
                    .HasColumnName("YJXXID")
                    .HasColumnType("varchar(500)")
                    .HasComment("预警信息ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcYkljcqyKlgfxczpJcwz>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_ykljcqy_klgfxczp_jcwz");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fw)
                    .HasColumnName("fw")
                    .HasColumnType("varchar(5000)")
                    .HasComment("范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(500)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxbid)
                    .IsRequired()
                    .HasColumnName("JCDXBID")
                    .HasColumnType("varchar(3)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jcdxfamc)
                    .HasColumnName("JCDXFAMC")
                    .HasColumnType("varchar(504)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxid)
                    .IsRequired()
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(500)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxlx)
                    .HasColumnName("JCDXLX")
                    .HasMaxLength(0)
                    .IsFixedLength();

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzid)
                    .HasColumnName("JCPZID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzbid)
                    .HasColumnName("JCWZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzdtxxbid)
                    .HasColumnName("JCWZDTXXBID")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置地图信息表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzmc)
                    .HasColumnName("JCWZMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzms)
                    .HasColumnName("JCWZMS")
                    .HasColumnType("text")
                    .HasComment("监测位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzsyt)
                    .HasColumnName("JCWZSYT")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jdid)
                    .HasColumnName("JDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主表数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("lx")
                    .HasColumnType("varchar(500)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lxzd)
                    .HasColumnName("LXZD")
                    .HasMaxLength(0)
                    .IsFixedLength();

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(500)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(255)")
                    .HasComment("排序");

                entity.Property(e => e.Ryklxxz)
                    .HasColumnName("RYKLXXZ")
                    .HasColumnType("int(11)")
                    .HasComment("日游客量限制值");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasComment("监测周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrmc)
                    .HasColumnName("SJCJFZRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjd)
                    .HasColumnName("SSJD")
                    .HasColumnType("varchar(500)")
                    .HasComment("所属景点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssyklxzz)
                    .HasColumnName("SSYKLXZZ")
                    .HasColumnType("int(11)")
                    .HasComment("瞬时游客量限制值");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(1000)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zb)
                    .HasColumnName("ZB")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcYkljcqyRyklJcwz>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_ykljcqy_rykl_jcwz");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fw)
                    .HasColumnName("fw")
                    .HasColumnType("varchar(5000)")
                    .HasComment("范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(500)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxbid)
                    .IsRequired()
                    .HasColumnName("JCDXBID")
                    .HasColumnType("varchar(3)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jcdxfamc)
                    .HasColumnName("JCDXFAMC")
                    .HasColumnType("varchar(504)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxid)
                    .IsRequired()
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(500)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxlx)
                    .HasColumnName("JCDXLX")
                    .HasMaxLength(0)
                    .IsFixedLength();

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzid)
                    .HasColumnName("JCPZID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzbid)
                    .HasColumnName("JCWZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzdtxxbid)
                    .HasColumnName("JCWZDTXXBID")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置地图信息表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzmc)
                    .HasColumnName("JCWZMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzms)
                    .HasColumnName("JCWZMS")
                    .HasColumnType("text")
                    .HasComment("监测位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzsyt)
                    .HasColumnName("JCWZSYT")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jdid)
                    .HasColumnName("JDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主表数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("lx")
                    .HasColumnType("varchar(500)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lxzd)
                    .HasColumnName("LXZD")
                    .HasMaxLength(0)
                    .IsFixedLength();

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(500)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(255)")
                    .HasComment("排序");

                entity.Property(e => e.Ryklxxz)
                    .HasColumnName("RYKLXXZ")
                    .HasColumnType("int(11)")
                    .HasComment("日游客量限制值");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasComment("监测周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrmc)
                    .HasColumnName("SJCJFZRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjd)
                    .HasColumnName("SSJD")
                    .HasColumnType("varchar(500)")
                    .HasComment("所属景点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssyklxzz)
                    .HasColumnName("SSYKLXZZ")
                    .HasColumnType("int(11)")
                    .HasComment("瞬时游客量限制值");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(1000)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zb)
                    .HasColumnName("ZB")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcYscgWdl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_yscg_wdl");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cgmj)
                    .HasColumnName("CGMJ")
                    .HasColumnType("varchar(255)")
                    .HasComment("风化剥落面积（cm2）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dcr)
                    .HasColumnName("DCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("调查人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcrmc)
                    .HasColumnName("DCRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dcsj)
                    .HasColumnName("DCSJ")
                    .HasColumnType("datetime")
                    .HasComment("调查时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tq)
                    .HasColumnName("TQ")
                    .HasColumnType("varchar(255)")
                    .HasComment("天气")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(50)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbxx)
                    .HasColumnName("ZBXX")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcYt>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_yt");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lycs)
                    .HasColumnName("LYCS")
                    .HasColumnType("int(100)")
                    .HasComment("利用次数");

                entity.Property(e => e.Mid)
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccbdlj)
                    .HasColumnName("SJCCBDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccydlj)
                    .HasColumnName("SJCCYDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(20)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Wdbb)
                    .HasColumnName("WDBB")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdbzdw)
                    .HasColumnName("WDBZDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("文档编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdcjsj)
                    .HasColumnName("WDCJSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档创建时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdjz)
                    .HasColumnName("WDJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdlx)
                    .HasColumnName("WDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdmc)
                    .HasColumnName("WDMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdscsj)
                    .HasColumnName("WDSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档上传时间");

                entity.Property(e => e.Wdsddw)
                    .HasColumnName("WDSDDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdsdsj)
                    .HasColumnName("WDSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档审定时间");

                entity.Property(e => e.Wdsdz)
                    .HasColumnName("WDSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdzz)
                    .HasColumnName("WDZZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档作者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yswdbh)
                    .HasColumnName("YSWDBH")
                    .HasColumnType("varchar(100)")
                    .HasComment("原始文档编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdd)
                    .HasColumnName("YWDSCDD")
                    .HasColumnType("varchar(100)")
                    .HasComment("原文档收藏地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdw)
                    .HasColumnName("YWDSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原文档收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscrq)
                    .HasColumnName("YWDSCRQ")
                    .HasColumnType("datetime")
                    .HasComment("原文档生成日期");

                entity.Property(e => e.Yxfj)
                    .HasColumnName("YXFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("影像附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcZjrwb>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_zjrwb");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdx)
                    .HasColumnName("JCDX")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测对象")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcesjhzfj)
                    .HasColumnName("JCESJHZFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测数据汇总附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jckssj)
                    .HasColumnName("JCKSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测开始时间");

                entity.Property(e => e.Jcnrid)
                    .HasColumnName("JCNRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测内容ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcnrmc)
                    .HasColumnName("JCNRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("有监测内容，监测内容表里的显示字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsb)
                    .HasColumnName("JCSB")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测设备")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcxid)
                    .HasColumnName("JCXID")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测项ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcxmc)
                    .HasColumnName("JCXMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jczq)
                    .HasColumnName("JCZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jljjy)
                    .HasColumnName("JLJJY")
                    .HasColumnType("varchar(50)")
                    .HasComment("结论及建议")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jljjyfj)
                    .HasColumnName("JLJJYFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("结论及建议附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jtbw)
                    .HasColumnName("JTBW")
                    .HasColumnType("varchar(50)")
                    .HasComment("具体部位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qtxgfj)
                    .HasColumnName("QTXGFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("其他相关附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwcjr)
                    .HasColumnName("RWCJR")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务创建人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwcjrmc)
                    .HasColumnName("RWCJRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwfhsj)
                    .HasColumnName("RWFHSJ")
                    .HasColumnType("datetime")
                    .HasComment("任务返回时间");

                entity.Property(e => e.Rwmc)
                    .HasColumnName("RWMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("任务名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwscsj)
                    .HasColumnName("RWSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("任务生成时间");

                entity.Property(e => e.Rwyxjb)
                    .HasColumnName("RWYXJB")
                    .HasColumnType("varchar(255)")
                    .HasComment("任务优先级别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwzt)
                    .HasColumnName("RWZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("任务状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfpg)
                    .HasColumnName("SFPG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否评估");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Ssbm)
                    .HasColumnName("SSBM")
                    .HasColumnType("varchar(255)")
                    .HasComment("所属部门")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssbmmc)
                    .HasColumnName("SSBMMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Yhid)
                    .HasColumnName("YHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("用户ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yssjfj)
                    .HasColumnName("YSSJFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("原始数据附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zjdwid)
                    .HasColumnName("ZJDWID")
                    .HasColumnType("varchar(255)")
                    .HasComment("专家单位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zjdwmc)
                    .HasColumnName("ZJDWMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zjid)
                    .HasColumnName("ZJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("专家ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zjxm)
                    .HasColumnName("ZJXM")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcZjzxfxOrguserinfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_zjzxfx_orguserinfo");

                entity.Property(e => e.Bgfjmc)
                    .HasColumnName("BGFJMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("报告附件名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bgnrjj)
                    .HasColumnName("BGNRJJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("报告内容简介")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fxbgmc)
                    .HasColumnName("FXBGMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("分析报告名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fxsj)
                    .HasColumnName("FXSJ")
                    .HasColumnType("datetime")
                    .HasComment("分析时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Realname)
                    .HasColumnName("REALNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scr)
                    .HasColumnName("SCR")
                    .HasColumnType("varchar(50)")
                    .HasComment("上传人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Scsj)
                    .HasColumnName("SCSJ")
                    .HasColumnType("datetime")
                    .HasComment("上传时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<VGlyjcZrhjjcgzqklJcwz>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_zrhjjcgzqkl_jcwz");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxbid)
                    .IsRequired()
                    .HasColumnName("JCDXBID")
                    .HasColumnType("varchar(2)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jcdxfamc)
                    .HasColumnName("JCDXFAMC")
                    .HasColumnType("varchar(54)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxid)
                    .IsRequired()
                    .HasColumnName("JCDXID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxlx)
                    .HasColumnName("JCDXLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxlxmc)
                    .HasColumnName("JCDXLXMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcdd)
                    .HasColumnName("JCJLBCDD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjlbcsj)
                    .HasColumnName("JCJLBCSJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测记录保存时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzid)
                    .HasColumnName("JCPZID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzysjid)
                    .HasColumnName("JCPZYSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置元数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcsjksyfw)
                    .HasColumnName("JCSJKSYFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据可使用范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzbid)
                    .HasColumnName("JCWZBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzdtxxbid)
                    .HasColumnName("JCWZDTXXBID")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置地图信息表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzid)
                    .HasColumnName("JCWZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzmc)
                    .HasColumnName("JCWZMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测位置名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzms)
                    .HasColumnName("JCWZMS")
                    .HasColumnType("text")
                    .HasComment("监测位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzsyt)
                    .HasColumnName("JCWZSYT")
                    .HasColumnType("varchar(200)")
                    .HasComment("监测位置示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lxzd)
                    .IsRequired()
                    .HasColumnName("LXZD")
                    .HasColumnType("varchar(6)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(255)")
                    .HasComment("排序");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasComment("监测周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjcjfzrbmid)
                    .HasColumnName("SJCJFZRBMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人部门id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrmc)
                    .HasColumnName("SJCJFZRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssjg)
                    .HasColumnName("SSJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxq)
                    .HasColumnName("YJXQ")
                    .HasColumnType("varchar(20)")
                    .HasComment("预警需求")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zb)
                    .HasColumnName("ZB")
                    .HasColumnType("text")
                    .HasComment("监测位置坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zcdxlx)
                    .HasColumnName("ZCDXLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测对象类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zrhjjcxmbh)
                    .HasColumnName("ZRHJJCXMBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("自然环境监测项目编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zrhjjcxmnr)
                    .HasColumnName("ZRHJJCXMNR")
                    .HasColumnType("varchar(200)")
                    .HasComment("自然环境监测项目内容")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcZs>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_zs");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcd)
                    .HasColumnName("JCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sj)
                    .HasColumnName("SJ")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Zs)
                    .HasColumnName("ZS")
                    .HasColumnType("varchar(50)")
                    .HasComment("噪声")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcZsSs>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_zs_ss");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lycs)
                    .HasColumnName("LYCS")
                    .HasColumnType("int(100)")
                    .HasComment("利用次数");

                entity.Property(e => e.Mid)
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccbdlj)
                    .HasColumnName("SJCCBDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccydlj)
                    .HasColumnName("SJCCYDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(20)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Wdbb)
                    .HasColumnName("WDBB")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdbzdw)
                    .HasColumnName("WDBZDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("文档编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdcjsj)
                    .HasColumnName("WDCJSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档创建时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdjz)
                    .HasColumnName("WDJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdlx)
                    .HasColumnName("WDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdmc)
                    .HasColumnName("WDMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdscsj)
                    .HasColumnName("WDSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档上传时间");

                entity.Property(e => e.Wdsddw)
                    .HasColumnName("WDSDDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdsdsj)
                    .HasColumnName("WDSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档审定时间");

                entity.Property(e => e.Wdsdz)
                    .HasColumnName("WDSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdzz)
                    .HasColumnName("WDZZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档作者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yswdbh)
                    .HasColumnName("YSWDBH")
                    .HasColumnType("varchar(100)")
                    .HasComment("原始文档编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdd)
                    .HasColumnName("YWDSCDD")
                    .HasColumnType("varchar(100)")
                    .HasComment("原文档收藏地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdw)
                    .HasColumnName("YWDSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原文档收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscrq)
                    .HasColumnName("YWDSCRQ")
                    .HasColumnType("datetime")
                    .HasComment("原文档生成日期");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcZwWdlNewestdxsj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_zw_wdl_newestdxsj");

                entity.Property(e => e.Bhid)
                    .HasColumnName("BHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");
            });

            modelBuilder.Entity<VGlyjcZxWdlNewestdxsj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_zx_wdl_newestdxsj");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("病害编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VGlyjcZz>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_glyjc_zz");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lycs)
                    .HasColumnName("LYCS")
                    .HasColumnType("int(100)")
                    .HasComment("利用次数");

                entity.Property(e => e.Mid)
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccbdlj)
                    .HasColumnName("SJCCBDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccydlj)
                    .HasColumnName("SJCCYDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(20)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Wdbb)
                    .HasColumnName("WDBB")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdbzdw)
                    .HasColumnName("WDBZDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("文档编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdcjsj)
                    .HasColumnName("WDCJSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档创建时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdjz)
                    .HasColumnName("WDJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdlx)
                    .HasColumnName("WDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdmc)
                    .HasColumnName("WDMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdscsj)
                    .HasColumnName("WDSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档上传时间");

                entity.Property(e => e.Wdsddw)
                    .HasColumnName("WDSDDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdsdsj)
                    .HasColumnName("WDSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档审定时间");

                entity.Property(e => e.Wdsdz)
                    .HasColumnName("WDSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdzz)
                    .HasColumnName("WDZZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档作者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yswdbh)
                    .HasColumnName("YSWDBH")
                    .HasColumnType("varchar(100)")
                    .HasComment("原始文档编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdd)
                    .HasColumnName("YWDSCDD")
                    .HasColumnType("varchar(100)")
                    .HasComment("原文档收藏地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdw)
                    .HasColumnName("YWDSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原文档收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscrq)
                    .HasColumnName("YWDSCRQ")
                    .HasColumnType("datetime")
                    .HasComment("原文档生成日期");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VJcRcxcjlRealname>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_jc_rcxcjl_realname");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xcddwz)
                    .HasColumnName("XCDDWZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("巡查地点（位置）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcddycd)
                    .HasColumnName("XCDDYCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查地点（遗产点）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcqkmsfsycqkms)
                    .HasColumnName("XCQKMSFSYCQKMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("巡查情况描述-情况描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcqkmsxclx)
                    .HasColumnName("XCQKMSXCLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查情况描述-巡查路线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcsj)
                    .HasColumnName("XCSJ")
                    .HasColumnType("datetime")
                    .HasComment("巡查时间");

                entity.Property(e => e.Xcy)
                    .HasColumnName("XCY")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcyrealname)
                    .HasColumnName("XCYREALNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yczplj)
                    .HasColumnName("YCZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("异常照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yczpmc)
                    .HasColumnName("YCZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("异常照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VJcRcxcjlRealnameBack>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_jc_rcxcjl_realname_back");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xcddwz)
                    .HasColumnName("XCDDWZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("巡查地点（位置）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcddycd)
                    .HasColumnName("XCDDYCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查地点（遗产点）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcqkmsfsycqkms)
                    .HasColumnName("XCQKMSFSYCQKMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("巡查情况描述-情况描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcqkmsxclx)
                    .HasColumnName("XCQKMSXCLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查情况描述-巡查路线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcsj)
                    .HasColumnName("XCSJ")
                    .HasColumnType("datetime")
                    .HasComment("巡查时间");

                entity.Property(e => e.Xcy)
                    .HasColumnName("XCY")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcyrealname)
                    .HasColumnName("XCYREALNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yczplj)
                    .HasColumnName("YCZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("异常照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yczpmc)
                    .HasColumnName("YCZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("异常照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VJcRcxcycjlRealname>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_jc_rcxcycjl_realname");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dscqdcs)
                    .HasColumnName("DSCQDCS")
                    .HasColumnType("varchar(500)")
                    .HasComment("当时采取的措施")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fswzwz)
                    .HasColumnName("FSWZWZ")
                    .HasColumnType("varchar(255)")
                    .HasComment("发生地点（位置）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fswzycd)
                    .HasColumnName("FSWZYCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生地点（遗产点）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jchzp)
                    .HasColumnName("JCHZP")
                    .HasColumnType("varchar(255)")
                    .HasComment("解除后照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("解除时间");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfbj)
                    .HasColumnName("SFBJ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否报警")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjcjfs)
                    .HasColumnName("SJCJFS")
                    .HasColumnType("varchar(255)")
                    .HasComment("数据采集方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjms)
                    .HasColumnName("SJMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("事件描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交时间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Xcrq)
                    .HasColumnName("XCRQ")
                    .HasColumnType("datetime")
                    .HasComment("巡查日期");

                entity.Property(e => e.Xcy)
                    .HasColumnName("XCY")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcyrealname)
                    .HasColumnName("XCYREALNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yclx)
                    .HasColumnName("YCLX")
                    .HasColumnType("varchar(255)")
                    .HasComment("异常类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycsfjc)
                    .HasColumnName("YCSFJC")
                    .HasColumnType("varchar(255)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("异常是否解除")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycsj)
                    .HasColumnName("YCSJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("异常事件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("异常记录照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VJcpzJcsbinfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_jcpz_jcsbinfo");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdid)
                    .HasColumnName("JCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzfamc)
                    .HasColumnName("JCPZFAMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测配置方案名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VJieruTyphoonPath>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_jieru_typhoon_path");

                entity.Property(e => e.Airpressure)
                    .HasColumnName("airpressure")
                    .HasColumnType("int(11)")
                    .HasComment("气压");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Code)
                    .HasColumnName("code")
                    .HasColumnType("int(11)")
                    .HasComment("台风代码");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Enname)
                    .HasColumnName("ENNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("英文名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Happenyear)
                    .HasColumnName("happenyear")
                    .HasColumnType("char(4)")
                    .HasComment("发生年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Latitude)
                    .HasColumnName("latitude")
                    .HasComment("纬度");

                entity.Property(e => e.Longitude)
                    .HasColumnName("longitude")
                    .HasComment("经度");

                entity.Property(e => e.Movedirection)
                    .HasColumnName("movedirection")
                    .HasColumnType("varchar(50)")
                    .HasComment("移动方向")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Movespeed)
                    .HasColumnName("movespeed")
                    .HasColumnType("int(11)")
                    .HasComment("移动速度");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasColumnType("varchar(50)")
                    .HasComment("台风名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("pid")
                    .HasColumnType("varchar(50)")
                    .HasComment("父ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("发生时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasColumnType("varchar(50)")
                    .HasComment("台风类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Windpower)
                    .HasColumnName("windpower")
                    .HasColumnType("int(11)")
                    .HasComment("风力");

                entity.Property(e => e.Windradius10)
                    .HasColumnName("windradius10")
                    .HasComment("10级风圈（单位：km）");

                entity.Property(e => e.Windradius12)
                    .HasColumnName("windradius12")
                    .HasComment("12级风圈（单位：km）");

                entity.Property(e => e.Windradius7)
                    .HasColumnName("windradius7")
                    .HasComment("7级风圈（单位：km）");

                entity.Property(e => e.Windspeed)
                    .HasColumnName("windspeed")
                    .HasColumnType("int(11)")
                    .HasComment("风速");

                entity.Property(e => e.Year)
                    .HasColumnName("year")
                    .HasColumnType("char(4)")
                    .HasComment("发生年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VJieruTyphoonPoint>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_jieru_typhoon_point");

                entity.Property(e => e.Airpressure)
                    .HasColumnName("airpressure")
                    .HasColumnType("int(11)")
                    .HasComment("气压");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Code)
                    .HasColumnName("code")
                    .HasColumnType("int(11)")
                    .HasComment("台风代码");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Enname)
                    .HasColumnName("ENNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("英文名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbtime)
                    .HasColumnName("fbtime")
                    .HasColumnType("datetime")
                    .HasComment("发布时间");

                entity.Property(e => e.Happenyear)
                    .HasColumnName("happenyear")
                    .HasColumnType("char(4)")
                    .HasComment("发生年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Latitude)
                    .HasColumnName("latitude")
                    .HasComment("纬度");

                entity.Property(e => e.Longitude)
                    .HasColumnName("longitude")
                    .HasComment("经度");

                entity.Property(e => e.Movedirection)
                    .HasColumnName("movedirection")
                    .HasColumnType("varchar(50)")
                    .HasComment("移动方向")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Movespeed)
                    .HasColumnName("movespeed")
                    .HasColumnType("int(11)")
                    .HasComment("移动速度");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasColumnType("varchar(50)")
                    .HasComment("台风名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("pid")
                    .HasColumnType("varchar(50)")
                    .HasComment("父ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("发生时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasColumnType("varchar(50)")
                    .HasComment("台风类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Windpower)
                    .HasColumnName("windpower")
                    .HasColumnType("int(11)")
                    .HasComment("风力");

                entity.Property(e => e.Windradius10)
                    .HasColumnName("windradius10")
                    .HasComment("10级风圈");

                entity.Property(e => e.Windradius12)
                    .HasColumnName("windradius12")
                    .HasComment("12级风圈");

                entity.Property(e => e.Windradius7)
                    .HasColumnName("windradius7")
                    .HasComment("7级风圈");

                entity.Property(e => e.Windspeed)
                    .HasColumnName("windspeed")
                    .HasColumnType("int(11)")
                    .HasComment("风速");

                entity.Property(e => e.Year)
                    .HasColumnName("year")
                    .HasColumnType("char(4)")
                    .HasComment("发生年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VJieruWeatherJyl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_jieru_weather_jyl");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rain24)
                    .HasColumnName("rain_24")
                    .HasColumnType("varchar(20)")
                    .HasComment("24小时降雨量(mm)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.StationName)
                    .HasColumnName("stationName")
                    .HasColumnType("varchar(255)")
                    .HasComment("站点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.StationNum)
                    .HasColumnName("stationNum")
                    .HasColumnType("varchar(20)")
                    .HasComment("站点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<VKgfjjlYcq>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_kgfjjl_ycq");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djcfj)
                    .HasColumnName("DJCFJ")
                    .HasColumnType("int(11)")
                    .HasComment("第几次发掘");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fjmj)
                    .HasColumnName("FJMJ")
                    .HasColumnType("double(20,4)")
                    .HasComment("发掘面积（平方米）");

                entity.Property(e => e.Htmj)
                    .HasColumnName("HTMJ")
                    .HasColumnType("double(20,4)")
                    .HasComment("回填面积（平方米）");

                entity.Property(e => e.Htqk)
                    .HasColumnName("HTQK")
                    .HasColumnType("varchar(255)")
                    .HasComment("回填情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jssj)
                    .HasColumnName("JSSJ")
                    .HasColumnType("datetime")
                    .HasComment("结束时间");

                entity.Property(e => e.Kgfjxmid)
                    .HasColumnName("KGFJXMID")
                    .HasColumnType("varchar(255)")
                    .HasComment("考古发掘项目id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kssj)
                    .HasColumnName("KSSJ")
                    .HasColumnType("datetime")
                    .HasComment("开始时间");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(255)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xmmc)
                    .HasColumnName("XMMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycqid)
                    .HasColumnName("YCQID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycqmc)
                    .HasColumnName("YCQMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VKlgfsdxczpBcjcdx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_klgfsdxczp_bcjcdx");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdzbxx)
                    .HasColumnName("CJDZBXX")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集点坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(200)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(100)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("JCSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lyjd)
                    .HasColumnName("LYJD")
                    .HasColumnType("varchar(50)")
                    .HasComment("旅游景点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pssb)
                    .HasColumnName("PSSB")
                    .HasColumnType("varchar(50)")
                    .HasComment("拍摄设备")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tpcjdw)
                    .HasColumnName("TPCJDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片采集单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpcjzrr)
                    .HasColumnName("TPCJZRR")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片采集责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpgs)
                    .HasColumnName("TPGS")
                    .HasColumnType("varchar(30)")
                    .HasComment("图片格式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tplysjid)
                    .IsRequired()
                    .HasColumnName("TPLYSJID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tplysjshrid)
                    .HasColumnName("TPLYSJSHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tplysjshsj)
                    .HasColumnName("TPLYSJSHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Tpmc)
                    .HasColumnName("TPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("图片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpscsj)
                    .HasColumnName("TPSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("图片生成时间");

                entity.Property(e => e.Tpsddw)
                    .HasColumnName("TPSDDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("图片审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpsdsj)
                    .HasColumnName("TPSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("图片审定时间");

                entity.Property(e => e.Tpsdz)
                    .HasColumnName("TPSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpsjl)
                    .HasColumnName("TPSJL")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片数据量")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzcs)
                    .HasColumnName("XZCS")
                    .HasColumnType("int(11)")
                    .HasComment("下载次数");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zplj)
                    .HasColumnName("ZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VLeshanCll30>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_leshan_cll30");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cws)
                    .HasColumnName("cws")
                    .HasColumnType("int(11)")
                    .HasComment("车位数");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("停车场名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sccls)
                    .HasColumnName("sccls")
                    .HasColumnType("int(11)")
                    .HasComment("驶出车辆数");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Srcls)
                    .HasColumnName("srcls")
                    .HasColumnType("int(11)")
                    .HasComment("驶入车辆数");

                entity.Property(e => e.Sycws)
                    .HasColumnName("sycws")
                    .HasColumnType("int(11)")
                    .HasComment("剩余车位数");

                entity.Property(e => e.Tccbh)
                    .HasColumnName("tccbh")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("停车场编号")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ztcls)
                    .HasColumnName("ztcls")
                    .HasColumnType("int(11)")
                    .HasComment("在停车辆数");
            });

            modelBuilder.Entity<VLeshanJcparking>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_leshan_jcparking");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cws)
                    .HasColumnName("cws")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("jd")
                    .HasComment("经度");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("停车场名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sccls)
                    .HasColumnName("sccls")
                    .HasColumnType("int(11)")
                    .HasComment("驶出车辆数");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Srcls)
                    .HasColumnName("srcls")
                    .HasColumnType("int(11)")
                    .HasComment("驶入车辆数");

                entity.Property(e => e.Sycws)
                    .HasColumnName("sycws")
                    .HasColumnType("int(11)")
                    .HasComment("剩余车位数");

                entity.Property(e => e.Tccbh)
                    .HasColumnName("tccbh")
                    .HasColumnType("varchar(200)")
                    .HasComment("停车场编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("wd")
                    .HasComment("纬度");

                entity.Property(e => e.Ztcls)
                    .HasColumnName("ztcls")
                    .HasColumnType("int(11)")
                    .HasComment("在停车辆数");
            });

            modelBuilder.Entity<VLeshanParkinfocll>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_leshan_parkinfocll");

                entity.Property(e => e.Cllsum)
                    .HasColumnName("CLLSUM")
                    .HasColumnType("decimal(32,0)");

                entity.Property(e => e.Shzt)
                    .IsRequired()
                    .HasColumnName("SHZT")
                    .HasColumnType("varchar(1)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Time)
                    .HasColumnName("TIME")
                    .HasColumnType("varchar(10)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<VLeshanParkingdesc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_leshan_parkingdesc");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cws)
                    .HasColumnName("cws")
                    .HasColumnType("int(11)")
                    .HasComment("车位数");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("停车场名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sccls)
                    .HasColumnName("sccls")
                    .HasColumnType("int(11)")
                    .HasComment("驶出车辆数");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Srcls)
                    .HasColumnName("srcls")
                    .HasColumnType("int(11)")
                    .HasComment("驶入车辆数");

                entity.Property(e => e.Sycws)
                    .HasColumnName("sycws")
                    .HasColumnType("int(11)")
                    .HasComment("剩余车位数");

                entity.Property(e => e.Tccbh)
                    .HasColumnName("tccbh")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("停车场编号")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ztcls)
                    .HasColumnName("ztcls")
                    .HasColumnType("int(11)")
                    .HasComment("在停车辆数");
            });

            modelBuilder.Entity<VLeshanParkinglatest>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_leshan_parkinglatest");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cws)
                    .HasColumnName("cws")
                    .HasColumnType("int(11)")
                    .HasComment("车位数");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("停车场名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sccls)
                    .HasColumnName("sccls")
                    .HasColumnType("int(11)")
                    .HasComment("驶出车辆数");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Srcls)
                    .HasColumnName("srcls")
                    .HasColumnType("int(11)")
                    .HasComment("驶入车辆数");

                entity.Property(e => e.Sycws)
                    .HasColumnName("sycws")
                    .HasColumnType("int(11)")
                    .HasComment("剩余车位数");

                entity.Property(e => e.Tccbh)
                    .HasColumnName("tccbh")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("停车场编号")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ztcls)
                    .HasColumnName("ztcls")
                    .HasColumnType("int(11)")
                    .HasComment("在停车辆数");
            });

            modelBuilder.Entity<VLeshanRykl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_leshan_rykl");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(500)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.NumEnter)
                    .HasColumnName("num_enter")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时入园人数");

                entity.Property(e => e.NumIn)
                    .HasColumnName("num_in")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时在园人数");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ykqyid)
                    .HasColumnName("YKQYID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("游客区域id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VLeshanRyklDailymax>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_leshan_rykl_dailymax");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime");

                entity.Property(e => e.Ykl)
                    .HasColumnName("YKL")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时入园人数");

                entity.Property(e => e.Ykqyid)
                    .HasColumnName("YKQYID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("游客区域id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VLeshanRyklLatestdaily>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_leshan_rykl_latestdaily");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.NumEnter)
                    .HasColumnName("num_enter")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时入园人数");

                entity.Property(e => e.NumIn)
                    .HasColumnName("num_in")
                    .HasColumnType("int(11)")
                    .HasComment("景点实时在园人数");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime")
                    .HasComment("时间");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");
            });

            modelBuilder.Entity<VLsdlNewestinfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_lsdl_newestinfo");

                entity.Property(e => e.Jd)
                    .HasColumnName("jd")
                    .HasComment("精度");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfcj)
                    .HasColumnName("sfcj")
                    .HasColumnType("int(1)");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjbbmc)
                    .IsRequired()
                    .HasColumnName("sjbbmc")
                    .HasColumnType("varchar(14)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("sjid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("wd")
                    .HasComment("纬度");

                entity.Property(e => e.Yjdj)
                    .HasColumnName("yjdj")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywzj)
                    .IsRequired()
                    .HasColumnName("ywzj")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VLsdlNewestupdatetime>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_lsdl_newestupdatetime");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dxid)
                    .HasColumnName("dxid")
                    .HasColumnType("varchar(50)")
                    .HasComment("路段名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VLsdljcjlBcjcdx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_lsdljcjl_bcjcdx");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlkdbhqk)
                    .HasColumnName("DLKDBHQK")
                    .HasColumnType("varchar(50)")
                    .HasComment("道路宽度变化情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlpz)
                    .HasColumnName("DLPZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("道路铺装")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlzplj)
                    .HasColumnName("DLZPLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("道路照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("精度");

                entity.Property(e => e.Ldmc)
                    .HasColumnName("LDMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("路段名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qtcz)
                    .HasColumnName("QTCZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("墙体材质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qtys)
                    .HasColumnName("QTYS")
                    .HasColumnType("varchar(50)")
                    .HasComment("墙体颜色")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Szdl)
                    .HasColumnName("SZDL")
                    .HasColumnType("varchar(50)")
                    .HasComment("所在道路")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Szhx)
                    .HasColumnName("SZHX")
                    .HasColumnType("varchar(50)")
                    .HasComment("所在环线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrq)
                    .HasColumnName("TXRQ")
                    .HasColumnType("datetime")
                    .HasComment("填写日期");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wqcd)
                    .HasColumnName("WQCD")
                    .HasComment("围墙长度");

                entity.Property(e => e.Wqcdbhqk)
                    .HasColumnName("WQCDBHQK")
                    .HasColumnType("varchar(50)")
                    .HasComment("围墙长度变化情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wqgd)
                    .HasColumnName("WQGD")
                    .HasComment("围墙高度");

                entity.Property(e => e.Wqgdbhqk)
                    .HasColumnName("WQGDBHQK")
                    .HasColumnType("varchar(50)")
                    .HasComment("围墙高度变化情况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wqwzbh)
                    .HasColumnName("WQWZBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("围墙位置变化")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wqydlgkb)
                    .HasColumnName("WQYDLGKB")
                    .HasColumnType("varchar(50)")
                    .HasComment("围墙与道路高宽比")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VMapLayerCommon>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_map_layer_common");

                entity.Property(e => e.Bm)
                    .HasColumnName("bm")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("bz")
                    .HasColumnType("text")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Relationid)
                    .HasColumnName("relationid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tl)
                    .HasColumnName("tl")
                    .HasColumnType("varchar(300)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Typelx)
                    .HasColumnName("typelx")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Url)
                    .HasColumnName("url")
                    .HasColumnType("varchar(500)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbck)
                    .HasColumnName("zbck")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VMetadataSzlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_metadata_szlysj");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsb)
                    .HasColumnName("CJSB")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集设备")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(100)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(100)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsz)
                    .HasColumnName("JCSZ")
                    .HasColumnType("varchar(30)")
                    .HasComment("监测数值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcszcjfs)
                    .HasColumnName("JCSZCJFS")
                    .HasColumnType("varchar(100)")
                    .HasComment("监测数值采集方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcszm)
                    .HasColumnName("JCSZM")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数值名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jldw)
                    .HasColumnName("JLDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("计量单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shr)
                    .HasColumnName("SHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjlrdw)
                    .HasColumnName("SJCJLRDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("数据采集录入单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjlrzrr)
                    .HasColumnName("SJCJLRZRR")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集录入责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjfhdw)
                    .HasColumnName("SJFHDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("数据复核单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjfhr)
                    .HasColumnName("SJFHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据复核人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjfhsj)
                    .HasColumnName("SJFHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据复核时间");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjscjlsj)
                    .HasColumnName("SJSCJLSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据生成/记录时间");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szcjdzbxx)
                    .HasColumnName("SZCJDZBXX")
                    .HasColumnType("varchar(50)")
                    .HasComment("数值采集点坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txr)
                    .HasColumnName("TXR")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(100)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzcs)
                    .HasColumnName("XZCS")
                    .HasColumnType("int(11)")
                    .HasComment("下载次数");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysdlxxzb)
                    .HasColumnName("YCYSDLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VMetadataTplysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_metadata_tplysj");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdzbxx)
                    .HasColumnName("CJDZBXX")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集点坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(200)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(100)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pssb)
                    .HasColumnName("PSSB")
                    .HasColumnType("varchar(50)")
                    .HasComment("拍摄设备")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Tpcjdw)
                    .HasColumnName("TPCJDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片采集单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpcjzrr)
                    .HasColumnName("TPCJZRR")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片采集责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpgs)
                    .HasColumnName("TPGS")
                    .HasColumnType("varchar(30)")
                    .HasComment("图片格式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpmc)
                    .HasColumnName("TPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("图片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpscsj)
                    .HasColumnName("TPSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("图片生成时间");

                entity.Property(e => e.Tpsddw)
                    .HasColumnName("TPSDDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("图片审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpsdsj)
                    .HasColumnName("TPSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("图片审定时间");

                entity.Property(e => e.Tpsdz)
                    .HasColumnName("TPSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpsjl)
                    .HasColumnName("TPSJL")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片数据量")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzcs)
                    .HasColumnName("XZCS")
                    .HasColumnType("int(11)")
                    .HasComment("下载次数");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VMetadataTzlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_metadata_tzlysj");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Chr)
                    .HasColumnName("CHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("测绘人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Chzrdw)
                    .HasColumnName("CHZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("测绘责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ctshr)
                    .HasColumnName("CTSHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("成图审核人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ctshsj)
                    .HasColumnName("CTSHSJ")
                    .HasColumnType("datetime")
                    .HasComment("成图审核时间");

                entity.Property(e => e.Ctsj)
                    .HasColumnName("CTSJ")
                    .HasColumnType("datetime")
                    .HasComment("成图时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fgfw)
                    .HasColumnName("FGFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("覆盖范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(50)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tfcc)
                    .HasColumnName("TFCC")
                    .HasColumnType("varchar(100)")
                    .HasComment("图幅尺寸")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Tzgs)
                    .HasColumnName("TZGS")
                    .HasColumnType("varchar(20)")
                    .HasComment("图纸格式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzjz)
                    .HasColumnName("TZJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("图纸介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzlb)
                    .HasColumnName("TZLB")
                    .HasColumnType("varchar(200)")
                    .HasComment("图纸类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzmc)
                    .HasColumnName("TZMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("图纸名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tznrlx)
                    .HasColumnName("TZNRLX")
                    .HasColumnType("varchar(100)")
                    .HasComment("图纸内容类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzsxblc)
                    .HasColumnName("TZSXBLC")
                    .HasColumnType("varchar(20)")
                    .HasComment("图纸属性比例尺")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzcs)
                    .HasColumnName("XZCS")
                    .HasColumnType("int(11)")
                    .HasComment("下载次数");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytbh)
                    .HasColumnName("YTBH")
                    .HasColumnType("varchar(200)")
                    .HasComment("原图编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytblc)
                    .HasColumnName("YTBLC")
                    .HasColumnType("varchar(50)")
                    .HasComment("原图比例尺")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytmc)
                    .HasColumnName("YTMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("原图名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytscdw)
                    .HasColumnName("YTSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原图收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytzbx)
                    .HasColumnName("YTZBX")
                    .HasColumnType("varchar(50)")
                    .HasComment("原图坐标系")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytztdw)
                    .HasColumnName("YTZTDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("原图制图单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytztsj)
                    .HasColumnName("YTZTSJ")
                    .HasColumnType("datetime")
                    .HasComment("原图制图时间");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VMetadataWdlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_metadata_wdlysj");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lycs)
                    .HasColumnName("LYCS")
                    .HasColumnType("int(100)")
                    .HasComment("利用次数");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjccbdlj)
                    .HasColumnName("SJCCBDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccydlj)
                    .HasColumnName("SJCCYDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(20)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Wdbb)
                    .HasColumnName("WDBB")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdbzdw)
                    .HasColumnName("WDBZDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("文档编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdcjsj)
                    .HasColumnName("WDCJSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档创建时间");

                entity.Property(e => e.Wdjz)
                    .HasColumnName("WDJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdlx)
                    .HasColumnName("WDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdmc)
                    .HasColumnName("WDMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdscsj)
                    .HasColumnName("WDSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档上传时间");

                entity.Property(e => e.Wdsddw)
                    .HasColumnName("WDSDDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdsdsj)
                    .HasColumnName("WDSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档审定时间");

                entity.Property(e => e.Wdsdz)
                    .HasColumnName("WDSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdzz)
                    .HasColumnName("WDZZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档作者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yswdbh)
                    .HasColumnName("YSWDBH")
                    .HasColumnType("varchar(100)")
                    .HasComment("原始文档编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdd)
                    .HasColumnName("YWDSCDD")
                    .HasColumnType("varchar(100)")
                    .HasComment("原文档收藏地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdw)
                    .HasColumnName("YWDSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原文档收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscrq)
                    .HasColumnName("YWDSCRQ")
                    .HasColumnType("datetime")
                    .HasComment("原文档生成日期");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VMetadataYxlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_metadata_yxlysj");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(100)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(20)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(100)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysyxcjdw)
                    .HasColumnName("YSYXCJDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原始影像采集单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxcjfw)
                    .HasColumnName("YXCJFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("影像采集范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxcldw)
                    .HasColumnName("YXCLDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("影像处理单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxfbl)
                    .HasColumnName("YXFBL")
                    .HasColumnType("varchar(20)")
                    .HasComment("影像分辨率")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxfw)
                    .HasColumnName("YXFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("影像范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxlx)
                    .HasColumnName("YXLX")
                    .HasColumnType("varchar(20)")
                    .HasComment("影像类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxly)
                    .HasColumnName("YXLY")
                    .HasColumnType("varchar(200)")
                    .HasComment("影像来源")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxmc)
                    .HasColumnName("YXMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("影像名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxscsj)
                    .HasColumnName("YXSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("影像生成时间");

                entity.Property(e => e.Yxsddw)
                    .HasColumnName("YXSDDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("影像审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxsdsj)
                    .HasColumnName("YXSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("影像审定时间");

                entity.Property(e => e.Yxsdz)
                    .HasColumnName("YXSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("影像审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxsjl)
                    .HasColumnName("YXSJL")
                    .HasColumnType("varchar(20)")
                    .HasComment("影像数据量")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(100)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VNbexportAfxfqk>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_nbexport_afxfqk");

                entity.Property(e => e.AqsgjlValue)
                    .HasColumnName("AQSGjlVALUE")
                    .HasColumnType("text")
                    .HasComment("安全事故记录")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Aqsgvalue)
                    .HasColumnName("AQSGVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("安全事故记录")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Axfxtnrvalue)
                    .HasColumnName("AXFXTNRVALUE")
                    .HasColumnType("text")
                    .HasComment("安消防系统内容")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jcsjvalue)
                    .HasColumnName("JCSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("建成时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jftrzevalue)
                    .HasColumnName("JFTRZEVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Sfvalue)
                    .HasColumnName("SFVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("记录是否")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Zyczjfvalue)
                    .HasColumnName("ZYCZJFVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<VNbexportBhglghbzqkjlb>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_nbexport_bhglghbzqkjlb");

                entity.Property(e => e.Addline)
                    .HasColumnName("ADDLINE")
                    .HasColumnType("varchar(50)")
                    .HasComment("新加一行")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bzdwvalue)
                    .HasColumnName("BZDWVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("编制单位")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bzhgbztvalue)
                    .HasColumnName("BZHGBZTVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ghqxvalue)
                    .HasColumnName("GHQXVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("规划期限")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Mcvalue)
                    .HasColumnName("MCVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<VNbexportBhglghzxqk>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_nbexport_bhglghzxqk");

                entity.Property(e => e.Bhglvalue)
                    .IsRequired()
                    .HasColumnName("BHGLVALUE")
                    .HasColumnType("varchar(1)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bzvalue)
                    .HasColumnName("BZVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ghmcvalue)
                    .HasColumnName("GHMCVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("规划名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ghxmvalue)
                    .HasColumnName("GHXMVALUE")
                    .HasColumnType("text")
                    .HasComment("规划项目")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Isavailable)
                    .HasColumnName("ISAVAILABLE")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'1'")
                    .HasComment("是否可用（0不可用，1可用）");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Qksmvalue)
                    .HasColumnName("QKSMVALUE")
                    .HasColumnType("text")
                    .HasComment("情况说明")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Ssqkvalue)
                    .HasColumnName("SSQKVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施情况")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Zhpjvalue)
                    .HasColumnName("ZHPJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VNbexportBhgljfqk>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_nbexport_bhgljfqk");

                entity.Property(e => e.Bhglzjfvalue)
                    .HasColumnName("BHGLZJFVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bhxsvalue)
                    .HasColumnName("BHXSVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Hjzzvalue)
                    .HasColumnName("HJZZVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jcglvalue)
                    .HasColumnName("JCGLVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Lyglvalue)
                    .HasColumnName("LYGLVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Qtvalue)
                    .HasColumnName("QTVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Rykzvalue)
                    .HasColumnName("RYKZVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Xcjyvalue)
                    .HasColumnName("XCJYVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Xsyjvalue)
                    .HasColumnName("XSYJVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<VNbexportBhgljgqk>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_nbexport_bhgljgqk");

                entity.Property(e => e.Aqfzrvalue)
                    .HasColumnName("AQFZRVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("安全责任人")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Dzyxvalue)
                    .HasColumnName("DZYXVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("电子邮箱")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Fddbrvalue)
                    .HasColumnName("FDDBRVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("法定代表人")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Gfwzvalue)
                    .HasColumnName("GFWZVALUE")
                    .HasColumnType("varchar(500)")
                    .HasComment("官方网站")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Glquvalue)
                    .HasColumnName("GLQUVALUE")
                    .HasColumnType("text")
                    .HasComment("管理区域")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Glzevalue)
                    .HasColumnName("GLZEVALUE")
                    .HasColumnType("text")
                    .HasComment("管理责任")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Gzryzsvalue)
                    .HasColumnName("GZRYZSVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jgclsjvalue)
                    .HasColumnName("JGCLSJVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("机构成立时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jggmvalue)
                    .HasColumnName("JGGMVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jgjbvalue)
                    .HasColumnName("JGJBVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("机构级别")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jgmcvalue)
                    .HasColumnName("JGMCVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("机构名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Lxdhvalue)
                    .HasColumnName("LXDHVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("联系电话")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Lxfsvalue)
                    .HasColumnName("LXFSVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("联系方式")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Lxrxmvalue)
                    .HasColumnName("LXRXMVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("联系人姓名")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Sjgldwvalue)
                    .HasColumnName("SJGLDWVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("上级管理单位")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Szxzqvalue)
                    .HasColumnName("SZXZQVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("所在行政区")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Xzzfzrvalue)
                    .HasColumnName("XZZFZRVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("行政总负责人")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zyjflyname)
                    .HasColumnName("ZYJFLYNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zyjflyvalue)
                    .HasColumnName("ZYJFLYVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("主要经费来源")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zzjgdmvalue)
                    .HasColumnName("ZZJGDMVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("组织机构代码")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<VNbexportBhglryqk>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_nbexport_bhglryqk");

                entity.Property(e => e.Bhglryzsvalue)
                    .HasColumnName("BHGLRYZSVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bkryslvalue)
                    .HasColumnName("BKRYSLVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bsyjsrsvalue)
                    .HasColumnName("BSYJSRSVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjzcrsvalue)
                    .HasColumnName("CJZCRSVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Csycbhdryslvalue)
                    .HasColumnName("CSYCBHDRYSLVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Gjzcrsvalue)
                    .HasColumnName("GJZCRSVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Qtxlvalue)
                    .HasColumnName("QTXLVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Qtzcrsvalue)
                    .HasColumnName("QTZCRSVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Qtzgvalue)
                    .HasColumnName("QTZGVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Ssyjsrsvalue)
                    .HasColumnName("SSYJSRSVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Zbrsvalue)
                    .HasColumnName("ZBRSVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zhglryslvalue)
                    .HasColumnName("ZHGLRYSLVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zjzcrsvalue)
                    .HasColumnName("ZJZCRSVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zkryslvalue)
                    .HasColumnName("ZKRYSLVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zygcvalue)
                    .HasColumnName("ZYGCVALUE")
                    .HasColumnType("text")
                    .HasComment("专业构成")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zyjsryslvalue)
                    .HasColumnName("ZYJSRYSLVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zzcsjcdryslvalue)
                    .HasColumnName("ZZCSJCDRYSLVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<VNbexportBhzshjzzgcqk>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_nbexport_bhzshjzzgcqk");

                entity.Property(e => e.Bhzsvalue)
                    .IsRequired()
                    .HasColumnName("BHZSVALUE")
                    .HasColumnType("varchar(1)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dgsjvalue)
                    .HasColumnName("DGSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("动工时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Gcxmlxvalue)
                    .HasColumnName("GCXMLXVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Isavailable)
                    .HasColumnName("ISAVAILABLE")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'1'")
                    .HasComment("是否可用（0不可用，1可用）");

                entity.Property(e => e.Issctp)
                    .HasColumnName("ISSCTP")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否上传了图片（0没有上传过图片）");

                entity.Property(e => e.Jftrzevalue)
                    .HasColumnName("JFTRZEVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jgsjvalue)
                    .HasColumnName("JGSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("竣工时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wwbmpzxkwhvalue)
                    .HasColumnName("WWBMPZXKWHVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("文物部门批准/许可文号")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Xmmcvalue)
                    .HasColumnName("XMMCVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Xmztvalue)
                    .HasColumnName("XMZTVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yssjvalue)
                    .HasColumnName("YSSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("验收时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Yswhvalue)
                    .HasColumnName("YSWHVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("验收文号")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zyczjfvalue)
                    .HasColumnName("ZYCZJFVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<VNbexportCbzz>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_nbexport_cbzz");

                entity.Property(e => e.Cbsvalue)
                    .HasColumnName("CBSVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("出版社")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Sfvalue)
                    .HasColumnName("SFVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("记录是否")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Shvalue)
                    .HasColumnName("SHVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("书号")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Zsvalue)
                    .HasColumnName("ZSVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("字数")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zzmcvalue)
                    .HasColumnName("ZZMCVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("著作名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zzvalue)
                    .HasColumnName("ZZVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("作者")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<VNbexportJcjgqk>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_nbexport_jcjgqk");

                entity.Property(e => e.Cddzrvalue)
                    .HasColumnName("CDDZRVALUE")
                    .HasColumnType("text")
                    .HasComment("承担的责任")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Dzyxvalue)
                    .HasColumnName("DZYXVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("电子邮箱")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Fzrlxdhvalue)
                    .HasColumnName("FZRLXDHVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("负责人联系电话")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Fzrvalue)
                    .HasColumnName("FZRVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("负责人")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jcgzwzvalue)
                    .HasColumnName("JCGZWZVALUE")
                    .HasColumnType("varchar(500)")
                    .HasComment("监测工作网站")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jcjgmcvalue)
                    .HasColumnName("JCJGMCVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("监测机构名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jgclsjvalue)
                    .HasColumnName("JGCLSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("机构成立时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jgjbvalue)
                    .HasColumnName("JGJBVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("机构级别")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Lxdhvalue)
                    .HasColumnName("LXDHVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("联系电话")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Lxrvalue)
                    .HasColumnName("LXRVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("联系人")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Ryzsvalue)
                    .HasColumnName("RYZSVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sfvalue)
                    .HasColumnName("SFVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("记录是否")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sfwdljzvalue)
                    .HasColumnName("SFWDLJZVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测机构是否为独立建制")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sjgldwvalue)
                    .HasColumnName("SJGLDWVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("上级管理单位")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<VNbexportJskzjcqk>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_nbexport_jskzjcqk");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dycdyxpgvalue)
                    .HasColumnName("DYCDYXPGVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Isavailable)
                    .HasColumnName("ISAVAILABLE")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'1'")
                    .HasComment("是否可用（1可用，0不可用）");

                entity.Property(e => e.Jgsjvalue)
                    .HasColumnName("JGSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("竣工时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jsddvalue)
                    .HasColumnName("JSDDVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("建设地点")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jsmdvalue)
                    .HasColumnName("JSMDVALUE")
                    .HasColumnType("text")
                    .HasComment("建设目的")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Kgsjvalue)
                    .HasColumnName("KGSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("开工时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Pzsjvalue)
                    .HasColumnName("PZSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("批准时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Qtbmpzwhvalue)
                    .HasColumnName("QTBMPZWHVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("其他部门批准文号")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wwbmpzwhvalue)
                    .HasColumnName("WWBMPZWHVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("文物部门批准文号")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Xjxmvalue)
                    .IsRequired()
                    .HasColumnName("XJXMVALUE")
                    .HasColumnType("varchar(1)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Xmmcvalue)
                    .HasColumnName("XMMCVALUE")
                    .HasColumnType("varchar(500)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zdmjvalue)
                    .HasColumnName("ZDMJVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<VNbexportKgfjqk>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_nbexport_kgfjqk");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fjmjvalue)
                    .HasColumnName("FJMJVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Htmjvalue)
                    .HasColumnName("HTMJVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Isavailable)
                    .HasColumnName("ISAVAILABLE")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'1'")
                    .HasComment("是否可用（0不可用，1可用）");

                entity.Property(e => e.Jftrzevalue)
                    .HasColumnName("JFTRZEVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jssjvalue)
                    .HasColumnName("JSSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("结束时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Kgfjvalue)
                    .IsRequired()
                    .HasColumnName("KGFJVALUE")
                    .HasColumnType("varchar(1)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Kssjvalue)
                    .HasColumnName("KSSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("开始时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Pzfjmjvalue)
                    .HasColumnName("PZFJMJVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wwbmpzwhvalue)
                    .HasColumnName("WWBMPZWHVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("文物部门批准文号")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Xmmcvalue)
                    .HasColumnName("XMMCVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Yyfjxcbhdjfvalue)
                    .HasColumnName("YYFJXCBHDJFVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<VNbexportKykt>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_nbexport_kykt");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jxsjvalue)
                    .HasColumnName("JXSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("结项时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Kssjvalue)
                    .HasColumnName("KSSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("开始时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ktfzrvalue)
                    .HasColumnName("KTFZRVALUE")
                    .HasColumnType("varchar(100)")
                    .HasComment("课题负责人")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ktmcvalue)
                    .HasColumnName("KTMCVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("课题名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ktztvalue)
                    .HasColumnName("KTZTVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("课题状态")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Sfvalue)
                    .HasColumnName("SFVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("记录是否")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wtdwvalue)
                    .HasColumnName("WTDWVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("委托单位")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Zyyjnrvalue)
                    .HasColumnName("ZYYJNRVALUE")
                    .HasColumnType("text")
                    .HasComment("主要研究内容")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<VNbexportLyxyndjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_nbexport_lyxyndjl");

                entity.Property(e => e.Bhgljgcyjyfwzsrvalue)
                    .HasColumnName("BHGLJGCYJYFWZSRVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cyxgbhglgzycdjmslvalue)
                    .HasColumnName("CYXGBHGLGZYCDJMSLVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Nmpzsrvalue)
                    .HasColumnName("NMPZSRVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Smvalue)
                    .HasColumnName("SMVALUE")
                    .HasColumnType("text")
                    .HasComment("说明")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<VNbexportPxynljsqkGljgrycy>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_nbexport_pxynljsqk_gljgrycy");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Pxlxvalue)
                    .HasColumnName("PXLXVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pxsjvalue)
                    .HasColumnName("PXSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("培训时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Pxxmmcvalue)
                    .HasColumnName("PXXMMCVALUE")
                    .HasColumnType("varchar(500)")
                    .HasComment("培训项目名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Pxzcjfvalue)
                    .HasColumnName("PXZCJFVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Sfvalue)
                    .HasColumnName("sfvalue")
                    .HasColumnType("varchar(50)")
                    .HasComment("记录是否")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Sxryslvalue)
                    .HasColumnName("SXRYSLVALUE")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Zbcbdwvalue)
                    .HasColumnName("ZBCBDWVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("主办承办单位")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<VNbexportPxynljsqkZbhcb>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_nbexport_pxynljsqk_zbhcb");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Pxlxvalue)
                    .HasColumnName("PXLXVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pxsjvalue)
                    .HasColumnName("PXSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("培训时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Pxxmmcvalue)
                    .HasColumnName("PXXMMCVALUE")
                    .HasColumnType("varchar(500)")
                    .HasComment("培训项目名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Pxzcjfvalue)
                    .HasColumnName("PXZCJFVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Sfvalue)
                    .HasColumnName("sfvalue")
                    .HasColumnType("varchar(50)")
                    .HasComment("记录是否")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Sxryslvalue)
                    .HasColumnName("SXRYSLVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Zbcbvalue)
                    .HasColumnName("ZBCBVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("主办承办")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zbdwvalue)
                    .HasColumnName("ZBDWVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("主办单位")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<VNbexportQtxgghqk>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_nbexport_qtxgghqk");

                entity.Property(e => e.Bzdwvalue)
                    .HasColumnName("BZDWVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("编制单位")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bzhgbztvalue)
                    .HasColumnName("BZHGBZTVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ghqxvalue)
                    .HasColumnName("GHQXVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("规划期限")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Isavailable)
                    .HasColumnName("ISAVAILABLE")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可用（1可用，0不可用）");

                entity.Property(e => e.Lxvalue)
                    .HasColumnName("LXVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mcvalue)
                    .HasColumnName("MCVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Sfvalue)
                    .HasColumnName("SFVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("记录是否")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<VNbexportRwysjcqk>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_nbexport_rwysjcqk");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cqdcsvalue)
                    .HasColumnName("CQDCSVALUE")
                    .HasColumnType("text")
                    .HasComment("采取的措施")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Isavailable)
                    .HasColumnName("ISAVAILABLE")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'1'")
                    .HasComment("是否可用（1可用，0不可用）");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Rwsjmsvalue)
                    .HasColumnName("RWSJMSVALUE")
                    .HasColumnType("text")
                    .HasComment("人为事件描述")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sfvalue)
                    .HasColumnName("sfvalue")
                    .HasColumnType("varchar(50)")
                    .HasComment("记录是否")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sjvalue)
                    .HasColumnName("SJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Ssqkvalue)
                    .HasColumnName("SSQKVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<VNbexportShhjjc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_nbexport_shhjjc");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dqdhcqrkslvalue)
                    .HasColumnName("DQDHCQRKSLVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Dqdycqrkslvalue)
                    .HasColumnName("DQDYCQRKSLVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Fmyxfwvalue)
                    .HasColumnName("FMYXFWVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Lrmlsdhcqrkvalue)
                    .HasColumnName("LRMLSDHCQRKVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Lrmlsdycqrkslvalue)
                    .HasColumnName("LRMLSDYCQRKSLVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rjgdpvalue)
                    .HasColumnName("RJGDPVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rkmdvalue)
                    .HasColumnName("RKMDVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Rkssxqvalue)
                    .HasColumnName("RKSSXQVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("人口疏散需求")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Ycszdyzwrgzqyslvalue)
                    .HasColumnName("YCSZDYZWRGZQYSLVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Yzwrgyqyslvalue)
                    .HasColumnName("YZWRGYQYSLVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zykcdslvalue)
                    .HasColumnName("ZYKCDSLVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<VNbexportSycnlxqk>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_nbexport_sycnlxqk");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cnsxvalue)
                    .HasColumnName("CNSXVALUE")
                    .HasColumnType("text")
                    .HasComment("承诺事项")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cnwcsjvalue)
                    .HasColumnName("CNWCSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("承诺完成时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Isavailable)
                    .HasColumnName("ISAVAILABLE")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'1'")
                    .HasComment("是否可用（0不可用，1可用）");

                entity.Property(e => e.Mqjzvalue)
                    .HasColumnName("MQJZVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("目前进展")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Smvalue)
                    .HasColumnName("SMVALUE")
                    .HasColumnType("text")
                    .HasComment("说明")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Sycnvalue)
                    .IsRequired()
                    .HasColumnName("sycnvalue")
                    .HasColumnType("varchar(1)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<VNbexportXslw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_nbexport_xslw");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Lwmcvalue)
                    .HasColumnName("LWMCVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("论文名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Qhvalue)
                    .HasColumnName("QHVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("期号")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Sfvalue)
                    .HasColumnName("SFVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("记录是否")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sjlxvalue)
                    .HasColumnName("SJLXVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmcvalue)
                    .HasColumnName("SJMCVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("刊物/书籍名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Zzvalue)
                    .HasColumnName("ZZVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("作者")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<VNbexportYkl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_nbexport_ykl");

                entity.Property(e => e.Bsykslvalue)
                    .HasColumnName("BSYKSLVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cgsjykrltsvalue)
                    .HasColumnName("CGSJYKRLTSVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Gwykrcsvalue)
                    .HasColumnName("GWYKRCSVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jjyfwrsvalue)
                    .HasColumnName("JJYFWRSVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jjyjjcsvalue)
                    .HasColumnName("JJYJJCSVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Msvalue)
                    .HasColumnName("MSVALUE")
                    .HasColumnType("text")
                    .HasComment("描述")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Qnykzlvalue)
                    .HasColumnName("QNYKZLVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Ryklxzzvalue)
                    .HasColumnName("RYKLXZZVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Ssyklxzzvalue)
                    .HasColumnName("SSYKLXZZVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Yyyrcsvalue)
                    .HasColumnName("YYYRCSVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zgqyklvalue)
                    .HasColumnName("ZGQYKLVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zgrykrqvalue)
                    .HasColumnName("ZGRYKRQVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("最高日游客量日期")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<VNbexportZrhjysjc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_nbexport_zrhjysjc");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("rksj")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Sfvalue)
                    .HasColumnName("SFVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("记录是否")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sjlyvalue)
                    .HasColumnName("SJLYVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("sort")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("wzxs")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Zrhjnrvalue)
                    .HasColumnName("ZRHJNRVALUE")
                    .HasColumnType("text")
                    .HasComment("自然环境内容")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zrhjyxmsvalue)
                    .HasColumnName("ZRHJYXMSVALUE")
                    .HasColumnType("text")
                    .HasComment("自然环境影响描述")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zrhjyxpgvalue)
                    .HasColumnName("ZRHJYXPGVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VNbexportZrzhjcqk>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_nbexport_zrzhjcqk");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Isavailable)
                    .HasColumnName("ISAVAILABLE")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'1'")
                    .HasComment("是否可用（1可用，0不可用）");

                entity.Property(e => e.Jzjevalue)
                    .HasColumnName("JZJEVALUE")
                    .HasColumnType("varchar(11)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Sfvalue)
                    .HasColumnName("sfvalue")
                    .HasColumnType("varchar(50)")
                    .HasComment("记录是否")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Szqkmsvalue)
                    .HasColumnName("SZQKMSVALUE")
                    .HasColumnType("text")
                    .HasComment("受灾情况描述")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");

                entity.Property(e => e.Zhlxvalue)
                    .HasColumnName("ZHLXVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zhsjvalue)
                    .HasColumnName("ZHSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("灾害时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zqyfcsvalue)
                    .HasColumnName("ZQYFCSVALUE")
                    .HasColumnType("text")
                    .HasComment("灾前预防措施")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<VNbexportZxfggzqk>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_nbexport_zxfggzqk");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Gbdwvalue)
                    .HasColumnName("GBDWVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("公布单位")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Gbsjvalue)
                    .HasColumnName("GBSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("公布时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Gbwhvalue)
                    .HasColumnName("GBWHVALUE")
                    .HasColumnType("varchar(500)")
                    .HasComment("公布文号")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Lbvalue)
                    .HasColumnName("LBVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mcvalue)
                    .HasColumnName("MCVALUE")
                    .HasColumnType("varchar(200)")
                    .HasComment("名称")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ndbgid)
                    .HasColumnName("NDBGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("年度报告ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Sort)
                    .HasColumnName("SORT")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Sssjvalue)
                    .HasColumnName("SSSJVALUE")
                    .HasColumnType("varchar(50)")
                    .HasComment("实施时间")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Wzxs)
                    .HasColumnName("WZXS")
                    .HasColumnType("int(11)")
                    .HasComment("完整系数");
            });

            modelBuilder.Entity<VPrivsRoleFunc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_privs_role_func");

                entity.Property(e => e.Args)
                    .HasColumnName("ARGS")
                    .HasColumnType("varchar(300)")
                    .HasComment("操作参数")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Child)
                    .HasColumnName("CHILD")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(保存时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fid)
                    .HasColumnName("FID")
                    .HasColumnType("varchar(50)")
                    .HasComment("树状结构查询的父级ID，左侧、右侧树的根级均为空，子级不为空")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Funcid)
                    .HasColumnName("FUNCID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Groupname)
                    .HasColumnName("GROUPNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("分组名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Icon)
                    .HasColumnName("ICON")
                    .HasColumnType("varchar(50)")
                    .HasComment("图标编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Indexoforder)
                    .HasColumnName("INDEXOFORDER")
                    .HasColumnType("bigint(12)")
                    .HasComment("排序索引");

                entity.Property(e => e.Label)
                    .HasColumnName("LABEL")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Path)
                    .HasColumnName("PATH")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID（逻辑父级）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qxyzl)
                    .HasColumnName("QXYZL")
                    .HasColumnType("varchar(255)")
                    .HasComment("权限验证列")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Roleid)
                    .IsRequired()
                    .HasColumnName("ROLEID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rolename)
                    .HasColumnName("ROLENAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Route)
                    .HasColumnName("ROUTE")
                    .HasColumnType("varchar(50)")
                    .HasComment("（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sign)
                    .HasColumnName("SIGN")
                    .HasColumnType("varchar(50)")
                    .HasComment("标记(查询时用)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.State)
                    .HasColumnName("STATE")
                    .HasColumnType("varchar(200)")
                    .HasComment("状态（路由参数）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Systemid)
                    .HasColumnName("SYSTEMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("所属系统ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Type)
                    .HasColumnName("TYPE")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VPrivsUserDepartment>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_privs_user_department");

                entity.Property(e => e.Careerentry)
                    .HasColumnName("CAREERENTRY")
                    .HasColumnType("datetime")
                    .HasComment("入职日期");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("用户创建时间");

                entity.Property(e => e.Department)
                    .HasColumnName("DEPARTMENT")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Departmentid)
                    .IsRequired()
                    .HasColumnName("DEPARTMENTID")
                    .HasColumnType("varchar(50)")
                    .HasComment("部门编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.DeviceId)
                    .HasColumnName("deviceID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测设备ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Email)
                    .HasColumnName("EMAIL")
                    .HasColumnType("varchar(50)")
                    .HasComment("电子邮箱")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Idcard)
                    .HasColumnName("IDCARD")
                    .HasColumnType("varchar(20)")
                    .HasComment("身份证号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ishangposition)
                    .HasColumnName("ISHANGPOSITION")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否挂职");

                entity.Property(e => e.Leaderid)
                    .HasColumnName("LEADERID")
                    .HasColumnType("varchar(50)")
                    .HasComment("上级领导编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Leavedate)
                    .HasColumnName("LEAVEDATE")
                    .HasColumnType("datetime")
                    .HasComment("离职日期");

                entity.Property(e => e.Loginname)
                    .IsRequired()
                    .HasColumnName("LOGINNAME")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Maploginname)
                    .HasColumnName("MAPLOGINNAME")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mappassword)
                    .HasColumnName("MAPPASSWORD")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称(员工编号)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Password)
                    .HasColumnName("PASSWORD")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'e10adc3949ba59abbe56e057f20f883e'")
                    .HasComment("默认密码：123456")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Photo)
                    .HasColumnName("PHOTO")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Positionid)
                    .HasColumnName("POSITIONID")
                    .HasColumnType("varchar(50)")
                    .HasComment("职位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qq)
                    .HasColumnName("QQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("QQ号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Realname)
                    .HasColumnName("REALNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("REMARK")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sex)
                    .HasColumnName("SEX")
                    .HasColumnType("tinyint(4)")
                    .HasComment("性别");

                entity.Property(e => e.Sfauto)
                    .HasColumnName("SFAUTO")
                    .HasComment("是否移动端用户");

                entity.Property(e => e.Sfjr)
                    .HasColumnName("SFJR")
                    .HasComment("是否为外部接入系统用户");

                entity.Property(e => e.Sfsystem)
                    .HasColumnName("SFSYSTEM")
                    .HasComment("是否系统平台用户");

                entity.Property(e => e.Systemuserid)
                    .HasColumnName("SYSTEMUSERID")
                    .HasColumnType("varchar(50)")
                    .HasComment("系统用户ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tel)
                    .HasColumnName("TEL")
                    .HasColumnType("varchar(50)")
                    .HasComment("电话")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VPzbTrsqSbqd>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_pzb_trsq_sbqd");

                entity.Property(e => e.Dw)
                    .HasColumnName("dw")
                    .HasColumnType("varchar(255)")
                    .HasComment("单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcfx)
                    .HasColumnName("jcfx")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测方向")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsd)
                    .HasColumnName("jcsd")
                    .HasColumnType("double(10,2)")
                    .HasComment("监测深度（单位：cm）");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jcz)
                    .HasColumnName("jcz")
                    .HasColumnType("double(10,2)")
                    .HasComment("监测值");

                entity.Property(e => e.Jczbmc)
                    .HasColumnName("JCZBMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测指标名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Paraid)
                    .IsRequired()
                    .HasColumnName("paraid")
                    .HasColumnType("varchar(50)")
                    .HasComment("参数编码ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbmc)
                    .HasColumnName("sbmc")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VQtzpYxlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_qtzp_yxlysj");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdzbxx)
                    .HasColumnName("CJDZBXX")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集点坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(200)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(100)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mid)
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pssb)
                    .HasColumnName("PSSB")
                    .HasColumnType("varchar(50)")
                    .HasComment("拍摄设备")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjdbh)
                    .HasColumnName("SJCJDBH")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tpcjdw)
                    .HasColumnName("TPCJDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片采集单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpcjzrr)
                    .HasColumnName("TPCJZRR")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片采集责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpgs)
                    .HasColumnName("TPGS")
                    .HasColumnType("varchar(30)")
                    .HasComment("图片格式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpmc)
                    .HasColumnName("TPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("图片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpscsj)
                    .HasColumnName("TPSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("图片生成时间");

                entity.Property(e => e.Tpsddw)
                    .HasColumnName("TPSDDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("图片审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpsdsj)
                    .HasColumnName("TPSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("图片审定时间");

                entity.Property(e => e.Tpsdz)
                    .HasColumnName("TPSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpsjl)
                    .HasColumnName("TPSJL")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片数据量")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzcs)
                    .HasColumnName("XZCS")
                    .HasColumnType("int(11)")
                    .HasComment("下载次数");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxfj)
                    .HasColumnName("YXFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("影像附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VRcxcRcxcycjl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_rcxc_rcxcycjl");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("djrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("djsj")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Realname)
                    .HasColumnName("REALNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfyc)
                    .HasColumnName("SFYC")
                    .HasColumnType("varchar(50)")
                    .HasComment("是否异常")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("shrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjms)
                    .HasColumnName("SJMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("事件描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Xcddwz)
                    .HasColumnName("XCDDWZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("巡查地点（位置）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xcsj)
                    .HasColumnName("XCSJ")
                    .HasColumnType("datetime")
                    .HasComment("巡查时间");

                entity.Property(e => e.Xcy)
                    .HasColumnName("XCY")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycid)
                    .HasColumnName("ycid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生地点（遗产点）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zpmc)
                    .HasColumnName("ZPMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("异常记录照片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VRcxcqyJcpz>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_rcxcqy_jcpz");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fzrid)
                    .HasColumnName("FZRID")
                    .HasColumnType("varchar(255)")
                    .HasComment("负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fzrmc)
                    .HasColumnName("FZRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcx)
                    .IsRequired()
                    .HasColumnName("jcx")
                    .HasColumnType("varchar(2)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Lrfs)
                    .IsRequired()
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(1)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Qymc)
                    .HasColumnName("QYMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("区域名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("int(1)");
            });

            modelBuilder.Entity<VRwXgdgljl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_rw_xgdgljl");

                entity.Property(e => e.Jcpzfaid)
                    .HasColumnName("JCPZFAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测配置方案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Point)
                    .HasColumnName("POINT")
                    .HasColumnType("varchar(255)")
                    .HasComment("点坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwbid)
                    .IsRequired()
                    .HasColumnName("RWBID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwjssj)
                    .HasColumnName("RWJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("任务结束时间");

                entity.Property(e => e.Rwkssj)
                    .HasColumnName("RWKSSJ")
                    .HasColumnType("datetime")
                    .HasComment("任务开始时间");

                entity.Property(e => e.Rwmc)
                    .HasColumnName("RWMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("任务名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwzt)
                    .HasColumnName("RWZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjzt)
                    .HasColumnName("SJZT")
                    .HasColumnType("varchar(20)")
                    .HasComment("数据状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xgdglid)
                    .HasColumnName("XGDGLID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VRwxfBhgcjcwz>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_rwxf_bhgcjcwz");

                entity.Property(e => e.Ccmc)
                    .HasColumnName("CCMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件存储在目标文件夹下的存储名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzmc)
                    .HasColumnName("JCWZMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzms)
                    .HasColumnName("JCWZMS")
                    .HasColumnType("text")
                    .HasComment("监测位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzsyt)
                    .HasColumnName("JCWZSYT")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("lx")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mlmc)
                    .HasColumnName("MLMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("文件夹目录名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(255)")
                    .HasComment("排序");

                entity.Property(e => e.Zb)
                    .HasColumnName("ZB")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbsjid)
                    .HasColumnName("ZBSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主表数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbxx)
                    .HasColumnName("ZBXX")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VRwxfBhgcxfjcdx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_rwxf_bhgcxfjcdx");

                entity.Property(e => e.Bhbh)
                    .HasColumnName("BHBH")
                    .HasColumnType("varchar(58)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhgcxfdbhid)
                    .HasColumnName("BHGCXFDBHID")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护工程修复的病害ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjd)
                    .HasColumnName("BHJD")
                    .HasComment("病害经度");

                entity.Property(e => e.Bhlx)
                    .HasColumnName("BHLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhwd)
                    .HasColumnName("BHWD")
                    .HasComment("病害纬度");

                entity.Property(e => e.Ccmc)
                    .HasColumnName("CCMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件存储在目标文件夹下的存储名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mlmc)
                    .HasColumnName("MLMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("文件夹目录名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VRwxfBhjcwz>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_rwxf_bhjcwz");

                entity.Property(e => e.Ccmc)
                    .HasColumnName("CCMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件存储在目标文件夹下的存储名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mlmc)
                    .HasColumnName("MLMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("文件夹目录名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VRwxfClfmjcdx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_rwxf_clfmjcdx");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fmms)
                    .HasColumnName("FMMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("风貌描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pzwzms)
                    .HasColumnName("PZWZMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("拍照位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pzwzzb)
                    .HasColumnName("PZWZZB")
                    .HasColumnType("varchar(200)")
                    .HasComment("拍照位置坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zp)
                    .HasColumnName("ZP")
                    .HasColumnType("text")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VRwxfKgfjjcwz>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_rwxf_kgfjjcwz");

                entity.Property(e => e.Ccmc)
                    .HasColumnName("CCMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件存储在目标文件夹下的存储名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzmc)
                    .HasColumnName("JCWZMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzms)
                    .HasColumnName("JCWZMS")
                    .HasColumnType("text")
                    .HasComment("监测位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzsyt)
                    .HasColumnName("JCWZSYT")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mlmc)
                    .HasColumnName("MLMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("文件夹目录名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(255)")
                    .HasComment("排序");

                entity.Property(e => e.Zb)
                    .HasColumnName("ZB")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbsjid)
                    .HasColumnName("ZBSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主表数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbxx)
                    .HasColumnName("ZBXX")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VRwxfRcxcycjcwz>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_rwxf_rcxcycjcwz");

                entity.Property(e => e.Ccmc)
                    .HasColumnName("CCMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件存储在目标文件夹下的存储名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dscqdcs)
                    .HasColumnName("DSCQDCS")
                    .HasColumnType("varchar(500)")
                    .HasComment("当时采取的措施")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Mlmc)
                    .HasColumnName("MLMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("文件夹目录名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfbj)
                    .HasColumnName("SFBJ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否报警")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Xcy)
                    .HasColumnName("XCY")
                    .HasColumnType("varchar(50)")
                    .HasComment("巡查员")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycsj)
                    .HasColumnName("YCSJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("异常事件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("发生地点（遗产点）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yczb)
                    .HasColumnName("YCZB")
                    .HasColumnType("varchar(255)")
                    .HasComment("异常指标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjdj)
                    .HasColumnName("YJDJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjjcsj)
                    .HasColumnName("YJJCSJ")
                    .HasColumnType("datetime")
                    .HasComment("预警解除时间");
            });

            modelBuilder.Entity<VRwxfTjlkxjcdx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_rwxf_tjlkxjcdx");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Lkxms)
                    .HasColumnName("LKXMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("轮廓线描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pzwzms)
                    .HasColumnName("PZWZMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("拍照位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Zp)
                    .HasColumnName("ZP")
                    .HasColumnType("text")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VRwxfXgdjcwz>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_rwxf_xgdjcwz");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ccmc)
                    .HasColumnName("CCMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件存储在目标文件夹下的存储名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Ewm)
                    .HasColumnName("EWM")
                    .HasColumnType("varchar(200)")
                    .HasComment("二维码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fjyc)
                    .HasColumnName("FJYC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附近遗产")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(255)")
                    .HasComment("点类型（0-遗址打卡点，1-设备打卡点）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mlmc)
                    .HasColumnName("MLMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("文件夹目录名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Point)
                    .HasColumnName("POINT")
                    .HasColumnType("varchar(255)")
                    .HasComment("点坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qyid)
                    .HasColumnName("QYID")
                    .HasColumnType("varchar(255)")
                    .HasComment("区域ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Szfw)
                    .HasColumnName("SZFW")
                    .HasColumnType("varchar(50)")
                    .HasComment("所在范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycyslx)
                    .HasColumnName("YCYSLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VRwxfXjxmjcwz>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_rwxf_xjxmjcwz");

                entity.Property(e => e.Ccmc)
                    .HasColumnName("ccmc")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件存储在目标文件夹下的存储名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzmc)
                    .HasColumnName("JCWZMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzms)
                    .HasColumnName("JCWZMS")
                    .HasColumnType("text")
                    .HasComment("监测位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcwzsyt)
                    .HasColumnName("JCWZSYT")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测位置示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mlmc)
                    .HasColumnName("MLMC")
                    .HasColumnType("varchar(500)")
                    .HasComment("文件夹目录名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(255)")
                    .HasComment("排序");

                entity.Property(e => e.Zb)
                    .HasColumnName("ZB")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbsjid)
                    .HasColumnName("ZBSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主表数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zbxx)
                    .HasColumnName("ZBXX")
                    .HasColumnType("text")
                    .HasComment("坐标信息")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VRwxfYcysdtxtjcdx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_rwxf_ycysdtxtjcdx");

                entity.Property(e => e.Cjdjd)
                    .HasColumnName("CJDJD")
                    .HasComment("采集点经度");

                entity.Property(e => e.Cjdsyt)
                    .HasColumnName("CJDSYT")
                    .HasColumnType("text")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdwd)
                    .HasColumnName("CJDWD")
                    .HasComment("采集点纬度");

                entity.Property(e => e.Cjdwzms)
                    .HasColumnName("CJDWZMS")
                    .HasColumnType("varchar(100)")
                    .HasComment("采集点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzzp)
                    .HasColumnName("JZZP")
                    .HasColumnType("text")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VRyklxzzBcjcdxSzlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ryklxzz_bcjcdx_szlysj");
            });

            modelBuilder.Entity<VSouvWdlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_souv_wdlysj");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.CnsmcldsjNf)
                    .HasColumnName("CNSMCLDSJ_NF")
                    .HasColumnType("datetime")
                    .HasComment("采纳声明材料的时间（年份）");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lycs)
                    .HasColumnName("LYCS")
                    .HasColumnType("int(100)")
                    .HasComment("利用次数");

                entity.Property(e => e.Mid)
                    .IsRequired()
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccbdlj)
                    .HasColumnName("SJCCBDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccydlj)
                    .HasColumnName("SJCCYDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(20)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Wdbb)
                    .HasColumnName("WDBB")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdbzdw)
                    .HasColumnName("WDBZDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("文档编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdcjsj)
                    .HasColumnName("WDCJSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档创建时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdjz)
                    .HasColumnName("WDJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdlx)
                    .HasColumnName("WDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdmc)
                    .HasColumnName("WDMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdscsj)
                    .HasColumnName("WDSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档上传时间");

                entity.Property(e => e.Wdsddw)
                    .HasColumnName("WDSDDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdsdsj)
                    .HasColumnName("WDSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档审定时间");

                entity.Property(e => e.Wdsdz)
                    .HasColumnName("WDSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdzz)
                    .HasColumnName("WDZZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档作者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yswdbh)
                    .HasColumnName("YSWDBH")
                    .HasColumnType("varchar(100)")
                    .HasComment("原始文档编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdd)
                    .HasColumnName("YWDSCDD")
                    .HasColumnType("varchar(100)")
                    .HasComment("原文档收藏地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdw)
                    .HasColumnName("YWDSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原文档收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscrq)
                    .HasColumnName("YWDSCRQ")
                    .HasColumnType("datetime")
                    .HasComment("原文档生成日期");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VSsykcdBcjcdx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ssykcd_bcjcdx");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("精度");

                entity.Property(e => e.Jdmc)
                    .HasColumnName("JDMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("景点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jdmcid)
                    .HasColumnName("JDMCID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(50)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("审核状态");

                entity.Property(e => e.Ssykcd)
                    .HasColumnName("SSYKCD")
                    .HasColumnType("varchar(50)")
                    .HasComment("瞬时游客程度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VSsyklxzzBcjcdxSzlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ssyklxzz_bcjcdx_szlysj");
            });

            modelBuilder.Entity<VSydaWdlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_syda_wdlysj");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dajlsj)
                    .HasColumnName("DAJLSJ")
                    .HasColumnType("datetime")
                    .HasComment("档案建立时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lb)
                    .HasColumnName("LB")
                    .HasColumnType("varchar(50)")
                    .HasComment("类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lycs)
                    .HasColumnName("LYCS")
                    .HasColumnType("int(100)")
                    .HasComment("利用次数");

                entity.Property(e => e.Mid)
                    .IsRequired()
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccbdlj)
                    .HasColumnName("SJCCBDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccydlj)
                    .HasColumnName("SJCCYDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(20)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Wdbb)
                    .HasColumnName("WDBB")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdbzdw)
                    .HasColumnName("WDBZDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("文档编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdcjsj)
                    .HasColumnName("WDCJSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档创建时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdjz)
                    .HasColumnName("WDJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdlx)
                    .HasColumnName("WDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdmc)
                    .HasColumnName("WDMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdscsj)
                    .HasColumnName("WDSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档上传时间");

                entity.Property(e => e.Wdsddw)
                    .HasColumnName("WDSDDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdsdsj)
                    .HasColumnName("WDSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档审定时间");

                entity.Property(e => e.Wdsdz)
                    .HasColumnName("WDSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdzz)
                    .HasColumnName("WDZZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档作者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yswdbh)
                    .HasColumnName("YSWDBH")
                    .HasColumnType("varchar(100)")
                    .HasComment("原始文档编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdd)
                    .HasColumnName("YWDSCDD")
                    .HasColumnType("varchar(100)")
                    .HasComment("原文档收藏地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdw)
                    .HasColumnName("YWDSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原文档收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscrq)
                    .HasColumnName("YWDSCRQ")
                    .HasColumnType("datetime")
                    .HasComment("原文档生成日期");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VSysPkCurrentpk>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_sys_pk_currentpk");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(50)")
                    .HasComment("表名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dqz)
                    .HasColumnName("DQZ")
                    .HasColumnType("int(11)")
                    .HasComment("当前值");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pkid)
                    .IsRequired()
                    .HasColumnName("PKID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qssxm)
                    .HasColumnName("QSSXM")
                    .HasColumnType("int(11)")
                    .HasComment("起始顺序码");

                entity.Property(e => e.Qz)
                    .HasColumnName("QZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("前缀")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qzc)
                    .HasColumnName("QZC")
                    .HasColumnType("int(11)")
                    .HasComment("前缀长");

                entity.Property(e => e.Sxmc)
                    .HasColumnName("SXMC")
                    .HasColumnType("int(11)")
                    .HasComment("顺序码长");
            });

            modelBuilder.Entity<VSywbWdlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_sywb_wdlysj");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lycs)
                    .HasColumnName("LYCS")
                    .HasColumnType("int(100)")
                    .HasComment("利用次数");

                entity.Property(e => e.Mid)
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjccbdlj)
                    .HasColumnName("SJCCBDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccydlj)
                    .HasColumnName("SJCCYDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(20)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Wdbb)
                    .HasColumnName("WDBB")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdbzdw)
                    .HasColumnName("WDBZDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("文档编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdcjsj)
                    .HasColumnName("WDCJSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档创建时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdjz)
                    .HasColumnName("WDJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdlx)
                    .HasColumnName("WDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdmc)
                    .HasColumnName("WDMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdscsj)
                    .HasColumnName("WDSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档上传时间");

                entity.Property(e => e.Wdsddw)
                    .HasColumnName("WDSDDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdsdsj)
                    .HasColumnName("WDSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档审定时间");

                entity.Property(e => e.Wdsdz)
                    .HasColumnName("WDSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdzz)
                    .HasColumnName("WDZZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档作者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yswdbh)
                    .HasColumnName("YSWDBH")
                    .HasColumnType("varchar(100)")
                    .HasComment("原始文档编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdd)
                    .HasColumnName("YWDSCDD")
                    .HasColumnType("varchar(100)")
                    .HasComment("原文档收藏地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdw)
                    .HasColumnName("YWDSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原文档收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscrq)
                    .HasColumnName("YWDSCRQ")
                    .HasColumnType("datetime")
                    .HasComment("原文档生成日期");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VTJcygzbJfdhmx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_t_jcygzb_jfdhmx");

                entity.Property(e => e.Sjid)
                    .IsRequired()
                    .HasColumnName("SJID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sjmc)
                    .HasColumnName("SJMC")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VTJcygzbJfenum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_t_jcygzb_jfenum");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("int(11)");

                entity.Property(e => e.Jfx)
                    .HasColumnName("JFX")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jfz)
                    .HasColumnName("JFZ")
                    .HasColumnType("bigint(20)");
            });

            modelBuilder.Entity<VTTempYjzh>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_t_temp_yjzh");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Emergencyindex)
                    .HasColumnName("EMERGENCYINDEX")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Emergencytype)
                    .IsRequired()
                    .HasColumnName("EMERGENCYTYPE")
                    .HasColumnType("varchar(5)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Latitude)
                    .HasColumnName("LATITUDE")
                    .HasColumnType("varchar(50)")
                    .HasComment("纬度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Longitude)
                    .HasColumnName("LONGITUDE")
                    .HasColumnType("varchar(50)")
                    .HasComment("经度")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rksj)
                    .HasColumnName("RKSJ")
                    .HasColumnType("datetime")
                    .HasComment("入库时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'2'")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VTempZdjcsjLasttime>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_temp_zdjcsj_lasttime");

                entity.Property(e => e.数据表名)
                    .IsRequired()
                    .HasColumnType("varchar(14)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.最新时间).HasColumnType("datetime");

                entity.Property(e => e.监测内容)
                    .IsRequired()
                    .HasColumnType("varchar(5)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<VTjxNewestupdatetime>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_tjx_newestupdatetime");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Lkxid)
                    .IsRequired()
                    .HasColumnName("LKXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("轮廓线ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VWwbhwxdaWdlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_wwbhwxda_wdlysj");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dalx)
                    .HasColumnName("DALX")
                    .HasColumnType("varchar(50)")
                    .HasComment("档案类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gcid)
                    .HasColumnName("GCID")
                    .HasColumnType("varchar(200)")
                    .HasComment("工程id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gcmc)
                    .HasColumnName("GCMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("项目名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lycs)
                    .HasColumnName("LYCS")
                    .HasColumnType("int(100)")
                    .HasComment("利用次数");

                entity.Property(e => e.Mid)
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjccbdlj)
                    .HasColumnName("SJCCBDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjccydlj)
                    .HasColumnName("SJCCYDLJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("数据存储远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(20)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Wdbb)
                    .HasColumnName("WDBB")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档版本")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdbzdw)
                    .HasColumnName("WDBZDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("文档编制单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdcjsj)
                    .HasColumnName("WDCJSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档创建时间");

                entity.Property(e => e.Wdfj)
                    .HasColumnName("WDFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("文档附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdjz)
                    .HasColumnName("WDJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdlx)
                    .HasColumnName("WDLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdmc)
                    .HasColumnName("WDMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdscsj)
                    .HasColumnName("WDSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档上传时间");

                entity.Property(e => e.Wdsddw)
                    .HasColumnName("WDSDDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("文档审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdsdsj)
                    .HasColumnName("WDSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("文档审定时间");

                entity.Property(e => e.Wdsdz)
                    .HasColumnName("WDSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdzz)
                    .HasColumnName("WDZZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("文档作者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yswdbh)
                    .HasColumnName("YSWDBH")
                    .HasColumnType("varchar(100)")
                    .HasComment("原始文档编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdd)
                    .HasColumnName("YWDSCDD")
                    .HasColumnType("varchar(100)")
                    .HasComment("原文档收藏地点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscdw)
                    .HasColumnName("YWDSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原文档收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywdscrq)
                    .HasColumnName("YWDSCRQ")
                    .HasColumnType("datetime")
                    .HasComment("原文档生成日期");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VWxyxhhpYxlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_wxyxhhp_yxlysj");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbl)
                    .HasColumnName("FBL")
                    .HasColumnType("varchar(255)")
                    .HasComment("分辨率")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(100)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(10)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(255)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mid)
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(20)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核流程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(20)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Syt)
                    .HasColumnName("SYT")
                    .HasColumnType("varchar(500)")
                    .HasComment("示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Url)
                    .HasColumnName("URL")
                    .HasColumnType("varchar(255)")
                    .HasComment("影像URL")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(100)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wxyxlfj)
                    .HasColumnName("WXYXLFJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("卫星影像类附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysyxcjdw)
                    .HasColumnName("YSYXCJDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原始影像采集单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxcjfw)
                    .HasColumnName("YXCJFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("影像采集范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxcldw)
                    .HasColumnName("YXCLDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("影像处理单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxfbl)
                    .HasColumnName("YXFBL")
                    .HasColumnType("varchar(20)")
                    .HasComment("影像分辨率")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxfw)
                    .HasColumnName("YXFW")
                    .HasColumnType("varchar(200)")
                    .HasComment("影像范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxlx)
                    .HasColumnName("YXLX")
                    .HasColumnType("varchar(20)")
                    .HasComment("影像类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxly)
                    .HasColumnName("YXLY")
                    .HasColumnType("varchar(200)")
                    .HasComment("影像来源")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxmc)
                    .HasColumnName("YXMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("影像名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxscsj)
                    .HasColumnName("YXSCSJ")
                    .HasColumnType("datetime")
                    .HasComment("影像生成时间");

                entity.Property(e => e.Yxsddw)
                    .HasColumnName("YXSDDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("影像审定单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxsdsj)
                    .HasColumnName("YXSDSJ")
                    .HasColumnType("datetime")
                    .HasComment("影像审定时间");

                entity.Property(e => e.Yxsdz)
                    .HasColumnName("YXSDZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("影像审定者")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxsjl)
                    .HasColumnName("YXSJL")
                    .HasColumnType("varchar(20)")
                    .HasComment("影像数据量")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(100)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VXgdQyJcpz>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_xgd_qy_jcpz");

                entity.Property(e => e.Ds)
                    .HasColumnName("DS")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("定时")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fjyc)
                    .HasColumnName("FJYC")
                    .HasColumnType("varchar(500)")
                    .HasComment("附近遗产")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fzrid)
                    .HasColumnName("FZRID")
                    .HasColumnType("varchar(255)")
                    .HasComment("负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdid)
                    .HasColumnName("JCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdxlx)
                    .HasColumnName("JCDXLX")
                    .HasMaxLength(0)
                    .IsFixedLength();

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测结束时间");

                entity.Property(e => e.Jcpzid)
                    .HasColumnName("JCPZID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcqssj)
                    .HasColumnName("JCQSSJ")
                    .HasColumnType("datetime")
                    .HasComment("监测起始时间");

                entity.Property(e => e.Lrfs)
                    .HasColumnName("LRFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("录入方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(255)")
                    .HasComment("点类型（0-遗址打卡点，1-设备打卡点）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lxzd)
                    .HasColumnName("LXZD")
                    .HasMaxLength(0)
                    .IsFixedLength();

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Point)
                    .HasColumnName("POINT")
                    .HasColumnType("varchar(255)")
                    .HasComment("点坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qyid)
                    .HasColumnName("QYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qymc)
                    .HasColumnName("QYMC")
                    .HasColumnType("varchar(255)")
                    .HasComment("区域名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbbid)
                    .HasColumnName("SBBID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sbid)
                    .HasColumnName("SBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sc)
                    .HasColumnName("SC")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("时长");

                entity.Property(e => e.Sfszqxjc)
                    .HasColumnName("SFSZQXJC")
                    .HasColumnType("varchar(20)")
                    .HasComment("监测周期类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjcjfzrid)
                    .HasColumnName("SJCJFZRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据采集负责人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjcjfzrmc)
                    .HasColumnName("SJCJFZRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xczp)
                    .HasColumnName("XCZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("现场照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VYcbtYcbts>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ycbt_ycbts");

                entity.Property(e => e.Btlx)
                    .IsRequired()
                    .HasColumnName("btlx")
                    .HasColumnType("varchar(8)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Fjid)
                    .HasColumnName("fjid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yclx)
                    .IsRequired()
                    .HasColumnName("yclx")
                    .HasColumnType("char(0)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ywlx)
                    .IsRequired()
                    .HasColumnName("ywlx")
                    .HasColumnType("char(0)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("zt")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VYcsygntjcsjTzlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ycsygntjcsj_tzlysj");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Chr)
                    .HasColumnName("CHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("测绘人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Chzrdw)
                    .HasColumnName("CHZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("测绘责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ctshr)
                    .HasColumnName("CTSHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("成图审核人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ctshsj)
                    .HasColumnName("CTSHSJ")
                    .HasColumnType("datetime")
                    .HasComment("成图审核时间");

                entity.Property(e => e.Ctsj)
                    .HasColumnName("CTSJ")
                    .HasColumnType("datetime")
                    .HasComment("成图时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fgfw)
                    .HasColumnName("FGFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("覆盖范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mid)
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(50)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tfcc)
                    .HasColumnName("TFCC")
                    .HasColumnType("varchar(100)")
                    .HasComment("图幅尺寸")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Tzfj)
                    .HasColumnName("TZFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("图纸附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzgs)
                    .HasColumnName("TZGS")
                    .HasColumnType("varchar(20)")
                    .HasComment("图纸格式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzjz)
                    .HasColumnName("TZJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("图纸介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzlb)
                    .HasColumnName("TZLB")
                    .HasColumnType("varchar(200)")
                    .HasComment("图纸类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzmc)
                    .HasColumnName("TZMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("图纸名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tznrlx)
                    .HasColumnName("TZNRLX")
                    .HasColumnType("varchar(100)")
                    .HasComment("图纸内容类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzsxblc)
                    .HasColumnName("TZSXBLC")
                    .HasColumnType("varchar(20)")
                    .HasComment("图纸属性比例尺")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Url)
                    .HasColumnName("URL")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzcs)
                    .HasColumnName("XZCS")
                    .HasColumnType("int(11)")
                    .HasComment("下载次数");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytbh)
                    .HasColumnName("YTBH")
                    .HasColumnType("varchar(200)")
                    .HasComment("原图编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytblc)
                    .HasColumnName("YTBLC")
                    .HasColumnType("varchar(50)")
                    .HasComment("原图比例尺")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytfj)
                    .HasColumnName("YTFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("原图附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytmc)
                    .HasColumnName("YTMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("原图名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytscdw)
                    .HasColumnName("YTSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原图收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytzbx)
                    .HasColumnName("YTZBX")
                    .HasColumnType("varchar(50)")
                    .HasComment("原图坐标系")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytztdw)
                    .HasColumnName("YTZTDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("原图制图单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytztsj)
                    .HasColumnName("YTZTSJ")
                    .HasColumnType("datetime")
                    .HasComment("原图制图时间");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VYcysdtyxtJceJc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ycysdtyxt_jce_jc");

                entity.Property(e => e.Bhms)
                    .HasColumnName("BHMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("变化描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdjd)
                    .HasColumnName("CJDJD")
                    .HasComment("采集点经度");

                entity.Property(e => e.Cjdsyt)
                    .HasColumnName("CJDSYT")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集点示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdwd)
                    .HasColumnName("CJDWD")
                    .HasComment("采集点纬度");

                entity.Property(e => e.Cjdwzms)
                    .HasColumnName("CJDWZMS")
                    .HasColumnType("varchar(100)")
                    .HasComment("采集点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Geos)
                    .HasColumnName("GEOS")
                    .HasColumnType("text")
                    .HasComment("标绘注记")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcid)
                    .HasColumnName("JCID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Leftbottom)
                    .HasColumnName("LEFTBOTTOM")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("pg")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qksm)
                    .HasColumnName("qksm")
                    .HasColumnType("varchar(50)")
                    .HasComment("情况说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Righttop)
                    .HasColumnName("RIGHTTOP")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("rwid")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sffsbh)
                    .HasColumnName("SFFSBH")
                    .HasColumnType("varchar(10)")
                    .HasComment("是否发生变化")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Sjly)
                    .HasColumnName("SJLY")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'2'")
                    .HasComment("数据来源（1,摄像头；2，移动采集系统）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysbczt)
                    .HasColumnName("ycysbczt")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素保存状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysdtid)
                    .HasColumnName("ysdtid")
                    .HasColumnType("varchar(50)")
                    .HasComment("要素单体ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yszplj)
                    .HasColumnName("yszplj")
                    .HasColumnType("varchar(200)")
                    .HasComment("要素照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VYcysdtyxtJceJc2017年6月27日>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ycysdtyxt_jce_jc_2017年6月27日");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdjd)
                    .HasColumnName("CJDJD")
                    .HasComment("采集点经度");

                entity.Property(e => e.Cjdsyt)
                    .HasColumnName("CJDSYT")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集点示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdwd)
                    .HasColumnName("CJDWD")
                    .HasComment("采集点纬度");

                entity.Property(e => e.Cjdwzms)
                    .HasColumnName("CJDWZMS")
                    .HasColumnType("varchar(100)")
                    .HasComment("采集点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrname)
                    .HasColumnName("CJRNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcid)
                    .HasColumnName("JCID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("pg")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qksm)
                    .HasColumnName("qksm")
                    .HasColumnType("varchar(50)")
                    .HasComment("情况说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("rwid")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysbczt)
                    .HasColumnName("ycysbczt")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素保存状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysdtid)
                    .HasColumnName("ysdtid")
                    .HasColumnType("varchar(50)")
                    .HasComment("要素单体ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yszplj)
                    .HasColumnName("yszplj")
                    .HasColumnType("varchar(200)")
                    .HasComment("要素照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VYcysdtyxtJceJcBak1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ycysdtyxt_jce_jc_bak1");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdjd)
                    .HasColumnName("CJDJD")
                    .HasComment("采集点经度");

                entity.Property(e => e.Cjdsyt)
                    .HasColumnName("CJDSYT")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集点示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdwd)
                    .HasColumnName("CJDWD")
                    .HasComment("采集点纬度");

                entity.Property(e => e.Cjdwzms)
                    .HasColumnName("CJDWZMS")
                    .HasColumnType("varchar(100)")
                    .HasComment("采集点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcid)
                    .HasColumnName("JCID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("pg")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qksm)
                    .HasColumnName("qksm")
                    .HasColumnType("varchar(50)")
                    .HasComment("情况说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("rwid")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysbczt)
                    .HasColumnName("ycysbczt")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素保存状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysdtid)
                    .HasColumnName("ysdtid")
                    .HasColumnType("varchar(50)")
                    .HasComment("要素单体ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yszplj)
                    .HasColumnName("yszplj")
                    .HasColumnType("varchar(200)")
                    .HasComment("要素照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VYcysdtyxtjcsjYcys>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ycysdtyxtjcsj_ycys");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdjd)
                    .HasColumnName("cjdjd")
                    .HasComment("采集点经度");

                entity.Property(e => e.Cjdsyt)
                    .HasColumnName("cjdsyt")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集点示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdwd)
                    .HasColumnName("cjdwd")
                    .HasComment("采集点纬度");

                entity.Property(e => e.Cjdwzms)
                    .HasColumnName("cjdwzms")
                    .HasColumnType("varchar(100)")
                    .HasComment("采集点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzzp)
                    .HasColumnName("JZZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("基准照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VYcysdtyxtjcsjYcys1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ycysdtyxtjcsj_ycys1");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdjd)
                    .HasColumnName("cjdjd")
                    .HasComment("采集点经度");

                entity.Property(e => e.Cjdsyt)
                    .HasColumnName("cjdsyt")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集点示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdwd)
                    .HasColumnName("cjdwd")
                    .HasComment("采集点纬度");

                entity.Property(e => e.Cjdwzms)
                    .HasColumnName("cjdwzms")
                    .HasColumnType("varchar(100)")
                    .HasComment("采集点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjfs)
                    .HasColumnName("CJFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集方式（航拍、摄像头、移动APP等）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrmc)
                    .HasColumnName("CJRMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("真实姓名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzzp)
                    .HasColumnName("JZZP")
                    .HasColumnType("varchar(200)")
                    .HasComment("基准照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VYcysfbtjcsjTzlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ycysfbtjcsj_tzlysj");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Chr)
                    .HasColumnName("CHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("测绘人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Chzrdw)
                    .HasColumnName("CHZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("测绘责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("date")
                    .HasComment("创建时间");

                entity.Property(e => e.Ctshr)
                    .HasColumnName("CTSHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("成图审核人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ctshsj)
                    .HasColumnName("CTSHSJ")
                    .HasColumnType("datetime")
                    .HasComment("成图审核时间");

                entity.Property(e => e.Ctsj)
                    .HasColumnName("CTSJ")
                    .HasColumnType("datetime")
                    .HasComment("成图时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("date")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fgfw)
                    .HasColumnName("FGFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("覆盖范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mid)
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("date")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(50)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tfcc)
                    .HasColumnName("TFCC")
                    .HasColumnType("varchar(100)")
                    .HasComment("图幅尺寸")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("date")
                    .HasComment("提交时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Tzfj)
                    .HasColumnName("TZFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("图纸附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzgs)
                    .HasColumnName("TZGS")
                    .HasColumnType("varchar(20)")
                    .HasComment("图纸格式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzjz)
                    .HasColumnName("TZJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("图纸介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzlb)
                    .HasColumnName("TZLB")
                    .HasColumnType("varchar(200)")
                    .HasComment("图纸类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzmc)
                    .HasColumnName("TZMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("图纸名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tznrlx)
                    .HasColumnName("TZNRLX")
                    .HasColumnType("varchar(100)")
                    .HasComment("图纸内容类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzsxblc)
                    .HasColumnName("TZSXBLC")
                    .HasColumnType("varchar(20)")
                    .HasComment("图纸属性比例尺")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzcs)
                    .HasColumnName("XZCS")
                    .HasColumnType("int(11)")
                    .HasComment("下载次数");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytbh)
                    .HasColumnName("YTBH")
                    .HasColumnType("varchar(200)")
                    .HasComment("原图编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytblc)
                    .HasColumnName("YTBLC")
                    .HasColumnType("varchar(50)")
                    .HasComment("原图比例尺")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytfj)
                    .HasColumnName("YTFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("原图附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytmc)
                    .HasColumnName("YTMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("原图名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytscdw)
                    .HasColumnName("YTSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原图收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytzbx)
                    .HasColumnName("YTZBX")
                    .HasColumnType("varchar(50)")
                    .HasComment("原图坐标系")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytztdw)
                    .HasColumnName("YTZTDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("原图制图单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytztsj)
                    .HasColumnName("YTZTSJ")
                    .HasColumnType("datetime")
                    .HasComment("原图制图时间");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VYcysqdYcdhgjwbdwddygx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ycysqd_ycdhgjwbdwddygx");

                entity.Property(e => e.Bhjb)
                    .HasColumnName("BHJB")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护级别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gbpc)
                    .HasColumnName("GBPC")
                    .HasColumnType("varchar(50)")
                    .HasComment("公布批次")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gbsj)
                    .HasColumnName("GBSJ")
                    .HasColumnType("datetime")
                    .HasComment("公布时间");

                entity.Property(e => e.Gbwh)
                    .HasColumnName("GBWH")
                    .HasColumnType("varchar(50)")
                    .HasComment("公布文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gc)
                    .HasColumnName("GC")
                    .HasComment("高程");

                entity.Property(e => e.Gm)
                    .HasColumnName("GM")
                    .HasColumnType("varchar(50)")
                    .HasComment("规模")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Onlyid)
                    .HasColumnName("ONLYID")
                    .HasColumnType("varchar(200)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wbdwid)
                    .HasColumnName("WBDWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("文保单位ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wwbhdwlx)
                    .HasColumnName("WWBHDWLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("文物保护单位类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wwbhdwmc)
                    .HasColumnName("WWBHDWMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("文物保护单位名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wzms)
                    .HasColumnName("WZMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycyslx)
                    .HasColumnName("YCYSLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycyslxdl)
                    .HasColumnName("YCYSLXDL")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素类型大类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysmc)
                    .HasColumnName("YCYSMC")
                    .HasColumnType("varchar(100)")
                    .HasComment("遗产要素名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysms)
                    .HasColumnName("YCYSMS")
                    .HasColumnType("varchar(1000)")
                    .HasComment("遗产要素描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ysbm)
                    .HasColumnName("YSBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("要素编码（总平台要求的标准编码）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zszp)
                    .HasColumnName("ZSZP")
                    .HasColumnType("varchar(500)")
                    .HasComment("展示照片")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VYcystpTplysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ycystp_tplysj");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdjd)
                    .HasColumnName("cjdjd")
                    .HasComment("采集点经度");

                entity.Property(e => e.Cjdsyt)
                    .HasColumnName("cjdsyt")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集点示意图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdwd)
                    .HasColumnName("cjdwd")
                    .HasComment("采集点纬度");

                entity.Property(e => e.Cjdwzms)
                    .HasColumnName("cjdwzms")
                    .HasColumnType("varchar(100)")
                    .HasComment("采集点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VYcystzTzlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ycystz_tzlysj");

                entity.Property(e => e.Bizid)
                    .HasColumnName("BIZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mid)
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasComment("评估")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qksm)
                    .HasColumnName("QKSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("情况说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwid)
                    .HasColumnName("RWID")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Tzlj)
                    .HasColumnName("TZLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("图纸路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysbczt)
                    .HasColumnName("YCYSBCZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素保存状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ylt)
                    .HasColumnName("YLT")
                    .HasColumnType("varchar(200)")
                    .HasComment("预览图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VYcysxztYcysdtyxt>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ycysxzt_ycysdtyxt");

                entity.Property(e => e.Bid)
                    .IsRequired()
                    .HasColumnName("BID")
                    .HasColumnType("varchar(3)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Bidname)
                    .IsRequired()
                    .HasColumnName("BIDNAME")
                    .HasColumnType("varchar(3)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pg)
                    .HasColumnName("PG")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pgname)
                    .HasColumnName("PGNAME")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qksm)
                    .HasColumnName("QKSM")
                    .HasColumnType("varchar(500)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysbczt)
                    .HasColumnName("YCYSBCZT")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysbcztname)
                    .HasColumnName("YCYSBCZTNAME")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VYczcbfBaseinfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_yczcbf_baseinfo");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(13)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasColumnType("decimal(10,7)");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rxnf)
                    .HasColumnName("RXNF")
                    .HasColumnType("int(11)");

                entity.Property(e => e.Sfsjwhyc)
                    .HasColumnName("SFSJWHYC")
                    .HasColumnType("tinyint(4)");

                entity.Property(e => e.Sjwhycbm)
                    .HasColumnName("SJWHYCBM")
                    .HasColumnType("varchar(5)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sort).HasColumnType("int(11)");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasColumnType("decimal(10,7)");

                entity.Property(e => e.Xzqbm)
                    .HasColumnName("XZQBM")
                    .HasColumnType("varchar(120)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yclx)
                    .HasColumnName("YCLX")
                    .HasColumnType("varchar(10)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycmc)
                    .HasColumnName("YCMC")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VYczcbfEvaluation>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_yczcbf_evaluation");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(13)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasColumnType("decimal(10,7)");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rxnf)
                    .HasColumnName("RXNF")
                    .HasColumnType("int(11)");

                entity.Property(e => e.Sjwhycbm)
                    .HasColumnName("SJWHYCBM")
                    .HasColumnType("varchar(5)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasColumnType("decimal(10,7)");

                entity.Property(e => e.Ycmc)
                    .HasColumnName("YCMC")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zssx)
                    .HasColumnName("ZSSX")
                    .HasColumnType("int(11)");
            });

            modelBuilder.Entity<VYcztjcsjTzlysj>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ycztjcsj_tzlysj");

                entity.Property(e => e.Bdlj)
                    .HasColumnName("BDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("本地路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Chr)
                    .HasColumnName("CHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("测绘人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Chzrdw)
                    .HasColumnName("CHZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("测绘责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("date")
                    .HasComment("创建时间");

                entity.Property(e => e.Ctshr)
                    .HasColumnName("CTSHR")
                    .HasColumnType("varchar(50)")
                    .HasComment("成图审核人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ctshsj)
                    .HasColumnName("CTSHSJ")
                    .HasColumnType("datetime")
                    .HasComment("成图审核时间");

                entity.Property(e => e.Ctsj)
                    .HasColumnName("CTSJ")
                    .HasColumnType("datetime")
                    .HasComment("成图时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("date")
                    .HasComment("对接时间");

                entity.Property(e => e.Dlxxzb)
                    .HasColumnName("DLXXZB")
                    .HasColumnType("varchar(100)")
                    .HasComment("地理信息坐标")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbfw)
                    .HasColumnName("FBFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("发布范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fbl)
                    .HasColumnName("FBL")
                    .HasColumnType("varchar(255)")
                    .HasComment("分辨率")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fgfw)
                    .HasColumnName("FGFW")
                    .HasColumnType("varchar(500)")
                    .HasComment("覆盖范围")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwms)
                    .HasColumnName("FWMS")
                    .HasColumnType("varchar(200)")
                    .HasComment("方位描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Glzrdw)
                    .HasColumnName("GLZRDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("管理责任单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjid)
                    .HasColumnName("JCSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsjx)
                    .HasColumnName("JCSJX")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测数据项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(255)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mid)
                    .HasColumnName("MID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Nf)
                    .HasColumnName("NF")
                    .HasColumnType("varchar(20)")
                    .HasComment("年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt1)
                    .HasColumnName("QT1")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qt2)
                    .HasColumnName("QT2")
                    .HasColumnType("varchar(2000)")
                    .HasComment("其他2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shbtgsm)
                    .HasColumnName("SHBTGSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核不通过说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("date")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasComment("审核游程（记录审核的过程）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态（整型）");

                entity.Property(e => e.Sjmj)
                    .HasColumnName("SJMJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据密级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzqsj)
                    .HasColumnName("SJZQSJ")
                    .HasColumnType("datetime")
                    .HasComment("数据抓取时间");

                entity.Property(e => e.Szhsj)
                    .HasColumnName("SZHSJ")
                    .HasColumnType("datetime")
                    .HasComment("数字化时间");

                entity.Property(e => e.Szhzrr)
                    .HasColumnName("SZHZRR")
                    .HasColumnType("varchar(50)")
                    .HasComment("数字化责任人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tfcc)
                    .HasColumnName("TFCC")
                    .HasColumnType("varchar(100)")
                    .HasComment("图幅尺寸")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("date")
                    .HasComment("提交时间");

                entity.Property(e => e.Txrid)
                    .HasColumnName("TXRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("填写人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Txsj)
                    .HasColumnName("TXSJ")
                    .HasColumnType("datetime")
                    .HasComment("填写时间");

                entity.Property(e => e.Tzfj)
                    .HasColumnName("TZFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("图纸附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzgs)
                    .HasColumnName("TZGS")
                    .HasColumnType("varchar(20)")
                    .HasComment("图纸格式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzjz)
                    .HasColumnName("TZJZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("图纸介质")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzlb)
                    .HasColumnName("TZLB")
                    .HasColumnType("varchar(200)")
                    .HasComment("图纸类别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzmc)
                    .HasColumnName("TZMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("图纸名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tznrlx)
                    .HasColumnName("TZNRLX")
                    .HasColumnType("varchar(100)")
                    .HasComment("图纸内容类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tzsxblc)
                    .HasColumnName("TZSXBLC")
                    .HasColumnType("varchar(20)")
                    .HasComment("图纸属性比例尺")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Url)
                    .HasColumnName("URL")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Whycm)
                    .HasColumnName("WHYCM")
                    .HasColumnType("varchar(200)")
                    .HasComment("文化遗产名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzcs)
                    .HasColumnName("XZCS")
                    .HasColumnType("int(11)")
                    .HasComment("下载次数");

                entity.Property(e => e.Xzdz)
                    .HasColumnName("XZDZ")
                    .HasColumnType("varchar(200)")
                    .HasComment("下载地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ydlj)
                    .HasColumnName("YDLJ")
                    .HasColumnType("varchar(200)")
                    .HasComment("远端路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytbh)
                    .HasColumnName("YTBH")
                    .HasColumnType("varchar(200)")
                    .HasComment("原图编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytblc)
                    .HasColumnName("YTBLC")
                    .HasColumnType("varchar(50)")
                    .HasComment("原图比例尺")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytfj)
                    .HasColumnName("YTFJ")
                    .HasColumnType("varchar(500)")
                    .HasComment("原图附件")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytmc)
                    .HasColumnName("YTMC")
                    .HasColumnType("varchar(200)")
                    .HasComment("原图名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytscdw)
                    .HasColumnName("YTSCDW")
                    .HasColumnType("varchar(200)")
                    .HasComment("原图收藏单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytzbx)
                    .HasColumnName("YTZBX")
                    .HasColumnType("varchar(50)")
                    .HasComment("原图坐标系")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytztdw)
                    .HasColumnName("YTZTDW")
                    .HasColumnType("varchar(100)")
                    .HasComment("原图制图单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ytztsj)
                    .HasColumnName("YTZTSJ")
                    .HasColumnType("datetime")
                    .HasComment("原图制图时间");

                entity.Property(e => e.Zscqgs)
                    .HasColumnName("ZSCQGS")
                    .HasColumnType("varchar(200)")
                    .HasComment("知识产权归属")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VYglyjcYjxxYjczxx>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_yglyjc_yjxx_yjczxx");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Cjsjbid)
                    .HasColumnName("CJSJBID")
                    .HasColumnType("varchar(50)")
                    .HasComment("触警数据表ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsjid)
                    .HasColumnName("CJSJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("触警数据ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Czgzcyr)
                    .HasColumnName("czgzcyr")
                    .HasColumnType("varchar(50)")
                    .HasComment("处置工作参与人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Czr)
                    .HasColumnName("czr")
                    .HasColumnType("varchar(50)")
                    .HasComment("处置负责人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Czsj)
                    .HasColumnName("czsj")
                    .HasColumnType("datetime")
                    .HasComment("处置时间");

                entity.Property(e => e.Czsm)
                    .HasColumnName("czsm")
                    .HasColumnType("varchar(50)")
                    .HasComment("处置说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("djrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("djsj")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fbsj)
                    .HasColumnName("FBSJ")
                    .HasColumnType("datetime")
                    .HasComment("发布时间");

                entity.Property(e => e.Fl)
                    .HasColumnName("FL")
                    .HasColumnType("varchar(4)")
                    .HasComment("分类")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("tinyint(4)")
                    .HasComment("类型");

                entity.Property(e => e.Ly)
                    .HasColumnName("LY")
                    .HasColumnType("tinyint(4)")
                    .HasComment("来源");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("sfkdj")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Yjdj)
                    .HasColumnName("YJDJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjpzfaid)
                    .HasColumnName("YJPZFAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警配置方案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjsfjc)
                    .HasColumnName("YJSFJC")
                    .HasColumnType("char(1)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("预警是否解除")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxxid)
                    .HasColumnName("yjxxid")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警信息ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxxidz)
                    .IsRequired()
                    .HasColumnName("yjxxidz")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjxxsm)
                    .HasColumnName("YJXXSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("预警信息说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjyaid)
                    .HasColumnName("YJYAID")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警预案ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjzt)
                    .HasColumnName("YJZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("预警状态");

                entity.Property(e => e.Zplj)
                    .HasColumnName("zplj")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VYhlmNewestinfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_yhlm_newestinfo");

                entity.Property(e => e.Jd)
                    .HasColumnName("jd")
                    .HasComment("精度");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfcj)
                    .HasColumnName("sfcj")
                    .HasColumnType("int(1)");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Sjbbmc)
                    .IsRequired()
                    .HasColumnName("sjbbmc")
                    .HasColumnType("varchar(21)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sjid)
                    .HasColumnName("sjid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("wd")
                    .HasComment("纬度");

                entity.Property(e => e.Yjdj)
                    .HasColumnName("yjdj")
                    .HasColumnType("varchar(50)")
                    .HasComment("预警等级")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywzj)
                    .IsRequired()
                    .HasColumnName("ywzj")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VYhlmNewestupdatetime>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_yhlm_newestupdatetime");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dxid)
                    .HasColumnName("dxid")
                    .HasColumnType("varchar(50)")
                    .HasComment("建筑名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VYsjDomainConstraint>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ysj_domain_constraint");

                entity.Property(e => e.Code)
                    .HasColumnName("CODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Columnid)
                    .HasColumnName("COLUMNID")
                    .HasColumnType("varchar(50)")
                    .HasComment("字段标识")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tableid)
                    .HasColumnName("TABLEID")
                    .HasColumnType("varchar(50)")
                    .HasComment("表标识")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VYsjPkCurrentpk>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ysj_pk_currentpk");

                entity.Property(e => e.Bm)
                    .HasColumnName("bm")
                    .HasColumnType("varchar(50)")
                    .HasComment("表名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("bz")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dqz)
                    .HasColumnName("dqz")
                    .HasColumnType("int(11)")
                    .HasComment("当前值");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pkid)
                    .HasColumnName("pkid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qssxm)
                    .HasColumnName("qssxm")
                    .HasColumnType("int(11)")
                    .HasComment("起始顺序码");

                entity.Property(e => e.Qz)
                    .HasColumnName("qz")
                    .HasColumnType("varchar(50)")
                    .HasComment("前缀")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qzc)
                    .HasColumnName("qzc")
                    .HasColumnType("int(11)")
                    .HasComment("前缀长");

                entity.Property(e => e.Sxmc)
                    .HasColumnName("sxmc")
                    .HasColumnType("int(11)")
                    .HasComment("顺序码长");
            });

            modelBuilder.Entity<VYsjTableenumitem>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ysj_tableenumitem");

                entity.Property(e => e.Code)
                    .HasColumnName("CODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Columnid)
                    .HasColumnName("COLUMNID")
                    .HasColumnType("varchar(50)")
                    .HasComment("字段标识")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Enumid)
                    .HasColumnName("ENUMID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Enumname)
                    .HasColumnName("ENUMNAME")
                    .HasColumnType("varchar(100)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tableid)
                    .HasColumnName("TABLEID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VZdjcCjjczd>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_zdjc_cjjczd");

                entity.Property(e => e.Cjdid)
                    .HasColumnName("cjdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("jd")
                    .HasComment("安装点经度");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("wd")
                    .HasComment("安装点纬度");

                entity.Property(e => e.Wzms)
                    .HasColumnName("wzms")
                    .HasColumnType("varchar(500)")
                    .HasComment("安装点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VZdjcWyjczd>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_zdjc_wyjczd");

                entity.Property(e => e.Cspyl)
                    .HasColumnName("cspyl")
                    .HasComment("初始偏移量");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("jd")
                    .HasComment("安装点经度");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("wd")
                    .HasComment("安装点纬度");

                entity.Property(e => e.Wydid)
                    .HasColumnName("wydid")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wzms)
                    .HasColumnName("wzms")
                    .HasColumnType("varchar(500)")
                    .HasComment("安装点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VZdjcZsjc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_zdjc_zsjc");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jczdid)
                    .HasColumnName("JCZDID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("jd")
                    .HasComment("安装点经度");

                entity.Property(e => e.Jssj)
                    .HasColumnName("jssj")
                    .HasColumnType("datetime")
                    .HasComment("接收时间");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(2)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("tinyint(2)")
                    .HasComment("审核状态");

                entity.Property(e => e.Wd)
                    .HasColumnName("wd")
                    .HasComment("安装点纬度");

                entity.Property(e => e.Wzms)
                    .HasColumnName("wzms")
                    .HasColumnType("varchar(500)")
                    .HasComment("安装点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zdid)
                    .HasColumnName("zdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("终端ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zsz)
                    .HasColumnName("zsz")
                    .HasComment("噪声值");
            });

            modelBuilder.Entity<VZdjcZsjczd>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_zdjc_zsjczd");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("jd")
                    .HasComment("安装点经度");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("wd")
                    .HasComment("安装点纬度");

                entity.Property(e => e.Wzms)
                    .HasColumnName("wzms")
                    .HasColumnType("varchar(500)")
                    .HasComment("安装点位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zdid)
                    .HasColumnName("zdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VZdjcsjSyjcd>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_zdjcsj_syjcd");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ddl).HasColumnName("ddl");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("date");

                entity.Property(e => e.Ph).HasColumnName("ph");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Szjcdid)
                    .HasColumnName("szjcdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("水质监测点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<VZdjcsjYkqy>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_zdjcsj_ykqy");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(500)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核状态")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Ykqyid)
                    .HasColumnName("ykqyid")
                    .HasColumnType("varchar(50)")
                    .HasComment("游客区域ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zplj)
                    .HasColumnName("zplj")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<VZrhjJczdConfJcjg>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_zrhj_jczd_conf_jcjg");

                entity.Property(e => e.AlertJudgeUrl)
                    .HasColumnName("alert_judge_url")
                    .HasColumnType("varchar(255)")
                    .HasComment("预警数据抓取为位置url")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fkey)
                    .HasColumnName("fkey")
                    .HasColumnType("varchar(50)")
                    .HasComment("外键-监测点ID或设备ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fkeytype)
                    .HasColumnName("fkeytype")
                    .HasColumnType("varchar(50)")
                    .HasComment("外键类别0-设备，1-监测点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.GrabCycle)
                    .HasColumnName("grab_cycle")
                    .HasColumnType("int(11)")
                    .HasComment("抓取周期（单位：秒）");

                entity.Property(e => e.GrabCycleUnit)
                    .HasColumnName("grab_cycle_unit")
                    .HasColumnType("varchar(255)")
                    .HasComment("抓取周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.GrabError)
                    .HasColumnName("grab_error")
                    .HasColumnType("int(11)")
                    .HasComment("抓取误差（秒）");

                entity.Property(e => e.GrabMainUrl)
                    .HasColumnName("grab_main_url")
                    .HasColumnType("varchar(255)")
                    .HasComment("数据抓取地址（只有一个抓取url）")
                    .HasCharSet("utf32")
                    .HasCollation("utf32_general_ci");

                entity.Property(e => e.GrabType)
                    .HasColumnName("grab_type")
                    .HasColumnType("varchar(40)")
                    .HasComment("抓取类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.IsActive)
                    .HasColumnName("is_active")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否启动(0-未启动,1-启动)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.IsStorage)
                    .HasColumnName("is_storage")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否存库");

                entity.Property(e => e.Jcjssj)
                    .HasColumnName("JCJSSJ")
                    .HasColumnType("datetime")
                    .HasComment("检查结束时间");

                entity.Property(e => e.Jckssj)
                    .HasColumnName("JCKSSJ")
                    .HasColumnType("datetime")
                    .HasComment("检查开始时间");

                entity.Property(e => e.Jcnr)
                    .HasColumnName("JCNR")
                    .HasColumnType("varchar(20)")
                    .HasComment("监测内容")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpc)
                    .HasColumnName("JCPC")
                    .HasColumnType("int(11)")
                    .HasComment("检查批次");

                entity.Property(e => e.Jcx)
                    .HasColumnName("JCX")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测项")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Jrjg)
                    .HasColumnName("JRJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("接入结果-正常或异常")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jrjglxid)
                    .HasColumnName("JRJGLXID")
                    .HasColumnType("varchar(50)")
                    .HasComment("接入结果类型ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.LastGrabTime)
                    .HasColumnName("last_grab_time")
                    .HasColumnType("datetime")
                    .HasComment("上次抓取时间");

                entity.Property(e => e.Lx)
                    .HasColumnName("LX")
                    .HasColumnType("varchar(255)")
                    .HasComment("类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.ManagerId)
                    .HasColumnName("manager_id")
                    .HasColumnType("varchar(50)")
                    .HasComment("负责人id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pzid)
                    .HasColumnName("PZID")
                    .HasColumnType("varchar(80)")
                    .HasComment("主键")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Remark)
                    .HasColumnName("remark")
                    .HasColumnType("varchar(255)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("SFKDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("SHYC")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("''")
                    .HasComment("审核游程")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("SHZT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wz)
                    .HasColumnName("WZ")
                    .HasColumnType("varchar(20)")
                    .HasComment("位置")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zdbh)
                    .HasColumnName("ZDBH")
                    .HasColumnType("varchar(255)")
                    .HasComment("站点编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zdmc)
                    .HasColumnName("ZDMC")
                    .HasColumnType("varchar(20)")
                    .HasComment("站点名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zq)
                    .HasColumnName("ZQ")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zqdw)
                    .HasColumnName("ZQDW")
                    .HasColumnType("varchar(50)")
                    .HasComment("周期单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<WaterInfo>(entity =>
            {
                entity.ToTable("water_info");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(64)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Address)
                    .HasColumnName("address")
                    .HasColumnType("varchar(20)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Angle)
                    .HasColumnName("angle")
                    .HasColumnType("double(10,4)")
                    .HasComment("角度");

                entity.Property(e => e.Coltage)
                    .HasColumnName("coltage")
                    .HasColumnType("double(10,4)")
                    .HasComment("电压");

                entity.Property(e => e.Direction)
                    .HasColumnName("direction")
                    .HasColumnType("varchar(10)")
                    .HasComment("方向")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Level)
                    .HasColumnName("level")
                    .HasColumnType("double(10,4)")
                    .HasComment("水位");

                entity.Property(e => e.ObservationTime)
                    .HasColumnName("observation_time")
                    .HasColumnType("datetime")
                    .HasComment("观察时间");

                entity.Property(e => e.Signal)
                    .HasColumnName("signal")
                    .HasColumnType("int(11)")
                    .HasComment("信号强度");

                entity.Property(e => e.Velocity)
                    .HasColumnName("velocity")
                    .HasColumnType("double(10,4)")
                    .HasComment("流速");
            });

            modelBuilder.Entity<WmtGeneratorTable>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("wmt_generator_table");

                entity.Property(e => e.GKey)
                    .HasColumnName("g_key")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.GValue)
                    .HasColumnName("g_value")
                    .HasColumnType("int(11)");
            });

            modelBuilder.Entity<XzqDsj>(entity =>
            {
                entity.ToTable("xzq_dsj");

                entity.HasComment("地市级");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");
            });

            modelBuilder.Entity<XzqQxj>(entity =>
            {
                entity.ToTable("xzq_qxj");

                entity.HasComment("区县级");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");
            });

            modelBuilder.Entity<XzqSj>(entity =>
            {
                entity.ToTable("xzq_sj");

                entity.HasComment("省级");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");
            });

            modelBuilder.Entity<YcbtDomainEnum>(entity =>
            {
                entity.ToTable("ycbt_domain_enum");

                entity.HasComment("域管理_枚举域");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mjxbt)
                    .HasColumnName("MJXBT")
                    .HasColumnType("varchar(50)")
                    .HasComment("枚举项标题")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Namespace)
                    .HasColumnName("NAMESPACE")
                    .HasColumnType("varchar(200)")
                    .HasComment("名字空间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<YcbtDomainEnumitem>(entity =>
            {
                entity.ToTable("ycbt_domain_enumitem");

                entity.HasComment("域管理_枚举项");

                entity.HasIndex(e => e.Enumid)
                    .HasName("FK_845571C2BD2B4ACA");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Code)
                    .HasColumnName("CODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Enumid)
                    .HasColumnName("ENUMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("枚举ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Isabstract)
                    .HasColumnName("ISABSTRACT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否抽象");

                entity.Property(e => e.Kz1)
                    .HasColumnName("KZ1")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kz2)
                    .HasColumnName("KZ2")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kz3)
                    .HasColumnName("KZ3")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展3")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kz4)
                    .HasColumnName("KZ4")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展4")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kz5)
                    .HasColumnName("KZ5")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展5")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Enum)
                    .WithMany(p => p.YcbtDomainEnumitem)
                    .HasForeignKey(d => d.Enumid)
                    .HasConstraintName("ycbt_domain_enumitem_ibfk_1");
            });

            modelBuilder.Entity<YcbtDomainRange>(entity =>
            {
                entity.ToTable("ycbt_domain_range");

                entity.HasComment("域管理_范围域");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Isbetweenmintomax)
                    .HasColumnName("ISBETWEENMINTOMAX")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否在最小值和最大值之间");

                entity.Property(e => e.Iscontainmax)
                    .HasColumnName("ISCONTAINMAX")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否包含最大值");

                entity.Property(e => e.Iscontainmin)
                    .HasColumnName("ISCONTAINMIN")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否包含最小值");

                entity.Property(e => e.MaxValue)
                    .HasColumnName("MAX_VALUE")
                    .HasComment("最大值");

                entity.Property(e => e.MinValue)
                    .HasColumnName("MIN_VALUE")
                    .HasComment("最小值");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Namespace)
                    .HasColumnName("NAMESPACE")
                    .HasColumnType("varchar(200)")
                    .HasComment("名字空间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<YcbtYcd>(entity =>
            {
                entity.ToTable("ycbt_ycd");

                entity.HasComment("遗产地");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhchyjb)
                    .HasColumnName("BHCHYJB")
                    .HasColumnType("varchar(100)")
                    .HasComment("保护称号与级别")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhgljg)
                    .HasColumnName("BHGLJG")
                    .HasColumnType("varchar(50)")
                    .HasComment("保护管理机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhxzms)
                    .HasColumnName("BHXZMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("保护现状描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dbxtplj)
                    .HasColumnName("DBXTPLJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("代表性图片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Gbjg)
                    .HasColumnName("GBJG")
                    .HasColumnType("varchar(100)")
                    .HasComment("公布机构")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gbsj)
                    .HasColumnName("GBSJ")
                    .HasColumnType("datetime")
                    .HasComment("公布时间");

                entity.Property(e => e.Gbwh)
                    .HasColumnName("GBWH")
                    .HasColumnType("varchar(100)")
                    .HasComment("公布文号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gk)
                    .HasColumnName("GK")
                    .HasColumnType("varchar(1000)")
                    .HasComment("概况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Jzndbm)
                    .HasColumnName("JZNDBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("截止年代编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kznf)
                    .HasColumnName("KZNF")
                    .HasColumnType("varchar(50)")
                    .HasComment("扩展年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Lxbz)
                    .HasColumnName("LXBZ")
                    .HasColumnType("varchar(1000)")
                    .HasComment("遴选标准")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qsndbm)
                    .HasColumnName("QSNDBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("起始年代编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rxnf)
                    .HasColumnName("RXNF")
                    .HasColumnType("varchar(50)")
                    .HasComment("入选年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否审核通过");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wzsm)
                    .HasColumnName("WZSM")
                    .HasColumnType("varchar(255)")
                    .HasComment("位置说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xhrid)
                    .HasColumnName("XHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("销毁人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xhsj)
                    .HasColumnName("XHSJ")
                    .HasColumnType("datetime")
                    .HasComment("销毁时间");

                entity.Property(e => e.Xzgnsm)
                    .HasColumnName("XZGNSM")
                    .HasColumnType("varchar(200)")
                    .HasComment("现状功能说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xzqbm)
                    .HasColumnName("XZQBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("行政区编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycjz)
                    .HasColumnName("YCJZ")
                    .HasColumnType("varchar(1000)")
                    .HasComment("遗产价值")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycpj)
                    .HasColumnName("YCPJ")
                    .HasColumnType("varchar(1000)")
                    .HasComment("遗产评价")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywm)
                    .HasColumnName("YWM")
                    .HasColumnType("varchar(100)")
                    .HasComment("英文名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zwm)
                    .HasColumnName("ZWM")
                    .HasColumnType("varchar(50)")
                    .HasComment("中文名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zyycxzms)
                    .HasColumnName("ZYYCXZMS")
                    .HasColumnType("varchar(500)")
                    .HasComment("主要遗存现状描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<YcbtYcdtp>(entity =>
            {
                entity.ToTable("ycbt_ycdtp");

                entity.HasComment("遗产地图片");

                entity.HasIndex(e => e.Ycdid)
                    .HasName("FK_454D44D328B24DAB");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Tplj)
                    .HasColumnName("TPLJ")
                    .HasColumnType("varchar(100)")
                    .HasComment("图片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpmc)
                    .HasColumnName("TPMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpsm)
                    .HasColumnName("TPSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("图片说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycdid)
                    .HasColumnName("YCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产地ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Ycd)
                    .WithMany(p => p.YcbtYcdtp)
                    .HasForeignKey(d => d.Ycdid)
                    .HasConstraintName("ycbt_ycdtp_ibfk_1");
            });

            modelBuilder.Entity<YcbtYcqy>(entity =>
            {
                entity.ToTable("ycbt_ycqy");

                entity.HasComment("遗产区域");

                entity.HasIndex(e => e.Fjid)
                    .HasName("FK_A41FA4D0A5B945C5");

                entity.HasIndex(e => e.Ycdid)
                    .HasName("FK_528145E60CD84CB7");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Dbxtplj)
                    .HasColumnName("DBXTPLJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("代表性图片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(500)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Fjid)
                    .HasColumnName("FJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gk)
                    .HasColumnName("GK")
                    .HasColumnType("varchar(1000)")
                    .HasComment("概况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gldwmc)
                    .HasColumnName("GLDWMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("管理单位名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Hcqbjx)
                    .HasColumnName("HCQBJX")
                    .HasColumnType("varchar(2000)")
                    .HasComment("缓冲区边界线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Hxqbjx)
                    .HasColumnName("HXQBJX")
                    .HasColumnType("varchar(2000)")
                    .HasComment("核心区边界线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcdwmc)
                    .HasColumnName("JCDWMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测单位名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Jzndbm)
                    .HasColumnName("JZNDBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("截止年代编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qsndbm)
                    .HasColumnName("QSNDBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("起始年代编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否审核通过");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wzsm)
                    .HasColumnName("WZSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("位置说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xhrid)
                    .HasColumnName("XHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("销毁人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xhsj)
                    .HasColumnName("XHSJ")
                    .HasColumnType("datetime")
                    .HasComment("销毁时间");

                entity.Property(e => e.Ycdid)
                    .HasColumnName("YCDID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywlx)
                    .HasColumnName("YWLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Fj)
                    .WithMany(p => p.InverseFj)
                    .HasForeignKey(d => d.Fjid)
                    .HasConstraintName("ycbt_ycqy_ibfk_2");

                entity.HasOne(d => d.Ycd)
                    .WithMany(p => p.YcbtYcqy)
                    .HasForeignKey(d => d.Ycdid)
                    .HasConstraintName("ycbt_ycqy_ibfk_1");
            });

            modelBuilder.Entity<YcbtYcqytp>(entity =>
            {
                entity.ToTable("ycbt_ycqytp");

                entity.HasComment("遗产区域图片");

                entity.HasIndex(e => e.Ycqyid)
                    .HasName("FK_7D79DA8ED5824D96");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Tplj)
                    .HasColumnName("TPLJ")
                    .HasColumnType("varchar(100)")
                    .HasComment("图片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpmc)
                    .HasColumnName("TPMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpsm)
                    .HasColumnName("TPSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("图片说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycqyid)
                    .HasColumnName("YCQYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产QYID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Ycqy)
                    .WithMany(p => p.YcbtYcqytp)
                    .HasForeignKey(d => d.Ycqyid)
                    .HasConstraintName("ycbt_ycqytp_ibfk_1");
            });

            modelBuilder.Entity<YcbtYcys>(entity =>
            {
                entity.ToTable("ycbt_ycys");

                entity.HasComment("遗产要素");

                entity.HasIndex(e => e.Fjid)
                    .HasName("FK_90B1F4E24694496B");

                entity.HasIndex(e => e.Ycqyid)
                    .HasName("FK_F43CAC6952924521");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bcxz)
                    .HasColumnName("BCXZ")
                    .HasColumnType("varchar(2000)")
                    .HasComment("保存现况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bhjbych)
                    .HasColumnName("BHJBYCH")
                    .HasColumnType("varchar(100)")
                    .HasComment("保护级别与称号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bjx)
                    .HasColumnName("BJX")
                    .HasColumnType("varchar(2000)")
                    .HasComment("边界线")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("DJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("对接人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Djsj)
                    .HasColumnName("DJSJ")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Dpxtplj)
                    .HasColumnName("DPXTPLJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("代表性图片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fjid)
                    .HasColumnName("FJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gbnf)
                    .HasColumnName("GBNF")
                    .HasColumnType("varchar(50)")
                    .HasComment("公布年份")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gk)
                    .HasColumnName("GK")
                    .HasColumnType("varchar(1000)")
                    .HasComment("概况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Gljgmc)
                    .HasColumnName("GLJGMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("管理机构名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Hjxz)
                    .HasColumnName("HJXZ")
                    .HasColumnType("varchar(2000)")
                    .HasComment("环境状况")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("JD")
                    .HasComment("经度");

                entity.Property(e => e.Jjurl)
                    .HasColumnName("JJURL")
                    .HasColumnType("varchar(100)")
                    .HasComment("简介URL")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzndbm)
                    .HasColumnName("JZNDBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("截止年代编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qsndbm)
                    .HasColumnName("QSNDBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("起始年代编码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfshtg)
                    .HasColumnName("SFSHTG")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否审核通过");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("SFYDJ")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shrid)
                    .HasColumnName("SHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("SHSJ")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shsm)
                    .HasColumnName("SHSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("审核说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjrid)
                    .HasColumnName("TJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("提交人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("TJSJ")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Wd)
                    .HasColumnName("WD")
                    .HasComment("纬度");

                entity.Property(e => e.Wzsm)
                    .HasColumnName("WZSM")
                    .HasColumnType("varchar(1000)")
                    .HasComment("位置说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xdwzx)
                    .HasColumnName("XDWZX")
                    .HasComment("相对位置X");

                entity.Property(e => e.Xdwzy)
                    .HasColumnName("XDWZY")
                    .HasComment("相对位置Y");

                entity.Property(e => e.Xhrid)
                    .HasColumnName("XHRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("销毁人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Xhsj)
                    .HasColumnName("XHSJ")
                    .HasColumnType("datetime")
                    .HasComment("销毁时间");

                entity.Property(e => e.Yclx)
                    .HasColumnName("YCLX")
                    .HasColumnType("varchar(200)")
                    .HasComment("遗产类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycqyid)
                    .HasColumnName("YCQYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产区域ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywlx)
                    .HasColumnName("YWLX")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("ZT")
                    .HasColumnType("varchar(50)")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zyxjb)
                    .HasColumnName("ZYXJB")
                    .HasColumnType("tinyint(4)")
                    .HasComment("重要性级别");

                entity.HasOne(d => d.Fj)
                    .WithMany(p => p.InverseFj)
                    .HasForeignKey(d => d.Fjid)
                    .HasConstraintName("ycbt_ycys_ibfk_1");

                entity.HasOne(d => d.Ycqy)
                    .WithMany(p => p.YcbtYcys)
                    .HasForeignKey(d => d.Ycqyid)
                    .HasConstraintName("ycbt_ycys_ibfk_2");
            });

            modelBuilder.Entity<YcbtYcystp>(entity =>
            {
                entity.ToTable("ycbt_ycystp");

                entity.HasComment("遗产要素图片");

                entity.HasIndex(e => e.Ycysid)
                    .HasName("FK_C6380F8A2DF74EC3");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("CJRID")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("CJSJ")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Tplj)
                    .HasColumnName("TPLJ")
                    .HasColumnType("varchar(100)")
                    .HasComment("图片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpmc)
                    .HasColumnName("TPMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("图片名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tpsm)
                    .HasColumnName("TPSM")
                    .HasColumnType("varchar(500)")
                    .HasComment("图片说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("YCYSID")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Ycys)
                    .WithMany(p => p.YcbtYcystp)
                    .HasForeignKey(d => d.Ycysid)
                    .HasConstraintName("ycbt_ycystp_ibfk_1");
            });

            modelBuilder.Entity<YddRw>(entity =>
            {
                entity.ToTable("ydd_rw");

                entity.HasComment("任务");

                entity.HasIndex(e => e.Jclbid)
                    .HasName("fk_jclbid");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdxbh)
                    .HasColumnName("cjdxbh")
                    .HasColumnType("varchar(50)")
                    .HasComment("采集对象编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jclbid)
                    .HasColumnName("jclbid")
                    .HasColumnType("varchar(200)")
                    .HasComment("监测类别ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jzsj)
                    .HasColumnName("jzsj")
                    .HasColumnType("datetime")
                    .HasComment("截止时间");

                entity.Property(e => e.Rwmc)
                    .HasColumnName("rwmc")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rwsm)
                    .HasColumnName("rwsm")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("tjsj")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("ycysid")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yhid)
                    .HasColumnName("yhid")
                    .HasColumnType("varchar(50)")
                    .HasComment("用户ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("zt")
                    .HasColumnType("varchar(50)")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Jclb)
                    .WithMany(p => p.YddRw)
                    .HasForeignKey(d => d.Jclbid)
                    .HasConstraintName("ydd_rw_ibfk_1");
            });

            modelBuilder.Entity<YsjDomainConstraint>(entity =>
            {
                entity.ToTable("ysj_domain_constraint");

                entity.HasComment("域管理_域约束");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Columnid)
                    .HasColumnName("COLUMNID")
                    .HasColumnType("varchar(50)")
                    .HasComment("字段标识")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Domainid)
                    .HasColumnName("DOMAINID")
                    .HasColumnType("varchar(50)")
                    .HasComment("域标识")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Tableid)
                    .HasColumnName("TABLEID")
                    .HasColumnType("varchar(50)")
                    .HasComment("表标识")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<YsjDomainEnum>(entity =>
            {
                entity.ToTable("ysj_domain_enum");

                entity.HasComment("域管理_枚举域");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(100)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mjxbt)
                    .HasColumnName("MJXBT")
                    .HasColumnType("varchar(50)")
                    .HasComment("枚举项标题")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Namespace)
                    .HasColumnName("NAMESPACE")
                    .HasColumnType("varchar(200)")
                    .HasComment("名字空间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<YsjDomainEnumitem>(entity =>
            {
                entity.ToTable("ysj_domain_enumitem");

                entity.HasComment("域管理_枚举项");

                entity.HasIndex(e => e.Enumid)
                    .HasName("FK_FA138B2F97DA4E72");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .HasColumnName("ALIASNAME")
                    .HasColumnType("varchar(100)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Code)
                    .HasColumnName("CODE")
                    .HasColumnType("varchar(50)")
                    .HasComment("代码")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Enumid)
                    .HasColumnName("ENUMID")
                    .HasColumnType("varchar(50)")
                    .HasComment("枚举ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Isabstract)
                    .HasColumnName("ISABSTRACT")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否抽象");

                entity.Property(e => e.Kz1)
                    .HasColumnName("KZ1")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kz2)
                    .HasColumnName("KZ2")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kz3)
                    .HasColumnName("KZ3")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展3")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kz4)
                    .HasColumnName("KZ4")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展4")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kz5)
                    .HasColumnName("KZ5")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展5")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Enum)
                    .WithMany(p => p.YsjDomainEnumitem)
                    .HasForeignKey(d => d.Enumid)
                    .HasConstraintName("ysj_domain_enumitem_ibfk_1");
            });

            modelBuilder.Entity<YsjDomainRange>(entity =>
            {
                entity.ToTable("ysj_domain_range");

                entity.HasComment("域管理_范围域");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Aliasname)
                    .HasColumnName("aliasname")
                    .HasColumnType("varchar(50)")
                    .HasComment("别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Description)
                    .HasColumnName("description")
                    .HasColumnType("varchar(200)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Isbetweenmintomax)
                    .HasColumnName("isbetweenmintomax")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否在最小值和最大值之间");

                entity.Property(e => e.Iscontainmax)
                    .HasColumnName("iscontainmax")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否包含最大值");

                entity.Property(e => e.Iscontainmin)
                    .HasColumnName("iscontainmin")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否包含最小值");

                entity.Property(e => e.MaxValue)
                    .HasColumnName("MAX_VALUE")
                    .HasColumnType("tinyint(4)")
                    .HasComment("最大值");

                entity.Property(e => e.MinValue)
                    .HasColumnName("min_value")
                    .HasComment("最小值");

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Namespace)
                    .HasColumnName("namespace")
                    .HasColumnType("varchar(200)")
                    .HasComment("名字空间")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<YsjPkConfig>(entity =>
            {
                entity.ToTable("ysj_pk_config");

                entity.HasComment("主键_主键配置");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(50)")
                    .HasComment("表名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qssxm)
                    .HasColumnName("QSSXM")
                    .HasColumnType("int(11)")
                    .HasComment("起始顺序码");

                entity.Property(e => e.Qzc)
                    .HasColumnName("QZC")
                    .HasColumnType("int(11)")
                    .HasComment("前缀长");

                entity.Property(e => e.Sxmc)
                    .HasColumnName("SXMC")
                    .HasColumnType("int(11)")
                    .HasComment("顺序码长");
            });

            modelBuilder.Entity<YsjPkCurrentpk>(entity =>
            {
                entity.ToTable("ysj_pk_currentpk");

                entity.HasComment("主键_当前主键");

                entity.HasIndex(e => e.Bid)
                    .HasName("FK_D71CB526B0024F0C");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bid)
                    .HasColumnName("BID")
                    .HasColumnType("varchar(50)")
                    .HasComment("表编号")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dqz)
                    .HasColumnName("DQZ")
                    .HasColumnType("int(11)")
                    .HasComment("当前值");

                entity.Property(e => e.Qz)
                    .HasColumnName("QZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("前缀")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.B)
                    .WithMany(p => p.YsjPkCurrentpk)
                    .HasForeignKey(d => d.Bid)
                    .HasConstraintName("ysj_pk_currentpk_ibfk_1");
            });

            modelBuilder.Entity<YsjSeqConfig>(entity =>
            {
                entity.ToTable("ysj_seq_config");

                entity.HasComment("序列_序列配置");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("BM")
                    .HasColumnType("varchar(50)")
                    .HasComment("表名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("BZ")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Qssxm)
                    .HasColumnName("QSSXM")
                    .HasColumnType("int(11)")
                    .HasComment("起始顺序码");

                entity.Property(e => e.Sxmc)
                    .HasColumnName("SXMC")
                    .HasColumnType("int(11)")
                    .HasComment("顺序码长");
            });

            modelBuilder.Entity<YsjSeqCurrentseq>(entity =>
            {
                entity.ToTable("ysj_seq_currentseq");

                entity.HasComment("序列_当前顺序码");

                entity.HasIndex(e => e.Sxmpzid)
                    .HasName("FK_4C903A61670A4D9E");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dqz)
                    .HasColumnName("DQZ")
                    .HasColumnType("int(11)")
                    .HasComment("当前值");

                entity.Property(e => e.Qz)
                    .HasColumnName("QZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("前缀")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sxmpzid)
                    .HasColumnName("SXMPZID")
                    .HasColumnType("varchar(50)")
                    .HasComment("顺序码配置ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Sxmpz)
                    .WithMany(p => p.YsjSeqCurrentseq)
                    .HasForeignKey(d => d.Sxmpzid)
                    .HasConstraintName("ysj_seq_currentseq_ibfk_1");
            });

            modelBuilder.Entity<YsjTempview>(entity =>
            {
                entity.ToTable("ysj_tempview");

                entity.HasComment("元数据_临时视图");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bm)
                    .HasColumnName("bm")
                    .HasColumnType("varchar(50)")
                    .HasComment("表名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mrcxzd)
                    .HasColumnName("mrcxzd")
                    .HasColumnType("varchar(50)")
                    .HasComment("默认查询字段")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mrpxgz)
                    .HasColumnName("mrpxgz")
                    .HasColumnType("varchar(50)")
                    .HasComment("默认排序规则")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mrzdjls)
                    .HasColumnName("mrzdjls")
                    .HasColumnType("int(11)")
                    .HasDefaultValueSql("'-1'")
                    .HasComment("默认最大记录数");

                entity.Property(e => e.Qz)
                    .IsRequired()
                    .HasColumnName("qz")
                    .HasColumnType("varchar(100)")
                    .HasComment("前缀")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sm)
                    .HasColumnName("sm")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zdj)
                    .HasColumnName("zdj")
                    .HasColumnType("varchar(500)")
                    .HasComment("字段集")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<YsjWjglxx>(entity =>
            {
                entity.ToTable("ysj_wjglxx");

                entity.HasComment("外键关联信息");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasComment("ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bjgid)
                    .HasColumnName("BJGID")
                    .HasColumnType("varchar(50)")
                    .HasComment("表结构ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bzdmc)
                    .HasColumnName("BZDMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("表字段名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jlclfs)
                    .HasColumnName("JLCLFS")
                    .HasColumnType("varchar(50)")
                    .HasComment("级联处理方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wjbbm)
                    .HasColumnName("WJBBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("外键表表名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wjbzdm)
                    .HasColumnName("WJBZDM")
                    .HasColumnType("varchar(50)")
                    .HasComment("外键表字段名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<YsjYwbysj>(entity =>
            {
                entity.ToTable("ysj_ywbysj");

                entity.HasComment("业务表元数据");

                entity.HasIndex(e => e.Fjid)
                    .HasName("FK_09A5C77C594D4B4A");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bbgdzq)
                    .HasColumnName("BBGDZQ")
                    .HasColumnType("int(5)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("版本归档周期（以天为单位，默认为半年）");

                entity.Property(e => e.Bbm)
                    .HasColumnName("BBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("表别名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bmc)
                    .HasColumnName("BMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("表名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ccxdlj)
                    .HasColumnName("CCXDLJ")
                    .HasColumnType("varchar(100)")
                    .HasComment("存储相对路径(以作废，2018年2月9日11:26:49)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Dyfjzdm)
                    .HasColumnName("DYFJZDM")
                    .HasColumnType("varchar(50)")
                    .HasComment("对应附件字段名(移动端采集的照片对应表中的字段)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fjid)
                    .HasColumnName("FJID")
                    .HasColumnType("varchar(50)")
                    .HasComment("父级ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fjwjjm)
                    .HasColumnName("FJWJJM")
                    .HasColumnType("varchar(500)")
                    .HasComment("附件（存放的）文件夹名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ftp)
                    .HasColumnName("FTP")
                    .HasColumnType("varchar(50)")
                    .HasComment("账户")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Fwffqz)
                    .HasColumnName("FWFFQZ")
                    .HasColumnType("varchar(50)")
                    .HasComment("服务方法前缀")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcpzst)
                    .HasColumnName("JCPZST")
                    .HasColumnType("varchar(255)")
                    .HasComment("监测配置视图")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcxtimefield)
                    .HasColumnName("JCXTIMEFIELD")
                    .HasColumnType("varchar(50)")
                    .HasComment("监测项时间字段名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kz1)
                    .HasColumnName("KZ1")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展1")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kz2)
                    .HasColumnName("KZ2")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展2")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kz3)
                    .HasColumnName("KZ3")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展3")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kz4)
                    .HasColumnName("KZ4")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展4")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kz5)
                    .HasColumnName("KZ5")
                    .HasColumnType("varchar(200)")
                    .HasComment("扩展5")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("PX")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Sfbbgd)
                    .HasColumnName("SFBBGD")
                    .HasColumnType("int(1)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否版本归档");

                entity.Property(e => e.Sfrwxjc)
                    .HasColumnName("SFRWXJC")
                    .HasColumnType("int(1)")
                    .HasComment("是否任务型监测");

                entity.Property(e => e.Sftjsl)
                    .HasColumnName("SFTJSL")
                    .HasColumnType("varchar(4)")
                    .HasComment("是否统计数量")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfwjcx)
                    .HasColumnName("SFWJCX")
                    .HasColumnType("int(1)")
                    .HasComment("是否为监测项");

                entity.Property(e => e.Sfyfj)
                    .HasColumnName("SFYFJ")
                    .HasColumnType("int(1)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否有附件");

                entity.Property(e => e.Wjccwldz)
                    .HasColumnName("WJCCWLDZ")
                    .HasColumnType("varchar(100)")
                    .HasComment("文件存储物理地址")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjlx)
                    .HasColumnName("YJLX")
                    .HasColumnType("varchar(10)")
                    .HasComment("预警类型")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yjyzlx)
                    .HasColumnName("YJYZLX")
                    .HasColumnType("int(1)")
                    .HasComment("预警阈值类型，系统生成预警信息使用（枚举型：0，数值型：1）");

                entity.Property(e => e.Ysjbbm)
                    .HasColumnName("YSJBBM")
                    .HasColumnType("varchar(50)")
                    .HasComment("元数据表表名")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ywzj)
                    .HasColumnName("YWZJ")
                    .HasColumnType("varchar(50)")
                    .HasComment("业务主键(设备类中对应为数据表中的外键字段名)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zstmc)
                    .HasColumnName("ZSTMC")
                    .HasColumnType("varchar(50)")
                    .HasComment("主视图名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Fj)
                    .WithMany(p => p.InverseFj)
                    .HasForeignKey(d => d.Fjid)
                    .HasConstraintName("ysj_ywbysj_ibfk_1");
            });

            modelBuilder.Entity<ZdjcCjjcqy>(entity =>
            {
                entity.ToTable("zdjc_cjjcqy");

                entity.HasComment("沉降监测区域");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jd)
                    .HasColumnName("jd")
                    .HasComment("经度");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("wd")
                    .HasComment("纬度");

                entity.Property(e => e.Wzsm)
                    .HasColumnName("wzsm")
                    .HasColumnType("varchar(50)")
                    .HasComment("位置说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<ZdjcCjjcsj>(entity =>
            {
                entity.ToTable("zdjc_cjjcsj");

                entity.HasComment("沉降监测数据");

                entity.HasIndex(e => e.Cjdid)
                    .HasName("FK_03E7FD3A70CD4512");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdid)
                    .HasColumnName("cjdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("沉降点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjz)
                    .HasColumnName("cjz")
                    .HasComment("沉降值");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jssj)
                    .HasColumnName("jssj")
                    .HasColumnType("datetime")
                    .HasComment("接收时间");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(2)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("tinyint(4)")
                    .HasComment("审核状态");
            });

            modelBuilder.Entity<ZdjcCjjczd>(entity =>
            {
                entity.ToTable("zdjc_cjjczd");

                entity.HasComment("沉降监测终端");

                entity.HasIndex(e => e.Cjdid)
                    .HasName("cjdid")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjdid)
                    .IsRequired()
                    .HasColumnName("cjdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("沉降点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjjcqyid)
                    .HasColumnName("CJJCQYID")
                    .HasColumnType("varchar(50)")
                    .HasComment("沉降监测区域ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjr)
                    .HasColumnName("cjr")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Flag)
                    .HasColumnName("flag")
                    .HasColumnType("int(11)")
                    .HasComment("flag");

                entity.Property(e => e.Jd)
                    .HasColumnName("jd")
                    .HasComment("经度");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sczq)
                    .HasColumnName("sczq")
                    .HasColumnType("int(11)")
                    .HasComment("上传周期");

                entity.Property(e => e.Sfjzd)
                    .HasColumnName("sfjzd")
                    .HasColumnType("int(11)")
                    .HasComment("是否基准点");

                entity.Property(e => e.Txfs)
                    .HasColumnName("txfs")
                    .HasColumnType("varchar(50)")
                    .HasComment("通信方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("wd")
                    .HasComment("纬度");

                entity.Property(e => e.Wzsm)
                    .HasColumnName("wzsm")
                    .HasColumnType("varchar(50)")
                    .HasComment("位置说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("zt")
                    .HasColumnType("varchar(50)")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zxscsj)
                    .HasColumnName("zxscsj")
                    .HasColumnType("datetime")
                    .HasComment("最新上传时间");
            });

            modelBuilder.Entity<ZdjcWyjcsj>(entity =>
            {
                entity.ToTable("zdjc_wyjcsj");

                entity.HasComment("位移监测数据");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jssj)
                    .HasColumnName("jssj")
                    .HasColumnType("datetime")
                    .HasComment("接收时间");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("char(1)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("int(11)")
                    .HasComment("审核状态");

                entity.Property(e => e.Wydid)
                    .HasColumnName("wydid")
                    .HasColumnType("varchar(50)")
                    .HasComment("位移点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wyz)
                    .HasColumnName("wyz")
                    .HasComment("位移值");
            });

            modelBuilder.Entity<ZdjcWyjczd>(entity =>
            {
                entity.ToTable("zdjc_wyjczd");

                entity.HasComment("位移监测终端");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cspyl)
                    .HasColumnName("cspyl")
                    .HasComment("初始偏移量");

                entity.Property(e => e.Sbqdid)
                    .HasColumnName("sbqdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备清单ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<ZdjcZsjcsj>(entity =>
            {
                entity.ToTable("zdjc_zsjcsj");

                entity.HasComment("噪声监测数据");

                entity.HasIndex(e => e.Jcsj)
                    .HasName("index_jcsj");

                entity.HasIndex(e => e.Zdid)
                    .HasName("index_zdid");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jssj)
                    .HasColumnName("jssj")
                    .HasColumnType("datetime")
                    .HasComment("接收时间");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(2)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Sfyyjfx)
                    .HasColumnName("sfyyjfx")
                    .HasColumnType("tinyint(2)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已预警分析");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("tinyint(2)")
                    .HasComment("审核状态");

                entity.Property(e => e.Zdid)
                    .HasColumnName("zdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("终端ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zsz)
                    .HasColumnName("zsz")
                    .HasComment("噪声值");
            });

            modelBuilder.Entity<ZdjcZsjczd>(entity =>
            {
                entity.ToTable("zdjc_zsjczd");

                entity.HasComment("噪声监测终端");

                entity.HasIndex(e => e.Zdid)
                    .HasName("zdid")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjr)
                    .HasColumnName("cjr")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Flag)
                    .HasColumnName("flag")
                    .HasColumnType("int(11)")
                    .HasComment("flag");

                entity.Property(e => e.Jd)
                    .HasColumnName("jd")
                    .HasComment("经度");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sczq)
                    .HasColumnName("sczq")
                    .HasColumnType("int(11)")
                    .HasComment("上传周期");

                entity.Property(e => e.Tyfs)
                    .HasColumnName("tyfs")
                    .HasColumnType("varchar(50)")
                    .HasComment("通信方式")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("wd")
                    .HasComment("纬度");

                entity.Property(e => e.Wzsm)
                    .HasColumnName("wzsm")
                    .HasColumnType("varchar(50)")
                    .HasComment("位置说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zdid)
                    .HasColumnName("zdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("终端ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zt)
                    .HasColumnName("zt")
                    .HasColumnType("varchar(50)")
                    .HasComment("状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zxscsj)
                    .HasColumnName("zxscsj")
                    .HasColumnType("datetime")
                    .HasComment("最新上传时间");
            });

            modelBuilder.Entity<ZdjcdxCjjcd>(entity =>
            {
                entity.ToTable("zdjcdx_cjjcd");

                entity.HasComment("沉降监测点");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("bz")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Csgd)
                    .HasColumnName("csgd")
                    .HasComment("初始高度");

                entity.Property(e => e.Mc)
                    .IsRequired()
                    .HasColumnName("mc")
                    .HasColumnType("varchar(100)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("px")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Sbdid)
                    .HasColumnName("sbdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sm)
                    .HasColumnName("sm")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wzms)
                    .HasColumnName("wzms")
                    .HasColumnType("varchar(500)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.X).HasColumnName("x");

                entity.Property(e => e.Y).HasColumnName("y");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("ycysid")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Z).HasColumnName("z");
            });

            modelBuilder.Entity<ZdjcdxFhqy>(entity =>
            {
                entity.ToTable("zdjcdx_fhqy");

                entity.HasComment("风化区域");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("bz")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jczq)
                    .HasColumnName("jczq")
                    .HasColumnType("varchar(200)")
                    .HasComment("监测周期（每天哪些时刻要截图，精度到分钟，多个时间点以逗号分隔开）")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .IsRequired()
                    .HasColumnName("mc")
                    .HasColumnType("varchar(100)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("px")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Sbdid)
                    .HasColumnName("sbdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sm)
                    .HasColumnName("sm")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wcdw)
                    .HasColumnName("wcdw")
                    .HasColumnType("varchar(20)")
                    .HasDefaultValueSql("'分钟'")
                    .HasComment("误差的单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wzms)
                    .HasColumnName("wzms")
                    .HasColumnType("varchar(500)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.X).HasColumnName("x");

                entity.Property(e => e.Y).HasColumnName("y");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("ycysid")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxsjwc)
                    .HasColumnName("yxsjwc")
                    .HasColumnType("varchar(200)")
                    .HasDefaultValueSql("'10'")
                    .HasComment("允许接入的时间误差（分钟），用于检测数据是否正常接入")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Z).HasColumnName("z");
            });

            modelBuilder.Entity<ZdjcdxQxjcd>(entity =>
            {
                entity.ToTable("zdjcdx_qxjcd");

                entity.HasComment("倾斜监测点");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("bz")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Csjd)
                    .HasColumnName("csjd")
                    .HasComment("初始角度");

                entity.Property(e => e.Fw)
                    .HasColumnName("fw")
                    .HasColumnType("double(10,6)")
                    .HasComment("方位");

                entity.Property(e => e.Mc)
                    .IsRequired()
                    .HasColumnName("mc")
                    .HasColumnType("varchar(100)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("px")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Sbdid)
                    .HasColumnName("sbdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sm)
                    .HasColumnName("sm")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wzms)
                    .HasColumnName("wzms")
                    .HasColumnType("varchar(500)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.X).HasColumnName("x");

                entity.Property(e => e.Y).HasColumnName("y");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("ycysid")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Z).HasColumnName("z");
            });

            modelBuilder.Entity<ZdjcdxSsqy>(entity =>
            {
                entity.ToTable("zdjcdx_ssqy");

                entity.HasComment("渗水区域");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("bz")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jczq)
                    .HasColumnName("jczq")
                    .HasColumnType("varchar(200)")
                    .HasComment("监测周期（每天哪些时刻要截图，精度到分钟，多个时间点以逗号分隔开")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Kjgsbdid)
                    .HasColumnName("kjgsbdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("可见光设备点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .IsRequired()
                    .HasColumnName("mc")
                    .HasColumnType("varchar(100)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("px")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Rhwsbdid)
                    .HasColumnName("rhwsbdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("热红外设备点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sm)
                    .HasColumnName("sm")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wcdw)
                    .HasColumnName("wcdw")
                    .HasColumnType("varchar(20)")
                    .HasDefaultValueSql("'分钟'")
                    .HasComment("误差单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wzms)
                    .HasColumnName("wzms")
                    .HasColumnType("varchar(500)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.X).HasColumnName("x");

                entity.Property(e => e.Y).HasColumnName("y");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("ycysid")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxsjwc)
                    .HasColumnName("yxsjwc")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'10'")
                    .HasComment("允许接入的时间误差（分钟），用于检测数据是否正常接入")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Z).HasColumnName("z");
            });

            modelBuilder.Entity<ZdjcdxSwlsjcd>(entity =>
            {
                entity.ToTable("zdjcdx_swlsjcd");

                entity.HasComment("水位流速监测点");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("bz")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .IsRequired()
                    .HasColumnName("mc")
                    .HasColumnType("varchar(100)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("px")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Sbdid)
                    .HasColumnName("sbdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sm)
                    .HasColumnName("sm")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wzms)
                    .HasColumnName("wzms")
                    .HasColumnType("varchar(500)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.X).HasColumnName("x");

                entity.Property(e => e.Y).HasColumnName("y");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("ycysid")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Z).HasColumnName("z");
            });

            modelBuilder.Entity<ZdjcdxSyjcd>(entity =>
            {
                entity.ToTable("zdjcdx_syjcd");

                entity.HasComment("zdjcdx_水质监测点");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Jczq)
                    .HasColumnName("jczq")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("监测周期");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("px")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("排序");

                entity.Property(e => e.Sbdid)
                    .HasColumnName("sbdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备点id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sjzdid)
                    .HasColumnName("sjzdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据站点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssszjczq)
                    .HasColumnName("ssszjczq")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("渗水水质监测周期");

                entity.Property(e => e.Wzms)
                    .HasColumnName("wzms")
                    .HasColumnType("varchar(500)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.X)
                    .HasColumnName("x")
                    .HasColumnType("decimal(10,0)");

                entity.Property(e => e.Y)
                    .HasColumnName("y")
                    .HasColumnType("decimal(10,0)");

                entity.Property(e => e.Ybid)
                    .HasColumnName("ybid")
                    .HasColumnType("varchar(50)")
                    .HasComment("崖壁ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("ycysid")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yhdid)
                    .HasColumnName("yhdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("岩画点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zplj)
                    .HasColumnName("zplj")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<ZdjcdxWhjjcd>(entity =>
            {
                entity.ToTable("zdjcdx_whjjcd");

                entity.HasComment("微环境监测点");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Jczq)
                    .HasColumnName("jczq")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("监测周期");

                entity.Property(e => e.Mc)
                    .HasColumnName("mc")
                    .HasColumnType("varchar(50)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("px")
                    .HasColumnType("decimal(10,0)")
                    .HasComment("排序");

                entity.Property(e => e.Sjzdid)
                    .HasColumnName("sjzdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("数据站点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wzms)
                    .HasColumnName("wzms")
                    .HasColumnType("varchar(500)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.X)
                    .HasColumnName("x")
                    .HasColumnType("decimal(10,0)");

                entity.Property(e => e.Y)
                    .HasColumnName("y")
                    .HasColumnType("decimal(10,0)");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("ycysid")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yhdid)
                    .HasColumnName("yhdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("岩画点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<ZdjcdxWsdjcd>(entity =>
            {
                entity.ToTable("zdjcdx_wsdjcd");

                entity.HasComment("温湿度监测点");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("bz")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .IsRequired()
                    .HasColumnName("mc")
                    .HasColumnType("varchar(100)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("px")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Sbdid)
                    .HasColumnName("sbdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sm)
                    .HasColumnName("sm")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wzms)
                    .HasColumnName("wzms")
                    .HasColumnType("varchar(500)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.X).HasColumnName("x");

                entity.Property(e => e.Y).HasColumnName("y");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("ycysid")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Z).HasColumnName("z");
            });

            modelBuilder.Entity<ZdjcdxZwqy>(entity =>
            {
                entity.ToTable("zdjcdx_zwqy");

                entity.HasComment("植物区域");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Bz)
                    .HasColumnName("bz")
                    .HasColumnType("varchar(500)")
                    .HasComment("备注")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jczq)
                    .HasColumnName("jczq")
                    .HasColumnType("varchar(200)")
                    .HasComment("监测周期（每天哪些时刻要截图，精度到分钟，多个时间点以逗号分隔开")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Mc)
                    .IsRequired()
                    .HasColumnName("mc")
                    .HasColumnType("varchar(100)")
                    .HasComment("名称")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Px)
                    .HasColumnName("px")
                    .HasColumnType("int(11)")
                    .HasComment("排序");

                entity.Property(e => e.Sbdid)
                    .HasColumnName("sbdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("设备点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sm)
                    .HasColumnName("sm")
                    .HasColumnType("varchar(500)")
                    .HasComment("说明")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wcdw)
                    .HasColumnName("wcdw")
                    .HasColumnType("varchar(20)")
                    .HasDefaultValueSql("'分钟'")
                    .HasComment("误差单位")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wzms)
                    .HasColumnName("wzms")
                    .HasColumnType("varchar(500)")
                    .HasComment("位置描述")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.X).HasColumnName("x");

                entity.Property(e => e.Y).HasColumnName("y");

                entity.Property(e => e.Ycysid)
                    .HasColumnName("ycysid")
                    .HasColumnType("varchar(50)")
                    .HasComment("遗产要素id")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Yxsjwc)
                    .HasColumnName("yxsjwc")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("'10'")
                    .HasComment("允许接入的时间误差（分钟），用于检测数据是否正常接入")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Z).HasColumnName("z");
            });

            modelBuilder.Entity<ZdjcsjCjjcd>(entity =>
            {
                entity.ToTable("zdjcsj_cjjcd");

                entity.HasComment("沉降监测点");

                entity.HasIndex(e => e.Cjjcdid)
                    .HasName("FK_1C92A48B582A43EE");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjjcdid)
                    .HasColumnName("cjjcdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("沉降监测点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjl)
                    .HasColumnName("cjl")
                    .HasComment("沉降量");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Cjjcd)
                    .WithMany(p => p.ZdjcsjCjjcd)
                    .HasForeignKey(d => d.Cjjcdid)
                    .HasConstraintName("zdjcsj_cjjcd_ibfk_1");
            });

            modelBuilder.Entity<ZdjcsjFhqy>(entity =>
            {
                entity.ToTable("zdjcsj_fhqy");

                entity.HasComment("风化区域");

                entity.HasIndex(e => e.Fhqyid)
                    .HasName("FK_080D23D0D7C345F3");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fhqyid)
                    .HasColumnName("fhqyid")
                    .HasColumnType("varchar(50)")
                    .HasComment("风化区域ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zplj)
                    .HasColumnName("zplj")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Fhqy)
                    .WithMany(p => p.ZdjcsjFhqy)
                    .HasForeignKey(d => d.Fhqyid)
                    .HasConstraintName("zdjcsj_fhqy_ibfk_1");
            });

            modelBuilder.Entity<ZdjcsjQxjcd>(entity =>
            {
                entity.ToTable("zdjcsj_qxjcd");

                entity.HasComment("倾斜监测点");

                entity.HasIndex(e => e.Qxjcdid)
                    .HasName("FK_6BBFBA3E3B1C4AF5");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Qxjcdid)
                    .HasColumnName("qxjcdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("倾斜监测点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.X)
                    .HasColumnName("x")
                    .HasComment("X方向角度");

                entity.Property(e => e.Y)
                    .HasColumnName("y")
                    .HasComment("Y方向角度");

                entity.HasOne(d => d.Qxjcd)
                    .WithMany(p => p.ZdjcsjQxjcd)
                    .HasForeignKey(d => d.Qxjcdid)
                    .HasConstraintName("zdjcsj_qxjcd_ibfk_1");
            });

            modelBuilder.Entity<ZdjcsjQxjcdJs>(entity =>
            {
                entity.ToTable("zdjcsj_qxjcd_js");

                entity.HasIndex(e => e.Qxjcdid)
                    .HasName("FK_48UYWR3E3B1C4AF5");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fw)
                    .HasColumnName("fw")
                    .HasComment("方位");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jd)
                    .HasColumnName("jd")
                    .HasComment("角度");

                entity.Property(e => e.Qxjcdid)
                    .HasColumnName("qxjcdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("倾斜监测点ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核状态")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<ZdjcsjSsqy>(entity =>
            {
                entity.ToTable("zdjcsj_ssqy");

                entity.HasComment("渗水区域");

                entity.HasIndex(e => e.Ssqyid)
                    .HasName("FK_AD54585A99C64069");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Kjgzplj)
                    .HasColumnName("kjgzplj")
                    .HasColumnType("varchar(200)")
                    .HasComment("可见光照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Rhwzplj)
                    .HasColumnName("rhwzplj")
                    .HasColumnType("varchar(200)")
                    .HasComment("热红外照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Ssqyid)
                    .HasColumnName("ssqyid")
                    .HasColumnType("varchar(50)")
                    .HasComment("渗水区域ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wdzsjlj)
                    .HasColumnName("wdzsjlj")
                    .HasColumnType("varchar(200)")
                    .HasComment("温度值数据路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Ssqy)
                    .WithMany(p => p.ZdjcsjSsqy)
                    .HasForeignKey(d => d.Ssqyid)
                    .HasConstraintName("zdjcsj_ssqy_ibfk_1");
            });

            modelBuilder.Entity<ZdjcsjSwlsjcd>(entity =>
            {
                entity.ToTable("zdjcsj_swlsjcd");

                entity.HasComment("水位流速监测点");

                entity.HasIndex(e => e.Swlsjcd)
                    .HasName("FK_F28405FD5CF34097");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Fx)
                    .HasColumnName("fx")
                    .HasColumnType("varchar(50)")
                    .HasComment("方向")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Jd)
                    .HasColumnName("jd")
                    .HasComment("角度");

                entity.Property(e => e.Ls)
                    .HasColumnName("ls")
                    .HasComment("流速");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Sw)
                    .HasColumnName("sw")
                    .HasComment("水位");

                entity.Property(e => e.SwJcz)
                    .HasColumnName("sw_jcz")
                    .HasComment("水位监测值");

                entity.Property(e => e.Swlsjcd)
                    .HasColumnName("swlsjcd")
                    .HasColumnType("varchar(50)")
                    .HasComment("水位流速监测点")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.SwlsjcdNavigation)
                    .WithMany(p => p.ZdjcsjSwlsjcd)
                    .HasForeignKey(d => d.Swlsjcd)
                    .HasConstraintName("zdjcsj_swlsjcd_ibfk_1");
            });

            modelBuilder.Entity<ZdjcsjSyjcd>(entity =>
            {
                entity.ToTable("zdjcsj_syjcd");

                entity.HasComment("ZDJCSJ_水质监测点");

                entity.HasIndex(e => e.Szjcdid)
                    .HasName("fk_sldkdi");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasDefaultValueSql("''")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Ddl)
                    .HasColumnName("ddl")
                    .HasComment("电导率");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Ph)
                    .HasColumnName("ph")
                    .HasComment("PH值");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Szjcdid)
                    .HasColumnName("szjcdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("水质监测点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Szjcd)
                    .WithMany(p => p.ZdjcsjSyjcd)
                    .HasForeignKey(d => d.Szjcdid)
                    .OnDelete(DeleteBehavior.SetNull)
                    .HasConstraintName("zdjcsj_syjcd_ibfk_1");
            });

            modelBuilder.Entity<ZdjcsjWsdjcd>(entity =>
            {
                entity.ToTable("zdjcsj_wsdjcd");

                entity.HasComment("温湿度监测点");

                entity.HasIndex(e => e.Wsdjcdid)
                    .HasName("FK_A5BF0FE3BAA34787");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Rksj)
                    .HasColumnName("rksj")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("入库时间");

                entity.Property(e => e.Sd)
                    .HasColumnName("sd")
                    .HasComment("湿度");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Wd)
                    .HasColumnName("wd")
                    .HasComment("温度");

                entity.Property(e => e.Wsdjcdid)
                    .HasColumnName("wsdjcdid")
                    .HasColumnType("varchar(50)")
                    .HasComment("温湿度监测点ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Wsdjcd)
                    .WithMany(p => p.ZdjcsjWsdjcd)
                    .HasForeignKey(d => d.Wsdjcdid)
                    .HasConstraintName("zdjcsj_wsdjcd_ibfk_1");
            });

            modelBuilder.Entity<ZdjcsjYkqy>(entity =>
            {
                entity.ToTable("zdjcsj_ykqy");

                entity.HasComment("游客区域");

                entity.HasIndex(e => e.Ykqyid)
                    .HasName("FK_C857D645318E4D93");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Djrid)
                    .HasColumnName("djrid")
                    .HasColumnType("tinyint(4)")
                    .HasComment("对接人id");

                entity.Property(e => e.Djsj)
                    .HasColumnName("djsj")
                    .HasColumnType("datetime")
                    .HasComment("对接时间");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Rwid)
                    .HasColumnName("rwid")
                    .HasColumnType("varchar(50)")
                    .HasComment("任务id")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Sfkdj)
                    .HasColumnName("sfkdj")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否可对接");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(4)")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shyc)
                    .HasColumnName("shyc")
                    .HasColumnType("varchar(255)")
                    .HasComment("审核游程")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核状态")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Tjsj)
                    .HasColumnName("tjsj")
                    .HasColumnType("datetime")
                    .HasComment("提交时间");

                entity.Property(e => e.Ykqyid)
                    .HasColumnName("ykqyid")
                    .HasColumnType("varchar(50)")
                    .HasComment("游客区域ID")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");

                entity.Property(e => e.Zplj)
                    .HasColumnName("zplj")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_general_ci");
            });

            modelBuilder.Entity<ZdjcsjZwqy>(entity =>
            {
                entity.ToTable("zdjcsj_zwqy");

                entity.HasComment("植物区域");

                entity.HasIndex(e => e.Zwqyid)
                    .HasName("FK_8DEF0F7C6B5B43F9");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("varchar(50)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjrid)
                    .HasColumnName("cjrid")
                    .HasColumnType("varchar(50)")
                    .HasComment("创建人ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Cjsj)
                    .HasColumnName("cjsj")
                    .HasColumnType("datetime")
                    .HasComment("创建时间");

                entity.Property(e => e.Jcsj)
                    .HasColumnName("jcsj")
                    .HasColumnType("datetime")
                    .HasComment("监测时间");

                entity.Property(e => e.Sfydj)
                    .HasColumnName("sfydj")
                    .HasColumnType("tinyint(4)")
                    .HasDefaultValueSql("'0'")
                    .HasComment("是否已对接");

                entity.Property(e => e.Shsj)
                    .HasColumnName("shsj")
                    .HasColumnType("datetime")
                    .HasComment("审核时间");

                entity.Property(e => e.Shzt)
                    .HasColumnName("shzt")
                    .HasColumnType("varchar(50)")
                    .HasComment("审核状态")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zplj)
                    .HasColumnName("zplj")
                    .HasColumnType("varchar(200)")
                    .HasComment("照片路径")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Zwqyid)
                    .HasColumnName("zwqyid")
                    .HasColumnType("varchar(50)")
                    .HasComment("植物区域ID")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Zwqy)
                    .WithMany(p => p.ZdjcsjZwqy)
                    .HasForeignKey(d => d.Zwqyid)
                    .HasConstraintName("zdjcsj_zwqy_ibfk_1");
            });

            modelBuilder.Entity<Ѳ>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ѳ???");

                entity.HasIndex(e => e.OgrFid)
                    .HasName("OGR_FID")
                    .IsUnique();

                entity.Property(e => e.OgrFid)
                    .HasColumnName("OGR_FID")
                    .HasColumnType("int(11)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Ѳ1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ѳ????_1");

                entity.HasIndex(e => e.OgrFid)
                    .HasName("OGR_FID")
                    .IsUnique();

                entity.Property(e => e.OgrFid)
                    .HasColumnName("OGR_FID")
                    .HasColumnType("int(11)")
                    .ValueGeneratedOnAdd();
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
